diff --git a/lib/augment/augment-api-consts.d.ts b/lib/augment/augment-api-consts.d.ts
index 59edee6fd28f10b7387854cbd268af5d81c32e95..a288cf5d79616dd0855190e2740b981ad6df6e3e 100644
--- a/lib/augment/augment-api-consts.d.ts
+++ b/lib/augment/augment-api-consts.d.ts
@@ -545,6 +545,10 @@ declare module '@polkadot/api-base/types/consts' {
              * Exports 'Create Working Group Lead Opening' proposal parameters.
              **/
             createWorkingGroupLeadOpeningProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
+            /**
+             * Decrease Council budget parameters
+             **/
+            decreaseCouncilBudgetProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             /**
              * Exports 'Decrease Working Group Lead Stake' proposal parameters.
              **/
@@ -577,6 +581,10 @@ declare module '@polkadot/api-base/types/consts' {
              * Exports `Set Councilor Reward Proposal Parameters` proposal parameters.
              **/
             setCouncilorRewardProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
+            /**
+             * Era payout damping factor
+             **/
+            setEraPayoutDampingFactorProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             /**
              * Exports `Set Initial Invitation Balance` proposal parameters.
              **/
@@ -595,6 +603,9 @@ declare module '@polkadot/api-base/types/consts' {
              * Exports 'Set Membership Price' proposal parameters.
              **/
             setMembershipPriceProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
+            /**
+             * Set Pallet Frozen status
+             **/
             setPalletFozenStatusProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             setReferralCutProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             /**
@@ -615,6 +626,10 @@ declare module '@polkadot/api-base/types/consts' {
             terminateWorkingGroupLeadProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             updateChannelPayoutsProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             updateGlobalNftLimitProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
+            /**
+             * pallet token governance parameters proposal
+             **/
+            updateTokenPalletTokenConstraints: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             /**
              * Exports 'Update Working Group Budget' proposal parameters.
              **/
diff --git a/lib/augment/augment-api-errors.d.ts b/lib/augment/augment-api-errors.d.ts
index 212fa506e92851c9363da175227e51acd82d7b7b..0df1bc42fa97274cc2cd093e6756b752ed584baa 100644
--- a/lib/augment/augment-api-errors.d.ts
+++ b/lib/augment/augment-api-errors.d.ts
@@ -1051,6 +1051,10 @@ declare module '@polkadot/api-base/types/errors' {
              * The member is not a councilor.
              **/
             NotCouncilor: AugmentedError<ApiType>;
+            /**
+             * Cannot reduce the budget by the given amount.
+             **/
+            ReductionAmountTooLarge: AugmentedError<ApiType>;
             /**
              * The same account is recieving funds from the same request twice
              **/
@@ -2561,6 +2565,10 @@ declare module '@polkadot/api-base/types/errors' {
              * Invalid working group budget capacity parameter
              **/
             InvalidWorkingGroupBudgetCapacity: AugmentedError<ApiType>;
+            /**
+             * Reduction Amount Zero
+             **/
+            ReductionAmountZero: AugmentedError<ApiType>;
             /**
              * Require root origin in extrinsics
              **/
diff --git a/lib/augment/augment-api-events.d.ts b/lib/augment/augment-api-events.d.ts
index 59ff772d793c8018d05f85f7be7f8ff957e7e860..9dd6c4ede347e6fcaef8dc6d91f346f485da1c57 100644
--- a/lib/augment/augment-api-events.d.ts
+++ b/lib/augment/augment-api-events.d.ts
@@ -2,8 +2,8 @@ import '@polkadot/api-base/types/events';
 import type { ApiTypes, AugmentedEvent } from '@polkadot/api-base/types';
 import type { BTreeMap, BTreeSet, Bytes, Null, Option, Result, U8aFixed, Vec, bool, u128, u32, u64, u8 } from '@polkadot/types-codec';
 import type { ITuple } from '@polkadot/types-codec/types';
-import type { AccountId32, H256, Perbill, Permill } from '@polkadot/types/interfaces/runtime';
-import type { FrameSupportDispatchDispatchInfo, FrameSupportTokensMiscBalanceStatus, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelRecord, PalletContentChannelUpdateParametersRecord, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhasePhase, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineSr25519AppSr25519Public, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmCurve, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTransferPolicy, PalletProjectTokenTransfers, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineVoteKind, PalletReferendumOptionResult, PalletStakingExposure, PalletStakingForcing, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakePolicy, SpConsensusGrandpaAppPublic, SpNposElectionsElectionScore, SpRuntimeDispatchError } from '@polkadot/types/lookup';
+import type { AccountId32, H256, Perbill, Percent, Permill } from '@polkadot/types/interfaces/runtime';
+import type { FrameSupportDispatchDispatchInfo, FrameSupportTokensMiscBalanceStatus, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelRecord, PalletContentChannelUpdateParametersRecord, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhasePhase, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineSr25519AppSr25519Public, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmCurve, PalletProjectTokenTokenConstraints, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTransferPolicy, PalletProjectTokenTransfers, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineVoteKind, PalletReferendumOptionResult, PalletStakingExposure, PalletStakingForcing, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakePolicy, SpConsensusGrandpaAppPublic, SpNposElectionsElectionScore, SpRuntimeDispatchError } from '@polkadot/types/lookup';
 export type __AugmentedEvent<ApiType extends ApiTypes> = AugmentedEvent<ApiType>;
 declare module '@polkadot/api-base/types/events' {
     interface AugmentedEvents<ApiType extends ApiTypes> {
@@ -31,7 +31,7 @@ declare module '@polkadot/api-base/types/events' {
              * Emits on budget from the working group being spent
              * Params:
              * - Receiver Account Id.
-             * - Balance spent.
+             * - Amount to spend
              * - Rationale.
              **/
             BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -137,6 +137,14 @@ declare module '@polkadot/api-base/types/events' {
              * - Rationale.
              **/
             TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+            /**
+             * Emits on budget from the working group being spent
+             * Params:
+             * - Receiver Account Id.
+             * - Vesting scheduled
+             * - Rationale.
+             **/
+            VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Emits on exiting the worker.
              * Params:
@@ -543,7 +551,7 @@ declare module '@polkadot/api-base/types/events' {
              * Emits on budget from the working group being spent
              * Params:
              * - Receiver Account Id.
-             * - Balance spent.
+             * - Amount to spend
              * - Rationale.
              **/
             BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -649,6 +657,14 @@ declare module '@polkadot/api-base/types/events' {
              * - Rationale.
              **/
             TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+            /**
+             * Emits on budget from the working group being spent
+             * Params:
+             * - Receiver Account Id.
+             * - Vesting scheduled
+             * - Rationale.
+             **/
+            VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Emits on exiting the worker.
              * Params:
@@ -737,6 +753,12 @@ declare module '@polkadot/api-base/types/events' {
              * Candidate remark message
              **/
             CandidateRemarked: AugmentedEvent<ApiType, [u64, Bytes]>;
+            /**
+             * Councilor budget has been decreased
+             * Params:
+             * - Reduction amount
+             **/
+            CouncilBudgetDecreased: AugmentedEvent<ApiType, [u128]>;
             /**
              * Fund the council budget.
              * Params:
@@ -753,6 +775,10 @@ declare module '@polkadot/api-base/types/events' {
              * Councilor reward has been updated.
              **/
             CouncilorRewardUpdated: AugmentedEvent<ApiType, [u128]>;
+            /**
+             * Era payou damping factor set
+             **/
+            EraPayoutDampingFactorSet: AugmentedEvent<ApiType, [Percent]>;
             /**
              * New candidate announced
              **/
@@ -806,7 +832,7 @@ declare module '@polkadot/api-base/types/events' {
              * Emits on budget from the working group being spent
              * Params:
              * - Receiver Account Id.
-             * - Balance spent.
+             * - Amount to spend
              * - Rationale.
              **/
             BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -912,6 +938,14 @@ declare module '@polkadot/api-base/types/events' {
              * - Rationale.
              **/
             TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+            /**
+             * Emits on budget from the working group being spent
+             * Params:
+             * - Receiver Account Id.
+             * - Vesting scheduled
+             * - Rationale.
+             **/
+            VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Emits on exiting the worker.
              * Params:
@@ -1114,7 +1148,7 @@ declare module '@polkadot/api-base/types/events' {
              * Emits on budget from the working group being spent
              * Params:
              * - Receiver Account Id.
-             * - Balance spent.
+             * - Amount to spend
              * - Rationale.
              **/
             BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -1220,6 +1254,14 @@ declare module '@polkadot/api-base/types/events' {
              * - Rationale.
              **/
             TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+            /**
+             * Emits on budget from the working group being spent
+             * Params:
+             * - Receiver Account Id.
+             * - Vesting scheduled
+             * - Rationale.
+             **/
+            VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Emits on exiting the worker.
              * Params:
@@ -1378,7 +1420,7 @@ declare module '@polkadot/api-base/types/events' {
              * Emits on budget from the working group being spent
              * Params:
              * - Receiver Account Id.
-             * - Balance spent.
+             * - Amount to spend
              * - Rationale.
              **/
             BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -1484,6 +1526,14 @@ declare module '@polkadot/api-base/types/events' {
              * - Rationale.
              **/
             TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+            /**
+             * Emits on budget from the working group being spent
+             * Params:
+             * - Receiver Account Id.
+             * - Vesting scheduled
+             * - Rationale.
+             **/
+            VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Emits on exiting the worker.
              * Params:
@@ -1608,7 +1658,7 @@ declare module '@polkadot/api-base/types/events' {
              * Emits on budget from the working group being spent
              * Params:
              * - Receiver Account Id.
-             * - Balance spent.
+             * - Amount to spend
              * - Rationale.
              **/
             BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -1714,6 +1764,14 @@ declare module '@polkadot/api-base/types/events' {
              * - Rationale.
              **/
             TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+            /**
+             * Emits on budget from the working group being spent
+             * Params:
+             * - Receiver Account Id.
+             * - Vesting scheduled
+             * - Rationale.
+             **/
+            VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Emits on exiting the worker.
              * Params:
@@ -1789,7 +1847,7 @@ declare module '@polkadot/api-base/types/events' {
              * Emits on budget from the working group being spent
              * Params:
              * - Receiver Account Id.
-             * - Balance spent.
+             * - Amount to spend
              * - Rationale.
              **/
             BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -1895,6 +1953,14 @@ declare module '@polkadot/api-base/types/events' {
              * - Rationale.
              **/
             TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+            /**
+             * Emits on budget from the working group being spent
+             * Params:
+             * - Receiver Account Id.
+             * - Vesting scheduled
+             * - Rationale.
+             **/
+            VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Emits on exiting the worker.
              * Params:
@@ -1970,7 +2036,7 @@ declare module '@polkadot/api-base/types/events' {
              * Emits on budget from the working group being spent
              * Params:
              * - Receiver Account Id.
-             * - Balance spent.
+             * - Amount to spend
              * - Rationale.
              **/
             BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -2076,6 +2142,14 @@ declare module '@polkadot/api-base/types/events' {
              * - Rationale.
              **/
             TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+            /**
+             * Emits on budget from the working group being spent
+             * Params:
+             * - Receiver Account Id.
+             * - Vesting scheduled
+             * - Rationale.
+             **/
+            VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Emits on exiting the worker.
              * Params:
@@ -2227,6 +2301,12 @@ declare module '@polkadot/api-base/types/events' {
              * - transfer's metadata
              **/
             TokenAmountTransferredByIssuer: AugmentedEvent<ApiType, [u64, u64, PalletProjectTokenTransfers, Bytes]>;
+            /**
+             * Governance parameters updated
+             * Params:
+             * - governance parameters
+             **/
+            TokenConstraintsUpdated: AugmentedEvent<ApiType, [PalletProjectTokenTokenConstraints]>;
             /**
              * Token Deissued
              * Params:
@@ -2874,7 +2954,7 @@ declare module '@polkadot/api-base/types/events' {
              * Emits on budget from the working group being spent
              * Params:
              * - Receiver Account Id.
-             * - Balance spent.
+             * - Amount to spend
              * - Rationale.
              **/
             BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -2980,6 +3060,14 @@ declare module '@polkadot/api-base/types/events' {
              * - Rationale.
              **/
             TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+            /**
+             * Emits on budget from the working group being spent
+             * Params:
+             * - Receiver Account Id.
+             * - Vesting scheduled
+             * - Rationale.
+             **/
+            VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Emits on exiting the worker.
              * Params:
diff --git a/lib/augment/augment-api-query.d.ts b/lib/augment/augment-api-query.d.ts
index af2f10923b01887bb1c9135a3290e9c1a7a71f75..84029086fc951002eefc0e1d44a82c3d873bcbdd 100644
--- a/lib/augment/augment-api-query.d.ts
+++ b/lib/augment/augment-api-query.d.ts
@@ -421,6 +421,11 @@ declare module '@polkadot/api-base/types/storage' {
              * Councilor reward per block
              **/
             councilorReward: AugmentedQuery<ApiType, () => Observable<u128>, []>;
+            /**
+             * Era payou damping factor: a parameter in [0,1] that can be used to reduce the era
+             * payout without changing the reward curve directly
+             **/
+            eraPayoutDampingFactor: AugmentedQuery<ApiType, () => Observable<Percent>, []>;
             /**
              * The next block in which the budget will be increased.
              **/
diff --git a/lib/augment/augment-api-tx.d.ts b/lib/augment/augment-api-tx.d.ts
index 5867fa5553c31df55802a85b9090194665948706..ea493b663d215de986c9eb94c3c2328b6183d2ac 100644
--- a/lib/augment/augment-api-tx.d.ts
+++ b/lib/augment/augment-api-tx.d.ts
@@ -3,7 +3,7 @@ import type { ApiTypes, AugmentedSubmittable, SubmittableExtrinsic, SubmittableE
 import type { BTreeMap, BTreeSet, Bytes, Compact, Option, U8aFixed, Vec, bool, u128, u16, u32, u64, u8 } from '@polkadot/types-codec';
 import type { AnyNumber, IMethod, ITuple } from '@polkadot/types-codec/types';
 import type { AccountId32, Call, H256, Perbill, Percent, Permill } from '@polkadot/types/interfaces/runtime';
-import type { JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeSessionKeys, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelOwner, PalletContentChannelUpdateParametersRecord, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmParams, PalletProjectTokenMerkleProof, PalletProjectTokenPaymentWithVesting, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSaleParams, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineVoteKind, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingRewardDestination, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynamicBagType, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusGrandpaEquivocationProof, SpConsensusSlotsEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpSessionMembershipProof, SpWeightsWeightV2Weight } from '@polkadot/types/lookup';
+import type { JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeSessionKeys, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelOwner, PalletContentChannelUpdateParametersRecord, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmParams, PalletProjectTokenMerkleProof, PalletProjectTokenPaymentWithVesting, PalletProjectTokenTokenConstraints, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSaleParams, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineVoteKind, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingRewardDestination, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynamicBagType, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusGrandpaEquivocationProof, SpConsensusSlotsEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpSessionMembershipProof, SpWeightsWeightV2Weight } from '@polkadot/types/lookup';
 export type __AugmentedSubmittable = AugmentedSubmittable<() => unknown>;
 export type __SubmittableExtrinsic<ApiType extends ApiTypes> = SubmittableExtrinsic<ApiType>;
 export type __SubmittableExtrinsicFunction<ApiType extends ApiTypes> = SubmittableExtrinsicFunction<ApiType>;
@@ -179,18 +179,6 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-            /**
-             * Transfers specified amount to any account.
-             * Requires leader origin.
-             *
-             * # <weight>
-             *
-             * ## Weight
-             * `O (1)`
-             * - DB:
-             * - O(1) doesn't depend on the state or parameters
-             * # </weight>
-             **/
             spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
             /**
              * Terminate the active worker by the lead.
@@ -242,6 +230,23 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+            /**
+             * Transfers specified amount to any account.
+             * Requires leader origin.
+             *
+             * # <weight>
+             *
+             * ## Weight
+             * `O (1)`
+             * - DB:
+             * - O(1) doesn't depend on the state or parameters
+             * # </weight>
+             **/
+            vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | {
+                locked?: any;
+                perBlock?: any;
+                startingBlock?: any;
+            } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Withdraw the worker application. Can be done by the worker only.
              *
@@ -1932,18 +1937,6 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-            /**
-             * Transfers specified amount to any account.
-             * Requires leader origin.
-             *
-             * # <weight>
-             *
-             * ## Weight
-             * `O (1)`
-             * - DB:
-             * - O(1) doesn't depend on the state or parameters
-             * # </weight>
-             **/
             spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
             /**
              * Terminate the active worker by the lead.
@@ -1995,6 +1988,23 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+            /**
+             * Transfers specified amount to any account.
+             * Requires leader origin.
+             *
+             * # <weight>
+             *
+             * ## Weight
+             * `O (1)`
+             * - DB:
+             * - O(1) doesn't depend on the state or parameters
+             * # </weight>
+             **/
+            vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | {
+                locked?: any;
+                perBlock?: any;
+                startingBlock?: any;
+            } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Withdraw the worker application. Can be done by the worker only.
              *
@@ -2058,6 +2068,18 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             councilorRemark: AugmentedSubmittable<(councilorId: u64 | AnyNumber | Uint8Array, msg: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, Bytes]>;
+            /**
+             * Decrease the council total budget
+             *
+             * # <weight>
+             *
+             * ## weight
+             * `O (1)`
+             * - db:
+             * - `O(1)` doesn't depend on the state or parameters
+             * # </weight>
+             **/
+            decreaseCouncilBudget: AugmentedSubmittable<(reductionAmount: u128 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [u128]>;
             /**
              * Fund the council budget by a member.
              * <weight>
@@ -2158,6 +2180,18 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             setCouncilorReward: AugmentedSubmittable<(councilorReward: u128 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [u128]>;
+            /**
+             * Set the era payout damping factor
+             *
+             * # <weight>
+             *
+             * ## weight
+             * `O (1)`
+             * - db:
+             * - `O(1)` doesn't depend on the state or parameters
+             * # </weight>
+             **/
+            setEraPayoutDampingFactor: AugmentedSubmittable<(newParameter: Percent | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [Percent]>;
             /**
              * Withdraw candidacy and release candidacy stake.
              *
@@ -2341,18 +2375,6 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-            /**
-             * Transfers specified amount to any account.
-             * Requires leader origin.
-             *
-             * # <weight>
-             *
-             * ## Weight
-             * `O (1)`
-             * - DB:
-             * - O(1) doesn't depend on the state or parameters
-             * # </weight>
-             **/
             spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
             /**
              * Terminate the active worker by the lead.
@@ -2404,6 +2426,23 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+            /**
+             * Transfers specified amount to any account.
+             * Requires leader origin.
+             *
+             * # <weight>
+             *
+             * ## Weight
+             * `O (1)`
+             * - DB:
+             * - O(1) doesn't depend on the state or parameters
+             * # </weight>
+             **/
+            vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | {
+                locked?: any;
+                perBlock?: any;
+                startingBlock?: any;
+            } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Withdraw the worker application. Can be done by the worker only.
              *
@@ -2932,18 +2971,6 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-            /**
-             * Transfers specified amount to any account.
-             * Requires leader origin.
-             *
-             * # <weight>
-             *
-             * ## Weight
-             * `O (1)`
-             * - DB:
-             * - O(1) doesn't depend on the state or parameters
-             * # </weight>
-             **/
             spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
             /**
              * Terminate the active worker by the lead.
@@ -2995,6 +3022,23 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+            /**
+             * Transfers specified amount to any account.
+             * Requires leader origin.
+             *
+             * # <weight>
+             *
+             * ## Weight
+             * `O (1)`
+             * - DB:
+             * - O(1) doesn't depend on the state or parameters
+             * # </weight>
+             **/
+            vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | {
+                locked?: any;
+                perBlock?: any;
+                startingBlock?: any;
+            } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Withdraw the worker application. Can be done by the worker only.
              *
@@ -3546,18 +3590,6 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-            /**
-             * Transfers specified amount to any account.
-             * Requires leader origin.
-             *
-             * # <weight>
-             *
-             * ## Weight
-             * `O (1)`
-             * - DB:
-             * - O(1) doesn't depend on the state or parameters
-             * # </weight>
-             **/
             spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
             /**
              * Terminate the active worker by the lead.
@@ -3609,6 +3641,23 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+            /**
+             * Transfers specified amount to any account.
+             * Requires leader origin.
+             *
+             * # <weight>
+             *
+             * ## Weight
+             * `O (1)`
+             * - DB:
+             * - O(1) doesn't depend on the state or parameters
+             * # </weight>
+             **/
+            vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | {
+                locked?: any;
+                perBlock?: any;
+                startingBlock?: any;
+            } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Withdraw the worker application. Can be done by the worker only.
              *
@@ -3936,18 +3985,6 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-            /**
-             * Transfers specified amount to any account.
-             * Requires leader origin.
-             *
-             * # <weight>
-             *
-             * ## Weight
-             * `O (1)`
-             * - DB:
-             * - O(1) doesn't depend on the state or parameters
-             * # </weight>
-             **/
             spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
             /**
              * Terminate the active worker by the lead.
@@ -3999,6 +4036,23 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+            /**
+             * Transfers specified amount to any account.
+             * Requires leader origin.
+             *
+             * # <weight>
+             *
+             * ## Weight
+             * `O (1)`
+             * - DB:
+             * - O(1) doesn't depend on the state or parameters
+             * # </weight>
+             **/
+            vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | {
+                locked?: any;
+                perBlock?: any;
+                startingBlock?: any;
+            } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Withdraw the worker application. Can be done by the worker only.
              *
@@ -4195,18 +4249,6 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-            /**
-             * Transfers specified amount to any account.
-             * Requires leader origin.
-             *
-             * # <weight>
-             *
-             * ## Weight
-             * `O (1)`
-             * - DB:
-             * - O(1) doesn't depend on the state or parameters
-             * # </weight>
-             **/
             spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
             /**
              * Terminate the active worker by the lead.
@@ -4258,6 +4300,23 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+            /**
+             * Transfers specified amount to any account.
+             * Requires leader origin.
+             *
+             * # <weight>
+             *
+             * ## Weight
+             * `O (1)`
+             * - DB:
+             * - O(1) doesn't depend on the state or parameters
+             * # </weight>
+             **/
+            vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | {
+                locked?: any;
+                perBlock?: any;
+                startingBlock?: any;
+            } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Withdraw the worker application. Can be done by the worker only.
              *
@@ -4454,18 +4513,6 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-            /**
-             * Transfers specified amount to any account.
-             * Requires leader origin.
-             *
-             * # <weight>
-             *
-             * ## Weight
-             * `O (1)`
-             * - DB:
-             * - O(1) doesn't depend on the state or parameters
-             * # </weight>
-             **/
             spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
             /**
              * Terminate the active worker by the lead.
@@ -4517,6 +4564,23 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+            /**
+             * Transfers specified amount to any account.
+             * Requires leader origin.
+             *
+             * # <weight>
+             *
+             * ## Weight
+             * `O (1)`
+             * - DB:
+             * - O(1) doesn't depend on the state or parameters
+             * # </weight>
+             **/
+            vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | {
+                locked?: any;
+                perBlock?: any;
+                startingBlock?: any;
+            } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Withdraw the worker application. Can be done by the worker only.
              *
@@ -4809,6 +4873,29 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             transfer: AugmentedSubmittable<(srcMemberId: u64 | AnyNumber | Uint8Array, tokenId: u64 | AnyNumber | Uint8Array, outputs: Vec<ITuple<[u64, u128]>> | ([u64 | AnyNumber | Uint8Array, u128 | AnyNumber | Uint8Array])[], metadata: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, Vec<ITuple<[u64, u128]>>, Bytes]>;
+            /**
+             * Allow Governance to Set constraints
+             * Preconditions:
+             * - origin is signed by `root`
+             * PostConditions:
+             * - governance parameters storage value set to the provided values
+             * <weight>
+             *
+             * ## Weight
+             * `O (1)`
+             * # </weight>
+             **/
+            updateTokenConstraints: AugmentedSubmittable<(parameters: PalletProjectTokenTokenConstraints | {
+                maxYearlyRate?: any;
+                minAmmSlope?: any;
+                minSaleDuration?: any;
+                minRevenueSplitDuration?: any;
+                minRevenueSplitTimeToStart?: any;
+                salePlatformFee?: any;
+                ammBuyTxFees?: any;
+                ammSellTxFees?: any;
+                bloatBond?: any;
+            } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletProjectTokenTokenConstraints]>;
         };
         proposalsCodex: {
             /**
@@ -4880,6 +4967,12 @@ declare module '@polkadot/api-base/types/submittable' {
                 UpdateChannelPayouts: any;
             } | {
                 SetPalletFozenStatus: any;
+            } | {
+                UpdateTokenPalletTokenConstraints: any;
+            } | {
+                SetEraPayoutDampingFactor: any;
+            } | {
+                DecreaseCouncilBudget: any;
             } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails]>;
         };
         proposalsDiscussion: {
@@ -6097,18 +6190,6 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-            /**
-             * Transfers specified amount to any account.
-             * Requires leader origin.
-             *
-             * # <weight>
-             *
-             * ## Weight
-             * `O (1)`
-             * - DB:
-             * - O(1) doesn't depend on the state or parameters
-             * # </weight>
-             **/
             spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
             /**
              * Terminate the active worker by the lead.
@@ -6160,6 +6241,23 @@ declare module '@polkadot/api-base/types/submittable' {
              * # </weight>
              **/
             updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+            /**
+             * Transfers specified amount to any account.
+             * Requires leader origin.
+             *
+             * # <weight>
+             *
+             * ## Weight
+             * `O (1)`
+             * - DB:
+             * - O(1) doesn't depend on the state or parameters
+             * # </weight>
+             **/
+            vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | {
+                locked?: any;
+                perBlock?: any;
+                startingBlock?: any;
+            } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
             /**
              * Withdraw the worker application. Can be done by the worker only.
              *
diff --git a/lib/augment/lookup.d.ts b/lib/augment/lookup.d.ts
index 542ca8d27f03154d9b777e44b9f99ec1af5934f1..1ff4c2080d0c37829513913d9338906fe7052ecd 100644
--- a/lib/augment/lookup.d.ts
+++ b/lib/augment/lookup.d.ts
@@ -539,14 +539,16 @@ declare const _default: {
             BudgetRefillPlanned: string;
             BudgetIncrementUpdated: string;
             CouncilorRewardUpdated: string;
+            CouncilBudgetDecreased: string;
             RequestFunded: string;
             CouncilBudgetFunded: string;
             CouncilorRemarked: string;
             CandidateRemarked: string;
+            EraPayoutDampingFactorSet: string;
         };
     };
     /**
-     * Lookup70: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
+     * Lookup71: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
      **/
     PalletReferendumRawEvent: {
         _enum: {
@@ -561,18 +563,18 @@ declare const _default: {
         };
     };
     /**
-     * Lookup71: pallet_referendum::Instance1
+     * Lookup72: pallet_referendum::Instance1
      **/
     PalletReferendumInstance1: string;
     /**
-     * Lookup73: pallet_referendum::OptionResult<MemberId, VotePower>
+     * Lookup74: pallet_referendum::OptionResult<MemberId, VotePower>
      **/
     PalletReferendumOptionResult: {
         optionId: string;
         votePower: string;
     };
     /**
-     * Lookup74: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
+     * Lookup75: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletMembershipRawEvent: {
         _enum: {
@@ -596,7 +598,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup75: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+     * Lookup76: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
      **/
     PalletMembershipBuyMembershipParameters: {
         rootAccount: string;
@@ -606,7 +608,7 @@ declare const _default: {
         referrerId: string;
     };
     /**
-     * Lookup78: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+     * Lookup79: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
      **/
     PalletMembershipInviteMembershipParameters: {
         invitingMemberId: string;
@@ -616,7 +618,7 @@ declare const _default: {
         metadata: string;
     };
     /**
-     * Lookup79: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
+     * Lookup80: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
      **/
     PalletMembershipCreateMemberParameters: {
         rootAccount: string;
@@ -626,7 +628,7 @@ declare const _default: {
         isFoundingMember: string;
     };
     /**
-     * Lookup80: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup81: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletMembershipGiftMembershipParameters: {
         rootAccount: string;
@@ -639,7 +641,7 @@ declare const _default: {
         applyRootAccountInvitationLock: string;
     };
     /**
-     * Lookup84: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
+     * Lookup85: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
      **/
     PalletForumRawEvent: {
         _enum: {
@@ -663,7 +665,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup85: pallet_forum::PrivilegedActor<T>
+     * Lookup86: pallet_forum::PrivilegedActor<T>
      **/
     PalletForumPrivilegedActor: {
         _enum: {
@@ -672,7 +674,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup86: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
+     * Lookup87: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
      **/
     PalletForumExtendedPostIdObject: {
         categoryId: string;
@@ -680,7 +682,7 @@ declare const _default: {
         postId: string;
     };
     /**
-     * Lookup91: pallet_constitution::RawEvent<primitive_types::H256>
+     * Lookup92: pallet_constitution::RawEvent<primitive_types::H256>
      **/
     PalletConstitutionRawEvent: {
         _enum: {
@@ -688,7 +690,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup92: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
+     * Lookup93: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
      **/
     PalletBountyRawEvent: {
         _enum: {
@@ -718,7 +720,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup93: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
+     * Lookup94: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
      **/
     PalletBountyBountyParametersBTreeSet: {
         oracle: string;
@@ -730,7 +732,7 @@ declare const _default: {
         fundingType: string;
     };
     /**
-     * Lookup94: pallet_bounty::BountyActor<MemberId>
+     * Lookup95: pallet_bounty::BountyActor<MemberId>
      **/
     PalletBountyBountyActor: {
         _enum: {
@@ -739,7 +741,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup95: pallet_bounty::AssuranceContractType<BTreeSet<T>>
+     * Lookup96: pallet_bounty::AssuranceContractType<BTreeSet<T>>
      **/
     PalletBountyAssuranceContractTypeBTreeSet: {
         _enum: {
@@ -748,7 +750,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup96: pallet_bounty::FundingType<BlockNumber, Balance>
+     * Lookup97: pallet_bounty::FundingType<BlockNumber, Balance>
      **/
     PalletBountyFundingType: {
         _enum: {
@@ -762,7 +764,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup98: pallet_bounty::OracleWorkEntryJudgment<Balance>
+     * Lookup99: pallet_bounty::OracleWorkEntryJudgment<Balance>
      **/
     PalletBountyOracleWorkEntryJudgment: {
         _enum: {
@@ -776,7 +778,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup101: pallet_joystream_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
+     * Lookup102: pallet_joystream_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
      **/
     PalletJoystreamUtilityRawEvent: {
         _enum: {
@@ -787,19 +789,19 @@ declare const _default: {
         };
     };
     /**
-     * Lookup102: pallet_common::working_group::iterable_enums::WorkingGroup
+     * Lookup103: pallet_common::working_group::iterable_enums::WorkingGroup
      **/
     PalletCommonWorkingGroupIterableEnumsWorkingGroup: {
         _enum: string[];
     };
     /**
-     * Lookup103: pallet_common::BalanceKind
+     * Lookup104: pallet_common::BalanceKind
      **/
     PalletCommonBalanceKind: {
         _enum: string[];
     };
     /**
-     * Lookup104: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
+     * Lookup105: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
      **/
     PalletContentRawEvent: {
         _enum: {
@@ -859,7 +861,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup105: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
+     * Lookup106: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
      **/
     PalletContentPermissionsContentActor: {
         _enum: {
@@ -869,7 +871,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup106: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup107: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentChannelRecord: {
         owner: string;
@@ -888,26 +890,26 @@ declare const _default: {
         channelStateBloatBond: string;
     };
     /**
-     * Lookup110: pallet_content::types::iterable_enums::ChannelActionPermission
+     * Lookup111: pallet_content::types::iterable_enums::ChannelActionPermission
      **/
     PalletContentIterableEnumsChannelActionPermission: {
         _enum: string[];
     };
     /**
-     * Lookup117: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
+     * Lookup118: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
      **/
     PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature: {
         _enum: string[];
     };
     /**
-     * Lookup120: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
+     * Lookup121: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
      **/
     PalletCommonBloatBondRepayableBloatBond: {
         repaymentRestrictedTo: string;
         amount: string;
     };
     /**
-     * Lookup121: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
+     * Lookup122: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
      **/
     PalletContentChannelOwner: {
         _enum: {
@@ -916,7 +918,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup122: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+     * Lookup123: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
      **/
     PalletContentChannelTransferStatus: {
         _enum: {
@@ -925,14 +927,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup123: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+     * Lookup124: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
      **/
     PalletContentPendingTransfer: {
         newOwner: string;
         transferParams: string;
     };
     /**
-     * Lookup124: pallet_content::types::TransferCommitmentParameters<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
+     * Lookup125: pallet_content::types::TransferCommitmentParameters<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
      **/
     PalletContentTransferCommitmentParametersBoundedBTreeMap: {
         newCollaborators: string;
@@ -940,21 +942,21 @@ declare const _default: {
         transferId: string;
     };
     /**
-     * Lookup125: pallet_content::types::LimitPerPeriod<BlockNumber>
+     * Lookup126: pallet_content::types::LimitPerPeriod<BlockNumber>
      **/
     PalletContentLimitPerPeriod: {
         limit: string;
         blockNumberPeriod: string;
     };
     /**
-     * Lookup126: pallet_content::types::NftCounter<BlockNumber>
+     * Lookup127: pallet_content::types::NftCounter<BlockNumber>
      **/
     PalletContentNftCounter: {
         counter: string;
         lastUpdated: string;
     };
     /**
-     * Lookup127: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
+     * Lookup128: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionParamsRecord: {
         startingPrice: string;
@@ -966,7 +968,7 @@ declare const _default: {
         minBidStep: string;
     };
     /**
-     * Lookup129: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
+     * Lookup130: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
      **/
     PalletContentNftTypesOpenAuctionParamsRecord: {
         startingPrice: string;
@@ -976,7 +978,7 @@ declare const _default: {
         bidLockDuration: string;
     };
     /**
-     * Lookup130: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
+     * Lookup131: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
      **/
     PalletContentNftTypesNftIssuanceParametersRecord: {
         royalty: string;
@@ -985,7 +987,7 @@ declare const _default: {
         initTransactionalStatus: string;
     };
     /**
-     * Lookup131: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
+     * Lookup132: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
      **/
     PalletContentNftTypesInitTransactionalStatusRecord: {
         _enum: {
@@ -997,7 +999,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup133: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
+     * Lookup134: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
      **/
     PalletContentChannelCreationParametersRecord: {
         assets: string;
@@ -1009,14 +1011,14 @@ declare const _default: {
         expectedDataObjectStateBloatBond: string;
     };
     /**
-     * Lookup134: pallet_content::types::StorageAssetsRecord<Balance>
+     * Lookup135: pallet_content::types::StorageAssetsRecord<Balance>
      **/
     PalletContentStorageAssetsRecord: {
         objectCreationList: string;
         expectedDataSizeFee: string;
     };
     /**
-     * Lookup136: pallet_storage::DataObjectCreationParameters
+     * Lookup137: pallet_storage::DataObjectCreationParameters
      **/
     PalletStorageDataObjectCreationParameters: {
         _alias: {
@@ -1026,14 +1028,14 @@ declare const _default: {
         ipfsContentId: string;
     };
     /**
-     * Lookup137: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
+     * Lookup138: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketIdRecord: {
         distributionBucketFamilyId: string;
         distributionBucketIndex: string;
     };
     /**
-     * Lookup144: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
+     * Lookup145: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
      **/
     PalletContentChannelUpdateParametersRecord: {
         assetsToUpload: string;
@@ -1044,7 +1046,7 @@ declare const _default: {
         storageBucketsNumWitness: string;
     };
     /**
-     * Lookup146: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+     * Lookup147: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
      **/
     PalletContentVideoCreationParametersRecord: {
         assets: string;
@@ -1055,7 +1057,7 @@ declare const _default: {
         storageBucketsNumWitness: string;
     };
     /**
-     * Lookup148: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+     * Lookup149: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
      **/
     PalletContentVideoUpdateParametersRecord: {
         assetsToUpload: string;
@@ -1066,7 +1068,7 @@ declare const _default: {
         storageBucketsNumWitness: string;
     };
     /**
-     * Lookup151: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
+     * Lookup152: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
      **/
     PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction: {
         _enum: {
@@ -1079,7 +1081,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup155: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
+     * Lookup156: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
      **/
     PalletContentTransferCommitmentParametersBTreeMap: {
         newCollaborators: string;
@@ -1087,7 +1089,7 @@ declare const _default: {
         transferId: string;
     };
     /**
-     * Lookup156: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>
+     * Lookup157: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>
      **/
     PalletContentUpdateChannelPayoutsParametersRecord: {
         commitment: string;
@@ -1097,7 +1099,7 @@ declare const _default: {
         channelCashoutsEnabled: string;
     };
     /**
-     * Lookup157: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>
+     * Lookup158: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>
      **/
     PalletContentChannelPayoutsPayloadParametersRecord: {
         objectCreationParams: string;
@@ -1105,7 +1107,7 @@ declare const _default: {
         expectedDataObjectStateBloatBond: string;
     };
     /**
-     * Lookup161: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
+     * Lookup162: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
      **/
     PalletContentChannelFundsDestination: {
         _enum: {
@@ -1114,13 +1116,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup162: pallet_content::types::NftLimitPeriod
+     * Lookup163: pallet_content::types::NftLimitPeriod
      **/
     PalletContentNftLimitPeriod: {
         _enum: string[];
     };
     /**
-     * Lookup163: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
+     * Lookup164: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
      **/
     PalletStorageRawEvent: {
         _enum: {
@@ -1169,7 +1171,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup164: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
+     * Lookup165: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
      **/
     PalletStorageUploadParametersRecord: {
         bagId: string;
@@ -1179,7 +1181,7 @@ declare const _default: {
         expectedDataObjectStateBloatBond: string;
     };
     /**
-     * Lookup165: pallet_storage::BagIdType<MemberId, ChannelId>
+     * Lookup166: pallet_storage::BagIdType<MemberId, ChannelId>
      **/
     PalletStorageBagIdType: {
         _enum: {
@@ -1188,7 +1190,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup166: pallet_storage::StaticBagId
+     * Lookup167: pallet_storage::StaticBagId
      **/
     PalletStorageStaticBagId: {
         _enum: {
@@ -1197,7 +1199,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup167: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
+     * Lookup168: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
      **/
     PalletStorageDynamicBagIdType: {
         _enum: {
@@ -1206,7 +1208,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup168: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
+     * Lookup169: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
      **/
     PalletStorageDynBagCreationParametersRecord: {
         bagId: string;
@@ -1218,7 +1220,7 @@ declare const _default: {
         distributionBuckets: string;
     };
     /**
-     * Lookup171: pallet_storage::Voucher
+     * Lookup172: pallet_storage::Voucher
      **/
     PalletStorageVoucher: {
         sizeLimit: string;
@@ -1227,13 +1229,13 @@ declare const _default: {
         objectsUsed: string;
     };
     /**
-     * Lookup172: pallet_storage::DynamicBagType
+     * Lookup173: pallet_storage::DynamicBagType
      **/
     PalletStorageDynamicBagType: {
         _enum: string[];
     };
     /**
-     * Lookup176: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::AmmCurve<Balance>>
+     * Lookup177: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::AmmCurve<Balance>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>
      **/
     PalletProjectTokenEventsRawEvent: {
         _enum: {
@@ -1260,10 +1262,11 @@ declare const _default: {
             TokensSoldOnAmm: string;
             AmmDeactivated: string;
             FrozenStatusUpdated: string;
+            TokenConstraintsUpdated: string;
         };
     };
     /**
-     * Lookup177: pallet_project_token::types::TransferPolicy<primitive_types::H256>
+     * Lookup178: pallet_project_token::types::TransferPolicy<primitive_types::H256>
      **/
     PalletProjectTokenTransferPolicy: {
         _enum: {
@@ -1272,7 +1275,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup178: pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
+     * Lookup179: pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
      **/
     PalletProjectTokenTokenIssuanceParameters: {
         initialAllocation: string;
@@ -1282,14 +1285,14 @@ declare const _default: {
         metadata: string;
     };
     /**
-     * Lookup179: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup180: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenAllocation: {
         amount: string;
         vestingScheduleParams: string;
     };
     /**
-     * Lookup180: pallet_project_token::types::VestingScheduleParams<BlockNumber>
+     * Lookup181: pallet_project_token::types::VestingScheduleParams<BlockNumber>
      **/
     PalletProjectTokenVestingScheduleParams: {
         linearVestingDuration: string;
@@ -1297,7 +1300,7 @@ declare const _default: {
         cliffAmountPercentage: string;
     };
     /**
-     * Lookup183: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
+     * Lookup184: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
      **/
     PalletProjectTokenTransferPolicyParams: {
         _enum: {
@@ -1306,14 +1309,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup184: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
+     * Lookup185: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
      **/
     PalletProjectTokenWhitelistParams: {
         commitment: string;
         payload: string;
     };
     /**
-     * Lookup185: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
+     * Lookup186: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
      **/
     PalletProjectTokenSingleDataObjectUploadParams: {
         objectCreationParams: string;
@@ -1321,11 +1324,11 @@ declare const _default: {
         expectedDataObjectStateBloatBond: string;
     };
     /**
-     * Lookup191: pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>
+     * Lookup192: pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>
      **/
     PalletProjectTokenTransfers: string;
     /**
-     * Lookup192: pallet_project_token::types::Validated<MemberId>
+     * Lookup193: pallet_project_token::types::Validated<MemberId>
      **/
     PalletProjectTokenValidated: {
         _enum: {
@@ -1334,21 +1337,21 @@ declare const _default: {
         };
     };
     /**
-     * Lookup193: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
+     * Lookup194: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
      **/
     PalletProjectTokenValidatedPayment: {
         payment: string;
         vestingCleanupCandidate: string;
     };
     /**
-     * Lookup194: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup195: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenPaymentWithVesting: {
         amount: string;
         vestingSchedule: string;
     };
     /**
-     * Lookup196: pallet_project_token::types::VestingSource
+     * Lookup197: pallet_project_token::types::VestingSource
      **/
     PalletProjectTokenVestingSource: {
         _enum: {
@@ -1358,7 +1361,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup200: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
+     * Lookup201: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
      **/
     PalletProjectTokenTokenSale: {
         unitPrice: string;
@@ -1373,7 +1376,7 @@ declare const _default: {
         autoFinalize: string;
     };
     /**
-     * Lookup201: pallet_project_token::types::AmmCurve<Balance>
+     * Lookup202: pallet_project_token::types::AmmCurve<Balance>
      **/
     PalletProjectTokenAmmCurve: {
         slope: string;
@@ -1381,7 +1384,21 @@ declare const _default: {
         providedSupply: string;
     };
     /**
-     * Lookup202: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
+     * Lookup203: pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>
+     **/
+    PalletProjectTokenTokenConstraints: {
+        maxYearlyRate: string;
+        minAmmSlope: string;
+        minSaleDuration: string;
+        minRevenueSplitDuration: string;
+        minRevenueSplitTimeToStart: string;
+        salePlatformFee: string;
+        ammBuyTxFees: string;
+        ammSellTxFees: string;
+        bloatBond: string;
+    };
+    /**
+     * Lookup206: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
      **/
     PalletProposalsEngineRawEvent: {
         _enum: {
@@ -1394,7 +1411,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup203: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
+     * Lookup207: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
      **/
     PalletProposalsEngineProposalStatusesProposalStatus: {
         _enum: {
@@ -1404,7 +1421,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup204: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
+     * Lookup208: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
      **/
     PalletProposalsEngineProposalStatusesProposalDecision: {
         _enum: {
@@ -1418,13 +1435,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup205: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
+     * Lookup209: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
      **/
     PalletProposalsEngineProposalStatusesApprovedProposalDecision: {
         _enum: string[];
     };
     /**
-     * Lookup206: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
+     * Lookup210: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
      **/
     PalletProposalsEngineProposalStatusesExecutionStatus: {
         _enum: {
@@ -1435,13 +1452,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup207: pallet_proposals_engine::types::VoteKind
+     * Lookup211: pallet_proposals_engine::types::VoteKind
      **/
     PalletProposalsEngineVoteKind: {
         _enum: string[];
     };
     /**
-     * Lookup208: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
+     * Lookup212: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
      **/
     PalletProposalsDiscussionRawEvent: {
         _enum: {
@@ -1453,7 +1470,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup209: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
+     * Lookup213: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
      **/
     PalletProposalsDiscussionThreadModeBTreeSet: {
         _enum: {
@@ -1462,7 +1479,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup210: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>
+     * Lookup214: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>, ProposalId, ThreadId>
      **/
     PalletProposalsCodexRawEvent: {
         _enum: {
@@ -1470,7 +1487,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup211: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
+     * Lookup215: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
      **/
     PalletProposalsCodexGeneralProposalParams: {
         memberId: string;
@@ -1480,7 +1497,7 @@ declare const _default: {
         exactExecutionBlock: string;
     };
     /**
-     * Lookup212: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>
+     * Lookup216: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>
      **/
     PalletProposalsCodexProposalDetails: {
         _enum: {
@@ -1508,17 +1525,20 @@ declare const _default: {
             UpdateGlobalNftLimit: string;
             UpdateChannelPayouts: string;
             SetPalletFozenStatus: string;
+            UpdateTokenPalletTokenConstraints: string;
+            SetEraPayoutDampingFactor: string;
+            DecreaseCouncilBudget: string;
         };
     };
     /**
-     * Lookup214: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
+     * Lookup218: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
      **/
     PalletCommonFundingRequestParameters: {
         account: string;
         amount: string;
     };
     /**
-     * Lookup215: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
+     * Lookup219: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
      **/
     PalletProposalsCodexCreateOpeningParameters: {
         description: string;
@@ -1527,14 +1547,14 @@ declare const _default: {
         group: string;
     };
     /**
-     * Lookup216: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
+     * Lookup220: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
      **/
     PalletWorkingGroupStakePolicy: {
         stakeAmount: string;
         leavingUnstakingPeriod: string;
     };
     /**
-     * Lookup217: pallet_proposals_codex::types::FillOpeningParameters
+     * Lookup221: pallet_proposals_codex::types::FillOpeningParameters
      **/
     PalletProposalsCodexFillOpeningParameters: {
         openingId: string;
@@ -1542,7 +1562,7 @@ declare const _default: {
         workingGroup: string;
     };
     /**
-     * Lookup218: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
+     * Lookup222: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
      **/
     PalletProposalsCodexTerminateRoleParameters: {
         workerId: string;
@@ -1550,13 +1570,13 @@ declare const _default: {
         group: string;
     };
     /**
-     * Lookup219: pallet_common::FreezablePallet
+     * Lookup223: pallet_common::FreezablePallet
      **/
     PalletCommonFreezablePallet: {
         _enum: string[];
     };
     /**
-     * Lookup220: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>
+     * Lookup224: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance1>
      **/
     PalletWorkingGroupRawEventInstance1: {
         _enum: {
@@ -1579,6 +1599,7 @@ declare const _default: {
             WorkerRewardAccountUpdated: string;
             WorkerRewardAmountUpdated: string;
             StatusTextChanged: string;
+            VestedBudgetSpending: string;
             BudgetSpending: string;
             RewardPaid: string;
             NewMissedRewardLevelReached: string;
@@ -1588,13 +1609,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup224: pallet_working_group::types::OpeningType
+     * Lookup228: pallet_working_group::types::OpeningType
      **/
     PalletWorkingGroupOpeningType: {
         _enum: string[];
     };
     /**
-     * Lookup225: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
+     * Lookup229: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupApplyOnOpeningParams: {
         memberId: string;
@@ -1605,24 +1626,32 @@ declare const _default: {
         stakeParameters: string;
     };
     /**
-     * Lookup226: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup230: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupStakeParameters: {
         stake: string;
         stakingAccountId: string;
     };
     /**
-     * Lookup227: pallet_working_group::Instance1
+     * Lookup231: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
+     **/
+    PalletVestingVestingInfo: {
+        locked: string;
+        perBlock: string;
+        startingBlock: string;
+    };
+    /**
+     * Lookup232: pallet_working_group::Instance1
      **/
     PalletWorkingGroupInstance1: string;
     /**
-     * Lookup228: pallet_working_group::types::RewardPaymentType
+     * Lookup233: pallet_working_group::types::RewardPaymentType
      **/
     PalletWorkingGroupRewardPaymentType: {
         _enum: string[];
     };
     /**
-     * Lookup229: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>
+     * Lookup234: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance2>
      **/
     PalletWorkingGroupRawEventInstance2: {
         _enum: {
@@ -1645,6 +1674,7 @@ declare const _default: {
             WorkerRewardAccountUpdated: string;
             WorkerRewardAmountUpdated: string;
             StatusTextChanged: string;
+            VestedBudgetSpending: string;
             BudgetSpending: string;
             RewardPaid: string;
             NewMissedRewardLevelReached: string;
@@ -1654,11 +1684,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup230: pallet_working_group::Instance2
+     * Lookup235: pallet_working_group::Instance2
      **/
     PalletWorkingGroupInstance2: string;
     /**
-     * Lookup231: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>
+     * Lookup236: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance3>
      **/
     PalletWorkingGroupRawEventInstance3: {
         _enum: {
@@ -1681,6 +1711,7 @@ declare const _default: {
             WorkerRewardAccountUpdated: string;
             WorkerRewardAmountUpdated: string;
             StatusTextChanged: string;
+            VestedBudgetSpending: string;
             BudgetSpending: string;
             RewardPaid: string;
             NewMissedRewardLevelReached: string;
@@ -1690,11 +1721,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup232: pallet_working_group::Instance3
+     * Lookup237: pallet_working_group::Instance3
      **/
     PalletWorkingGroupInstance3: string;
     /**
-     * Lookup233: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>
+     * Lookup238: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance4>
      **/
     PalletWorkingGroupRawEventInstance4: {
         _enum: {
@@ -1717,6 +1748,7 @@ declare const _default: {
             WorkerRewardAccountUpdated: string;
             WorkerRewardAmountUpdated: string;
             StatusTextChanged: string;
+            VestedBudgetSpending: string;
             BudgetSpending: string;
             RewardPaid: string;
             NewMissedRewardLevelReached: string;
@@ -1726,11 +1758,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup234: pallet_working_group::Instance4
+     * Lookup239: pallet_working_group::Instance4
      **/
     PalletWorkingGroupInstance4: string;
     /**
-     * Lookup235: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>
+     * Lookup240: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance5>
      **/
     PalletWorkingGroupRawEventInstance5: {
         _enum: {
@@ -1753,6 +1785,7 @@ declare const _default: {
             WorkerRewardAccountUpdated: string;
             WorkerRewardAmountUpdated: string;
             StatusTextChanged: string;
+            VestedBudgetSpending: string;
             BudgetSpending: string;
             RewardPaid: string;
             NewMissedRewardLevelReached: string;
@@ -1762,11 +1795,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup236: pallet_working_group::Instance5
+     * Lookup241: pallet_working_group::Instance5
      **/
     PalletWorkingGroupInstance5: string;
     /**
-     * Lookup237: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>
+     * Lookup242: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance6>
      **/
     PalletWorkingGroupRawEventInstance6: {
         _enum: {
@@ -1789,6 +1822,7 @@ declare const _default: {
             WorkerRewardAccountUpdated: string;
             WorkerRewardAmountUpdated: string;
             StatusTextChanged: string;
+            VestedBudgetSpending: string;
             BudgetSpending: string;
             RewardPaid: string;
             NewMissedRewardLevelReached: string;
@@ -1798,11 +1832,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup238: pallet_working_group::Instance6
+     * Lookup243: pallet_working_group::Instance6
      **/
     PalletWorkingGroupInstance6: string;
     /**
-     * Lookup239: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>
+     * Lookup244: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance7>
      **/
     PalletWorkingGroupRawEventInstance7: {
         _enum: {
@@ -1825,6 +1859,7 @@ declare const _default: {
             WorkerRewardAccountUpdated: string;
             WorkerRewardAmountUpdated: string;
             StatusTextChanged: string;
+            VestedBudgetSpending: string;
             BudgetSpending: string;
             RewardPaid: string;
             NewMissedRewardLevelReached: string;
@@ -1834,11 +1869,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup240: pallet_working_group::Instance7
+     * Lookup245: pallet_working_group::Instance7
      **/
     PalletWorkingGroupInstance7: string;
     /**
-     * Lookup241: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>
+     * Lookup246: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance8>
      **/
     PalletWorkingGroupRawEventInstance8: {
         _enum: {
@@ -1861,6 +1896,7 @@ declare const _default: {
             WorkerRewardAccountUpdated: string;
             WorkerRewardAmountUpdated: string;
             StatusTextChanged: string;
+            VestedBudgetSpending: string;
             BudgetSpending: string;
             RewardPaid: string;
             NewMissedRewardLevelReached: string;
@@ -1870,11 +1906,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup242: pallet_working_group::Instance8
+     * Lookup247: pallet_working_group::Instance8
      **/
     PalletWorkingGroupInstance8: string;
     /**
-     * Lookup243: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>
+     * Lookup248: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance9>
      **/
     PalletWorkingGroupRawEventInstance9: {
         _enum: {
@@ -1897,6 +1933,7 @@ declare const _default: {
             WorkerRewardAccountUpdated: string;
             WorkerRewardAmountUpdated: string;
             StatusTextChanged: string;
+            VestedBudgetSpending: string;
             BudgetSpending: string;
             RewardPaid: string;
             NewMissedRewardLevelReached: string;
@@ -1906,11 +1943,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup244: pallet_working_group::Instance9
+     * Lookup249: pallet_working_group::Instance9
      **/
     PalletWorkingGroupInstance9: string;
     /**
-     * Lookup245: frame_system::Phase
+     * Lookup250: frame_system::Phase
      **/
     FrameSystemPhase: {
         _enum: {
@@ -1920,14 +1957,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup249: frame_system::LastRuntimeUpgradeInfo
+     * Lookup254: frame_system::LastRuntimeUpgradeInfo
      **/
     FrameSystemLastRuntimeUpgradeInfo: {
         specVersion: string;
         specName: string;
     };
     /**
-     * Lookup252: frame_system::pallet::Call<T>
+     * Lookup257: frame_system::pallet::Call<T>
      **/
     FrameSystemCall: {
         _enum: {
@@ -1962,7 +1999,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup255: frame_system::limits::BlockWeights
+     * Lookup260: frame_system::limits::BlockWeights
      **/
     FrameSystemLimitsBlockWeights: {
         baseBlock: string;
@@ -1970,7 +2007,7 @@ declare const _default: {
         perClass: string;
     };
     /**
-     * Lookup256: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
+     * Lookup261: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
      **/
     FrameSupportDispatchPerDispatchClassWeightsPerClass: {
         normal: string;
@@ -1978,7 +2015,7 @@ declare const _default: {
         mandatory: string;
     };
     /**
-     * Lookup257: frame_system::limits::WeightsPerClass
+     * Lookup262: frame_system::limits::WeightsPerClass
      **/
     FrameSystemLimitsWeightsPerClass: {
         baseExtrinsic: string;
@@ -1987,13 +2024,13 @@ declare const _default: {
         reserved: string;
     };
     /**
-     * Lookup259: frame_system::limits::BlockLength
+     * Lookup264: frame_system::limits::BlockLength
      **/
     FrameSystemLimitsBlockLength: {
         max: string;
     };
     /**
-     * Lookup260: frame_support::dispatch::PerDispatchClass<T>
+     * Lookup265: frame_support::dispatch::PerDispatchClass<T>
      **/
     FrameSupportDispatchPerDispatchClassU32: {
         normal: string;
@@ -2001,14 +2038,14 @@ declare const _default: {
         mandatory: string;
     };
     /**
-     * Lookup261: sp_weights::RuntimeDbWeight
+     * Lookup266: sp_weights::RuntimeDbWeight
      **/
     SpWeightsRuntimeDbWeight: {
         read: string;
         write: string;
     };
     /**
-     * Lookup262: sp_version::RuntimeVersion
+     * Lookup267: sp_version::RuntimeVersion
      **/
     SpVersionRuntimeVersion: {
         specName: string;
@@ -2021,13 +2058,13 @@ declare const _default: {
         stateVersion: string;
     };
     /**
-     * Lookup268: frame_system::pallet::Error<T>
+     * Lookup273: frame_system::pallet::Error<T>
      **/
     FrameSystemError: {
         _enum: string[];
     };
     /**
-     * Lookup269: pallet_utility::pallet::Call<T>
+     * Lookup274: pallet_utility::pallet::Call<T>
      **/
     PalletUtilityCall: {
         _enum: {
@@ -2055,7 +2092,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup272: pallet_babe::pallet::Call<T>
+     * Lookup277: pallet_babe::pallet::Call<T>
      **/
     PalletBabeCall: {
         _enum: {
@@ -2073,7 +2110,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup273: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
+     * Lookup278: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
      **/
     SpConsensusSlotsEquivocationProof: {
         offender: string;
@@ -2082,7 +2119,7 @@ declare const _default: {
         secondHeader: string;
     };
     /**
-     * Lookup274: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
+     * Lookup279: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
      **/
     SpRuntimeHeader: {
         parentHash: string;
@@ -2092,15 +2129,15 @@ declare const _default: {
         digest: string;
     };
     /**
-     * Lookup275: sp_runtime::traits::BlakeTwo256
+     * Lookup280: sp_runtime::traits::BlakeTwo256
      **/
     SpRuntimeBlakeTwo256: string;
     /**
-     * Lookup276: sp_consensus_babe::app::Public
+     * Lookup281: sp_consensus_babe::app::Public
      **/
     SpConsensusBabeAppPublic: string;
     /**
-     * Lookup278: sp_session::MembershipProof
+     * Lookup283: sp_session::MembershipProof
      **/
     SpSessionMembershipProof: {
         session: string;
@@ -2108,7 +2145,7 @@ declare const _default: {
         validatorCount: string;
     };
     /**
-     * Lookup279: sp_consensus_babe::digests::NextConfigDescriptor
+     * Lookup284: sp_consensus_babe::digests::NextConfigDescriptor
      **/
     SpConsensusBabeDigestsNextConfigDescriptor: {
         _enum: {
@@ -2120,13 +2157,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup280: sp_consensus_babe::AllowedSlots
+     * Lookup285: sp_consensus_babe::AllowedSlots
      **/
     SpConsensusBabeAllowedSlots: {
         _enum: string[];
     };
     /**
-     * Lookup281: pallet_timestamp::pallet::Call<T>
+     * Lookup286: pallet_timestamp::pallet::Call<T>
      **/
     PalletTimestampCall: {
         _enum: {
@@ -2136,7 +2173,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup282: pallet_balances::pallet::Call<T, I>
+     * Lookup287: pallet_balances::pallet::Call<T, I>
      **/
     PalletBalancesCall: {
         _enum: {
@@ -2169,7 +2206,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup283: pallet_election_provider_multi_phase::pallet::Call<T>
+     * Lookup288: pallet_election_provider_multi_phase::pallet::Call<T>
      **/
     PalletElectionProviderMultiPhaseCall: {
         _enum: {
@@ -2193,7 +2230,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup284: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
+     * Lookup289: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseRawSolution: {
         solution: string;
@@ -2201,7 +2238,7 @@ declare const _default: {
         round: string;
     };
     /**
-     * Lookup285: joystream_node_runtime::NposSolution16
+     * Lookup290: joystream_node_runtime::NposSolution16
      **/
     JoystreamNodeRuntimeNposSolution16: {
         votes1: string;
@@ -2222,21 +2259,21 @@ declare const _default: {
         votes16: string;
     };
     /**
-     * Lookup336: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
+     * Lookup341: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
      **/
     PalletElectionProviderMultiPhaseSolutionOrSnapshotSize: {
         voters: string;
         targets: string;
     };
     /**
-     * Lookup340: sp_npos_elections::Support<sp_core::crypto::AccountId32>
+     * Lookup345: sp_npos_elections::Support<sp_core::crypto::AccountId32>
      **/
     SpNposElectionsSupport: {
         total: string;
         voters: string;
     };
     /**
-     * Lookup342: pallet_staking::pallet::pallet::Call<T>
+     * Lookup347: pallet_staking::pallet::pallet::Call<T>
      **/
     PalletStakingPalletCall: {
         _enum: {
@@ -2330,7 +2367,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup343: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
+     * Lookup348: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
      **/
     PalletStakingRewardDestination: {
         _enum: {
@@ -2342,7 +2379,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup347: pallet_staking::pallet::pallet::ConfigOp<T>
+     * Lookup351: pallet_staking::pallet::pallet::ConfigOp<T>
      **/
     PalletStakingPalletConfigOpU128: {
         _enum: {
@@ -2352,7 +2389,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup348: pallet_staking::pallet::pallet::ConfigOp<T>
+     * Lookup352: pallet_staking::pallet::pallet::ConfigOp<T>
      **/
     PalletStakingPalletConfigOpU32: {
         _enum: {
@@ -2362,7 +2399,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup349: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
+     * Lookup353: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
      **/
     PalletStakingPalletConfigOpPercent: {
         _enum: {
@@ -2372,7 +2409,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup350: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
+     * Lookup354: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
      **/
     PalletStakingPalletConfigOpPerbill: {
         _enum: {
@@ -2382,7 +2419,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup351: pallet_session::pallet::Call<T>
+     * Lookup355: pallet_session::pallet::Call<T>
      **/
     PalletSessionCall: {
         _enum: {
@@ -2397,7 +2434,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup352: joystream_node_runtime::SessionKeys
+     * Lookup356: joystream_node_runtime::SessionKeys
      **/
     JoystreamNodeRuntimeSessionKeys: {
         grandpa: string;
@@ -2406,11 +2443,11 @@ declare const _default: {
         authorityDiscovery: string;
     };
     /**
-     * Lookup353: sp_authority_discovery::app::Public
+     * Lookup357: sp_authority_discovery::app::Public
      **/
     SpAuthorityDiscoveryAppPublic: string;
     /**
-     * Lookup354: pallet_grandpa::pallet::Call<T>
+     * Lookup358: pallet_grandpa::pallet::Call<T>
      **/
     PalletGrandpaCall: {
         _enum: {
@@ -2429,14 +2466,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup355: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
+     * Lookup359: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
      **/
     SpConsensusGrandpaEquivocationProof: {
         setId: string;
         equivocation: string;
     };
     /**
-     * Lookup356: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
+     * Lookup360: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
      **/
     SpConsensusGrandpaEquivocation: {
         _enum: {
@@ -2445,7 +2482,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup357: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+     * Lookup361: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
      **/
     FinalityGrandpaEquivocationPrevote: {
         roundNumber: string;
@@ -2454,22 +2491,22 @@ declare const _default: {
         second: string;
     };
     /**
-     * Lookup358: finality_grandpa::Prevote<primitive_types::H256, N>
+     * Lookup362: finality_grandpa::Prevote<primitive_types::H256, N>
      **/
     FinalityGrandpaPrevote: {
         targetHash: string;
         targetNumber: string;
     };
     /**
-     * Lookup359: sp_consensus_grandpa::app::Signature
+     * Lookup363: sp_consensus_grandpa::app::Signature
      **/
     SpConsensusGrandpaAppSignature: string;
     /**
-     * Lookup360: sp_core::ed25519::Signature
+     * Lookup364: sp_core::ed25519::Signature
      **/
     SpCoreEd25519Signature: string;
     /**
-     * Lookup363: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+     * Lookup367: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
      **/
     FinalityGrandpaEquivocationPrecommit: {
         roundNumber: string;
@@ -2478,14 +2515,14 @@ declare const _default: {
         second: string;
     };
     /**
-     * Lookup364: finality_grandpa::Precommit<primitive_types::H256, N>
+     * Lookup368: finality_grandpa::Precommit<primitive_types::H256, N>
      **/
     FinalityGrandpaPrecommit: {
         targetHash: string;
         targetNumber: string;
     };
     /**
-     * Lookup366: pallet_im_online::pallet::Call<T>
+     * Lookup370: pallet_im_online::pallet::Call<T>
      **/
     PalletImOnlineCall: {
         _enum: {
@@ -2496,7 +2533,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup367: pallet_im_online::Heartbeat<BlockNumber>
+     * Lookup371: pallet_im_online::Heartbeat<BlockNumber>
      **/
     PalletImOnlineHeartbeat: {
         blockNumber: string;
@@ -2506,22 +2543,22 @@ declare const _default: {
         validatorsLen: string;
     };
     /**
-     * Lookup368: sp_core::offchain::OpaqueNetworkState
+     * Lookup372: sp_core::offchain::OpaqueNetworkState
      **/
     SpCoreOffchainOpaqueNetworkState: {
         peerId: string;
         externalAddresses: string;
     };
     /**
-     * Lookup372: pallet_im_online::sr25519::app_sr25519::Signature
+     * Lookup376: pallet_im_online::sr25519::app_sr25519::Signature
      **/
     PalletImOnlineSr25519AppSr25519Signature: string;
     /**
-     * Lookup373: sp_core::sr25519::Signature
+     * Lookup377: sp_core::sr25519::Signature
      **/
     SpCoreSr25519Signature: string;
     /**
-     * Lookup374: pallet_bags_list::pallet::Call<T, I>
+     * Lookup378: pallet_bags_list::pallet::Call<T, I>
      **/
     PalletBagsListCall: {
         _enum: {
@@ -2534,7 +2571,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup375: pallet_vesting::pallet::Call<T>
+     * Lookup379: pallet_vesting::pallet::Call<T>
      **/
     PalletVestingCall: {
         _enum: {
@@ -2558,15 +2595,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup376: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
-     **/
-    PalletVestingVestingInfo: {
-        locked: string;
-        perBlock: string;
-        startingBlock: string;
-    };
-    /**
-     * Lookup377: pallet_multisig::pallet::Call<T>
+     * Lookup380: pallet_multisig::pallet::Call<T>
      **/
     PalletMultisigCall: {
         _enum: {
@@ -2597,7 +2626,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup379: pallet_council::Call<T>
+     * Lookup382: pallet_council::Call<T>
      **/
     PalletCouncilCall: {
         _enum: {
@@ -2629,6 +2658,12 @@ declare const _default: {
             set_councilor_reward: {
                 councilorReward: string;
             };
+            set_era_payout_damping_factor: {
+                newParameter: string;
+            };
+            decrease_council_budget: {
+                reductionAmount: string;
+            };
             funding_request: {
                 fundingRequests: string;
             };
@@ -2648,7 +2683,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup380: pallet_referendum::Call<T, I>
+     * Lookup383: pallet_referendum::Call<T, I>
      **/
     PalletReferendumCall: {
         _enum: {
@@ -2665,7 +2700,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup381: pallet_membership::Call<T>
+     * Lookup384: pallet_membership::Call<T>
      **/
     PalletMembershipCall: {
         _enum: {
@@ -2734,7 +2769,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup382: pallet_forum::Call<T>
+     * Lookup385: pallet_forum::Call<T>
      **/
     PalletForumCall: {
         _enum: {
@@ -2831,7 +2866,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup383: pallet_constitution::Call<T>
+     * Lookup386: pallet_constitution::Call<T>
      **/
     PalletConstitutionCall: {
         _enum: {
@@ -2841,7 +2876,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup384: pallet_bounty::Call<T>
+     * Lookup387: pallet_bounty::Call<T>
      **/
     PalletBountyCall: {
         _enum: {
@@ -2917,7 +2952,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup385: pallet_joystream_utility::Call<T>
+     * Lookup388: pallet_joystream_utility::Call<T>
      **/
     PalletJoystreamUtilityCall: {
         _enum: {
@@ -2938,7 +2973,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup386: pallet_content::Call<T>
+     * Lookup389: pallet_content::Call<T>
      **/
     PalletContentCall: {
         _enum: {
@@ -3247,14 +3282,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup387: pallet_content::types::ChannelBagWitness
+     * Lookup390: pallet_content::types::ChannelBagWitness
      **/
     PalletContentChannelBagWitness: {
         storageBucketsNum: string;
         distributionBucketsNum: string;
     };
     /**
-     * Lookup389: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
+     * Lookup392: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
      **/
     PalletCommonMerkleTreeProofElementRecord: {
         _alias: {
@@ -3264,13 +3299,13 @@ declare const _default: {
         side: string;
     };
     /**
-     * Lookup390: pallet_common::merkle_tree::Side
+     * Lookup393: pallet_common::merkle_tree::Side
      **/
     PalletCommonMerkleTreeSide: {
         _enum: string[];
     };
     /**
-     * Lookup391: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
+     * Lookup394: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
      **/
     PalletContentPullPaymentElement: {
         channelId: string;
@@ -3278,7 +3313,7 @@ declare const _default: {
         reason: string;
     };
     /**
-     * Lookup392: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
+     * Lookup395: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
      **/
     PalletContentInitTransferParameters: {
         newCollaborators: string;
@@ -3286,7 +3321,7 @@ declare const _default: {
         newOwner: string;
     };
     /**
-     * Lookup393: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup396: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenSaleParams: {
         unitPrice: string;
@@ -3298,14 +3333,14 @@ declare const _default: {
         metadata: string;
     };
     /**
-     * Lookup397: pallet_project_token::types::AmmParams<Balance>
+     * Lookup400: pallet_project_token::types::AmmParams<Balance>
      **/
     PalletProjectTokenAmmParams: {
         slope: string;
         intercept: string;
     };
     /**
-     * Lookup398: pallet_storage::Call<T>
+     * Lookup401: pallet_storage::Call<T>
      **/
     PalletStorageCall: {
         _enum: {
@@ -3452,10 +3487,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup399: pallet_project_token::Call<T>
+     * Lookup402: pallet_project_token::Call<T>
      **/
     PalletProjectTokenCall: {
         _enum: {
+            update_token_constraints: {
+                parameters: string;
+            };
             transfer: {
                 srcMemberId: string;
                 tokenId: string;
@@ -3508,17 +3546,17 @@ declare const _default: {
         };
     };
     /**
-     * Lookup403: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
+     * Lookup406: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
      **/
     PalletProjectTokenMerkleProof: string;
     /**
-     * Lookup406: pallet_project_token::types::MerkleSide
+     * Lookup409: pallet_project_token::types::MerkleSide
      **/
     PalletProjectTokenMerkleSide: {
         _enum: string[];
     };
     /**
-     * Lookup409: pallet_proposals_engine::Call<T>
+     * Lookup412: pallet_proposals_engine::Call<T>
      **/
     PalletProposalsEngineCall: {
         _enum: {
@@ -3543,7 +3581,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup410: pallet_proposals_discussion::Call<T>
+     * Lookup413: pallet_proposals_discussion::Call<T>
      **/
     PalletProposalsDiscussionCall: {
         _enum: {
@@ -3572,7 +3610,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup411: pallet_proposals_codex::Call<T>
+     * Lookup414: pallet_proposals_codex::Call<T>
      **/
     PalletProposalsCodexCall: {
         _enum: {
@@ -3583,7 +3621,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup412: pallet_working_group::Call<T, I>
+     * Lookup415: pallet_working_group::Call<T, I>
      **/
     PalletWorkingGroupCall: {
         _enum: {
@@ -3651,6 +3689,11 @@ declare const _default: {
                 amount: string;
                 rationale: string;
             };
+            vested_spend_from_budget: {
+                accountId: string;
+                vestingSchedule: string;
+                rationale: string;
+            };
             fund_working_group_budget: {
                 memberId: string;
                 amount: string;
@@ -3666,7 +3709,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup421: joystream_node_runtime::OriginCaller
+     * Lookup424: joystream_node_runtime::OriginCaller
      **/
     JoystreamNodeRuntimeOriginCaller: {
         _enum: {
@@ -3675,7 +3718,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup422: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
+     * Lookup425: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
      **/
     FrameSupportDispatchRawOrigin: {
         _enum: {
@@ -3685,17 +3728,17 @@ declare const _default: {
         };
     };
     /**
-     * Lookup423: sp_core::Void
+     * Lookup426: sp_core::Void
      **/
     SpCoreVoid: string;
     /**
-     * Lookup424: pallet_utility::pallet::Error<T>
+     * Lookup427: pallet_utility::pallet::Error<T>
      **/
     PalletUtilityError: {
         _enum: string[];
     };
     /**
-     * Lookup431: sp_consensus_babe::digests::PreDigest
+     * Lookup434: sp_consensus_babe::digests::PreDigest
      **/
     SpConsensusBabeDigestsPreDigest: {
         _enum: {
@@ -3706,7 +3749,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup432: sp_consensus_babe::digests::PrimaryPreDigest
+     * Lookup435: sp_consensus_babe::digests::PrimaryPreDigest
      **/
     SpConsensusBabeDigestsPrimaryPreDigest: {
         authorityIndex: string;
@@ -3715,14 +3758,14 @@ declare const _default: {
         vrfProof: string;
     };
     /**
-     * Lookup433: sp_consensus_babe::digests::SecondaryPlainPreDigest
+     * Lookup436: sp_consensus_babe::digests::SecondaryPlainPreDigest
      **/
     SpConsensusBabeDigestsSecondaryPlainPreDigest: {
         authorityIndex: string;
         slot: string;
     };
     /**
-     * Lookup434: sp_consensus_babe::digests::SecondaryVRFPreDigest
+     * Lookup437: sp_consensus_babe::digests::SecondaryVRFPreDigest
      **/
     SpConsensusBabeDigestsSecondaryVRFPreDigest: {
         authorityIndex: string;
@@ -3731,20 +3774,20 @@ declare const _default: {
         vrfProof: string;
     };
     /**
-     * Lookup436: sp_consensus_babe::BabeEpochConfiguration
+     * Lookup439: sp_consensus_babe::BabeEpochConfiguration
      **/
     SpConsensusBabeBabeEpochConfiguration: {
         c: string;
         allowedSlots: string;
     };
     /**
-     * Lookup438: pallet_babe::pallet::Error<T>
+     * Lookup441: pallet_babe::pallet::Error<T>
      **/
     PalletBabeError: {
         _enum: string[];
     };
     /**
-     * Lookup440: pallet_balances::BalanceLock<Balance>
+     * Lookup443: pallet_balances::BalanceLock<Balance>
      **/
     PalletBalancesBalanceLock: {
         id: string;
@@ -3752,32 +3795,32 @@ declare const _default: {
         reasons: string;
     };
     /**
-     * Lookup441: pallet_balances::Reasons
+     * Lookup444: pallet_balances::Reasons
      **/
     PalletBalancesReasons: {
         _enum: string[];
     };
     /**
-     * Lookup444: pallet_balances::ReserveData<ReserveIdentifier, Balance>
+     * Lookup447: pallet_balances::ReserveData<ReserveIdentifier, Balance>
      **/
     PalletBalancesReserveData: {
         id: string;
         amount: string;
     };
     /**
-     * Lookup446: pallet_balances::pallet::Error<T, I>
+     * Lookup449: pallet_balances::pallet::Error<T, I>
      **/
     PalletBalancesError: {
         _enum: string[];
     };
     /**
-     * Lookup448: pallet_transaction_payment::Releases
+     * Lookup451: pallet_transaction_payment::Releases
      **/
     PalletTransactionPaymentReleases: {
         _enum: string[];
     };
     /**
-     * Lookup449: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
+     * Lookup452: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
      **/
     PalletElectionProviderMultiPhaseReadySolution: {
         supports: string;
@@ -3785,14 +3828,14 @@ declare const _default: {
         compute: string;
     };
     /**
-     * Lookup451: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
+     * Lookup454: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
      **/
     PalletElectionProviderMultiPhaseRoundSnapshot: {
         voters: string;
         targets: string;
     };
     /**
-     * Lookup458: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
+     * Lookup461: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseSignedSignedSubmission: {
         who: string;
@@ -3801,13 +3844,13 @@ declare const _default: {
         callFee: string;
     };
     /**
-     * Lookup459: pallet_election_provider_multi_phase::pallet::Error<T>
+     * Lookup462: pallet_election_provider_multi_phase::pallet::Error<T>
      **/
     PalletElectionProviderMultiPhaseError: {
         _enum: string[];
     };
     /**
-     * Lookup460: pallet_staking::StakingLedger<T>
+     * Lookup463: pallet_staking::StakingLedger<T>
      **/
     PalletStakingStakingLedger: {
         stash: string;
@@ -3817,14 +3860,14 @@ declare const _default: {
         claimedRewards: string;
     };
     /**
-     * Lookup462: pallet_staking::UnlockChunk<Balance>
+     * Lookup465: pallet_staking::UnlockChunk<Balance>
      **/
     PalletStakingUnlockChunk: {
         value: string;
         era: string;
     };
     /**
-     * Lookup465: pallet_staking::Nominations<T>
+     * Lookup468: pallet_staking::Nominations<T>
      **/
     PalletStakingNominations: {
         targets: string;
@@ -3832,21 +3875,21 @@ declare const _default: {
         suppressed: string;
     };
     /**
-     * Lookup466: pallet_staking::ActiveEraInfo
+     * Lookup469: pallet_staking::ActiveEraInfo
      **/
     PalletStakingActiveEraInfo: {
         index: string;
         start: string;
     };
     /**
-     * Lookup468: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
+     * Lookup471: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
      **/
     PalletStakingEraRewardPoints: {
         total: string;
         individual: string;
     };
     /**
-     * Lookup473: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
+     * Lookup476: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
      **/
     PalletStakingUnappliedSlash: {
         validator: string;
@@ -3856,7 +3899,7 @@ declare const _default: {
         payout: string;
     };
     /**
-     * Lookup475: pallet_staking::slashing::SlashingSpans
+     * Lookup478: pallet_staking::slashing::SlashingSpans
      **/
     PalletStakingSlashingSlashingSpans: {
         spanIndex: string;
@@ -3865,30 +3908,30 @@ declare const _default: {
         prior: string;
     };
     /**
-     * Lookup476: pallet_staking::slashing::SpanRecord<Balance>
+     * Lookup479: pallet_staking::slashing::SpanRecord<Balance>
      **/
     PalletStakingSlashingSpanRecord: {
         slashed: string;
         paidOut: string;
     };
     /**
-     * Lookup479: pallet_staking::pallet::pallet::Error<T>
+     * Lookup482: pallet_staking::pallet::pallet::Error<T>
      **/
     PalletStakingPalletError: {
         _enum: string[];
     };
     /**
-     * Lookup483: sp_core::crypto::KeyTypeId
+     * Lookup486: sp_core::crypto::KeyTypeId
      **/
     SpCoreCryptoKeyTypeId: string;
     /**
-     * Lookup484: pallet_session::pallet::Error<T>
+     * Lookup487: pallet_session::pallet::Error<T>
      **/
     PalletSessionError: {
         _enum: string[];
     };
     /**
-     * Lookup486: pallet_grandpa::StoredState<N>
+     * Lookup489: pallet_grandpa::StoredState<N>
      **/
     PalletGrandpaStoredState: {
         _enum: {
@@ -3905,7 +3948,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup487: pallet_grandpa::StoredPendingChange<N, Limit>
+     * Lookup490: pallet_grandpa::StoredPendingChange<N, Limit>
      **/
     PalletGrandpaStoredPendingChange: {
         scheduledAt: string;
@@ -3914,33 +3957,33 @@ declare const _default: {
         forced: string;
     };
     /**
-     * Lookup489: pallet_grandpa::pallet::Error<T>
+     * Lookup492: pallet_grandpa::pallet::Error<T>
      **/
     PalletGrandpaError: {
         _enum: string[];
     };
     /**
-     * Lookup495: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
+     * Lookup498: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
      **/
     PalletImOnlineBoundedOpaqueNetworkState: {
         peerId: string;
         externalAddresses: string;
     };
     /**
-     * Lookup499: pallet_im_online::pallet::Error<T>
+     * Lookup502: pallet_im_online::pallet::Error<T>
      **/
     PalletImOnlineError: {
         _enum: string[];
     };
     /**
-     * Lookup500: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
+     * Lookup503: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
      **/
     SpStakingOffenceOffenceDetails: {
         offender: string;
         reporters: string;
     };
     /**
-     * Lookup503: pallet_bags_list::list::Node<T, I>
+     * Lookup506: pallet_bags_list::list::Node<T, I>
      **/
     PalletBagsListListNode: {
         id: string;
@@ -3950,14 +3993,14 @@ declare const _default: {
         score: string;
     };
     /**
-     * Lookup504: pallet_bags_list::list::Bag<T, I>
+     * Lookup507: pallet_bags_list::list::Bag<T, I>
      **/
     PalletBagsListListBag: {
         head: string;
         tail: string;
     };
     /**
-     * Lookup505: pallet_bags_list::pallet::Error<T, I>
+     * Lookup508: pallet_bags_list::pallet::Error<T, I>
      **/
     PalletBagsListError: {
         _enum: {
@@ -3965,25 +4008,25 @@ declare const _default: {
         };
     };
     /**
-     * Lookup506: pallet_bags_list::list::ListError
+     * Lookup509: pallet_bags_list::list::ListError
      **/
     PalletBagsListListListError: {
         _enum: string[];
     };
     /**
-     * Lookup509: pallet_vesting::Releases
+     * Lookup512: pallet_vesting::Releases
      **/
     PalletVestingReleases: {
         _enum: string[];
     };
     /**
-     * Lookup510: pallet_vesting::pallet::Error<T>
+     * Lookup513: pallet_vesting::pallet::Error<T>
      **/
     PalletVestingError: {
         _enum: string[];
     };
     /**
-     * Lookup512: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
+     * Lookup515: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
      **/
     PalletMultisigMultisig: {
         when: string;
@@ -3992,20 +4035,20 @@ declare const _default: {
         approvals: string;
     };
     /**
-     * Lookup514: pallet_multisig::pallet::Error<T>
+     * Lookup517: pallet_multisig::pallet::Error<T>
      **/
     PalletMultisigError: {
         _enum: string[];
     };
     /**
-     * Lookup515: pallet_council::CouncilStageUpdate<BlockNumber>
+     * Lookup518: pallet_council::CouncilStageUpdate<BlockNumber>
      **/
     PalletCouncilCouncilStageUpdate: {
         stage: string;
         changedAt: string;
     };
     /**
-     * Lookup516: pallet_council::CouncilStage<BlockNumber>
+     * Lookup519: pallet_council::CouncilStage<BlockNumber>
      **/
     PalletCouncilCouncilStage: {
         _enum: {
@@ -4015,26 +4058,26 @@ declare const _default: {
         };
     };
     /**
-     * Lookup517: pallet_council::CouncilStageAnnouncing<BlockNumber>
+     * Lookup520: pallet_council::CouncilStageAnnouncing<BlockNumber>
      **/
     PalletCouncilCouncilStageAnnouncing: {
         candidatesCount: string;
         endsAt: string;
     };
     /**
-     * Lookup518: pallet_council::CouncilStageElection
+     * Lookup521: pallet_council::CouncilStageElection
      **/
     PalletCouncilCouncilStageElection: {
         candidatesCount: string;
     };
     /**
-     * Lookup519: pallet_council::CouncilStageIdle<BlockNumber>
+     * Lookup522: pallet_council::CouncilStageIdle<BlockNumber>
      **/
     PalletCouncilCouncilStageIdle: {
         endsAt: string;
     };
     /**
-     * Lookup521: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
+     * Lookup524: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
      **/
     PalletCouncilCouncilMember: {
         stakingAccountId: string;
@@ -4045,7 +4088,7 @@ declare const _default: {
         unpaidReward: string;
     };
     /**
-     * Lookup523: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
+     * Lookup526: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
      **/
     PalletCouncilCandidate: {
         stakingAccountId: string;
@@ -4056,13 +4099,13 @@ declare const _default: {
         noteHash: string;
     };
     /**
-     * Lookup524: pallet_council::Error<T>
+     * Lookup527: pallet_council::Error<T>
      **/
     PalletCouncilError: {
         _enum: string[];
     };
     /**
-     * Lookup525: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup528: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStage: {
         _enum: {
@@ -4072,7 +4115,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup527: pallet_referendum::ReferendumStageVoting<BlockNumber>
+     * Lookup530: pallet_referendum::ReferendumStageVoting<BlockNumber>
      **/
     PalletReferendumReferendumStageVoting: {
         started: string;
@@ -4081,7 +4124,7 @@ declare const _default: {
         endsAt: string;
     };
     /**
-     * Lookup528: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup531: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStageRevealing: {
         started: string;
@@ -4091,7 +4134,7 @@ declare const _default: {
         endsAt: string;
     };
     /**
-     * Lookup529: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
+     * Lookup532: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
      **/
     PalletReferendumCastVote: {
         commitment: string;
@@ -4100,13 +4143,13 @@ declare const _default: {
         voteFor: string;
     };
     /**
-     * Lookup530: pallet_referendum::Error<T, I>
+     * Lookup533: pallet_referendum::Error<T, I>
      **/
     PalletReferendumError: {
         _enum: string[];
     };
     /**
-     * Lookup531: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
+     * Lookup534: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
      **/
     PalletMembershipMembershipObject: {
         handleHash: string;
@@ -4116,20 +4159,20 @@ declare const _default: {
         invites: string;
     };
     /**
-     * Lookup532: pallet_membership::StakingAccountMemberBinding<MemberId>
+     * Lookup535: pallet_membership::StakingAccountMemberBinding<MemberId>
      **/
     PalletMembershipStakingAccountMemberBinding: {
         memberId: string;
         confirmed: string;
     };
     /**
-     * Lookup533: pallet_membership::Error<T>
+     * Lookup536: pallet_membership::Error<T>
      **/
     PalletMembershipError: {
         _enum: string[];
     };
     /**
-     * Lookup534: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup537: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletForumCategory: {
         titleHash: string;
@@ -4142,7 +4185,7 @@ declare const _default: {
         stickyThreadIds: string;
     };
     /**
-     * Lookup536: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup539: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumThread: {
         categoryId: string;
@@ -4151,7 +4194,7 @@ declare const _default: {
         numberOfEditablePosts: string;
     };
     /**
-     * Lookup537: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup540: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumPost: {
         threadId: string;
@@ -4161,19 +4204,19 @@ declare const _default: {
         lastEdited: string;
     };
     /**
-     * Lookup538: pallet_forum::Error<T>
+     * Lookup541: pallet_forum::Error<T>
      **/
     PalletForumError: {
         _enum: string[];
     };
     /**
-     * Lookup539: pallet_constitution::ConstitutionInfo<primitive_types::H256>
+     * Lookup542: pallet_constitution::ConstitutionInfo<primitive_types::H256>
      **/
     PalletConstitutionConstitutionInfo: {
         textHash: string;
     };
     /**
-     * Lookup540: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup543: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyRecord: {
         creationParams: string;
@@ -4183,7 +4226,7 @@ declare const _default: {
         hasUnpaidOracleReward: string;
     };
     /**
-     * Lookup542: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup545: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyParametersBoundedBTreeSet: {
         oracle: string;
@@ -4195,7 +4238,7 @@ declare const _default: {
         fundingType: string;
     };
     /**
-     * Lookup543: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup546: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyAssuranceContractTypeBoundedBTreeSet: {
         _enum: {
@@ -4204,7 +4247,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup544: pallet_bounty::BountyMilestone<BlockNumber>
+     * Lookup547: pallet_bounty::BountyMilestone<BlockNumber>
      **/
     PalletBountyBountyMilestone: {
         _enum: {
@@ -4221,14 +4264,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup546: pallet_bounty::Contribution<T>
+     * Lookup549: pallet_bounty::Contribution<T>
      **/
     PalletBountyContribution: {
         amount: string;
         funderStateBloatBondAmount: string;
     };
     /**
-     * Lookup547: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
+     * Lookup550: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
      **/
     PalletBountyEntryRecord: {
         memberId: string;
@@ -4237,19 +4280,19 @@ declare const _default: {
         workSubmitted: string;
     };
     /**
-     * Lookup548: pallet_bounty::Error<T>
+     * Lookup551: pallet_bounty::Error<T>
      **/
     PalletBountyError: {
         _enum: string[];
     };
     /**
-     * Lookup549: pallet_joystream_utility::Error<T>
+     * Lookup552: pallet_joystream_utility::Error<T>
      **/
     PalletJoystreamUtilityError: {
         _enum: string[];
     };
     /**
-     * Lookup550: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup553: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentVideoRecord: {
         inChannel: string;
@@ -4258,7 +4301,7 @@ declare const _default: {
         videoStateBloatBond: string;
     };
     /**
-     * Lookup551: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
+     * Lookup554: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
      **/
     PalletContentNftTypesOwnedNft: {
         owner: string;
@@ -4267,7 +4310,7 @@ declare const _default: {
         openAuctionsNonce: string;
     };
     /**
-     * Lookup552: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
+     * Lookup555: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
      **/
     PalletContentNftTypesTransactionalStatusRecord: {
         _enum: {
@@ -4279,7 +4322,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup553: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup556: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesEnglishAuctionRecord: {
         startingPrice: string;
@@ -4292,14 +4335,14 @@ declare const _default: {
         topBid: string;
     };
     /**
-     * Lookup556: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
+     * Lookup559: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionBid: {
         amount: string;
         bidderId: string;
     };
     /**
-     * Lookup557: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup560: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesOpenAuctionRecord: {
         startingPrice: string;
@@ -4310,7 +4353,7 @@ declare const _default: {
         start: string;
     };
     /**
-     * Lookup558: pallet_content::nft::types::NftOwner<MemberId>
+     * Lookup561: pallet_content::nft::types::NftOwner<MemberId>
      **/
     PalletContentNftTypesNftOwner: {
         _enum: {
@@ -4319,7 +4362,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup561: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
+     * Lookup564: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
      **/
     PalletContentPermissionsCuratorGroupCuratorGroupRecord: {
         curators: string;
@@ -4327,7 +4370,7 @@ declare const _default: {
         permissionsByLevel: string;
     };
     /**
-     * Lookup568: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
+     * Lookup571: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
      **/
     PalletContentNftTypesOpenAuctionBidRecord: {
         amount: string;
@@ -4335,13 +4378,13 @@ declare const _default: {
         auctionId: string;
     };
     /**
-     * Lookup569: pallet_content::errors::Error<T>
+     * Lookup572: pallet_content::errors::Error<T>
      **/
     PalletContentErrorsError: {
         _enum: string[];
     };
     /**
-     * Lookup570: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
+     * Lookup573: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
      **/
     PalletStorageBagRecord: {
         storedBy: string;
@@ -4350,7 +4393,7 @@ declare const _default: {
         objectsNumber: string;
     };
     /**
-     * Lookup573: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup576: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketRecord: {
         operatorStatus: string;
@@ -4359,7 +4402,7 @@ declare const _default: {
         assignedBags: string;
     };
     /**
-     * Lookup574: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup577: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketOperatorStatus: {
         _enum: {
@@ -4369,14 +4412,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup576: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
+     * Lookup579: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
      **/
     PalletStorageDynamicBagCreationPolicy: {
         numberOfStorageBuckets: string;
         families: string;
     };
     /**
-     * Lookup579: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup582: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletStorageDataObject: {
         _alias: {
@@ -4388,13 +4431,13 @@ declare const _default: {
         ipfsContentId: string;
     };
     /**
-     * Lookup580: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
+     * Lookup583: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketFamilyRecord: {
         nextDistributionBucketIndex: string;
     };
     /**
-     * Lookup581: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup584: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletStorageDistributionBucketRecord: {
         acceptingNewBags: string;
@@ -4404,13 +4447,13 @@ declare const _default: {
         assignedBags: string;
     };
     /**
-     * Lookup584: pallet_storage::Error<T>
+     * Lookup587: pallet_storage::Error<T>
      **/
     PalletStorageError: {
         _enum: string[];
     };
     /**
-     * Lookup585: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
+     * Lookup588: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
      **/
     PalletProjectTokenAccountData: {
         vestingSchedules: string;
@@ -4421,14 +4464,14 @@ declare const _default: {
         lastSaleTotalPurchasedAmount: string;
     };
     /**
-     * Lookup586: pallet_project_token::types::StakingStatus<Balance>
+     * Lookup589: pallet_project_token::types::StakingStatus<Balance>
      **/
     PalletProjectTokenStakingStatus: {
         splitId: string;
         amount: string;
     };
     /**
-     * Lookup588: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
+     * Lookup591: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
      **/
     PalletProjectTokenVestingSchedule: {
         linearVestingStartBlock: string;
@@ -4438,7 +4481,7 @@ declare const _default: {
         burnedAmount: string;
     };
     /**
-     * Lookup595: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
+     * Lookup598: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
      **/
     PalletProjectTokenTokenData: {
         totalSupply: string;
@@ -4454,7 +4497,7 @@ declare const _default: {
         ammCurve: string;
     };
     /**
-     * Lookup596: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
+     * Lookup599: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitState: {
         _enum: {
@@ -4463,7 +4506,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup597: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
+     * Lookup600: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitInfo: {
         allocation: string;
@@ -4471,14 +4514,14 @@ declare const _default: {
         dividendsClaimed: string;
     };
     /**
-     * Lookup598: pallet_project_token::types::Timeline<BlockNumber>
+     * Lookup601: pallet_project_token::types::Timeline<BlockNumber>
      **/
     PalletProjectTokenTimeline: {
         start: string;
         duration: string;
     };
     /**
-     * Lookup600: pallet_project_token::types::PatronageData<Balance, BlockNumber>
+     * Lookup603: pallet_project_token::types::PatronageData<Balance, BlockNumber>
      **/
     PalletProjectTokenPatronageData: {
         rate: string;
@@ -4486,13 +4529,13 @@ declare const _default: {
         lastUnclaimedPatronageTallyBlock: string;
     };
     /**
-     * Lookup602: pallet_project_token::errors::Error<T>
+     * Lookup605: pallet_project_token::errors::Error<T>
      **/
     PalletProjectTokenErrorsError: {
         _enum: string[];
     };
     /**
-     * Lookup603: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
+     * Lookup606: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
      **/
     PalletProposalsEngineProposal: {
         parameters: string;
@@ -4505,7 +4548,7 @@ declare const _default: {
         stakingAccountId: string;
     };
     /**
-     * Lookup604: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
+     * Lookup607: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
      **/
     PalletProposalsEngineProposalParameters: {
         votingPeriod: string;
@@ -4518,7 +4561,7 @@ declare const _default: {
         constitutionality: string;
     };
     /**
-     * Lookup605: pallet_proposals_engine::types::VotingResults
+     * Lookup608: pallet_proposals_engine::types::VotingResults
      **/
     PalletProposalsEngineVotingResults: {
         abstentions: string;
@@ -4527,13 +4570,13 @@ declare const _default: {
         slashes: string;
     };
     /**
-     * Lookup608: pallet_proposals_engine::Error<T>
+     * Lookup611: pallet_proposals_engine::Error<T>
      **/
     PalletProposalsEngineError: {
         _enum: string[];
     };
     /**
-     * Lookup609: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup612: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionDiscussionThread: {
         activatedAt: string;
@@ -4541,7 +4584,7 @@ declare const _default: {
         mode: string;
     };
     /**
-     * Lookup611: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup614: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionThreadModeBoundedBTreeSet: {
         _enum: {
@@ -4550,7 +4593,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup612: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup615: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletProposalsDiscussionDiscussionPost: {
         authorId: string;
@@ -4558,19 +4601,19 @@ declare const _default: {
         lastEdited: string;
     };
     /**
-     * Lookup613: pallet_proposals_discussion::Error<T>
+     * Lookup616: pallet_proposals_discussion::Error<T>
      **/
     PalletProposalsDiscussionError: {
         _enum: string[];
     };
     /**
-     * Lookup614: pallet_proposals_codex::Error<T>
+     * Lookup617: pallet_proposals_codex::Error<T>
      **/
     PalletProposalsCodexError: {
         _enum: string[];
     };
     /**
-     * Lookup615: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
+     * Lookup618: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
      **/
     PalletWorkingGroupOpening: {
         openingType: string;
@@ -4581,7 +4624,7 @@ declare const _default: {
         creationStake: string;
     };
     /**
-     * Lookup616: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
+     * Lookup619: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
      **/
     PalletWorkingGroupJobApplication: {
         roleAccountId: string;
@@ -4592,7 +4635,7 @@ declare const _default: {
         openingId: string;
     };
     /**
-     * Lookup617: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
+     * Lookup620: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
      **/
     PalletWorkingGroupGroupWorker: {
         memberId: string;
@@ -4606,13 +4649,13 @@ declare const _default: {
         createdAt: string;
     };
     /**
-     * Lookup618: pallet_working_group::errors::Error<T, I>
+     * Lookup621: pallet_working_group::errors::Error<T, I>
      **/
     PalletWorkingGroupErrorsError: {
         _enum: string[];
     };
     /**
-     * Lookup628: sp_runtime::MultiSignature
+     * Lookup631: sp_runtime::MultiSignature
      **/
     SpRuntimeMultiSignature: {
         _enum: {
@@ -4622,39 +4665,39 @@ declare const _default: {
         };
     };
     /**
-     * Lookup629: sp_core::ecdsa::Signature
+     * Lookup632: sp_core::ecdsa::Signature
      **/
     SpCoreEcdsaSignature: string;
     /**
-     * Lookup632: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
+     * Lookup635: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
      **/
     FrameSystemExtensionsCheckNonZeroSender: string;
     /**
-     * Lookup633: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
+     * Lookup636: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
      **/
     FrameSystemExtensionsCheckSpecVersion: string;
     /**
-     * Lookup634: frame_system::extensions::check_tx_version::CheckTxVersion<T>
+     * Lookup637: frame_system::extensions::check_tx_version::CheckTxVersion<T>
      **/
     FrameSystemExtensionsCheckTxVersion: string;
     /**
-     * Lookup635: frame_system::extensions::check_genesis::CheckGenesis<T>
+     * Lookup638: frame_system::extensions::check_genesis::CheckGenesis<T>
      **/
     FrameSystemExtensionsCheckGenesis: string;
     /**
-     * Lookup638: frame_system::extensions::check_nonce::CheckNonce<T>
+     * Lookup641: frame_system::extensions::check_nonce::CheckNonce<T>
      **/
     FrameSystemExtensionsCheckNonce: string;
     /**
-     * Lookup639: frame_system::extensions::check_weight::CheckWeight<T>
+     * Lookup642: frame_system::extensions::check_weight::CheckWeight<T>
      **/
     FrameSystemExtensionsCheckWeight: string;
     /**
-     * Lookup640: pallet_transaction_payment::ChargeTransactionPayment<T>
+     * Lookup643: pallet_transaction_payment::ChargeTransactionPayment<T>
      **/
     PalletTransactionPaymentChargeTransactionPayment: string;
     /**
-     * Lookup641: joystream_node_runtime::Runtime
+     * Lookup644: joystream_node_runtime::Runtime
      **/
     JoystreamNodeRuntimeRuntime: string;
 };
diff --git a/lib/augment/registry.d.ts b/lib/augment/registry.d.ts
index f27a3cca359f3be9a5212c93c60dc27f8b09381f..72ca7b12658e591c270704ac2f2f673f90b66248 100644
--- a/lib/augment/registry.d.ts
+++ b/lib/augment/registry.d.ts
@@ -1,5 +1,5 @@
 import '@polkadot/types/types/registry';
-import type { FinalityGrandpaEquivocationPrecommit, FinalityGrandpaEquivocationPrevote, FinalityGrandpaPrecommit, FinalityGrandpaPrevote, FrameSupportDispatchDispatchClass, FrameSupportDispatchDispatchInfo, FrameSupportDispatchPays, FrameSupportDispatchPerDispatchClassU32, FrameSupportDispatchPerDispatchClassWeight, FrameSupportDispatchPerDispatchClassWeightsPerClass, FrameSupportDispatchRawOrigin, FrameSupportTokensMiscBalanceStatus, FrameSystemAccountInfo, FrameSystemCall, FrameSystemError, FrameSystemEvent, FrameSystemEventRecord, FrameSystemExtensionsCheckGenesis, FrameSystemExtensionsCheckNonZeroSender, FrameSystemExtensionsCheckNonce, FrameSystemExtensionsCheckSpecVersion, FrameSystemExtensionsCheckTxVersion, FrameSystemExtensionsCheckWeight, FrameSystemLastRuntimeUpgradeInfo, FrameSystemLimitsBlockLength, FrameSystemLimitsBlockWeights, FrameSystemLimitsWeightsPerClass, FrameSystemPhase, JoystreamNodeRuntimeNposSolution16, JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeRuntime, JoystreamNodeRuntimeSessionKeys, PalletBabeCall, PalletBabeError, PalletBagsListCall, PalletBagsListError, PalletBagsListEvent, PalletBagsListListBag, PalletBagsListListListError, PalletBagsListListNode, PalletBalancesAccountData, PalletBalancesBalanceLock, PalletBalancesCall, PalletBalancesError, PalletBalancesEvent, PalletBalancesReasons, PalletBalancesReserveData, PalletBountyAssuranceContractTypeBTreeSet, PalletBountyAssuranceContractTypeBoundedBTreeSet, PalletBountyBountyActor, PalletBountyBountyMilestone, PalletBountyBountyParametersBTreeSet, PalletBountyBountyParametersBoundedBTreeSet, PalletBountyBountyRecord, PalletBountyCall, PalletBountyContribution, PalletBountyEntryRecord, PalletBountyError, PalletBountyFundingType, PalletBountyOracleWorkEntryJudgment, PalletBountyRawEvent, PalletCommonBalanceKind, PalletCommonBloatBondRepayableBloatBond, PalletCommonFreezablePallet, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonMerkleTreeSide, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletConstitutionCall, PalletConstitutionConstitutionInfo, PalletConstitutionRawEvent, PalletContentCall, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelOwner, PalletContentChannelPayoutsPayloadParametersRecord, PalletContentChannelRecord, PalletContentChannelTransferStatus, PalletContentChannelUpdateParametersRecord, PalletContentErrorsError, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentLimitPerPeriod, PalletContentNftCounter, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionBid, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesEnglishAuctionRecord, PalletContentNftTypesInitTransactionalStatusRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesNftOwner, PalletContentNftTypesOpenAuctionBidRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentNftTypesOpenAuctionRecord, PalletContentNftTypesOwnedNft, PalletContentNftTypesTransactionalStatusRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupCuratorGroupRecord, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentRawEvent, PalletContentStorageAssetsRecord, PalletContentTransferCommitmentParametersBTreeMap, PalletContentTransferCommitmentParametersBoundedBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoRecord, PalletContentVideoUpdateParametersRecord, PalletCouncilCall, PalletCouncilCandidate, PalletCouncilCouncilMember, PalletCouncilCouncilStage, PalletCouncilCouncilStageAnnouncing, PalletCouncilCouncilStageElection, PalletCouncilCouncilStageIdle, PalletCouncilCouncilStageUpdate, PalletCouncilError, PalletCouncilRawEvent, PalletElectionProviderMultiPhaseCall, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhaseError, PalletElectionProviderMultiPhaseEvent, PalletElectionProviderMultiPhasePhase, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseReadySolution, PalletElectionProviderMultiPhaseRoundSnapshot, PalletElectionProviderMultiPhaseSignedSignedSubmission, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumCall, PalletForumCategory, PalletForumError, PalletForumExtendedPostIdObject, PalletForumPost, PalletForumPrivilegedActor, PalletForumRawEvent, PalletForumThread, PalletGrandpaCall, PalletGrandpaError, PalletGrandpaEvent, PalletGrandpaStoredPendingChange, PalletGrandpaStoredState, PalletImOnlineBoundedOpaqueNetworkState, PalletImOnlineCall, PalletImOnlineError, PalletImOnlineEvent, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Public, PalletImOnlineSr25519AppSr25519Signature, PalletJoystreamUtilityCall, PalletJoystreamUtilityError, PalletJoystreamUtilityRawEvent, PalletMembershipBuyMembershipParameters, PalletMembershipCall, PalletMembershipCreateMemberParameters, PalletMembershipError, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMembershipMembershipObject, PalletMembershipRawEvent, PalletMembershipStakingAccountMemberBinding, PalletMultisigCall, PalletMultisigError, PalletMultisigEvent, PalletMultisigMultisig, PalletMultisigTimepoint, PalletOffencesEvent, PalletProjectTokenAccountData, PalletProjectTokenAmmCurve, PalletProjectTokenAmmParams, PalletProjectTokenCall, PalletProjectTokenErrorsError, PalletProjectTokenEventsRawEvent, PalletProjectTokenMerkleProof, PalletProjectTokenMerkleSide, PalletProjectTokenPatronageData, PalletProjectTokenPaymentWithVesting, PalletProjectTokenRevenueSplitInfo, PalletProjectTokenRevenueSplitState, PalletProjectTokenSingleDataObjectUploadParams, PalletProjectTokenStakingStatus, PalletProjectTokenTimeline, PalletProjectTokenTokenAllocation, PalletProjectTokenTokenData, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTokenSaleParams, PalletProjectTokenTransferPolicy, PalletProjectTokenTransferPolicyParams, PalletProjectTokenTransfers, PalletProjectTokenValidated, PalletProjectTokenValidatedPayment, PalletProjectTokenVestingSchedule, PalletProjectTokenVestingScheduleParams, PalletProjectTokenVestingSource, PalletProjectTokenWhitelistParams, PalletProposalsCodexCall, PalletProposalsCodexCreateOpeningParameters, PalletProposalsCodexError, PalletProposalsCodexFillOpeningParameters, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsCodexRawEvent, PalletProposalsCodexTerminateRoleParameters, PalletProposalsDiscussionCall, PalletProposalsDiscussionDiscussionPost, PalletProposalsDiscussionDiscussionThread, PalletProposalsDiscussionError, PalletProposalsDiscussionRawEvent, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsDiscussionThreadModeBoundedBTreeSet, PalletProposalsEngineCall, PalletProposalsEngineError, PalletProposalsEngineProposal, PalletProposalsEngineProposalParameters, PalletProposalsEngineProposalStatusesApprovedProposalDecision, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineRawEvent, PalletProposalsEngineVoteKind, PalletProposalsEngineVotingResults, PalletReferendumCall, PalletReferendumCastVote, PalletReferendumError, PalletReferendumInstance1, PalletReferendumOptionResult, PalletReferendumRawEvent, PalletReferendumReferendumStage, PalletReferendumReferendumStageRevealing, PalletReferendumReferendumStageVoting, PalletSessionCall, PalletSessionError, PalletSessionEvent, PalletStakingActiveEraInfo, PalletStakingEraRewardPoints, PalletStakingExposure, PalletStakingForcing, PalletStakingIndividualExposure, PalletStakingNominations, PalletStakingPalletCall, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingPalletError, PalletStakingPalletEvent, PalletStakingRewardDestination, PalletStakingSlashingSlashingSpans, PalletStakingSlashingSpanRecord, PalletStakingStakingLedger, PalletStakingUnappliedSlash, PalletStakingUnlockChunk, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageBagRecord, PalletStorageCall, PalletStorageDataObject, PalletStorageDataObjectCreationParameters, PalletStorageDistributionBucketFamilyRecord, PalletStorageDistributionBucketIdRecord, PalletStorageDistributionBucketRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagCreationPolicy, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageError, PalletStorageRawEvent, PalletStorageStaticBagId, PalletStorageStorageBucketOperatorStatus, PalletStorageStorageBucketRecord, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletTimestampCall, PalletTransactionPaymentChargeTransactionPayment, PalletTransactionPaymentEvent, PalletTransactionPaymentReleases, PalletUtilityCall, PalletUtilityError, PalletUtilityEvent, PalletVestingCall, PalletVestingError, PalletVestingEvent, PalletVestingReleases, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupCall, PalletWorkingGroupErrorsError, PalletWorkingGroupGroupWorker, PalletWorkingGroupInstance1, PalletWorkingGroupInstance2, PalletWorkingGroupInstance3, PalletWorkingGroupInstance4, PalletWorkingGroupInstance5, PalletWorkingGroupInstance6, PalletWorkingGroupInstance7, PalletWorkingGroupInstance8, PalletWorkingGroupInstance9, PalletWorkingGroupJobApplication, PalletWorkingGroupOpening, PalletWorkingGroupOpeningType, PalletWorkingGroupRawEventInstance1, PalletWorkingGroupRawEventInstance2, PalletWorkingGroupRawEventInstance3, PalletWorkingGroupRawEventInstance4, PalletWorkingGroupRawEventInstance5, PalletWorkingGroupRawEventInstance6, PalletWorkingGroupRawEventInstance7, PalletWorkingGroupRawEventInstance8, PalletWorkingGroupRawEventInstance9, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakeParameters, PalletWorkingGroupStakePolicy, SpArithmeticArithmeticError, SpAuthorityDiscoveryAppPublic, SpConsensusBabeAllowedSlots, SpConsensusBabeAppPublic, SpConsensusBabeBabeEpochConfiguration, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusBabeDigestsPreDigest, SpConsensusBabeDigestsPrimaryPreDigest, SpConsensusBabeDigestsSecondaryPlainPreDigest, SpConsensusBabeDigestsSecondaryVRFPreDigest, SpConsensusGrandpaAppPublic, SpConsensusGrandpaAppSignature, SpConsensusGrandpaEquivocation, SpConsensusGrandpaEquivocationProof, SpConsensusSlotsEquivocationProof, SpCoreCryptoKeyTypeId, SpCoreEcdsaSignature, SpCoreEd25519Public, SpCoreEd25519Signature, SpCoreOffchainOpaqueNetworkState, SpCoreSr25519Public, SpCoreSr25519Signature, SpCoreVoid, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeBlakeTwo256, SpRuntimeDigest, SpRuntimeDigestDigestItem, SpRuntimeDispatchError, SpRuntimeHeader, SpRuntimeModuleError, SpRuntimeMultiSignature, SpRuntimeTokenError, SpRuntimeTransactionalError, SpSessionMembershipProof, SpStakingOffenceOffenceDetails, SpVersionRuntimeVersion, SpWeightsRuntimeDbWeight, SpWeightsWeightV2Weight } from '@polkadot/types/lookup';
+import type { FinalityGrandpaEquivocationPrecommit, FinalityGrandpaEquivocationPrevote, FinalityGrandpaPrecommit, FinalityGrandpaPrevote, FrameSupportDispatchDispatchClass, FrameSupportDispatchDispatchInfo, FrameSupportDispatchPays, FrameSupportDispatchPerDispatchClassU32, FrameSupportDispatchPerDispatchClassWeight, FrameSupportDispatchPerDispatchClassWeightsPerClass, FrameSupportDispatchRawOrigin, FrameSupportTokensMiscBalanceStatus, FrameSystemAccountInfo, FrameSystemCall, FrameSystemError, FrameSystemEvent, FrameSystemEventRecord, FrameSystemExtensionsCheckGenesis, FrameSystemExtensionsCheckNonZeroSender, FrameSystemExtensionsCheckNonce, FrameSystemExtensionsCheckSpecVersion, FrameSystemExtensionsCheckTxVersion, FrameSystemExtensionsCheckWeight, FrameSystemLastRuntimeUpgradeInfo, FrameSystemLimitsBlockLength, FrameSystemLimitsBlockWeights, FrameSystemLimitsWeightsPerClass, FrameSystemPhase, JoystreamNodeRuntimeNposSolution16, JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeRuntime, JoystreamNodeRuntimeSessionKeys, PalletBabeCall, PalletBabeError, PalletBagsListCall, PalletBagsListError, PalletBagsListEvent, PalletBagsListListBag, PalletBagsListListListError, PalletBagsListListNode, PalletBalancesAccountData, PalletBalancesBalanceLock, PalletBalancesCall, PalletBalancesError, PalletBalancesEvent, PalletBalancesReasons, PalletBalancesReserveData, PalletBountyAssuranceContractTypeBTreeSet, PalletBountyAssuranceContractTypeBoundedBTreeSet, PalletBountyBountyActor, PalletBountyBountyMilestone, PalletBountyBountyParametersBTreeSet, PalletBountyBountyParametersBoundedBTreeSet, PalletBountyBountyRecord, PalletBountyCall, PalletBountyContribution, PalletBountyEntryRecord, PalletBountyError, PalletBountyFundingType, PalletBountyOracleWorkEntryJudgment, PalletBountyRawEvent, PalletCommonBalanceKind, PalletCommonBloatBondRepayableBloatBond, PalletCommonFreezablePallet, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonMerkleTreeSide, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletConstitutionCall, PalletConstitutionConstitutionInfo, PalletConstitutionRawEvent, PalletContentCall, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelOwner, PalletContentChannelPayoutsPayloadParametersRecord, PalletContentChannelRecord, PalletContentChannelTransferStatus, PalletContentChannelUpdateParametersRecord, PalletContentErrorsError, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentLimitPerPeriod, PalletContentNftCounter, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionBid, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesEnglishAuctionRecord, PalletContentNftTypesInitTransactionalStatusRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesNftOwner, PalletContentNftTypesOpenAuctionBidRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentNftTypesOpenAuctionRecord, PalletContentNftTypesOwnedNft, PalletContentNftTypesTransactionalStatusRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupCuratorGroupRecord, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentRawEvent, PalletContentStorageAssetsRecord, PalletContentTransferCommitmentParametersBTreeMap, PalletContentTransferCommitmentParametersBoundedBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoRecord, PalletContentVideoUpdateParametersRecord, PalletCouncilCall, PalletCouncilCandidate, PalletCouncilCouncilMember, PalletCouncilCouncilStage, PalletCouncilCouncilStageAnnouncing, PalletCouncilCouncilStageElection, PalletCouncilCouncilStageIdle, PalletCouncilCouncilStageUpdate, PalletCouncilError, PalletCouncilRawEvent, PalletElectionProviderMultiPhaseCall, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhaseError, PalletElectionProviderMultiPhaseEvent, PalletElectionProviderMultiPhasePhase, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseReadySolution, PalletElectionProviderMultiPhaseRoundSnapshot, PalletElectionProviderMultiPhaseSignedSignedSubmission, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumCall, PalletForumCategory, PalletForumError, PalletForumExtendedPostIdObject, PalletForumPost, PalletForumPrivilegedActor, PalletForumRawEvent, PalletForumThread, PalletGrandpaCall, PalletGrandpaError, PalletGrandpaEvent, PalletGrandpaStoredPendingChange, PalletGrandpaStoredState, PalletImOnlineBoundedOpaqueNetworkState, PalletImOnlineCall, PalletImOnlineError, PalletImOnlineEvent, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Public, PalletImOnlineSr25519AppSr25519Signature, PalletJoystreamUtilityCall, PalletJoystreamUtilityError, PalletJoystreamUtilityRawEvent, PalletMembershipBuyMembershipParameters, PalletMembershipCall, PalletMembershipCreateMemberParameters, PalletMembershipError, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMembershipMembershipObject, PalletMembershipRawEvent, PalletMembershipStakingAccountMemberBinding, PalletMultisigCall, PalletMultisigError, PalletMultisigEvent, PalletMultisigMultisig, PalletMultisigTimepoint, PalletOffencesEvent, PalletProjectTokenAccountData, PalletProjectTokenAmmCurve, PalletProjectTokenAmmParams, PalletProjectTokenCall, PalletProjectTokenErrorsError, PalletProjectTokenEventsRawEvent, PalletProjectTokenMerkleProof, PalletProjectTokenMerkleSide, PalletProjectTokenPatronageData, PalletProjectTokenPaymentWithVesting, PalletProjectTokenRevenueSplitInfo, PalletProjectTokenRevenueSplitState, PalletProjectTokenSingleDataObjectUploadParams, PalletProjectTokenStakingStatus, PalletProjectTokenTimeline, PalletProjectTokenTokenAllocation, PalletProjectTokenTokenConstraints, PalletProjectTokenTokenData, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTokenSaleParams, PalletProjectTokenTransferPolicy, PalletProjectTokenTransferPolicyParams, PalletProjectTokenTransfers, PalletProjectTokenValidated, PalletProjectTokenValidatedPayment, PalletProjectTokenVestingSchedule, PalletProjectTokenVestingScheduleParams, PalletProjectTokenVestingSource, PalletProjectTokenWhitelistParams, PalletProposalsCodexCall, PalletProposalsCodexCreateOpeningParameters, PalletProposalsCodexError, PalletProposalsCodexFillOpeningParameters, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsCodexRawEvent, PalletProposalsCodexTerminateRoleParameters, PalletProposalsDiscussionCall, PalletProposalsDiscussionDiscussionPost, PalletProposalsDiscussionDiscussionThread, PalletProposalsDiscussionError, PalletProposalsDiscussionRawEvent, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsDiscussionThreadModeBoundedBTreeSet, PalletProposalsEngineCall, PalletProposalsEngineError, PalletProposalsEngineProposal, PalletProposalsEngineProposalParameters, PalletProposalsEngineProposalStatusesApprovedProposalDecision, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineRawEvent, PalletProposalsEngineVoteKind, PalletProposalsEngineVotingResults, PalletReferendumCall, PalletReferendumCastVote, PalletReferendumError, PalletReferendumInstance1, PalletReferendumOptionResult, PalletReferendumRawEvent, PalletReferendumReferendumStage, PalletReferendumReferendumStageRevealing, PalletReferendumReferendumStageVoting, PalletSessionCall, PalletSessionError, PalletSessionEvent, PalletStakingActiveEraInfo, PalletStakingEraRewardPoints, PalletStakingExposure, PalletStakingForcing, PalletStakingIndividualExposure, PalletStakingNominations, PalletStakingPalletCall, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingPalletError, PalletStakingPalletEvent, PalletStakingRewardDestination, PalletStakingSlashingSlashingSpans, PalletStakingSlashingSpanRecord, PalletStakingStakingLedger, PalletStakingUnappliedSlash, PalletStakingUnlockChunk, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageBagRecord, PalletStorageCall, PalletStorageDataObject, PalletStorageDataObjectCreationParameters, PalletStorageDistributionBucketFamilyRecord, PalletStorageDistributionBucketIdRecord, PalletStorageDistributionBucketRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagCreationPolicy, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageError, PalletStorageRawEvent, PalletStorageStaticBagId, PalletStorageStorageBucketOperatorStatus, PalletStorageStorageBucketRecord, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletTimestampCall, PalletTransactionPaymentChargeTransactionPayment, PalletTransactionPaymentEvent, PalletTransactionPaymentReleases, PalletUtilityCall, PalletUtilityError, PalletUtilityEvent, PalletVestingCall, PalletVestingError, PalletVestingEvent, PalletVestingReleases, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupCall, PalletWorkingGroupErrorsError, PalletWorkingGroupGroupWorker, PalletWorkingGroupInstance1, PalletWorkingGroupInstance2, PalletWorkingGroupInstance3, PalletWorkingGroupInstance4, PalletWorkingGroupInstance5, PalletWorkingGroupInstance6, PalletWorkingGroupInstance7, PalletWorkingGroupInstance8, PalletWorkingGroupInstance9, PalletWorkingGroupJobApplication, PalletWorkingGroupOpening, PalletWorkingGroupOpeningType, PalletWorkingGroupRawEventInstance1, PalletWorkingGroupRawEventInstance2, PalletWorkingGroupRawEventInstance3, PalletWorkingGroupRawEventInstance4, PalletWorkingGroupRawEventInstance5, PalletWorkingGroupRawEventInstance6, PalletWorkingGroupRawEventInstance7, PalletWorkingGroupRawEventInstance8, PalletWorkingGroupRawEventInstance9, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakeParameters, PalletWorkingGroupStakePolicy, SpArithmeticArithmeticError, SpAuthorityDiscoveryAppPublic, SpConsensusBabeAllowedSlots, SpConsensusBabeAppPublic, SpConsensusBabeBabeEpochConfiguration, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusBabeDigestsPreDigest, SpConsensusBabeDigestsPrimaryPreDigest, SpConsensusBabeDigestsSecondaryPlainPreDigest, SpConsensusBabeDigestsSecondaryVRFPreDigest, SpConsensusGrandpaAppPublic, SpConsensusGrandpaAppSignature, SpConsensusGrandpaEquivocation, SpConsensusGrandpaEquivocationProof, SpConsensusSlotsEquivocationProof, SpCoreCryptoKeyTypeId, SpCoreEcdsaSignature, SpCoreEd25519Public, SpCoreEd25519Signature, SpCoreOffchainOpaqueNetworkState, SpCoreSr25519Public, SpCoreSr25519Signature, SpCoreVoid, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeBlakeTwo256, SpRuntimeDigest, SpRuntimeDigestDigestItem, SpRuntimeDispatchError, SpRuntimeHeader, SpRuntimeModuleError, SpRuntimeMultiSignature, SpRuntimeTokenError, SpRuntimeTransactionalError, SpSessionMembershipProof, SpStakingOffenceOffenceDetails, SpVersionRuntimeVersion, SpWeightsRuntimeDbWeight, SpWeightsWeightV2Weight } from '@polkadot/types/lookup';
 declare module '@polkadot/types/types/registry' {
     interface InterfaceTypes {
         FinalityGrandpaEquivocationPrecommit: FinalityGrandpaEquivocationPrecommit;
@@ -187,6 +187,7 @@ declare module '@polkadot/types/types/registry' {
         PalletProjectTokenStakingStatus: PalletProjectTokenStakingStatus;
         PalletProjectTokenTimeline: PalletProjectTokenTimeline;
         PalletProjectTokenTokenAllocation: PalletProjectTokenTokenAllocation;
+        PalletProjectTokenTokenConstraints: PalletProjectTokenTokenConstraints;
         PalletProjectTokenTokenData: PalletProjectTokenTokenData;
         PalletProjectTokenTokenIssuanceParameters: PalletProjectTokenTokenIssuanceParameters;
         PalletProjectTokenTokenSale: PalletProjectTokenTokenSale;
diff --git a/lib/augment/types-lookup.d.ts b/lib/augment/types-lookup.d.ts
index acdce735ed42cbad308438b176a7a04cf74a2cc2..dff1dcb2a140da19c14f9b6e85fb7ac3fcd473e4 100644
--- a/lib/augment/types-lookup.d.ts
+++ b/lib/augment/types-lookup.d.ts
@@ -543,6 +543,8 @@ declare module '@polkadot/types/lookup' {
         readonly asBudgetIncrementUpdated: u128;
         readonly isCouncilorRewardUpdated: boolean;
         readonly asCouncilorRewardUpdated: u128;
+        readonly isCouncilBudgetDecreased: boolean;
+        readonly asCouncilBudgetDecreased: u128;
         readonly isRequestFunded: boolean;
         readonly asRequestFunded: ITuple<[AccountId32, u128]>;
         readonly isCouncilBudgetFunded: boolean;
@@ -551,9 +553,11 @@ declare module '@polkadot/types/lookup' {
         readonly asCouncilorRemarked: ITuple<[u64, Bytes]>;
         readonly isCandidateRemarked: boolean;
         readonly asCandidateRemarked: ITuple<[u64, Bytes]>;
-        readonly type: 'AnnouncingPeriodStarted' | 'NotEnoughCandidates' | 'VotingPeriodStarted' | 'NewCandidate' | 'NewCouncilElected' | 'NewCouncilNotElected' | 'CandidacyStakeRelease' | 'CandidacyWithdraw' | 'CandidacyNoteSet' | 'RewardPayment' | 'BudgetBalanceSet' | 'BudgetRefill' | 'BudgetRefillPlanned' | 'BudgetIncrementUpdated' | 'CouncilorRewardUpdated' | 'RequestFunded' | 'CouncilBudgetFunded' | 'CouncilorRemarked' | 'CandidateRemarked';
+        readonly isEraPayoutDampingFactorSet: boolean;
+        readonly asEraPayoutDampingFactorSet: Percent;
+        readonly type: 'AnnouncingPeriodStarted' | 'NotEnoughCandidates' | 'VotingPeriodStarted' | 'NewCandidate' | 'NewCouncilElected' | 'NewCouncilNotElected' | 'CandidacyStakeRelease' | 'CandidacyWithdraw' | 'CandidacyNoteSet' | 'RewardPayment' | 'BudgetBalanceSet' | 'BudgetRefill' | 'BudgetRefillPlanned' | 'BudgetIncrementUpdated' | 'CouncilorRewardUpdated' | 'CouncilBudgetDecreased' | 'RequestFunded' | 'CouncilBudgetFunded' | 'CouncilorRemarked' | 'CandidateRemarked' | 'EraPayoutDampingFactorSet';
     }
-    /** @name PalletReferendumRawEvent (70) */
+    /** @name PalletReferendumRawEvent (71) */
     interface PalletReferendumRawEvent extends Enum {
         readonly isReferendumStarted: boolean;
         readonly asReferendumStarted: ITuple<[u32, u32]>;
@@ -573,14 +577,14 @@ declare module '@polkadot/types/lookup' {
         readonly asAccountOptedOutOfVoting: AccountId32;
         readonly type: 'ReferendumStarted' | 'ReferendumStartedForcefully' | 'RevealingStageStarted' | 'ReferendumFinished' | 'VoteCast' | 'VoteRevealed' | 'StakeReleased' | 'AccountOptedOutOfVoting';
     }
-    /** @name PalletReferendumInstance1 (71) */
+    /** @name PalletReferendumInstance1 (72) */
     type PalletReferendumInstance1 = Null;
-    /** @name PalletReferendumOptionResult (73) */
+    /** @name PalletReferendumOptionResult (74) */
     interface PalletReferendumOptionResult extends Struct {
         readonly optionId: u64;
         readonly votePower: u128;
     }
-    /** @name PalletMembershipRawEvent (74) */
+    /** @name PalletMembershipRawEvent (75) */
     interface PalletMembershipRawEvent extends Enum {
         readonly isMemberInvited: boolean;
         readonly asMemberInvited: ITuple<[u64, PalletMembershipInviteMembershipParameters, u128]>;
@@ -618,7 +622,7 @@ declare module '@polkadot/types/lookup' {
         readonly asMemberCreated: ITuple<[u64, PalletMembershipCreateMemberParameters, u32]>;
         readonly type: 'MemberInvited' | 'MembershipGifted' | 'MembershipBought' | 'MemberProfileUpdated' | 'MemberAccountsUpdated' | 'MemberVerificationStatusUpdated' | 'ReferralCutUpdated' | 'InvitesTransferred' | 'MembershipPriceUpdated' | 'InitialInvitationBalanceUpdated' | 'LeaderInvitationQuotaUpdated' | 'InitialInvitationCountUpdated' | 'StakingAccountAdded' | 'StakingAccountRemoved' | 'StakingAccountConfirmed' | 'MemberRemarked' | 'MemberCreated';
     }
-    /** @name PalletMembershipBuyMembershipParameters (75) */
+    /** @name PalletMembershipBuyMembershipParameters (76) */
     interface PalletMembershipBuyMembershipParameters extends Struct {
         readonly rootAccount: AccountId32;
         readonly controllerAccount: AccountId32;
@@ -626,7 +630,7 @@ declare module '@polkadot/types/lookup' {
         readonly metadata: Bytes;
         readonly referrerId: Option<u64>;
     }
-    /** @name PalletMembershipInviteMembershipParameters (78) */
+    /** @name PalletMembershipInviteMembershipParameters (79) */
     interface PalletMembershipInviteMembershipParameters extends Struct {
         readonly invitingMemberId: u64;
         readonly rootAccount: AccountId32;
@@ -634,7 +638,7 @@ declare module '@polkadot/types/lookup' {
         readonly handle: Option<Bytes>;
         readonly metadata: Bytes;
     }
-    /** @name PalletMembershipCreateMemberParameters (79) */
+    /** @name PalletMembershipCreateMemberParameters (80) */
     interface PalletMembershipCreateMemberParameters extends Struct {
         readonly rootAccount: AccountId32;
         readonly controllerAccount: AccountId32;
@@ -642,7 +646,7 @@ declare module '@polkadot/types/lookup' {
         readonly metadata: Bytes;
         readonly isFoundingMember: bool;
     }
-    /** @name PalletMembershipGiftMembershipParameters (80) */
+    /** @name PalletMembershipGiftMembershipParameters (81) */
     interface PalletMembershipGiftMembershipParameters extends Struct {
         readonly rootAccount: AccountId32;
         readonly controllerAccount: AccountId32;
@@ -653,7 +657,7 @@ declare module '@polkadot/types/lookup' {
         readonly creditRootAccount: u128;
         readonly applyRootAccountInvitationLock: Option<u128>;
     }
-    /** @name PalletForumRawEvent (84) */
+    /** @name PalletForumRawEvent (85) */
     interface PalletForumRawEvent extends Enum {
         readonly isCategoryCreated: boolean;
         readonly asCategoryCreated: ITuple<[u64, Option<u64>, Bytes, Bytes]>;
@@ -691,26 +695,26 @@ declare module '@polkadot/types/lookup' {
         readonly asCategoryMembershipOfModeratorUpdated: ITuple<[u64, u64, bool]>;
         readonly type: 'CategoryCreated' | 'CategoryArchivalStatusUpdated' | 'CategoryTitleUpdated' | 'CategoryDescriptionUpdated' | 'CategoryDeleted' | 'ThreadCreated' | 'ThreadModerated' | 'ThreadUpdated' | 'ThreadMetadataUpdated' | 'ThreadDeleted' | 'ThreadMoved' | 'PostAdded' | 'PostModerated' | 'PostDeleted' | 'PostTextUpdated' | 'CategoryStickyThreadUpdate' | 'CategoryMembershipOfModeratorUpdated';
     }
-    /** @name PalletForumPrivilegedActor (85) */
+    /** @name PalletForumPrivilegedActor (86) */
     interface PalletForumPrivilegedActor extends Enum {
         readonly isLead: boolean;
         readonly isModerator: boolean;
         readonly asModerator: u64;
         readonly type: 'Lead' | 'Moderator';
     }
-    /** @name PalletForumExtendedPostIdObject (86) */
+    /** @name PalletForumExtendedPostIdObject (87) */
     interface PalletForumExtendedPostIdObject extends Struct {
         readonly categoryId: u64;
         readonly threadId: u64;
         readonly postId: u64;
     }
-    /** @name PalletConstitutionRawEvent (91) */
+    /** @name PalletConstitutionRawEvent (92) */
     interface PalletConstitutionRawEvent extends Enum {
         readonly isConstutionAmended: boolean;
         readonly asConstutionAmended: ITuple<[H256, Bytes]>;
         readonly type: 'ConstutionAmended';
     }
-    /** @name PalletBountyRawEvent (92) */
+    /** @name PalletBountyRawEvent (93) */
     interface PalletBountyRawEvent extends Enum {
         readonly isBountyCreated: boolean;
         readonly asBountyCreated: ITuple<[u64, PalletBountyBountyParametersBTreeSet, Bytes]>;
@@ -760,7 +764,7 @@ declare module '@polkadot/types/lookup' {
         readonly asCreatorStateBloatBondWithdrawn: ITuple<[u64, PalletBountyBountyActor, u128]>;
         readonly type: 'BountyCreated' | 'BountyOracleSwitched' | 'BountyTerminated' | 'BountyFunded' | 'BountyMaxFundingReached' | 'BountyFundingWithdrawal' | 'BountyCreatorCherryWithdrawal' | 'BountyCreatorOracleRewardWithdrawal' | 'BountyOracleRewardWithdrawal' | 'BountyRemoved' | 'WorkEntryAnnounced' | 'WorkSubmitted' | 'OracleJudgmentSubmitted' | 'WorkEntrantFundsWithdrawn' | 'BountyContributorRemarked' | 'BountyOracleRemarked' | 'BountyEntrantRemarked' | 'BountyCreatorRemarked' | 'WorkSubmissionPeriodEnded' | 'WorkEntrantStakeUnlocked' | 'WorkEntrantStakeSlashed' | 'FunderStateBloatBondWithdrawn' | 'CreatorStateBloatBondWithdrawn';
     }
-    /** @name PalletBountyBountyParametersBTreeSet (93) */
+    /** @name PalletBountyBountyParametersBTreeSet (94) */
     interface PalletBountyBountyParametersBTreeSet extends Struct {
         readonly oracle: PalletBountyBountyActor;
         readonly contractType: PalletBountyAssuranceContractTypeBTreeSet;
@@ -770,21 +774,21 @@ declare module '@polkadot/types/lookup' {
         readonly entrantStake: u128;
         readonly fundingType: PalletBountyFundingType;
     }
-    /** @name PalletBountyBountyActor (94) */
+    /** @name PalletBountyBountyActor (95) */
     interface PalletBountyBountyActor extends Enum {
         readonly isCouncil: boolean;
         readonly isMember: boolean;
         readonly asMember: u64;
         readonly type: 'Council' | 'Member';
     }
-    /** @name PalletBountyAssuranceContractTypeBTreeSet (95) */
+    /** @name PalletBountyAssuranceContractTypeBTreeSet (96) */
     interface PalletBountyAssuranceContractTypeBTreeSet extends Enum {
         readonly isOpen: boolean;
         readonly isClosed: boolean;
         readonly asClosed: BTreeSet<u64>;
         readonly type: 'Open' | 'Closed';
     }
-    /** @name PalletBountyFundingType (96) */
+    /** @name PalletBountyFundingType (97) */
     interface PalletBountyFundingType extends Enum {
         readonly isPerpetual: boolean;
         readonly asPerpetual: {
@@ -797,7 +801,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Perpetual' | 'Limited';
     }
-    /** @name PalletBountyOracleWorkEntryJudgment (98) */
+    /** @name PalletBountyOracleWorkEntryJudgment (99) */
     interface PalletBountyOracleWorkEntryJudgment extends Enum {
         readonly isWinner: boolean;
         readonly asWinner: {
@@ -810,7 +814,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Winner' | 'Rejected';
     }
-    /** @name PalletJoystreamUtilityRawEvent (101) */
+    /** @name PalletJoystreamUtilityRawEvent (102) */
     interface PalletJoystreamUtilityRawEvent extends Enum {
         readonly isSignaled: boolean;
         readonly asSignaled: Bytes;
@@ -822,7 +826,7 @@ declare module '@polkadot/types/lookup' {
         readonly asTokensBurned: ITuple<[AccountId32, u128]>;
         readonly type: 'Signaled' | 'RuntimeUpgraded' | 'UpdatedWorkingGroupBudget' | 'TokensBurned';
     }
-    /** @name PalletCommonWorkingGroupIterableEnumsWorkingGroup (102) */
+    /** @name PalletCommonWorkingGroupIterableEnumsWorkingGroup (103) */
     interface PalletCommonWorkingGroupIterableEnumsWorkingGroup extends Enum {
         readonly isForum: boolean;
         readonly isStorage: boolean;
@@ -835,13 +839,13 @@ declare module '@polkadot/types/lookup' {
         readonly isMembership: boolean;
         readonly type: 'Forum' | 'Storage' | 'Content' | 'OperationsAlpha' | 'App' | 'Distribution' | 'OperationsBeta' | 'OperationsGamma' | 'Membership';
     }
-    /** @name PalletCommonBalanceKind (103) */
+    /** @name PalletCommonBalanceKind (104) */
     interface PalletCommonBalanceKind extends Enum {
         readonly isPositive: boolean;
         readonly isNegative: boolean;
         readonly type: 'Positive' | 'Negative';
     }
-    /** @name PalletContentRawEvent (104) */
+    /** @name PalletContentRawEvent (105) */
     interface PalletContentRawEvent extends Enum {
         readonly isCuratorGroupCreated: boolean;
         readonly asCuratorGroupCreated: u64;
@@ -951,7 +955,7 @@ declare module '@polkadot/types/lookup' {
         readonly asCreatorTokenIssuerRemarked: ITuple<[u64, u64, Bytes]>;
         readonly type: 'CuratorGroupCreated' | 'CuratorGroupPermissionsUpdated' | 'CuratorGroupStatusSet' | 'CuratorAdded' | 'CuratorRemoved' | 'ChannelCreated' | 'ChannelUpdated' | 'ChannelPrivilegeLevelUpdated' | 'ChannelStateBloatBondValueUpdated' | 'VideoStateBloatBondValueUpdated' | 'ChannelAssetsRemoved' | 'ChannelDeleted' | 'ChannelVisibilitySetByModerator' | 'ChannelPausedFeaturesUpdatedByModerator' | 'ChannelAssetsDeletedByModerator' | 'ChannelFundsWithdrawn' | 'ChannelRewardClaimedAndWithdrawn' | 'VideoCreated' | 'VideoUpdated' | 'VideoDeleted' | 'VideoVisibilitySetByModerator' | 'VideoAssetsDeletedByModerator' | 'ChannelPayoutsUpdated' | 'ChannelRewardUpdated' | 'EnglishAuctionStarted' | 'OpenAuctionStarted' | 'NftIssued' | 'NftDestroyed' | 'AuctionBidMade' | 'AuctionBidCanceled' | 'AuctionCanceled' | 'EnglishAuctionSettled' | 'BidMadeCompletingAuction' | 'OpenAuctionBidAccepted' | 'OfferStarted' | 'OfferAccepted' | 'OfferCanceled' | 'NftSellOrderMade' | 'NftBought' | 'BuyNowCanceled' | 'BuyNowPriceUpdated' | 'NftSlingedBackToTheOriginalArtist' | 'ChannelOwnerRemarked' | 'ChannelAgentRemarked' | 'NftOwnerRemarked' | 'InitializedChannelTransfer' | 'CancelChannelTransfer' | 'ChannelTransferAccepted' | 'GlobalNftLimitUpdated' | 'ChannelNftLimitUpdated' | 'ToggledNftLimits' | 'CreatorTokenIssued' | 'CreatorTokenIssuerRemarked';
     }
-    /** @name PalletContentPermissionsContentActor (105) */
+    /** @name PalletContentPermissionsContentActor (106) */
     interface PalletContentPermissionsContentActor extends Enum {
         readonly isCurator: boolean;
         readonly asCurator: ITuple<[u64, u64]>;
@@ -960,7 +964,7 @@ declare module '@polkadot/types/lookup' {
         readonly isLead: boolean;
         readonly type: 'Curator' | 'Member' | 'Lead';
     }
-    /** @name PalletContentChannelRecord (106) */
+    /** @name PalletContentChannelRecord (107) */
     interface PalletContentChannelRecord extends Struct {
         readonly owner: PalletContentChannelOwner;
         readonly numVideos: u64;
@@ -977,7 +981,7 @@ declare module '@polkadot/types/lookup' {
         readonly creatorTokenId: Option<u64>;
         readonly channelStateBloatBond: PalletCommonBloatBondRepayableBloatBond;
     }
-    /** @name PalletContentIterableEnumsChannelActionPermission (110) */
+    /** @name PalletContentIterableEnumsChannelActionPermission (111) */
     interface PalletContentIterableEnumsChannelActionPermission extends Enum {
         readonly isUpdateChannelMetadata: boolean;
         readonly isManageNonVideoChannelAssets: boolean;
@@ -1003,7 +1007,7 @@ declare module '@polkadot/types/lookup' {
         readonly isAmmControl: boolean;
         readonly type: 'UpdateChannelMetadata' | 'ManageNonVideoChannelAssets' | 'ManageChannelCollaborators' | 'UpdateVideoMetadata' | 'AddVideo' | 'ManageVideoAssets' | 'DeleteChannel' | 'DeleteVideo' | 'ManageVideoNfts' | 'AgentRemark' | 'TransferChannel' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'IssueCreatorToken' | 'ClaimCreatorTokenPatronage' | 'InitAndManageCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRate' | 'ManageRevenueSplits' | 'DeissueCreatorToken' | 'AmmControl';
     }
-    /** @name PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature (117) */
+    /** @name PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature (118) */
     interface PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature extends Enum {
         readonly isChannelFundsTransfer: boolean;
         readonly isCreatorCashout: boolean;
@@ -1014,12 +1018,12 @@ declare module '@polkadot/types/lookup' {
         readonly isCreatorTokenIssuance: boolean;
         readonly type: 'ChannelFundsTransfer' | 'CreatorCashout' | 'VideoNftIssuance' | 'VideoCreation' | 'VideoUpdate' | 'ChannelUpdate' | 'CreatorTokenIssuance';
     }
-    /** @name PalletCommonBloatBondRepayableBloatBond (120) */
+    /** @name PalletCommonBloatBondRepayableBloatBond (121) */
     interface PalletCommonBloatBondRepayableBloatBond extends Struct {
         readonly repaymentRestrictedTo: Option<AccountId32>;
         readonly amount: u128;
     }
-    /** @name PalletContentChannelOwner (121) */
+    /** @name PalletContentChannelOwner (122) */
     interface PalletContentChannelOwner extends Enum {
         readonly isMember: boolean;
         readonly asMember: u64;
@@ -1027,35 +1031,35 @@ declare module '@polkadot/types/lookup' {
         readonly asCuratorGroup: u64;
         readonly type: 'Member' | 'CuratorGroup';
     }
-    /** @name PalletContentChannelTransferStatus (122) */
+    /** @name PalletContentChannelTransferStatus (123) */
     interface PalletContentChannelTransferStatus extends Enum {
         readonly isNoActiveTransfer: boolean;
         readonly isPendingTransfer: boolean;
         readonly asPendingTransfer: PalletContentPendingTransfer;
         readonly type: 'NoActiveTransfer' | 'PendingTransfer';
     }
-    /** @name PalletContentPendingTransfer (123) */
+    /** @name PalletContentPendingTransfer (124) */
     interface PalletContentPendingTransfer extends Struct {
         readonly newOwner: PalletContentChannelOwner;
         readonly transferParams: PalletContentTransferCommitmentParametersBoundedBTreeMap;
     }
-    /** @name PalletContentTransferCommitmentParametersBoundedBTreeMap (124) */
+    /** @name PalletContentTransferCommitmentParametersBoundedBTreeMap (125) */
     interface PalletContentTransferCommitmentParametersBoundedBTreeMap extends Struct {
         readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
         readonly price: u128;
         readonly transferId: u64;
     }
-    /** @name PalletContentLimitPerPeriod (125) */
+    /** @name PalletContentLimitPerPeriod (126) */
     interface PalletContentLimitPerPeriod extends Struct {
         readonly limit: u64;
         readonly blockNumberPeriod: u32;
     }
-    /** @name PalletContentNftCounter (126) */
+    /** @name PalletContentNftCounter (127) */
     interface PalletContentNftCounter extends Struct {
         readonly counter: u64;
         readonly lastUpdated: u32;
     }
-    /** @name PalletContentNftTypesEnglishAuctionParamsRecord (127) */
+    /** @name PalletContentNftTypesEnglishAuctionParamsRecord (128) */
     interface PalletContentNftTypesEnglishAuctionParamsRecord extends Struct {
         readonly startingPrice: u128;
         readonly buyNowPrice: Option<u128>;
@@ -1065,7 +1069,7 @@ declare module '@polkadot/types/lookup' {
         readonly extensionPeriod: u32;
         readonly minBidStep: u128;
     }
-    /** @name PalletContentNftTypesOpenAuctionParamsRecord (129) */
+    /** @name PalletContentNftTypesOpenAuctionParamsRecord (130) */
     interface PalletContentNftTypesOpenAuctionParamsRecord extends Struct {
         readonly startingPrice: u128;
         readonly buyNowPrice: Option<u128>;
@@ -1073,14 +1077,14 @@ declare module '@polkadot/types/lookup' {
         readonly whitelist: BTreeSet<u64>;
         readonly bidLockDuration: u32;
     }
-    /** @name PalletContentNftTypesNftIssuanceParametersRecord (130) */
+    /** @name PalletContentNftTypesNftIssuanceParametersRecord (131) */
     interface PalletContentNftTypesNftIssuanceParametersRecord extends Struct {
         readonly royalty: Option<Perbill>;
         readonly nftMetadata: Bytes;
         readonly nonChannelOwner: Option<u64>;
         readonly initTransactionalStatus: PalletContentNftTypesInitTransactionalStatusRecord;
     }
-    /** @name PalletContentNftTypesInitTransactionalStatusRecord (131) */
+    /** @name PalletContentNftTypesInitTransactionalStatusRecord (132) */
     interface PalletContentNftTypesInitTransactionalStatusRecord extends Enum {
         readonly isIdle: boolean;
         readonly isBuyNow: boolean;
@@ -1093,7 +1097,7 @@ declare module '@polkadot/types/lookup' {
         readonly asOpenAuction: PalletContentNftTypesOpenAuctionParamsRecord;
         readonly type: 'Idle' | 'BuyNow' | 'InitiatedOfferToMember' | 'EnglishAuction' | 'OpenAuction';
     }
-    /** @name PalletContentChannelCreationParametersRecord (133) */
+    /** @name PalletContentChannelCreationParametersRecord (134) */
     interface PalletContentChannelCreationParametersRecord extends Struct {
         readonly assets: Option<PalletContentStorageAssetsRecord>;
         readonly meta: Option<Bytes>;
@@ -1103,22 +1107,22 @@ declare module '@polkadot/types/lookup' {
         readonly expectedChannelStateBloatBond: u128;
         readonly expectedDataObjectStateBloatBond: u128;
     }
-    /** @name PalletContentStorageAssetsRecord (134) */
+    /** @name PalletContentStorageAssetsRecord (135) */
     interface PalletContentStorageAssetsRecord extends Struct {
         readonly objectCreationList: Vec<PalletStorageDataObjectCreationParameters>;
         readonly expectedDataSizeFee: u128;
     }
-    /** @name PalletStorageDataObjectCreationParameters (136) */
+    /** @name PalletStorageDataObjectCreationParameters (137) */
     interface PalletStorageDataObjectCreationParameters extends Struct {
         readonly size_: u64;
         readonly ipfsContentId: Bytes;
     }
-    /** @name PalletStorageDistributionBucketIdRecord (137) */
+    /** @name PalletStorageDistributionBucketIdRecord (138) */
     interface PalletStorageDistributionBucketIdRecord extends Struct {
         readonly distributionBucketFamilyId: u64;
         readonly distributionBucketIndex: u64;
     }
-    /** @name PalletContentChannelUpdateParametersRecord (144) */
+    /** @name PalletContentChannelUpdateParametersRecord (145) */
     interface PalletContentChannelUpdateParametersRecord extends Struct {
         readonly assetsToUpload: Option<PalletContentStorageAssetsRecord>;
         readonly newMeta: Option<Bytes>;
@@ -1127,7 +1131,7 @@ declare module '@polkadot/types/lookup' {
         readonly expectedDataObjectStateBloatBond: u128;
         readonly storageBucketsNumWitness: Option<u32>;
     }
-    /** @name PalletContentVideoCreationParametersRecord (146) */
+    /** @name PalletContentVideoCreationParametersRecord (147) */
     interface PalletContentVideoCreationParametersRecord extends Struct {
         readonly assets: Option<PalletContentStorageAssetsRecord>;
         readonly meta: Option<Bytes>;
@@ -1136,7 +1140,7 @@ declare module '@polkadot/types/lookup' {
         readonly expectedDataObjectStateBloatBond: u128;
         readonly storageBucketsNumWitness: u32;
     }
-    /** @name PalletContentVideoUpdateParametersRecord (148) */
+    /** @name PalletContentVideoUpdateParametersRecord (149) */
     interface PalletContentVideoUpdateParametersRecord extends Struct {
         readonly assetsToUpload: Option<PalletContentStorageAssetsRecord>;
         readonly newMeta: Option<Bytes>;
@@ -1145,7 +1149,7 @@ declare module '@polkadot/types/lookup' {
         readonly expectedDataObjectStateBloatBond: u128;
         readonly storageBucketsNumWitness: Option<u32>;
     }
-    /** @name PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction (151) */
+    /** @name PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction (152) */
     interface PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction extends Enum {
         readonly isHideVideo: boolean;
         readonly isHideChannel: boolean;
@@ -1157,13 +1161,13 @@ declare module '@polkadot/types/lookup' {
         readonly isUpdateChannelNftLimits: boolean;
         readonly type: 'HideVideo' | 'HideChannel' | 'ChangeChannelFeatureStatus' | 'DeleteVideoAssets' | 'DeleteNonVideoChannelAssets' | 'UpdateChannelNftLimits';
     }
-    /** @name PalletContentTransferCommitmentParametersBTreeMap (155) */
+    /** @name PalletContentTransferCommitmentParametersBTreeMap (156) */
     interface PalletContentTransferCommitmentParametersBTreeMap extends Struct {
         readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
         readonly price: u128;
         readonly transferId: u64;
     }
-    /** @name PalletContentUpdateChannelPayoutsParametersRecord (156) */
+    /** @name PalletContentUpdateChannelPayoutsParametersRecord (157) */
     interface PalletContentUpdateChannelPayoutsParametersRecord extends Struct {
         readonly commitment: Option<H256>;
         readonly payload: Option<PalletContentChannelPayoutsPayloadParametersRecord>;
@@ -1171,26 +1175,26 @@ declare module '@polkadot/types/lookup' {
         readonly maxCashoutAllowed: Option<u128>;
         readonly channelCashoutsEnabled: Option<bool>;
     }
-    /** @name PalletContentChannelPayoutsPayloadParametersRecord (157) */
+    /** @name PalletContentChannelPayoutsPayloadParametersRecord (158) */
     interface PalletContentChannelPayoutsPayloadParametersRecord extends Struct {
         readonly objectCreationParams: PalletStorageDataObjectCreationParameters;
         readonly expectedDataSizeFee: u128;
         readonly expectedDataObjectStateBloatBond: u128;
     }
-    /** @name PalletContentChannelFundsDestination (161) */
+    /** @name PalletContentChannelFundsDestination (162) */
     interface PalletContentChannelFundsDestination extends Enum {
         readonly isAccountId: boolean;
         readonly asAccountId: AccountId32;
         readonly isCouncilBudget: boolean;
         readonly type: 'AccountId' | 'CouncilBudget';
     }
-    /** @name PalletContentNftLimitPeriod (162) */
+    /** @name PalletContentNftLimitPeriod (163) */
     interface PalletContentNftLimitPeriod extends Enum {
         readonly isDaily: boolean;
         readonly isWeekly: boolean;
         readonly type: 'Daily' | 'Weekly';
     }
-    /** @name PalletStorageRawEvent (163) */
+    /** @name PalletStorageRawEvent (164) */
     interface PalletStorageRawEvent extends Enum {
         readonly isStorageBucketCreated: boolean;
         readonly asStorageBucketCreated: ITuple<[u64, Option<u64>, bool, u64, u64]>;
@@ -1278,7 +1282,7 @@ declare module '@polkadot/types/lookup' {
         readonly asDistributionOperatorRemarked: ITuple<[u64, PalletStorageDistributionBucketIdRecord, Bytes]>;
         readonly type: 'StorageBucketCreated' | 'StorageBucketInvitationAccepted' | 'StorageBucketsUpdatedForBag' | 'DataObjectsUploaded' | 'StorageOperatorMetadataSet' | 'StorageBucketVoucherLimitsSet' | 'PendingDataObjectsAccepted' | 'StorageBucketInvitationCancelled' | 'StorageBucketOperatorInvited' | 'StorageBucketOperatorRemoved' | 'UploadingBlockStatusUpdated' | 'DataObjectPerMegabyteFeeUpdated' | 'StorageBucketsPerBagLimitUpdated' | 'StorageBucketsVoucherMaxLimitsUpdated' | 'DataObjectsMoved' | 'DataObjectsDeleted' | 'StorageBucketStatusUpdated' | 'UpdateBlacklist' | 'DynamicBagDeleted' | 'DynamicBagCreated' | 'VoucherChanged' | 'StorageBucketDeleted' | 'NumberOfStorageBucketsInDynamicBagCreationPolicyUpdated' | 'DistributionBucketFamilyCreated' | 'DistributionBucketFamilyDeleted' | 'DistributionBucketCreated' | 'DistributionBucketStatusUpdated' | 'DistributionBucketDeleted' | 'DistributionBucketsUpdatedForBag' | 'DistributionBucketsPerBagLimitUpdated' | 'DistributionBucketModeUpdated' | 'FamiliesInDynamicBagCreationPolicyUpdated' | 'DistributionBucketOperatorInvited' | 'DistributionBucketInvitationCancelled' | 'DistributionBucketInvitationAccepted' | 'DistributionBucketMetadataSet' | 'DistributionBucketOperatorRemoved' | 'DistributionBucketFamilyMetadataSet' | 'DataObjectStateBloatBondValueUpdated' | 'DataObjectsUpdated' | 'StorageOperatorRemarked' | 'DistributionOperatorRemarked';
     }
-    /** @name PalletStorageUploadParametersRecord (164) */
+    /** @name PalletStorageUploadParametersRecord (165) */
     interface PalletStorageUploadParametersRecord extends Struct {
         readonly bagId: PalletStorageBagIdType;
         readonly objectCreationList: Vec<PalletStorageDataObjectCreationParameters>;
@@ -1286,7 +1290,7 @@ declare module '@polkadot/types/lookup' {
         readonly expectedDataSizeFee: u128;
         readonly expectedDataObjectStateBloatBond: u128;
     }
-    /** @name PalletStorageBagIdType (165) */
+    /** @name PalletStorageBagIdType (166) */
     interface PalletStorageBagIdType extends Enum {
         readonly isStatic: boolean;
         readonly asStatic: PalletStorageStaticBagId;
@@ -1294,14 +1298,14 @@ declare module '@polkadot/types/lookup' {
         readonly asDynamic: PalletStorageDynamicBagIdType;
         readonly type: 'Static' | 'Dynamic';
     }
-    /** @name PalletStorageStaticBagId (166) */
+    /** @name PalletStorageStaticBagId (167) */
     interface PalletStorageStaticBagId extends Enum {
         readonly isCouncil: boolean;
         readonly isWorkingGroup: boolean;
         readonly asWorkingGroup: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
         readonly type: 'Council' | 'WorkingGroup';
     }
-    /** @name PalletStorageDynamicBagIdType (167) */
+    /** @name PalletStorageDynamicBagIdType (168) */
     interface PalletStorageDynamicBagIdType extends Enum {
         readonly isMember: boolean;
         readonly asMember: u64;
@@ -1309,7 +1313,7 @@ declare module '@polkadot/types/lookup' {
         readonly asChannel: u64;
         readonly type: 'Member' | 'Channel';
     }
-    /** @name PalletStorageDynBagCreationParametersRecord (168) */
+    /** @name PalletStorageDynBagCreationParametersRecord (169) */
     interface PalletStorageDynBagCreationParametersRecord extends Struct {
         readonly bagId: PalletStorageDynamicBagIdType;
         readonly objectCreationList: Vec<PalletStorageDataObjectCreationParameters>;
@@ -1319,20 +1323,20 @@ declare module '@polkadot/types/lookup' {
         readonly storageBuckets: BTreeSet<u64>;
         readonly distributionBuckets: BTreeSet<PalletStorageDistributionBucketIdRecord>;
     }
-    /** @name PalletStorageVoucher (171) */
+    /** @name PalletStorageVoucher (172) */
     interface PalletStorageVoucher extends Struct {
         readonly sizeLimit: u64;
         readonly objectsLimit: u64;
         readonly sizeUsed: u64;
         readonly objectsUsed: u64;
     }
-    /** @name PalletStorageDynamicBagType (172) */
+    /** @name PalletStorageDynamicBagType (173) */
     interface PalletStorageDynamicBagType extends Enum {
         readonly isMember: boolean;
         readonly isChannel: boolean;
         readonly type: 'Member' | 'Channel';
     }
-    /** @name PalletProjectTokenEventsRawEvent (176) */
+    /** @name PalletProjectTokenEventsRawEvent (177) */
     interface PalletProjectTokenEventsRawEvent extends Enum {
         readonly isTokenAmountTransferred: boolean;
         readonly asTokenAmountTransferred: ITuple<[u64, u64, PalletProjectTokenTransfers, Bytes]>;
@@ -1380,16 +1384,18 @@ declare module '@polkadot/types/lookup' {
         readonly asAmmDeactivated: ITuple<[u64, u64, u128]>;
         readonly isFrozenStatusUpdated: boolean;
         readonly asFrozenStatusUpdated: bool;
-        readonly type: 'TokenAmountTransferred' | 'TokenAmountTransferredByIssuer' | 'PatronageRateDecreasedTo' | 'PatronageCreditClaimed' | 'RevenueSplitIssued' | 'RevenueSplitFinalized' | 'UserParticipatedInSplit' | 'RevenueSplitLeft' | 'MemberJoinedWhitelist' | 'AccountDustedBy' | 'TokenDeissued' | 'TokenIssued' | 'TokenSaleInitialized' | 'UpcomingTokenSaleUpdated' | 'TokensPurchasedOnSale' | 'TokenSaleFinalized' | 'TransferPolicyChangedToPermissionless' | 'TokensBurned' | 'AmmActivated' | 'TokensBoughtOnAmm' | 'TokensSoldOnAmm' | 'AmmDeactivated' | 'FrozenStatusUpdated';
+        readonly isTokenConstraintsUpdated: boolean;
+        readonly asTokenConstraintsUpdated: PalletProjectTokenTokenConstraints;
+        readonly type: 'TokenAmountTransferred' | 'TokenAmountTransferredByIssuer' | 'PatronageRateDecreasedTo' | 'PatronageCreditClaimed' | 'RevenueSplitIssued' | 'RevenueSplitFinalized' | 'UserParticipatedInSplit' | 'RevenueSplitLeft' | 'MemberJoinedWhitelist' | 'AccountDustedBy' | 'TokenDeissued' | 'TokenIssued' | 'TokenSaleInitialized' | 'UpcomingTokenSaleUpdated' | 'TokensPurchasedOnSale' | 'TokenSaleFinalized' | 'TransferPolicyChangedToPermissionless' | 'TokensBurned' | 'AmmActivated' | 'TokensBoughtOnAmm' | 'TokensSoldOnAmm' | 'AmmDeactivated' | 'FrozenStatusUpdated' | 'TokenConstraintsUpdated';
     }
-    /** @name PalletProjectTokenTransferPolicy (177) */
+    /** @name PalletProjectTokenTransferPolicy (178) */
     interface PalletProjectTokenTransferPolicy extends Enum {
         readonly isPermissionless: boolean;
         readonly isPermissioned: boolean;
         readonly asPermissioned: H256;
         readonly type: 'Permissionless' | 'Permissioned';
     }
-    /** @name PalletProjectTokenTokenIssuanceParameters (178) */
+    /** @name PalletProjectTokenTokenIssuanceParameters (179) */
     interface PalletProjectTokenTokenIssuanceParameters extends Struct {
         readonly initialAllocation: BTreeMap<u64, PalletProjectTokenTokenAllocation>;
         readonly transferPolicy: PalletProjectTokenTransferPolicyParams;
@@ -1397,39 +1403,39 @@ declare module '@polkadot/types/lookup' {
         readonly revenueSplitRate: Permill;
         readonly metadata: Bytes;
     }
-    /** @name PalletProjectTokenTokenAllocation (179) */
+    /** @name PalletProjectTokenTokenAllocation (180) */
     interface PalletProjectTokenTokenAllocation extends Struct {
         readonly amount: u128;
         readonly vestingScheduleParams: Option<PalletProjectTokenVestingScheduleParams>;
     }
-    /** @name PalletProjectTokenVestingScheduleParams (180) */
+    /** @name PalletProjectTokenVestingScheduleParams (181) */
     interface PalletProjectTokenVestingScheduleParams extends Struct {
         readonly linearVestingDuration: u32;
         readonly blocksBeforeCliff: u32;
         readonly cliffAmountPercentage: Permill;
     }
-    /** @name PalletProjectTokenTransferPolicyParams (183) */
+    /** @name PalletProjectTokenTransferPolicyParams (184) */
     interface PalletProjectTokenTransferPolicyParams extends Enum {
         readonly isPermissionless: boolean;
         readonly isPermissioned: boolean;
         readonly asPermissioned: PalletProjectTokenWhitelistParams;
         readonly type: 'Permissionless' | 'Permissioned';
     }
-    /** @name PalletProjectTokenWhitelistParams (184) */
+    /** @name PalletProjectTokenWhitelistParams (185) */
     interface PalletProjectTokenWhitelistParams extends Struct {
         readonly commitment: H256;
         readonly payload: Option<PalletProjectTokenSingleDataObjectUploadParams>;
     }
-    /** @name PalletProjectTokenSingleDataObjectUploadParams (185) */
+    /** @name PalletProjectTokenSingleDataObjectUploadParams (186) */
     interface PalletProjectTokenSingleDataObjectUploadParams extends Struct {
         readonly objectCreationParams: PalletStorageDataObjectCreationParameters;
         readonly expectedDataSizeFee: u128;
         readonly expectedDataObjectStateBloatBond: u128;
     }
-    /** @name PalletProjectTokenTransfers (191) */
+    /** @name PalletProjectTokenTransfers (192) */
     interface PalletProjectTokenTransfers extends BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment> {
     }
-    /** @name PalletProjectTokenValidated (192) */
+    /** @name PalletProjectTokenValidated (193) */
     interface PalletProjectTokenValidated extends Enum {
         readonly isExisting: boolean;
         readonly asExisting: u64;
@@ -1437,17 +1443,17 @@ declare module '@polkadot/types/lookup' {
         readonly asNonExisting: u64;
         readonly type: 'Existing' | 'NonExisting';
     }
-    /** @name PalletProjectTokenValidatedPayment (193) */
+    /** @name PalletProjectTokenValidatedPayment (194) */
     interface PalletProjectTokenValidatedPayment extends Struct {
         readonly payment: PalletProjectTokenPaymentWithVesting;
         readonly vestingCleanupCandidate: Option<PalletProjectTokenVestingSource>;
     }
-    /** @name PalletProjectTokenPaymentWithVesting (194) */
+    /** @name PalletProjectTokenPaymentWithVesting (195) */
     interface PalletProjectTokenPaymentWithVesting extends Struct {
         readonly amount: u128;
         readonly vestingSchedule: Option<PalletProjectTokenVestingScheduleParams>;
     }
-    /** @name PalletProjectTokenVestingSource (196) */
+    /** @name PalletProjectTokenVestingSource (197) */
     interface PalletProjectTokenVestingSource extends Enum {
         readonly isInitialIssuance: boolean;
         readonly isSale: boolean;
@@ -1456,7 +1462,7 @@ declare module '@polkadot/types/lookup' {
         readonly asIssuerTransfer: u64;
         readonly type: 'InitialIssuance' | 'Sale' | 'IssuerTransfer';
     }
-    /** @name PalletProjectTokenTokenSale (200) */
+    /** @name PalletProjectTokenTokenSale (201) */
     interface PalletProjectTokenTokenSale extends Struct {
         readonly unitPrice: u128;
         readonly quantityLeft: u128;
@@ -1469,13 +1475,25 @@ declare module '@polkadot/types/lookup' {
         readonly capPerMember: Option<u128>;
         readonly autoFinalize: bool;
     }
-    /** @name PalletProjectTokenAmmCurve (201) */
+    /** @name PalletProjectTokenAmmCurve (202) */
     interface PalletProjectTokenAmmCurve extends Struct {
         readonly slope: u128;
         readonly intercept: u128;
         readonly providedSupply: u128;
     }
-    /** @name PalletProposalsEngineRawEvent (202) */
+    /** @name PalletProjectTokenTokenConstraints (203) */
+    interface PalletProjectTokenTokenConstraints extends Struct {
+        readonly maxYearlyRate: Option<Permill>;
+        readonly minAmmSlope: Option<u128>;
+        readonly minSaleDuration: Option<u32>;
+        readonly minRevenueSplitDuration: Option<u32>;
+        readonly minRevenueSplitTimeToStart: Option<u32>;
+        readonly salePlatformFee: Option<Permill>;
+        readonly ammBuyTxFees: Option<Permill>;
+        readonly ammSellTxFees: Option<Permill>;
+        readonly bloatBond: Option<u128>;
+    }
+    /** @name PalletProposalsEngineRawEvent (206) */
     interface PalletProposalsEngineRawEvent extends Enum {
         readonly isProposalStatusUpdated: boolean;
         readonly asProposalStatusUpdated: ITuple<[u32, PalletProposalsEngineProposalStatusesProposalStatus]>;
@@ -1491,7 +1509,7 @@ declare module '@polkadot/types/lookup' {
         readonly asProposerRemarked: ITuple<[u64, u32, Bytes]>;
         readonly type: 'ProposalStatusUpdated' | 'ProposalDecisionMade' | 'ProposalExecuted' | 'Voted' | 'ProposalCancelled' | 'ProposerRemarked';
     }
-    /** @name PalletProposalsEngineProposalStatusesProposalStatus (203) */
+    /** @name PalletProposalsEngineProposalStatusesProposalStatus (207) */
     interface PalletProposalsEngineProposalStatusesProposalStatus extends Enum {
         readonly isActive: boolean;
         readonly isPendingExecution: boolean;
@@ -1499,7 +1517,7 @@ declare module '@polkadot/types/lookup' {
         readonly isPendingConstitutionality: boolean;
         readonly type: 'Active' | 'PendingExecution' | 'PendingConstitutionality';
     }
-    /** @name PalletProposalsEngineProposalStatusesProposalDecision (204) */
+    /** @name PalletProposalsEngineProposalStatusesProposalDecision (208) */
     interface PalletProposalsEngineProposalStatusesProposalDecision extends Enum {
         readonly isCanceled: boolean;
         readonly isCanceledByRuntime: boolean;
@@ -1511,13 +1529,13 @@ declare module '@polkadot/types/lookup' {
         readonly asApproved: PalletProposalsEngineProposalStatusesApprovedProposalDecision;
         readonly type: 'Canceled' | 'CanceledByRuntime' | 'Vetoed' | 'Rejected' | 'Slashed' | 'Expired' | 'Approved';
     }
-    /** @name PalletProposalsEngineProposalStatusesApprovedProposalDecision (205) */
+    /** @name PalletProposalsEngineProposalStatusesApprovedProposalDecision (209) */
     interface PalletProposalsEngineProposalStatusesApprovedProposalDecision extends Enum {
         readonly isPendingExecution: boolean;
         readonly isPendingConstitutionality: boolean;
         readonly type: 'PendingExecution' | 'PendingConstitutionality';
     }
-    /** @name PalletProposalsEngineProposalStatusesExecutionStatus (206) */
+    /** @name PalletProposalsEngineProposalStatusesExecutionStatus (210) */
     interface PalletProposalsEngineProposalStatusesExecutionStatus extends Enum {
         readonly isExecuted: boolean;
         readonly isExecutionFailed: boolean;
@@ -1526,7 +1544,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Executed' | 'ExecutionFailed';
     }
-    /** @name PalletProposalsEngineVoteKind (207) */
+    /** @name PalletProposalsEngineVoteKind (211) */
     interface PalletProposalsEngineVoteKind extends Enum {
         readonly isApprove: boolean;
         readonly isReject: boolean;
@@ -1534,7 +1552,7 @@ declare module '@polkadot/types/lookup' {
         readonly isAbstain: boolean;
         readonly type: 'Approve' | 'Reject' | 'Slash' | 'Abstain';
     }
-    /** @name PalletProposalsDiscussionRawEvent (208) */
+    /** @name PalletProposalsDiscussionRawEvent (212) */
     interface PalletProposalsDiscussionRawEvent extends Enum {
         readonly isThreadCreated: boolean;
         readonly asThreadCreated: ITuple<[u64, u64]>;
@@ -1548,20 +1566,20 @@ declare module '@polkadot/types/lookup' {
         readonly asPostDeleted: ITuple<[u64, u64, u64, bool]>;
         readonly type: 'ThreadCreated' | 'PostCreated' | 'PostUpdated' | 'ThreadModeChanged' | 'PostDeleted';
     }
-    /** @name PalletProposalsDiscussionThreadModeBTreeSet (209) */
+    /** @name PalletProposalsDiscussionThreadModeBTreeSet (213) */
     interface PalletProposalsDiscussionThreadModeBTreeSet extends Enum {
         readonly isOpen: boolean;
         readonly isClosed: boolean;
         readonly asClosed: BTreeSet<u64>;
         readonly type: 'Open' | 'Closed';
     }
-    /** @name PalletProposalsCodexRawEvent (210) */
+    /** @name PalletProposalsCodexRawEvent (214) */
     interface PalletProposalsCodexRawEvent extends Enum {
         readonly isProposalCreated: boolean;
         readonly asProposalCreated: ITuple<[u32, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, u64]>;
         readonly type: 'ProposalCreated';
     }
-    /** @name PalletProposalsCodexGeneralProposalParams (211) */
+    /** @name PalletProposalsCodexGeneralProposalParams (215) */
     interface PalletProposalsCodexGeneralProposalParams extends Struct {
         readonly memberId: u64;
         readonly title: Bytes;
@@ -1569,7 +1587,7 @@ declare module '@polkadot/types/lookup' {
         readonly stakingAccountId: Option<AccountId32>;
         readonly exactExecutionBlock: Option<u32>;
     }
-    /** @name PalletProposalsCodexProposalDetails (212) */
+    /** @name PalletProposalsCodexProposalDetails (216) */
     interface PalletProposalsCodexProposalDetails extends Enum {
         readonly isSignal: boolean;
         readonly asSignal: Bytes;
@@ -1619,43 +1637,49 @@ declare module '@polkadot/types/lookup' {
         readonly asUpdateChannelPayouts: PalletContentUpdateChannelPayoutsParametersRecord;
         readonly isSetPalletFozenStatus: boolean;
         readonly asSetPalletFozenStatus: ITuple<[bool, PalletCommonFreezablePallet]>;
-        readonly type: 'Signal' | 'RuntimeUpgrade' | 'FundingRequest' | 'SetMaxValidatorCount' | 'CreateWorkingGroupLeadOpening' | 'FillWorkingGroupLeadOpening' | 'UpdateWorkingGroupBudget' | 'DecreaseWorkingGroupLeadStake' | 'SlashWorkingGroupLead' | 'SetWorkingGroupLeadReward' | 'TerminateWorkingGroupLead' | 'AmendConstitution' | 'CancelWorkingGroupLeadOpening' | 'SetMembershipPrice' | 'SetCouncilBudgetIncrement' | 'SetCouncilorReward' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'SetMembershipLeadInvitationQuota' | 'SetReferralCut' | 'VetoProposal' | 'UpdateGlobalNftLimit' | 'UpdateChannelPayouts' | 'SetPalletFozenStatus';
-    }
-    /** @name PalletCommonFundingRequestParameters (214) */
+        readonly isUpdateTokenPalletTokenConstraints: boolean;
+        readonly asUpdateTokenPalletTokenConstraints: PalletProjectTokenTokenConstraints;
+        readonly isSetEraPayoutDampingFactor: boolean;
+        readonly asSetEraPayoutDampingFactor: Percent;
+        readonly isDecreaseCouncilBudget: boolean;
+        readonly asDecreaseCouncilBudget: u128;
+        readonly type: 'Signal' | 'RuntimeUpgrade' | 'FundingRequest' | 'SetMaxValidatorCount' | 'CreateWorkingGroupLeadOpening' | 'FillWorkingGroupLeadOpening' | 'UpdateWorkingGroupBudget' | 'DecreaseWorkingGroupLeadStake' | 'SlashWorkingGroupLead' | 'SetWorkingGroupLeadReward' | 'TerminateWorkingGroupLead' | 'AmendConstitution' | 'CancelWorkingGroupLeadOpening' | 'SetMembershipPrice' | 'SetCouncilBudgetIncrement' | 'SetCouncilorReward' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'SetMembershipLeadInvitationQuota' | 'SetReferralCut' | 'VetoProposal' | 'UpdateGlobalNftLimit' | 'UpdateChannelPayouts' | 'SetPalletFozenStatus' | 'UpdateTokenPalletTokenConstraints' | 'SetEraPayoutDampingFactor' | 'DecreaseCouncilBudget';
+    }
+    /** @name PalletCommonFundingRequestParameters (218) */
     interface PalletCommonFundingRequestParameters extends Struct {
         readonly account: AccountId32;
         readonly amount: u128;
     }
-    /** @name PalletProposalsCodexCreateOpeningParameters (215) */
+    /** @name PalletProposalsCodexCreateOpeningParameters (219) */
     interface PalletProposalsCodexCreateOpeningParameters extends Struct {
         readonly description: Bytes;
         readonly stakePolicy: PalletWorkingGroupStakePolicy;
         readonly rewardPerBlock: Option<u128>;
         readonly group: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
     }
-    /** @name PalletWorkingGroupStakePolicy (216) */
+    /** @name PalletWorkingGroupStakePolicy (220) */
     interface PalletWorkingGroupStakePolicy extends Struct {
         readonly stakeAmount: u128;
         readonly leavingUnstakingPeriod: u32;
     }
-    /** @name PalletProposalsCodexFillOpeningParameters (217) */
+    /** @name PalletProposalsCodexFillOpeningParameters (221) */
     interface PalletProposalsCodexFillOpeningParameters extends Struct {
         readonly openingId: u64;
         readonly applicationId: u64;
         readonly workingGroup: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
     }
-    /** @name PalletProposalsCodexTerminateRoleParameters (218) */
+    /** @name PalletProposalsCodexTerminateRoleParameters (222) */
     interface PalletProposalsCodexTerminateRoleParameters extends Struct {
         readonly workerId: u64;
         readonly slashingAmount: Option<u128>;
         readonly group: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
     }
-    /** @name PalletCommonFreezablePallet (219) */
+    /** @name PalletCommonFreezablePallet (223) */
     interface PalletCommonFreezablePallet extends Enum {
         readonly isProjectToken: boolean;
         readonly type: 'ProjectToken';
     }
-    /** @name PalletWorkingGroupRawEventInstance1 (220) */
+    /** @name PalletWorkingGroupRawEventInstance1 (224) */
     interface PalletWorkingGroupRawEventInstance1 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1694,6 +1718,8 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
         readonly isStatusTextChanged: boolean;
         readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+        readonly isVestedBudgetSpending: boolean;
+        readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
         readonly isBudgetSpending: boolean;
         readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
         readonly isRewardPaid: boolean;
@@ -1706,15 +1732,15 @@ declare module '@polkadot/types/lookup' {
         readonly asLeadRemarked: Bytes;
         readonly isWorkerRemarked: boolean;
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupOpeningType (224) */
+    /** @name PalletWorkingGroupOpeningType (228) */
     interface PalletWorkingGroupOpeningType extends Enum {
         readonly isLeader: boolean;
         readonly isRegular: boolean;
         readonly type: 'Leader' | 'Regular';
     }
-    /** @name PalletWorkingGroupApplyOnOpeningParams (225) */
+    /** @name PalletWorkingGroupApplyOnOpeningParams (229) */
     interface PalletWorkingGroupApplyOnOpeningParams extends Struct {
         readonly memberId: u64;
         readonly openingId: u64;
@@ -1723,20 +1749,26 @@ declare module '@polkadot/types/lookup' {
         readonly description: Bytes;
         readonly stakeParameters: PalletWorkingGroupStakeParameters;
     }
-    /** @name PalletWorkingGroupStakeParameters (226) */
+    /** @name PalletWorkingGroupStakeParameters (230) */
     interface PalletWorkingGroupStakeParameters extends Struct {
         readonly stake: u128;
         readonly stakingAccountId: AccountId32;
     }
-    /** @name PalletWorkingGroupInstance1 (227) */
+    /** @name PalletVestingVestingInfo (231) */
+    interface PalletVestingVestingInfo extends Struct {
+        readonly locked: u128;
+        readonly perBlock: u128;
+        readonly startingBlock: u32;
+    }
+    /** @name PalletWorkingGroupInstance1 (232) */
     type PalletWorkingGroupInstance1 = Null;
-    /** @name PalletWorkingGroupRewardPaymentType (228) */
+    /** @name PalletWorkingGroupRewardPaymentType (233) */
     interface PalletWorkingGroupRewardPaymentType extends Enum {
         readonly isMissedReward: boolean;
         readonly isRegularReward: boolean;
         readonly type: 'MissedReward' | 'RegularReward';
     }
-    /** @name PalletWorkingGroupRawEventInstance2 (229) */
+    /** @name PalletWorkingGroupRawEventInstance2 (234) */
     interface PalletWorkingGroupRawEventInstance2 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1775,6 +1807,8 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
         readonly isStatusTextChanged: boolean;
         readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+        readonly isVestedBudgetSpending: boolean;
+        readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
         readonly isBudgetSpending: boolean;
         readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
         readonly isRewardPaid: boolean;
@@ -1787,11 +1821,11 @@ declare module '@polkadot/types/lookup' {
         readonly asLeadRemarked: Bytes;
         readonly isWorkerRemarked: boolean;
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance2 (230) */
+    /** @name PalletWorkingGroupInstance2 (235) */
     type PalletWorkingGroupInstance2 = Null;
-    /** @name PalletWorkingGroupRawEventInstance3 (231) */
+    /** @name PalletWorkingGroupRawEventInstance3 (236) */
     interface PalletWorkingGroupRawEventInstance3 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1830,6 +1864,8 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
         readonly isStatusTextChanged: boolean;
         readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+        readonly isVestedBudgetSpending: boolean;
+        readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
         readonly isBudgetSpending: boolean;
         readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
         readonly isRewardPaid: boolean;
@@ -1842,11 +1878,11 @@ declare module '@polkadot/types/lookup' {
         readonly asLeadRemarked: Bytes;
         readonly isWorkerRemarked: boolean;
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance3 (232) */
+    /** @name PalletWorkingGroupInstance3 (237) */
     type PalletWorkingGroupInstance3 = Null;
-    /** @name PalletWorkingGroupRawEventInstance4 (233) */
+    /** @name PalletWorkingGroupRawEventInstance4 (238) */
     interface PalletWorkingGroupRawEventInstance4 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1885,6 +1921,8 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
         readonly isStatusTextChanged: boolean;
         readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+        readonly isVestedBudgetSpending: boolean;
+        readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
         readonly isBudgetSpending: boolean;
         readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
         readonly isRewardPaid: boolean;
@@ -1897,11 +1935,11 @@ declare module '@polkadot/types/lookup' {
         readonly asLeadRemarked: Bytes;
         readonly isWorkerRemarked: boolean;
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance4 (234) */
+    /** @name PalletWorkingGroupInstance4 (239) */
     type PalletWorkingGroupInstance4 = Null;
-    /** @name PalletWorkingGroupRawEventInstance5 (235) */
+    /** @name PalletWorkingGroupRawEventInstance5 (240) */
     interface PalletWorkingGroupRawEventInstance5 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1940,6 +1978,8 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
         readonly isStatusTextChanged: boolean;
         readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+        readonly isVestedBudgetSpending: boolean;
+        readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
         readonly isBudgetSpending: boolean;
         readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
         readonly isRewardPaid: boolean;
@@ -1952,11 +1992,11 @@ declare module '@polkadot/types/lookup' {
         readonly asLeadRemarked: Bytes;
         readonly isWorkerRemarked: boolean;
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance5 (236) */
+    /** @name PalletWorkingGroupInstance5 (241) */
     type PalletWorkingGroupInstance5 = Null;
-    /** @name PalletWorkingGroupRawEventInstance6 (237) */
+    /** @name PalletWorkingGroupRawEventInstance6 (242) */
     interface PalletWorkingGroupRawEventInstance6 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1995,6 +2035,8 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
         readonly isStatusTextChanged: boolean;
         readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+        readonly isVestedBudgetSpending: boolean;
+        readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
         readonly isBudgetSpending: boolean;
         readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
         readonly isRewardPaid: boolean;
@@ -2007,11 +2049,11 @@ declare module '@polkadot/types/lookup' {
         readonly asLeadRemarked: Bytes;
         readonly isWorkerRemarked: boolean;
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance6 (238) */
+    /** @name PalletWorkingGroupInstance6 (243) */
     type PalletWorkingGroupInstance6 = Null;
-    /** @name PalletWorkingGroupRawEventInstance7 (239) */
+    /** @name PalletWorkingGroupRawEventInstance7 (244) */
     interface PalletWorkingGroupRawEventInstance7 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2050,6 +2092,8 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
         readonly isStatusTextChanged: boolean;
         readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+        readonly isVestedBudgetSpending: boolean;
+        readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
         readonly isBudgetSpending: boolean;
         readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
         readonly isRewardPaid: boolean;
@@ -2062,11 +2106,11 @@ declare module '@polkadot/types/lookup' {
         readonly asLeadRemarked: Bytes;
         readonly isWorkerRemarked: boolean;
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance7 (240) */
+    /** @name PalletWorkingGroupInstance7 (245) */
     type PalletWorkingGroupInstance7 = Null;
-    /** @name PalletWorkingGroupRawEventInstance8 (241) */
+    /** @name PalletWorkingGroupRawEventInstance8 (246) */
     interface PalletWorkingGroupRawEventInstance8 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2105,6 +2149,8 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
         readonly isStatusTextChanged: boolean;
         readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+        readonly isVestedBudgetSpending: boolean;
+        readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
         readonly isBudgetSpending: boolean;
         readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
         readonly isRewardPaid: boolean;
@@ -2117,11 +2163,11 @@ declare module '@polkadot/types/lookup' {
         readonly asLeadRemarked: Bytes;
         readonly isWorkerRemarked: boolean;
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance8 (242) */
+    /** @name PalletWorkingGroupInstance8 (247) */
     type PalletWorkingGroupInstance8 = Null;
-    /** @name PalletWorkingGroupRawEventInstance9 (243) */
+    /** @name PalletWorkingGroupRawEventInstance9 (248) */
     interface PalletWorkingGroupRawEventInstance9 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2160,6 +2206,8 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
         readonly isStatusTextChanged: boolean;
         readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+        readonly isVestedBudgetSpending: boolean;
+        readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
         readonly isBudgetSpending: boolean;
         readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
         readonly isRewardPaid: boolean;
@@ -2172,11 +2220,11 @@ declare module '@polkadot/types/lookup' {
         readonly asLeadRemarked: Bytes;
         readonly isWorkerRemarked: boolean;
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+        readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance9 (244) */
+    /** @name PalletWorkingGroupInstance9 (249) */
     type PalletWorkingGroupInstance9 = Null;
-    /** @name FrameSystemPhase (245) */
+    /** @name FrameSystemPhase (250) */
     interface FrameSystemPhase extends Enum {
         readonly isApplyExtrinsic: boolean;
         readonly asApplyExtrinsic: u32;
@@ -2184,12 +2232,12 @@ declare module '@polkadot/types/lookup' {
         readonly isInitialization: boolean;
         readonly type: 'ApplyExtrinsic' | 'Finalization' | 'Initialization';
     }
-    /** @name FrameSystemLastRuntimeUpgradeInfo (249) */
+    /** @name FrameSystemLastRuntimeUpgradeInfo (254) */
     interface FrameSystemLastRuntimeUpgradeInfo extends Struct {
         readonly specVersion: Compact<u32>;
         readonly specName: Text;
     }
-    /** @name FrameSystemCall (252) */
+    /** @name FrameSystemCall (257) */
     interface FrameSystemCall extends Enum {
         readonly isRemark: boolean;
         readonly asRemark: {
@@ -2226,41 +2274,41 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Remark' | 'SetHeapPages' | 'SetCode' | 'SetCodeWithoutChecks' | 'SetStorage' | 'KillStorage' | 'KillPrefix' | 'RemarkWithEvent';
     }
-    /** @name FrameSystemLimitsBlockWeights (255) */
+    /** @name FrameSystemLimitsBlockWeights (260) */
     interface FrameSystemLimitsBlockWeights extends Struct {
         readonly baseBlock: SpWeightsWeightV2Weight;
         readonly maxBlock: SpWeightsWeightV2Weight;
         readonly perClass: FrameSupportDispatchPerDispatchClassWeightsPerClass;
     }
-    /** @name FrameSupportDispatchPerDispatchClassWeightsPerClass (256) */
+    /** @name FrameSupportDispatchPerDispatchClassWeightsPerClass (261) */
     interface FrameSupportDispatchPerDispatchClassWeightsPerClass extends Struct {
         readonly normal: FrameSystemLimitsWeightsPerClass;
         readonly operational: FrameSystemLimitsWeightsPerClass;
         readonly mandatory: FrameSystemLimitsWeightsPerClass;
     }
-    /** @name FrameSystemLimitsWeightsPerClass (257) */
+    /** @name FrameSystemLimitsWeightsPerClass (262) */
     interface FrameSystemLimitsWeightsPerClass extends Struct {
         readonly baseExtrinsic: SpWeightsWeightV2Weight;
         readonly maxExtrinsic: Option<SpWeightsWeightV2Weight>;
         readonly maxTotal: Option<SpWeightsWeightV2Weight>;
         readonly reserved: Option<SpWeightsWeightV2Weight>;
     }
-    /** @name FrameSystemLimitsBlockLength (259) */
+    /** @name FrameSystemLimitsBlockLength (264) */
     interface FrameSystemLimitsBlockLength extends Struct {
         readonly max: FrameSupportDispatchPerDispatchClassU32;
     }
-    /** @name FrameSupportDispatchPerDispatchClassU32 (260) */
+    /** @name FrameSupportDispatchPerDispatchClassU32 (265) */
     interface FrameSupportDispatchPerDispatchClassU32 extends Struct {
         readonly normal: u32;
         readonly operational: u32;
         readonly mandatory: u32;
     }
-    /** @name SpWeightsRuntimeDbWeight (261) */
+    /** @name SpWeightsRuntimeDbWeight (266) */
     interface SpWeightsRuntimeDbWeight extends Struct {
         readonly read: u64;
         readonly write: u64;
     }
-    /** @name SpVersionRuntimeVersion (262) */
+    /** @name SpVersionRuntimeVersion (267) */
     interface SpVersionRuntimeVersion extends Struct {
         readonly specName: Text;
         readonly implName: Text;
@@ -2271,7 +2319,7 @@ declare module '@polkadot/types/lookup' {
         readonly transactionVersion: u32;
         readonly stateVersion: u8;
     }
-    /** @name FrameSystemError (268) */
+    /** @name FrameSystemError (273) */
     interface FrameSystemError extends Enum {
         readonly isInvalidSpecName: boolean;
         readonly isSpecVersionNeedsToIncrease: boolean;
@@ -2281,7 +2329,7 @@ declare module '@polkadot/types/lookup' {
         readonly isCallFiltered: boolean;
         readonly type: 'InvalidSpecName' | 'SpecVersionNeedsToIncrease' | 'FailedToExtractRuntimeVersion' | 'NonDefaultComposite' | 'NonZeroRefCount' | 'CallFiltered';
     }
-    /** @name PalletUtilityCall (269) */
+    /** @name PalletUtilityCall (274) */
     interface PalletUtilityCall extends Enum {
         readonly isBatch: boolean;
         readonly asBatch: {
@@ -2312,7 +2360,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Batch' | 'AsDerivative' | 'BatchAll' | 'DispatchAs' | 'ForceBatch' | 'WithWeight';
     }
-    /** @name PalletBabeCall (272) */
+    /** @name PalletBabeCall (277) */
     interface PalletBabeCall extends Enum {
         readonly isReportEquivocation: boolean;
         readonly asReportEquivocation: {
@@ -2330,14 +2378,14 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'ReportEquivocation' | 'ReportEquivocationUnsigned' | 'PlanConfigChange';
     }
-    /** @name SpConsensusSlotsEquivocationProof (273) */
+    /** @name SpConsensusSlotsEquivocationProof (278) */
     interface SpConsensusSlotsEquivocationProof extends Struct {
         readonly offender: SpConsensusBabeAppPublic;
         readonly slot: u64;
         readonly firstHeader: SpRuntimeHeader;
         readonly secondHeader: SpRuntimeHeader;
     }
-    /** @name SpRuntimeHeader (274) */
+    /** @name SpRuntimeHeader (279) */
     interface SpRuntimeHeader extends Struct {
         readonly parentHash: H256;
         readonly number: Compact<u32>;
@@ -2345,18 +2393,18 @@ declare module '@polkadot/types/lookup' {
         readonly extrinsicsRoot: H256;
         readonly digest: SpRuntimeDigest;
     }
-    /** @name SpRuntimeBlakeTwo256 (275) */
+    /** @name SpRuntimeBlakeTwo256 (280) */
     type SpRuntimeBlakeTwo256 = Null;
-    /** @name SpConsensusBabeAppPublic (276) */
+    /** @name SpConsensusBabeAppPublic (281) */
     interface SpConsensusBabeAppPublic extends SpCoreSr25519Public {
     }
-    /** @name SpSessionMembershipProof (278) */
+    /** @name SpSessionMembershipProof (283) */
     interface SpSessionMembershipProof extends Struct {
         readonly session: u32;
         readonly trieNodes: Vec<Bytes>;
         readonly validatorCount: u32;
     }
-    /** @name SpConsensusBabeDigestsNextConfigDescriptor (279) */
+    /** @name SpConsensusBabeDigestsNextConfigDescriptor (284) */
     interface SpConsensusBabeDigestsNextConfigDescriptor extends Enum {
         readonly isV1: boolean;
         readonly asV1: {
@@ -2365,14 +2413,14 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'V1';
     }
-    /** @name SpConsensusBabeAllowedSlots (280) */
+    /** @name SpConsensusBabeAllowedSlots (285) */
     interface SpConsensusBabeAllowedSlots extends Enum {
         readonly isPrimarySlots: boolean;
         readonly isPrimaryAndSecondaryPlainSlots: boolean;
         readonly isPrimaryAndSecondaryVRFSlots: boolean;
         readonly type: 'PrimarySlots' | 'PrimaryAndSecondaryPlainSlots' | 'PrimaryAndSecondaryVRFSlots';
     }
-    /** @name PalletTimestampCall (281) */
+    /** @name PalletTimestampCall (286) */
     interface PalletTimestampCall extends Enum {
         readonly isSet: boolean;
         readonly asSet: {
@@ -2380,7 +2428,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Set';
     }
-    /** @name PalletBalancesCall (282) */
+    /** @name PalletBalancesCall (287) */
     interface PalletBalancesCall extends Enum {
         readonly isTransfer: boolean;
         readonly asTransfer: {
@@ -2416,7 +2464,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Transfer' | 'SetBalance' | 'ForceTransfer' | 'TransferKeepAlive' | 'TransferAll' | 'ForceUnreserve';
     }
-    /** @name PalletElectionProviderMultiPhaseCall (283) */
+    /** @name PalletElectionProviderMultiPhaseCall (288) */
     interface PalletElectionProviderMultiPhaseCall extends Enum {
         readonly isSubmitUnsigned: boolean;
         readonly asSubmitUnsigned: {
@@ -2442,13 +2490,13 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'SubmitUnsigned' | 'SetMinimumUntrustedScore' | 'SetEmergencyElectionResult' | 'Submit' | 'GovernanceFallback';
     }
-    /** @name PalletElectionProviderMultiPhaseRawSolution (284) */
+    /** @name PalletElectionProviderMultiPhaseRawSolution (289) */
     interface PalletElectionProviderMultiPhaseRawSolution extends Struct {
         readonly solution: JoystreamNodeRuntimeNposSolution16;
         readonly score: SpNposElectionsElectionScore;
         readonly round: u32;
     }
-    /** @name JoystreamNodeRuntimeNposSolution16 (285) */
+    /** @name JoystreamNodeRuntimeNposSolution16 (290) */
     interface JoystreamNodeRuntimeNposSolution16 extends Struct {
         readonly votes1: Vec<ITuple<[Compact<u32>, Compact<u16>]>>;
         readonly votes2: Vec<ITuple<[Compact<u32>, ITuple<[Compact<u16>, Compact<PerU16>]>, Compact<u16>]>>;
@@ -2467,17 +2515,17 @@ declare module '@polkadot/types/lookup' {
         readonly votes15: Vec<ITuple<[Compact<u32>, Vec<ITuple<[Compact<u16>, Compact<PerU16>]>>, Compact<u16>]>>;
         readonly votes16: Vec<ITuple<[Compact<u32>, Vec<ITuple<[Compact<u16>, Compact<PerU16>]>>, Compact<u16>]>>;
     }
-    /** @name PalletElectionProviderMultiPhaseSolutionOrSnapshotSize (336) */
+    /** @name PalletElectionProviderMultiPhaseSolutionOrSnapshotSize (341) */
     interface PalletElectionProviderMultiPhaseSolutionOrSnapshotSize extends Struct {
         readonly voters: Compact<u32>;
         readonly targets: Compact<u32>;
     }
-    /** @name SpNposElectionsSupport (340) */
+    /** @name SpNposElectionsSupport (345) */
     interface SpNposElectionsSupport extends Struct {
         readonly total: u128;
         readonly voters: Vec<ITuple<[AccountId32, u128]>>;
     }
-    /** @name PalletStakingPalletCall (342) */
+    /** @name PalletStakingPalletCall (347) */
     interface PalletStakingPalletCall extends Enum {
         readonly isBond: boolean;
         readonly asBond: {
@@ -2584,7 +2632,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Bond' | 'BondExtra' | 'Unbond' | 'WithdrawUnbonded' | 'Validate' | 'Nominate' | 'Chill' | 'SetPayee' | 'SetController' | 'SetValidatorCount' | 'IncreaseValidatorCount' | 'ScaleValidatorCount' | 'ForceNoEras' | 'ForceNewEra' | 'SetInvulnerables' | 'ForceUnstake' | 'ForceNewEraAlways' | 'CancelDeferredSlash' | 'PayoutStakers' | 'Rebond' | 'ReapStash' | 'Kick' | 'SetStakingConfigs' | 'ChillOther' | 'ForceApplyMinCommission' | 'SetMinCommission';
     }
-    /** @name PalletStakingRewardDestination (343) */
+    /** @name PalletStakingRewardDestination (348) */
     interface PalletStakingRewardDestination extends Enum {
         readonly isStaked: boolean;
         readonly isStash: boolean;
@@ -2594,7 +2642,7 @@ declare module '@polkadot/types/lookup' {
         readonly isNone: boolean;
         readonly type: 'Staked' | 'Stash' | 'Controller' | 'Account' | 'None';
     }
-    /** @name PalletStakingPalletConfigOpU128 (347) */
+    /** @name PalletStakingPalletConfigOpU128 (351) */
     interface PalletStakingPalletConfigOpU128 extends Enum {
         readonly isNoop: boolean;
         readonly isSet: boolean;
@@ -2602,7 +2650,7 @@ declare module '@polkadot/types/lookup' {
         readonly isRemove: boolean;
         readonly type: 'Noop' | 'Set' | 'Remove';
     }
-    /** @name PalletStakingPalletConfigOpU32 (348) */
+    /** @name PalletStakingPalletConfigOpU32 (352) */
     interface PalletStakingPalletConfigOpU32 extends Enum {
         readonly isNoop: boolean;
         readonly isSet: boolean;
@@ -2610,7 +2658,7 @@ declare module '@polkadot/types/lookup' {
         readonly isRemove: boolean;
         readonly type: 'Noop' | 'Set' | 'Remove';
     }
-    /** @name PalletStakingPalletConfigOpPercent (349) */
+    /** @name PalletStakingPalletConfigOpPercent (353) */
     interface PalletStakingPalletConfigOpPercent extends Enum {
         readonly isNoop: boolean;
         readonly isSet: boolean;
@@ -2618,7 +2666,7 @@ declare module '@polkadot/types/lookup' {
         readonly isRemove: boolean;
         readonly type: 'Noop' | 'Set' | 'Remove';
     }
-    /** @name PalletStakingPalletConfigOpPerbill (350) */
+    /** @name PalletStakingPalletConfigOpPerbill (354) */
     interface PalletStakingPalletConfigOpPerbill extends Enum {
         readonly isNoop: boolean;
         readonly isSet: boolean;
@@ -2626,7 +2674,7 @@ declare module '@polkadot/types/lookup' {
         readonly isRemove: boolean;
         readonly type: 'Noop' | 'Set' | 'Remove';
     }
-    /** @name PalletSessionCall (351) */
+    /** @name PalletSessionCall (355) */
     interface PalletSessionCall extends Enum {
         readonly isSetKeys: boolean;
         readonly asSetKeys: {
@@ -2636,17 +2684,17 @@ declare module '@polkadot/types/lookup' {
         readonly isPurgeKeys: boolean;
         readonly type: 'SetKeys' | 'PurgeKeys';
     }
-    /** @name JoystreamNodeRuntimeSessionKeys (352) */
+    /** @name JoystreamNodeRuntimeSessionKeys (356) */
     interface JoystreamNodeRuntimeSessionKeys extends Struct {
         readonly grandpa: SpConsensusGrandpaAppPublic;
         readonly babe: SpConsensusBabeAppPublic;
         readonly imOnline: PalletImOnlineSr25519AppSr25519Public;
         readonly authorityDiscovery: SpAuthorityDiscoveryAppPublic;
     }
-    /** @name SpAuthorityDiscoveryAppPublic (353) */
+    /** @name SpAuthorityDiscoveryAppPublic (357) */
     interface SpAuthorityDiscoveryAppPublic extends SpCoreSr25519Public {
     }
-    /** @name PalletGrandpaCall (354) */
+    /** @name PalletGrandpaCall (358) */
     interface PalletGrandpaCall extends Enum {
         readonly isReportEquivocation: boolean;
         readonly asReportEquivocation: {
@@ -2665,12 +2713,12 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'ReportEquivocation' | 'ReportEquivocationUnsigned' | 'NoteStalled';
     }
-    /** @name SpConsensusGrandpaEquivocationProof (355) */
+    /** @name SpConsensusGrandpaEquivocationProof (359) */
     interface SpConsensusGrandpaEquivocationProof extends Struct {
         readonly setId: u64;
         readonly equivocation: SpConsensusGrandpaEquivocation;
     }
-    /** @name SpConsensusGrandpaEquivocation (356) */
+    /** @name SpConsensusGrandpaEquivocation (360) */
     interface SpConsensusGrandpaEquivocation extends Enum {
         readonly isPrevote: boolean;
         readonly asPrevote: FinalityGrandpaEquivocationPrevote;
@@ -2678,37 +2726,37 @@ declare module '@polkadot/types/lookup' {
         readonly asPrecommit: FinalityGrandpaEquivocationPrecommit;
         readonly type: 'Prevote' | 'Precommit';
     }
-    /** @name FinalityGrandpaEquivocationPrevote (357) */
+    /** @name FinalityGrandpaEquivocationPrevote (361) */
     interface FinalityGrandpaEquivocationPrevote extends Struct {
         readonly roundNumber: u64;
         readonly identity: SpConsensusGrandpaAppPublic;
         readonly first: ITuple<[FinalityGrandpaPrevote, SpConsensusGrandpaAppSignature]>;
         readonly second: ITuple<[FinalityGrandpaPrevote, SpConsensusGrandpaAppSignature]>;
     }
-    /** @name FinalityGrandpaPrevote (358) */
+    /** @name FinalityGrandpaPrevote (362) */
     interface FinalityGrandpaPrevote extends Struct {
         readonly targetHash: H256;
         readonly targetNumber: u32;
     }
-    /** @name SpConsensusGrandpaAppSignature (359) */
+    /** @name SpConsensusGrandpaAppSignature (363) */
     interface SpConsensusGrandpaAppSignature extends SpCoreEd25519Signature {
     }
-    /** @name SpCoreEd25519Signature (360) */
+    /** @name SpCoreEd25519Signature (364) */
     interface SpCoreEd25519Signature extends U8aFixed {
     }
-    /** @name FinalityGrandpaEquivocationPrecommit (363) */
+    /** @name FinalityGrandpaEquivocationPrecommit (367) */
     interface FinalityGrandpaEquivocationPrecommit extends Struct {
         readonly roundNumber: u64;
         readonly identity: SpConsensusGrandpaAppPublic;
         readonly first: ITuple<[FinalityGrandpaPrecommit, SpConsensusGrandpaAppSignature]>;
         readonly second: ITuple<[FinalityGrandpaPrecommit, SpConsensusGrandpaAppSignature]>;
     }
-    /** @name FinalityGrandpaPrecommit (364) */
+    /** @name FinalityGrandpaPrecommit (368) */
     interface FinalityGrandpaPrecommit extends Struct {
         readonly targetHash: H256;
         readonly targetNumber: u32;
     }
-    /** @name PalletImOnlineCall (366) */
+    /** @name PalletImOnlineCall (370) */
     interface PalletImOnlineCall extends Enum {
         readonly isHeartbeat: boolean;
         readonly asHeartbeat: {
@@ -2717,7 +2765,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Heartbeat';
     }
-    /** @name PalletImOnlineHeartbeat (367) */
+    /** @name PalletImOnlineHeartbeat (371) */
     interface PalletImOnlineHeartbeat extends Struct {
         readonly blockNumber: u32;
         readonly networkState: SpCoreOffchainOpaqueNetworkState;
@@ -2725,18 +2773,18 @@ declare module '@polkadot/types/lookup' {
         readonly authorityIndex: u32;
         readonly validatorsLen: u32;
     }
-    /** @name SpCoreOffchainOpaqueNetworkState (368) */
+    /** @name SpCoreOffchainOpaqueNetworkState (372) */
     interface SpCoreOffchainOpaqueNetworkState extends Struct {
         readonly peerId: OpaquePeerId;
         readonly externalAddresses: Vec<OpaqueMultiaddr>;
     }
-    /** @name PalletImOnlineSr25519AppSr25519Signature (372) */
+    /** @name PalletImOnlineSr25519AppSr25519Signature (376) */
     interface PalletImOnlineSr25519AppSr25519Signature extends SpCoreSr25519Signature {
     }
-    /** @name SpCoreSr25519Signature (373) */
+    /** @name SpCoreSr25519Signature (377) */
     interface SpCoreSr25519Signature extends U8aFixed {
     }
-    /** @name PalletBagsListCall (374) */
+    /** @name PalletBagsListCall (378) */
     interface PalletBagsListCall extends Enum {
         readonly isRebag: boolean;
         readonly asRebag: {
@@ -2748,7 +2796,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Rebag' | 'PutInFrontOf';
     }
-    /** @name PalletVestingCall (375) */
+    /** @name PalletVestingCall (379) */
     interface PalletVestingCall extends Enum {
         readonly isVest: boolean;
         readonly isVestOther: boolean;
@@ -2773,13 +2821,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Vest' | 'VestOther' | 'VestedTransfer' | 'ForceVestedTransfer' | 'MergeSchedules';
     }
-    /** @name PalletVestingVestingInfo (376) */
-    interface PalletVestingVestingInfo extends Struct {
-        readonly locked: u128;
-        readonly perBlock: u128;
-        readonly startingBlock: u32;
-    }
-    /** @name PalletMultisigCall (377) */
+    /** @name PalletMultisigCall (380) */
     interface PalletMultisigCall extends Enum {
         readonly isAsMultiThreshold1: boolean;
         readonly asAsMultiThreshold1: {
@@ -2811,7 +2853,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AsMultiThreshold1' | 'AsMulti' | 'ApproveAsMulti' | 'CancelAsMulti';
     }
-    /** @name PalletCouncilCall (379) */
+    /** @name PalletCouncilCall (382) */
     interface PalletCouncilCall extends Enum {
         readonly isAnnounceCandidacy: boolean;
         readonly asAnnounceCandidacy: {
@@ -2849,6 +2891,14 @@ declare module '@polkadot/types/lookup' {
         readonly asSetCouncilorReward: {
             readonly councilorReward: u128;
         } & Struct;
+        readonly isSetEraPayoutDampingFactor: boolean;
+        readonly asSetEraPayoutDampingFactor: {
+            readonly newParameter: Percent;
+        } & Struct;
+        readonly isDecreaseCouncilBudget: boolean;
+        readonly asDecreaseCouncilBudget: {
+            readonly reductionAmount: u128;
+        } & Struct;
         readonly isFundingRequest: boolean;
         readonly asFundingRequest: {
             readonly fundingRequests: Vec<PalletCommonFundingRequestParameters>;
@@ -2869,9 +2919,9 @@ declare module '@polkadot/types/lookup' {
             readonly candidateId: u64;
             readonly msg: Bytes;
         } & Struct;
-        readonly type: 'AnnounceCandidacy' | 'ReleaseCandidacyStake' | 'WithdrawCandidacy' | 'SetCandidacyNote' | 'SetBudget' | 'PlanBudgetRefill' | 'SetBudgetIncrement' | 'SetCouncilorReward' | 'FundingRequest' | 'FundCouncilBudget' | 'CouncilorRemark' | 'CandidateRemark';
+        readonly type: 'AnnounceCandidacy' | 'ReleaseCandidacyStake' | 'WithdrawCandidacy' | 'SetCandidacyNote' | 'SetBudget' | 'PlanBudgetRefill' | 'SetBudgetIncrement' | 'SetCouncilorReward' | 'SetEraPayoutDampingFactor' | 'DecreaseCouncilBudget' | 'FundingRequest' | 'FundCouncilBudget' | 'CouncilorRemark' | 'CandidateRemark';
     }
-    /** @name PalletReferendumCall (380) */
+    /** @name PalletReferendumCall (383) */
     interface PalletReferendumCall extends Enum {
         readonly isVote: boolean;
         readonly asVote: {
@@ -2887,7 +2937,7 @@ declare module '@polkadot/types/lookup' {
         readonly isOptOutOfVoting: boolean;
         readonly type: 'Vote' | 'RevealVote' | 'ReleaseVoteStake' | 'OptOutOfVoting';
     }
-    /** @name PalletMembershipCall (381) */
+    /** @name PalletMembershipCall (384) */
     interface PalletMembershipCall extends Enum {
         readonly isBuyMembership: boolean;
         readonly asBuyMembership: {
@@ -2970,7 +3020,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'BuyMembership' | 'UpdateProfile' | 'UpdateAccounts' | 'UpdateProfileVerification' | 'SetReferralCut' | 'TransferInvites' | 'InviteMember' | 'GiftMembership' | 'SetMembershipPrice' | 'SetLeaderInvitationQuota' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'AddStakingAccountCandidate' | 'RemoveStakingAccount' | 'ConfirmStakingAccount' | 'MemberRemark' | 'CreateMember';
     }
-    /** @name PalletForumCall (382) */
+    /** @name PalletForumCall (385) */
     interface PalletForumCall extends Enum {
         readonly isUpdateCategoryMembershipOfModerator: boolean;
         readonly asUpdateCategoryMembershipOfModerator: {
@@ -3080,7 +3130,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'UpdateCategoryMembershipOfModerator' | 'CreateCategory' | 'UpdateCategoryArchivalStatus' | 'UpdateCategoryTitle' | 'UpdateCategoryDescription' | 'DeleteCategory' | 'CreateThread' | 'EditThreadMetadata' | 'DeleteThread' | 'MoveThreadToCategory' | 'ModerateThread' | 'AddPost' | 'EditPostText' | 'ModeratePost' | 'DeletePosts' | 'SetStickiedThreads';
     }
-    /** @name PalletConstitutionCall (383) */
+    /** @name PalletConstitutionCall (386) */
     interface PalletConstitutionCall extends Enum {
         readonly isAmendConstitution: boolean;
         readonly asAmendConstitution: {
@@ -3088,7 +3138,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AmendConstitution';
     }
-    /** @name PalletBountyCall (384) */
+    /** @name PalletBountyCall (387) */
     interface PalletBountyCall extends Enum {
         readonly isCreateBounty: boolean;
         readonly asCreateBounty: {
@@ -3176,7 +3226,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'CreateBounty' | 'FundBounty' | 'TerminateBounty' | 'SwitchOracle' | 'WithdrawFunding' | 'AnnounceWorkEntry' | 'SubmitWork' | 'EndWorkingPeriod' | 'SubmitOracleJudgment' | 'WithdrawEntrantStake' | 'WithdrawOracleReward' | 'ContributorRemark' | 'OracleRemark' | 'EntrantRemark' | 'CreatorRemark';
     }
-    /** @name PalletJoystreamUtilityCall (385) */
+    /** @name PalletJoystreamUtilityCall (388) */
     interface PalletJoystreamUtilityCall extends Enum {
         readonly isExecuteSignalProposal: boolean;
         readonly asExecuteSignalProposal: {
@@ -3198,7 +3248,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'ExecuteSignalProposal' | 'ExecuteRuntimeUpgradeProposal' | 'UpdateWorkingGroupBudget' | 'BurnAccountTokens';
     }
-    /** @name PalletContentCall (386) */
+    /** @name PalletContentCall (389) */
     interface PalletContentCall extends Enum {
         readonly isCreateCuratorGroup: boolean;
         readonly asCreateCuratorGroup: {
@@ -3568,35 +3618,35 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'CreateCuratorGroup' | 'UpdateCuratorGroupPermissions' | 'SetCuratorGroupStatus' | 'AddCuratorToGroup' | 'RemoveCuratorFromGroup' | 'CreateChannel' | 'UpdateChannel' | 'UpdateChannelPrivilegeLevel' | 'SetChannelPausedFeaturesAsModerator' | 'DeleteChannel' | 'DeleteChannelAssetsAsModerator' | 'SetChannelVisibilityAsModerator' | 'CreateVideo' | 'UpdateVideo' | 'DeleteVideo' | 'DeleteVideoAssetsAsModerator' | 'SetVideoVisibilityAsModerator' | 'UpdateChannelPayouts' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'UpdateChannelStateBloatBond' | 'UpdateVideoStateBloatBond' | 'IssueNft' | 'DestroyNft' | 'StartOpenAuction' | 'StartEnglishAuction' | 'CancelEnglishAuction' | 'CancelOpenAuction' | 'CancelOffer' | 'CancelBuyNow' | 'UpdateBuyNowPrice' | 'MakeOpenAuctionBid' | 'MakeEnglishAuctionBid' | 'CancelOpenAuctionBid' | 'SettleEnglishAuction' | 'PickOpenAuctionWinner' | 'OfferNft' | 'SlingNftBack' | 'AcceptIncomingOffer' | 'SellNft' | 'BuyNft' | 'ToggleNftLimits' | 'ChannelOwnerRemark' | 'ChannelAgentRemark' | 'NftOwnerRemark' | 'InitializeChannelTransfer' | 'CancelChannelTransfer' | 'AcceptChannelTransfer' | 'UpdateGlobalNftLimit' | 'UpdateChannelNftLimit' | 'IssueCreatorToken' | 'InitCreatorTokenSale' | 'UpdateUpcomingCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRateTo' | 'ClaimCreatorTokenPatronageCredit' | 'IssueRevenueSplit' | 'FinalizeRevenueSplit' | 'FinalizeCreatorTokenSale' | 'DeissueCreatorToken' | 'ActivateAmm' | 'DeactivateAmm' | 'CreatorTokenIssuerRemark';
     }
-    /** @name PalletContentChannelBagWitness (387) */
+    /** @name PalletContentChannelBagWitness (390) */
     interface PalletContentChannelBagWitness extends Struct {
         readonly storageBucketsNum: u32;
         readonly distributionBucketsNum: u32;
     }
-    /** @name PalletCommonMerkleTreeProofElementRecord (389) */
+    /** @name PalletCommonMerkleTreeProofElementRecord (392) */
     interface PalletCommonMerkleTreeProofElementRecord extends Struct {
         readonly hash_: H256;
         readonly side: PalletCommonMerkleTreeSide;
     }
-    /** @name PalletCommonMerkleTreeSide (390) */
+    /** @name PalletCommonMerkleTreeSide (393) */
     interface PalletCommonMerkleTreeSide extends Enum {
         readonly isLeft: boolean;
         readonly isRight: boolean;
         readonly type: 'Left' | 'Right';
     }
-    /** @name PalletContentPullPaymentElement (391) */
+    /** @name PalletContentPullPaymentElement (394) */
     interface PalletContentPullPaymentElement extends Struct {
         readonly channelId: u64;
         readonly cumulativeRewardEarned: u128;
         readonly reason: H256;
     }
-    /** @name PalletContentInitTransferParameters (392) */
+    /** @name PalletContentInitTransferParameters (395) */
     interface PalletContentInitTransferParameters extends Struct {
         readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
         readonly price: u128;
         readonly newOwner: PalletContentChannelOwner;
     }
-    /** @name PalletProjectTokenTokenSaleParams (393) */
+    /** @name PalletProjectTokenTokenSaleParams (396) */
     interface PalletProjectTokenTokenSaleParams extends Struct {
         readonly unitPrice: u128;
         readonly upperBoundQuantity: u128;
@@ -3606,12 +3656,12 @@ declare module '@polkadot/types/lookup' {
         readonly capPerMember: Option<u128>;
         readonly metadata: Option<Bytes>;
     }
-    /** @name PalletProjectTokenAmmParams (397) */
+    /** @name PalletProjectTokenAmmParams (400) */
     interface PalletProjectTokenAmmParams extends Struct {
         readonly slope: u128;
         readonly intercept: u128;
     }
-    /** @name PalletStorageCall (398) */
+    /** @name PalletStorageCall (401) */
     interface PalletStorageCall extends Enum {
         readonly isDeleteStorageBucket: boolean;
         readonly asDeleteStorageBucket: {
@@ -3789,8 +3839,12 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'DeleteStorageBucket' | 'UpdateUploadingBlockedStatus' | 'UpdateDataSizeFee' | 'UpdateStorageBucketsPerBagLimit' | 'UpdateStorageBucketsVoucherMaxLimits' | 'UpdateDataObjectStateBloatBond' | 'UpdateNumberOfStorageBucketsInDynamicBagCreationPolicy' | 'UpdateBlacklist' | 'CreateStorageBucket' | 'UpdateStorageBucketsForBag' | 'CancelStorageBucketOperatorInvite' | 'InviteStorageBucketOperator' | 'RemoveStorageBucketOperator' | 'UpdateStorageBucketStatus' | 'SetStorageBucketVoucherLimits' | 'AcceptStorageBucketInvitation' | 'SetStorageOperatorMetadata' | 'AcceptPendingDataObjects' | 'CreateDistributionBucketFamily' | 'DeleteDistributionBucketFamily' | 'CreateDistributionBucket' | 'UpdateDistributionBucketStatus' | 'DeleteDistributionBucket' | 'UpdateDistributionBucketsForBag' | 'UpdateDistributionBucketsPerBagLimit' | 'UpdateDistributionBucketMode' | 'UpdateFamiliesInDynamicBagCreationPolicy' | 'InviteDistributionBucketOperator' | 'CancelDistributionBucketOperatorInvite' | 'RemoveDistributionBucketOperator' | 'SetDistributionBucketFamilyMetadata' | 'AcceptDistributionBucketInvitation' | 'SetDistributionOperatorMetadata' | 'StorageOperatorRemark' | 'DistributionOperatorRemark';
     }
-    /** @name PalletProjectTokenCall (399) */
+    /** @name PalletProjectTokenCall (402) */
     interface PalletProjectTokenCall extends Enum {
+        readonly isUpdateTokenConstraints: boolean;
+        readonly asUpdateTokenConstraints: {
+            readonly parameters: PalletProjectTokenTokenConstraints;
+        } & Struct;
         readonly isTransfer: boolean;
         readonly asTransfer: {
             readonly srcMemberId: u64;
@@ -3850,18 +3904,18 @@ declare module '@polkadot/types/lookup' {
         readonly asSetFrozenStatus: {
             readonly freeze: bool;
         } & Struct;
-        readonly type: 'Transfer' | 'Burn' | 'DustAccount' | 'JoinWhitelist' | 'PurchaseTokensOnSale' | 'ParticipateInSplit' | 'ExitRevenueSplit' | 'BuyOnAmm' | 'SellOnAmm' | 'SetFrozenStatus';
+        readonly type: 'UpdateTokenConstraints' | 'Transfer' | 'Burn' | 'DustAccount' | 'JoinWhitelist' | 'PurchaseTokensOnSale' | 'ParticipateInSplit' | 'ExitRevenueSplit' | 'BuyOnAmm' | 'SellOnAmm' | 'SetFrozenStatus';
     }
-    /** @name PalletProjectTokenMerkleProof (403) */
+    /** @name PalletProjectTokenMerkleProof (406) */
     interface PalletProjectTokenMerkleProof extends Vec<ITuple<[H256, PalletProjectTokenMerkleSide]>> {
     }
-    /** @name PalletProjectTokenMerkleSide (406) */
+    /** @name PalletProjectTokenMerkleSide (409) */
     interface PalletProjectTokenMerkleSide extends Enum {
         readonly isRight: boolean;
         readonly isLeft: boolean;
         readonly type: 'Right' | 'Left';
     }
-    /** @name PalletProposalsEngineCall (409) */
+    /** @name PalletProposalsEngineCall (412) */
     interface PalletProposalsEngineCall extends Enum {
         readonly isVote: boolean;
         readonly asVote: {
@@ -3887,7 +3941,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Vote' | 'CancelProposal' | 'VetoProposal' | 'ProposerRemark';
     }
-    /** @name PalletProposalsDiscussionCall (410) */
+    /** @name PalletProposalsDiscussionCall (413) */
     interface PalletProposalsDiscussionCall extends Enum {
         readonly isAddPost: boolean;
         readonly asAddPost: {
@@ -3917,7 +3971,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AddPost' | 'DeletePost' | 'UpdatePost' | 'ChangeThreadMode';
     }
-    /** @name PalletProposalsCodexCall (411) */
+    /** @name PalletProposalsCodexCall (414) */
     interface PalletProposalsCodexCall extends Enum {
         readonly isCreateProposal: boolean;
         readonly asCreateProposal: {
@@ -3926,7 +3980,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'CreateProposal';
     }
-    /** @name PalletWorkingGroupCall (412) */
+    /** @name PalletWorkingGroupCall (415) */
     interface PalletWorkingGroupCall extends Enum {
         readonly isAddOpening: boolean;
         readonly asAddOpening: {
@@ -4008,6 +4062,12 @@ declare module '@polkadot/types/lookup' {
             readonly amount: u128;
             readonly rationale: Option<Bytes>;
         } & Struct;
+        readonly isVestedSpendFromBudget: boolean;
+        readonly asVestedSpendFromBudget: {
+            readonly accountId: AccountId32;
+            readonly vestingSchedule: PalletVestingVestingInfo;
+            readonly rationale: Option<Bytes>;
+        } & Struct;
         readonly isFundWorkingGroupBudget: boolean;
         readonly asFundWorkingGroupBudget: {
             readonly memberId: u64;
@@ -4023,16 +4083,16 @@ declare module '@polkadot/types/lookup' {
             readonly workerId: u64;
             readonly msg: Bytes;
         } & Struct;
-        readonly type: 'AddOpening' | 'ApplyOnOpening' | 'FillOpening' | 'UpdateRoleAccount' | 'LeaveRole' | 'TerminateRole' | 'SlashStake' | 'DecreaseStake' | 'IncreaseStake' | 'WithdrawApplication' | 'CancelOpening' | 'SetBudget' | 'UpdateRewardAccount' | 'UpdateRewardAmount' | 'SetStatusText' | 'SpendFromBudget' | 'FundWorkingGroupBudget' | 'LeadRemark' | 'WorkerRemark';
+        readonly type: 'AddOpening' | 'ApplyOnOpening' | 'FillOpening' | 'UpdateRoleAccount' | 'LeaveRole' | 'TerminateRole' | 'SlashStake' | 'DecreaseStake' | 'IncreaseStake' | 'WithdrawApplication' | 'CancelOpening' | 'SetBudget' | 'UpdateRewardAccount' | 'UpdateRewardAmount' | 'SetStatusText' | 'SpendFromBudget' | 'VestedSpendFromBudget' | 'FundWorkingGroupBudget' | 'LeadRemark' | 'WorkerRemark';
     }
-    /** @name JoystreamNodeRuntimeOriginCaller (421) */
+    /** @name JoystreamNodeRuntimeOriginCaller (424) */
     interface JoystreamNodeRuntimeOriginCaller extends Enum {
         readonly isSystem: boolean;
         readonly asSystem: FrameSupportDispatchRawOrigin;
         readonly isVoid: boolean;
         readonly type: 'System' | 'Void';
     }
-    /** @name FrameSupportDispatchRawOrigin (422) */
+    /** @name FrameSupportDispatchRawOrigin (425) */
     interface FrameSupportDispatchRawOrigin extends Enum {
         readonly isRoot: boolean;
         readonly isSigned: boolean;
@@ -4040,14 +4100,14 @@ declare module '@polkadot/types/lookup' {
         readonly isNone: boolean;
         readonly type: 'Root' | 'Signed' | 'None';
     }
-    /** @name SpCoreVoid (423) */
+    /** @name SpCoreVoid (426) */
     type SpCoreVoid = Null;
-    /** @name PalletUtilityError (424) */
+    /** @name PalletUtilityError (427) */
     interface PalletUtilityError extends Enum {
         readonly isTooManyCalls: boolean;
         readonly type: 'TooManyCalls';
     }
-    /** @name SpConsensusBabeDigestsPreDigest (431) */
+    /** @name SpConsensusBabeDigestsPreDigest (434) */
     interface SpConsensusBabeDigestsPreDigest extends Enum {
         readonly isPrimary: boolean;
         readonly asPrimary: SpConsensusBabeDigestsPrimaryPreDigest;
@@ -4057,31 +4117,31 @@ declare module '@polkadot/types/lookup' {
         readonly asSecondaryVRF: SpConsensusBabeDigestsSecondaryVRFPreDigest;
         readonly type: 'Primary' | 'SecondaryPlain' | 'SecondaryVRF';
     }
-    /** @name SpConsensusBabeDigestsPrimaryPreDigest (432) */
+    /** @name SpConsensusBabeDigestsPrimaryPreDigest (435) */
     interface SpConsensusBabeDigestsPrimaryPreDigest extends Struct {
         readonly authorityIndex: u32;
         readonly slot: u64;
         readonly vrfOutput: U8aFixed;
         readonly vrfProof: U8aFixed;
     }
-    /** @name SpConsensusBabeDigestsSecondaryPlainPreDigest (433) */
+    /** @name SpConsensusBabeDigestsSecondaryPlainPreDigest (436) */
     interface SpConsensusBabeDigestsSecondaryPlainPreDigest extends Struct {
         readonly authorityIndex: u32;
         readonly slot: u64;
     }
-    /** @name SpConsensusBabeDigestsSecondaryVRFPreDigest (434) */
+    /** @name SpConsensusBabeDigestsSecondaryVRFPreDigest (437) */
     interface SpConsensusBabeDigestsSecondaryVRFPreDigest extends Struct {
         readonly authorityIndex: u32;
         readonly slot: u64;
         readonly vrfOutput: U8aFixed;
         readonly vrfProof: U8aFixed;
     }
-    /** @name SpConsensusBabeBabeEpochConfiguration (436) */
+    /** @name SpConsensusBabeBabeEpochConfiguration (439) */
     interface SpConsensusBabeBabeEpochConfiguration extends Struct {
         readonly c: ITuple<[u64, u64]>;
         readonly allowedSlots: SpConsensusBabeAllowedSlots;
     }
-    /** @name PalletBabeError (438) */
+    /** @name PalletBabeError (441) */
     interface PalletBabeError extends Enum {
         readonly isInvalidEquivocationProof: boolean;
         readonly isInvalidKeyOwnershipProof: boolean;
@@ -4089,25 +4149,25 @@ declare module '@polkadot/types/lookup' {
         readonly isInvalidConfiguration: boolean;
         readonly type: 'InvalidEquivocationProof' | 'InvalidKeyOwnershipProof' | 'DuplicateOffenceReport' | 'InvalidConfiguration';
     }
-    /** @name PalletBalancesBalanceLock (440) */
+    /** @name PalletBalancesBalanceLock (443) */
     interface PalletBalancesBalanceLock extends Struct {
         readonly id: U8aFixed;
         readonly amount: u128;
         readonly reasons: PalletBalancesReasons;
     }
-    /** @name PalletBalancesReasons (441) */
+    /** @name PalletBalancesReasons (444) */
     interface PalletBalancesReasons extends Enum {
         readonly isFee: boolean;
         readonly isMisc: boolean;
         readonly isAll: boolean;
         readonly type: 'Fee' | 'Misc' | 'All';
     }
-    /** @name PalletBalancesReserveData (444) */
+    /** @name PalletBalancesReserveData (447) */
     interface PalletBalancesReserveData extends Struct {
         readonly id: U8aFixed;
         readonly amount: u128;
     }
-    /** @name PalletBalancesError (446) */
+    /** @name PalletBalancesError (449) */
     interface PalletBalancesError extends Enum {
         readonly isVestingBalance: boolean;
         readonly isLiquidityRestrictions: boolean;
@@ -4119,31 +4179,31 @@ declare module '@polkadot/types/lookup' {
         readonly isTooManyReserves: boolean;
         readonly type: 'VestingBalance' | 'LiquidityRestrictions' | 'InsufficientBalance' | 'ExistentialDeposit' | 'KeepAlive' | 'ExistingVestingSchedule' | 'DeadAccount' | 'TooManyReserves';
     }
-    /** @name PalletTransactionPaymentReleases (448) */
+    /** @name PalletTransactionPaymentReleases (451) */
     interface PalletTransactionPaymentReleases extends Enum {
         readonly isV1Ancient: boolean;
         readonly isV2: boolean;
         readonly type: 'V1Ancient' | 'V2';
     }
-    /** @name PalletElectionProviderMultiPhaseReadySolution (449) */
+    /** @name PalletElectionProviderMultiPhaseReadySolution (452) */
     interface PalletElectionProviderMultiPhaseReadySolution extends Struct {
         readonly supports: Vec<ITuple<[AccountId32, SpNposElectionsSupport]>>;
         readonly score: SpNposElectionsElectionScore;
         readonly compute: PalletElectionProviderMultiPhaseElectionCompute;
     }
-    /** @name PalletElectionProviderMultiPhaseRoundSnapshot (451) */
+    /** @name PalletElectionProviderMultiPhaseRoundSnapshot (454) */
     interface PalletElectionProviderMultiPhaseRoundSnapshot extends Struct {
         readonly voters: Vec<ITuple<[AccountId32, u64, Vec<AccountId32>]>>;
         readonly targets: Vec<AccountId32>;
     }
-    /** @name PalletElectionProviderMultiPhaseSignedSignedSubmission (458) */
+    /** @name PalletElectionProviderMultiPhaseSignedSignedSubmission (461) */
     interface PalletElectionProviderMultiPhaseSignedSignedSubmission extends Struct {
         readonly who: AccountId32;
         readonly deposit: u128;
         readonly rawSolution: PalletElectionProviderMultiPhaseRawSolution;
         readonly callFee: u128;
     }
-    /** @name PalletElectionProviderMultiPhaseError (459) */
+    /** @name PalletElectionProviderMultiPhaseError (462) */
     interface PalletElectionProviderMultiPhaseError extends Enum {
         readonly isPreDispatchEarlySubmission: boolean;
         readonly isPreDispatchWrongWinnerCount: boolean;
@@ -4161,7 +4221,7 @@ declare module '@polkadot/types/lookup' {
         readonly isTooManyWinners: boolean;
         readonly type: 'PreDispatchEarlySubmission' | 'PreDispatchWrongWinnerCount' | 'PreDispatchWeakSubmission' | 'SignedQueueFull' | 'SignedCannotPayDeposit' | 'SignedInvalidWitness' | 'SignedTooMuchWeight' | 'OcwCallWrongEra' | 'MissingSnapshotMetadata' | 'InvalidSubmissionIndex' | 'CallNotAllowed' | 'FallbackFailed' | 'BoundNotMet' | 'TooManyWinners';
     }
-    /** @name PalletStakingStakingLedger (460) */
+    /** @name PalletStakingStakingLedger (463) */
     interface PalletStakingStakingLedger extends Struct {
         readonly stash: AccountId32;
         readonly total: Compact<u128>;
@@ -4169,28 +4229,28 @@ declare module '@polkadot/types/lookup' {
         readonly unlocking: Vec<PalletStakingUnlockChunk>;
         readonly claimedRewards: Vec<u32>;
     }
-    /** @name PalletStakingUnlockChunk (462) */
+    /** @name PalletStakingUnlockChunk (465) */
     interface PalletStakingUnlockChunk extends Struct {
         readonly value: Compact<u128>;
         readonly era: Compact<u32>;
     }
-    /** @name PalletStakingNominations (465) */
+    /** @name PalletStakingNominations (468) */
     interface PalletStakingNominations extends Struct {
         readonly targets: Vec<AccountId32>;
         readonly submittedIn: u32;
         readonly suppressed: bool;
     }
-    /** @name PalletStakingActiveEraInfo (466) */
+    /** @name PalletStakingActiveEraInfo (469) */
     interface PalletStakingActiveEraInfo extends Struct {
         readonly index: u32;
         readonly start: Option<u64>;
     }
-    /** @name PalletStakingEraRewardPoints (468) */
+    /** @name PalletStakingEraRewardPoints (471) */
     interface PalletStakingEraRewardPoints extends Struct {
         readonly total: u32;
         readonly individual: BTreeMap<AccountId32, u32>;
     }
-    /** @name PalletStakingUnappliedSlash (473) */
+    /** @name PalletStakingUnappliedSlash (476) */
     interface PalletStakingUnappliedSlash extends Struct {
         readonly validator: AccountId32;
         readonly own: u128;
@@ -4198,19 +4258,19 @@ declare module '@polkadot/types/lookup' {
         readonly reporters: Vec<AccountId32>;
         readonly payout: u128;
     }
-    /** @name PalletStakingSlashingSlashingSpans (475) */
+    /** @name PalletStakingSlashingSlashingSpans (478) */
     interface PalletStakingSlashingSlashingSpans extends Struct {
         readonly spanIndex: u32;
         readonly lastStart: u32;
         readonly lastNonzeroSlash: u32;
         readonly prior: Vec<u32>;
     }
-    /** @name PalletStakingSlashingSpanRecord (476) */
+    /** @name PalletStakingSlashingSpanRecord (479) */
     interface PalletStakingSlashingSpanRecord extends Struct {
         readonly slashed: u128;
         readonly paidOut: u128;
     }
-    /** @name PalletStakingPalletError (479) */
+    /** @name PalletStakingPalletError (482) */
     interface PalletStakingPalletError extends Enum {
         readonly isNotController: boolean;
         readonly isNotStash: boolean;
@@ -4240,10 +4300,10 @@ declare module '@polkadot/types/lookup' {
         readonly isBondingRestricted: boolean;
         readonly type: 'NotController' | 'NotStash' | 'AlreadyBonded' | 'AlreadyPaired' | 'EmptyTargets' | 'DuplicateIndex' | 'InvalidSlashIndex' | 'InsufficientBond' | 'NoMoreChunks' | 'NoUnlockChunk' | 'FundedTarget' | 'InvalidEraToReward' | 'InvalidNumberOfNominations' | 'NotSortedAndUnique' | 'AlreadyClaimed' | 'IncorrectHistoryDepth' | 'IncorrectSlashingSpans' | 'BadState' | 'TooManyTargets' | 'BadTarget' | 'CannotChillOther' | 'TooManyNominators' | 'TooManyValidators' | 'CommissionTooLow' | 'BoundNotMet' | 'BondingRestricted';
     }
-    /** @name SpCoreCryptoKeyTypeId (483) */
+    /** @name SpCoreCryptoKeyTypeId (486) */
     interface SpCoreCryptoKeyTypeId extends U8aFixed {
     }
-    /** @name PalletSessionError (484) */
+    /** @name PalletSessionError (487) */
     interface PalletSessionError extends Enum {
         readonly isInvalidProof: boolean;
         readonly isNoAssociatedValidatorId: boolean;
@@ -4252,7 +4312,7 @@ declare module '@polkadot/types/lookup' {
         readonly isNoAccount: boolean;
         readonly type: 'InvalidProof' | 'NoAssociatedValidatorId' | 'DuplicatedKey' | 'NoKeys' | 'NoAccount';
     }
-    /** @name PalletGrandpaStoredState (486) */
+    /** @name PalletGrandpaStoredState (489) */
     interface PalletGrandpaStoredState extends Enum {
         readonly isLive: boolean;
         readonly isPendingPause: boolean;
@@ -4268,14 +4328,14 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Live' | 'PendingPause' | 'Paused' | 'PendingResume';
     }
-    /** @name PalletGrandpaStoredPendingChange (487) */
+    /** @name PalletGrandpaStoredPendingChange (490) */
     interface PalletGrandpaStoredPendingChange extends Struct {
         readonly scheduledAt: u32;
         readonly delay: u32;
         readonly nextAuthorities: Vec<ITuple<[SpConsensusGrandpaAppPublic, u64]>>;
         readonly forced: Option<u32>;
     }
-    /** @name PalletGrandpaError (489) */
+    /** @name PalletGrandpaError (492) */
     interface PalletGrandpaError extends Enum {
         readonly isPauseFailed: boolean;
         readonly isResumeFailed: boolean;
@@ -4286,23 +4346,23 @@ declare module '@polkadot/types/lookup' {
         readonly isDuplicateOffenceReport: boolean;
         readonly type: 'PauseFailed' | 'ResumeFailed' | 'ChangePending' | 'TooSoon' | 'InvalidKeyOwnershipProof' | 'InvalidEquivocationProof' | 'DuplicateOffenceReport';
     }
-    /** @name PalletImOnlineBoundedOpaqueNetworkState (495) */
+    /** @name PalletImOnlineBoundedOpaqueNetworkState (498) */
     interface PalletImOnlineBoundedOpaqueNetworkState extends Struct {
         readonly peerId: Bytes;
         readonly externalAddresses: Vec<Bytes>;
     }
-    /** @name PalletImOnlineError (499) */
+    /** @name PalletImOnlineError (502) */
     interface PalletImOnlineError extends Enum {
         readonly isInvalidKey: boolean;
         readonly isDuplicatedHeartbeat: boolean;
         readonly type: 'InvalidKey' | 'DuplicatedHeartbeat';
     }
-    /** @name SpStakingOffenceOffenceDetails (500) */
+    /** @name SpStakingOffenceOffenceDetails (503) */
     interface SpStakingOffenceOffenceDetails extends Struct {
         readonly offender: ITuple<[AccountId32, PalletStakingExposure]>;
         readonly reporters: Vec<AccountId32>;
     }
-    /** @name PalletBagsListListNode (503) */
+    /** @name PalletBagsListListNode (506) */
     interface PalletBagsListListNode extends Struct {
         readonly id: AccountId32;
         readonly prev: Option<AccountId32>;
@@ -4310,18 +4370,18 @@ declare module '@polkadot/types/lookup' {
         readonly bagUpper: u64;
         readonly score: u64;
     }
-    /** @name PalletBagsListListBag (504) */
+    /** @name PalletBagsListListBag (507) */
     interface PalletBagsListListBag extends Struct {
         readonly head: Option<AccountId32>;
         readonly tail: Option<AccountId32>;
     }
-    /** @name PalletBagsListError (505) */
+    /** @name PalletBagsListError (508) */
     interface PalletBagsListError extends Enum {
         readonly isList: boolean;
         readonly asList: PalletBagsListListListError;
         readonly type: 'List';
     }
-    /** @name PalletBagsListListListError (506) */
+    /** @name PalletBagsListListListError (509) */
     interface PalletBagsListListListError extends Enum {
         readonly isDuplicate: boolean;
         readonly isNotHeavier: boolean;
@@ -4329,13 +4389,13 @@ declare module '@polkadot/types/lookup' {
         readonly isNodeNotFound: boolean;
         readonly type: 'Duplicate' | 'NotHeavier' | 'NotInSameBag' | 'NodeNotFound';
     }
-    /** @name PalletVestingReleases (509) */
+    /** @name PalletVestingReleases (512) */
     interface PalletVestingReleases extends Enum {
         readonly isV0: boolean;
         readonly isV1: boolean;
         readonly type: 'V0' | 'V1';
     }
-    /** @name PalletVestingError (510) */
+    /** @name PalletVestingError (513) */
     interface PalletVestingError extends Enum {
         readonly isNotVesting: boolean;
         readonly isAtMaxVestingSchedules: boolean;
@@ -4344,14 +4404,14 @@ declare module '@polkadot/types/lookup' {
         readonly isInvalidScheduleParams: boolean;
         readonly type: 'NotVesting' | 'AtMaxVestingSchedules' | 'AmountLow' | 'ScheduleIndexOutOfBounds' | 'InvalidScheduleParams';
     }
-    /** @name PalletMultisigMultisig (512) */
+    /** @name PalletMultisigMultisig (515) */
     interface PalletMultisigMultisig extends Struct {
         readonly when: PalletMultisigTimepoint;
         readonly deposit: u128;
         readonly depositor: AccountId32;
         readonly approvals: Vec<AccountId32>;
     }
-    /** @name PalletMultisigError (514) */
+    /** @name PalletMultisigError (517) */
     interface PalletMultisigError extends Enum {
         readonly isMinimumThreshold: boolean;
         readonly isAlreadyApproved: boolean;
@@ -4369,12 +4429,12 @@ declare module '@polkadot/types/lookup' {
         readonly isAlreadyStored: boolean;
         readonly type: 'MinimumThreshold' | 'AlreadyApproved' | 'NoApprovalsNeeded' | 'TooFewSignatories' | 'TooManySignatories' | 'SignatoriesOutOfOrder' | 'SenderInSignatories' | 'NotFound' | 'NotOwner' | 'NoTimepoint' | 'WrongTimepoint' | 'UnexpectedTimepoint' | 'MaxWeightTooLow' | 'AlreadyStored';
     }
-    /** @name PalletCouncilCouncilStageUpdate (515) */
+    /** @name PalletCouncilCouncilStageUpdate (518) */
     interface PalletCouncilCouncilStageUpdate extends Struct {
         readonly stage: PalletCouncilCouncilStage;
         readonly changedAt: u32;
     }
-    /** @name PalletCouncilCouncilStage (516) */
+    /** @name PalletCouncilCouncilStage (519) */
     interface PalletCouncilCouncilStage extends Enum {
         readonly isAnnouncing: boolean;
         readonly asAnnouncing: PalletCouncilCouncilStageAnnouncing;
@@ -4384,20 +4444,20 @@ declare module '@polkadot/types/lookup' {
         readonly asIdle: PalletCouncilCouncilStageIdle;
         readonly type: 'Announcing' | 'Election' | 'Idle';
     }
-    /** @name PalletCouncilCouncilStageAnnouncing (517) */
+    /** @name PalletCouncilCouncilStageAnnouncing (520) */
     interface PalletCouncilCouncilStageAnnouncing extends Struct {
         readonly candidatesCount: u32;
         readonly endsAt: u32;
     }
-    /** @name PalletCouncilCouncilStageElection (518) */
+    /** @name PalletCouncilCouncilStageElection (521) */
     interface PalletCouncilCouncilStageElection extends Struct {
         readonly candidatesCount: u32;
     }
-    /** @name PalletCouncilCouncilStageIdle (519) */
+    /** @name PalletCouncilCouncilStageIdle (522) */
     interface PalletCouncilCouncilStageIdle extends Struct {
         readonly endsAt: u32;
     }
-    /** @name PalletCouncilCouncilMember (521) */
+    /** @name PalletCouncilCouncilMember (524) */
     interface PalletCouncilCouncilMember extends Struct {
         readonly stakingAccountId: AccountId32;
         readonly rewardAccountId: AccountId32;
@@ -4406,7 +4466,7 @@ declare module '@polkadot/types/lookup' {
         readonly lastPaymentBlock: u32;
         readonly unpaidReward: u128;
     }
-    /** @name PalletCouncilCandidate (523) */
+    /** @name PalletCouncilCandidate (526) */
     interface PalletCouncilCandidate extends Struct {
         readonly stakingAccountId: AccountId32;
         readonly rewardAccountId: AccountId32;
@@ -4415,7 +4475,7 @@ declare module '@polkadot/types/lookup' {
         readonly votePower: u128;
         readonly noteHash: Option<H256>;
     }
-    /** @name PalletCouncilError (524) */
+    /** @name PalletCouncilError (527) */
     interface PalletCouncilError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isBadOrigin: boolean;
@@ -4441,9 +4501,10 @@ declare module '@polkadot/types/lookup' {
         readonly isZeroTokensFunding: boolean;
         readonly isCandidateDoesNotExist: boolean;
         readonly isInsufficientBalanceForTransfer: boolean;
-        readonly type: 'ArithmeticError' | 'BadOrigin' | 'CantCandidateNow' | 'CantReleaseStakeNow' | 'CandidacyStakeTooLow' | 'CantCandidateTwice' | 'ConflictingStake' | 'StakeStillNeeded' | 'NoStake' | 'InsufficientBalanceForStaking' | 'CantVoteForYourself' | 'MemberIdNotMatchAccount' | 'InvalidAccountToStakeReuse' | 'NotCandidatingNow' | 'CantWithdrawCandidacyNow' | 'NotCouncilor' | 'InsufficientFundsForFundingRequest' | 'ZeroBalanceFundRequest' | 'RepeatedFundRequestAccount' | 'EmptyFundingRequests' | 'InsufficientTokensForFunding' | 'ZeroTokensFunding' | 'CandidateDoesNotExist' | 'InsufficientBalanceForTransfer';
+        readonly isReductionAmountTooLarge: boolean;
+        readonly type: 'ArithmeticError' | 'BadOrigin' | 'CantCandidateNow' | 'CantReleaseStakeNow' | 'CandidacyStakeTooLow' | 'CantCandidateTwice' | 'ConflictingStake' | 'StakeStillNeeded' | 'NoStake' | 'InsufficientBalanceForStaking' | 'CantVoteForYourself' | 'MemberIdNotMatchAccount' | 'InvalidAccountToStakeReuse' | 'NotCandidatingNow' | 'CantWithdrawCandidacyNow' | 'NotCouncilor' | 'InsufficientFundsForFundingRequest' | 'ZeroBalanceFundRequest' | 'RepeatedFundRequestAccount' | 'EmptyFundingRequests' | 'InsufficientTokensForFunding' | 'ZeroTokensFunding' | 'CandidateDoesNotExist' | 'InsufficientBalanceForTransfer' | 'ReductionAmountTooLarge';
     }
-    /** @name PalletReferendumReferendumStage (525) */
+    /** @name PalletReferendumReferendumStage (528) */
     interface PalletReferendumReferendumStage extends Enum {
         readonly isInactive: boolean;
         readonly isVoting: boolean;
@@ -4452,14 +4513,14 @@ declare module '@polkadot/types/lookup' {
         readonly asRevealing: PalletReferendumReferendumStageRevealing;
         readonly type: 'Inactive' | 'Voting' | 'Revealing';
     }
-    /** @name PalletReferendumReferendumStageVoting (527) */
+    /** @name PalletReferendumReferendumStageVoting (530) */
     interface PalletReferendumReferendumStageVoting extends Struct {
         readonly started: u32;
         readonly winningTargetCount: u32;
         readonly currentCycleId: u64;
         readonly endsAt: u32;
     }
-    /** @name PalletReferendumReferendumStageRevealing (528) */
+    /** @name PalletReferendumReferendumStageRevealing (531) */
     interface PalletReferendumReferendumStageRevealing extends Struct {
         readonly started: u32;
         readonly winningTargetCount: u32;
@@ -4467,14 +4528,14 @@ declare module '@polkadot/types/lookup' {
         readonly currentCycleId: u64;
         readonly endsAt: u32;
     }
-    /** @name PalletReferendumCastVote (529) */
+    /** @name PalletReferendumCastVote (532) */
     interface PalletReferendumCastVote extends Struct {
         readonly commitment: H256;
         readonly cycleId: u64;
         readonly stake: u128;
         readonly voteFor: Option<u64>;
     }
-    /** @name PalletReferendumError (530) */
+    /** @name PalletReferendumError (533) */
     interface PalletReferendumError extends Enum {
         readonly isBadOrigin: boolean;
         readonly isReferendumNotRunning: boolean;
@@ -4492,7 +4553,7 @@ declare module '@polkadot/types/lookup' {
         readonly isAccountAlreadyOptedOutOfVoting: boolean;
         readonly type: 'BadOrigin' | 'ReferendumNotRunning' | 'RevealingNotInProgress' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToStake' | 'InsufficientStake' | 'InvalidReveal' | 'InvalidVote' | 'VoteNotExisting' | 'AlreadyVotedThisCycle' | 'UnstakingVoteInSameCycle' | 'SaltTooLong' | 'UnstakingForbidden' | 'AccountAlreadyOptedOutOfVoting';
     }
-    /** @name PalletMembershipMembershipObject (531) */
+    /** @name PalletMembershipMembershipObject (534) */
     interface PalletMembershipMembershipObject extends Struct {
         readonly handleHash: H256;
         readonly rootAccount: AccountId32;
@@ -4500,12 +4561,12 @@ declare module '@polkadot/types/lookup' {
         readonly verified: bool;
         readonly invites: u32;
     }
-    /** @name PalletMembershipStakingAccountMemberBinding (532) */
+    /** @name PalletMembershipStakingAccountMemberBinding (535) */
     interface PalletMembershipStakingAccountMemberBinding extends Struct {
         readonly memberId: u64;
         readonly confirmed: bool;
     }
-    /** @name PalletMembershipError (533) */
+    /** @name PalletMembershipError (536) */
     interface PalletMembershipError extends Enum {
         readonly isNotEnoughBalanceToBuyMembership: boolean;
         readonly isControllerAccountRequired: boolean;
@@ -4531,7 +4592,7 @@ declare module '@polkadot/types/lookup' {
         readonly isInsufficientBalanceToCoverPayment: boolean;
         readonly type: 'NotEnoughBalanceToBuyMembership' | 'ControllerAccountRequired' | 'RootAccountRequired' | 'UnsignedOrigin' | 'MemberProfileNotFound' | 'HandleAlreadyRegistered' | 'HandleMustBeProvidedDuringRegistration' | 'ReferrerIsNotMember' | 'CannotTransferInvitesForNotMember' | 'NotEnoughInvites' | 'WorkingGroupLeaderNotSet' | 'StakingAccountIsAlreadyRegistered' | 'StakingAccountDoesntExist' | 'StakingAccountAlreadyConfirmed' | 'WorkingGroupBudgetIsNotSufficientForInviting' | 'ConflictingLock' | 'CannotExceedReferralCutPercentLimit' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToCoverStake' | 'GifLockExceedsCredit' | 'InsufficientBalanceToGift' | 'InsufficientBalanceToCoverPayment';
     }
-    /** @name PalletForumCategory (534) */
+    /** @name PalletForumCategory (537) */
     interface PalletForumCategory extends Struct {
         readonly titleHash: H256;
         readonly descriptionHash: H256;
@@ -4542,14 +4603,14 @@ declare module '@polkadot/types/lookup' {
         readonly parentCategoryId: Option<u64>;
         readonly stickyThreadIds: BTreeSet<u64>;
     }
-    /** @name PalletForumThread (536) */
+    /** @name PalletForumThread (539) */
     interface PalletForumThread extends Struct {
         readonly categoryId: u64;
         readonly authorId: u64;
         readonly cleanupPayOff: PalletCommonBloatBondRepayableBloatBond;
         readonly numberOfEditablePosts: u64;
     }
-    /** @name PalletForumPost (537) */
+    /** @name PalletForumPost (540) */
     interface PalletForumPost extends Struct {
         readonly threadId: u64;
         readonly textHash: H256;
@@ -4557,7 +4618,7 @@ declare module '@polkadot/types/lookup' {
         readonly cleanupPayOff: PalletCommonBloatBondRepayableBloatBond;
         readonly lastEdited: u32;
     }
-    /** @name PalletForumError (538) */
+    /** @name PalletForumError (541) */
     interface PalletForumError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isOriginNotForumLead: boolean;
@@ -4588,11 +4649,11 @@ declare module '@polkadot/types/lookup' {
         readonly isMaxNumberOfStickiedThreadsExceeded: boolean;
         readonly type: 'ArithmeticError' | 'OriginNotForumLead' | 'ForumUserIdNotMatchAccount' | 'ModeratorIdNotMatchAccount' | 'AccountDoesNotMatchThreadAuthor' | 'ThreadDoesNotExist' | 'ModeratorModerateOriginCategory' | 'ModeratorModerateDestinationCategory' | 'ThreadMoveInvalid' | 'ThreadNotBeingUpdated' | 'InsufficientBalanceForThreadCreation' | 'CannotDeleteThreadWithOutstandingPosts' | 'PostDoesNotExist' | 'AccountDoesNotMatchPostAuthor' | 'InsufficientBalanceForPost' | 'CategoryNotBeingUpdated' | 'AncestorCategoryImmutable' | 'MaxValidCategoryDepthExceeded' | 'CategoryDoesNotExist' | 'CategoryModeratorDoesNotExist' | 'CategoryNotEmptyThreads' | 'CategoryNotEmptyCategories' | 'ModeratorCantDeleteCategory' | 'ModeratorCantUpdateCategory' | 'MapSizeLimit' | 'PathLengthShouldBeGreaterThanZero' | 'MaxNumberOfStickiedThreadsExceeded';
     }
-    /** @name PalletConstitutionConstitutionInfo (539) */
+    /** @name PalletConstitutionConstitutionInfo (542) */
     interface PalletConstitutionConstitutionInfo extends Struct {
         readonly textHash: H256;
     }
-    /** @name PalletBountyBountyRecord (540) */
+    /** @name PalletBountyBountyRecord (543) */
     interface PalletBountyBountyRecord extends Struct {
         readonly creationParams: PalletBountyBountyParametersBoundedBTreeSet;
         readonly totalFunding: u128;
@@ -4600,7 +4661,7 @@ declare module '@polkadot/types/lookup' {
         readonly activeWorkEntryCount: u32;
         readonly hasUnpaidOracleReward: bool;
     }
-    /** @name PalletBountyBountyParametersBoundedBTreeSet (542) */
+    /** @name PalletBountyBountyParametersBoundedBTreeSet (545) */
     interface PalletBountyBountyParametersBoundedBTreeSet extends Struct {
         readonly oracle: PalletBountyBountyActor;
         readonly contractType: PalletBountyAssuranceContractTypeBoundedBTreeSet;
@@ -4610,14 +4671,14 @@ declare module '@polkadot/types/lookup' {
         readonly entrantStake: u128;
         readonly fundingType: PalletBountyFundingType;
     }
-    /** @name PalletBountyAssuranceContractTypeBoundedBTreeSet (543) */
+    /** @name PalletBountyAssuranceContractTypeBoundedBTreeSet (546) */
     interface PalletBountyAssuranceContractTypeBoundedBTreeSet extends Enum {
         readonly isOpen: boolean;
         readonly isClosed: boolean;
         readonly asClosed: BTreeSet<u64>;
         readonly type: 'Open' | 'Closed';
     }
-    /** @name PalletBountyBountyMilestone (544) */
+    /** @name PalletBountyBountyMilestone (547) */
     interface PalletBountyBountyMilestone extends Enum {
         readonly isCreated: boolean;
         readonly asCreated: {
@@ -4633,19 +4694,19 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Created' | 'BountyMaxFundingReached' | 'WorkSubmitted' | 'Terminated' | 'JudgmentSubmitted';
     }
-    /** @name PalletBountyContribution (546) */
+    /** @name PalletBountyContribution (549) */
     interface PalletBountyContribution extends Struct {
         readonly amount: u128;
         readonly funderStateBloatBondAmount: u128;
     }
-    /** @name PalletBountyEntryRecord (547) */
+    /** @name PalletBountyEntryRecord (550) */
     interface PalletBountyEntryRecord extends Struct {
         readonly memberId: u64;
         readonly stakingAccountId: AccountId32;
         readonly submittedAt: u32;
         readonly workSubmitted: bool;
     }
-    /** @name PalletBountyError (548) */
+    /** @name PalletBountyError (551) */
     interface PalletBountyError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isMinFundingAmountCannotBeGreaterThanMaxAmount: boolean;
@@ -4684,28 +4745,28 @@ declare module '@polkadot/types/lookup' {
         readonly isOracleRewardAlreadyWithdrawn: boolean;
         readonly type: 'ArithmeticError' | 'MinFundingAmountCannotBeGreaterThanMaxAmount' | 'BountyDoesntExist' | 'SwitchOracleOriginIsRoot' | 'InvalidStageUnexpectedFunding' | 'InvalidStageUnexpectedNoFundingContributed' | 'InvalidStageUnexpectedCancelled' | 'InvalidStageUnexpectedWorkSubmission' | 'InvalidStageUnexpectedJudgment' | 'InvalidStageUnexpectedSuccessfulBountyWithdrawal' | 'InvalidStageUnexpectedFailedBountyWithdrawal' | 'InsufficientBalanceForBounty' | 'NoBountyContributionFound' | 'InsufficientBalanceForStake' | 'ConflictingStakes' | 'WorkEntryDoesntExist' | 'CherryLessThenMinimumAllowed' | 'CannotSubmitWorkToClosedContractBounty' | 'ClosedContractMemberListIsEmpty' | 'ClosedContractMemberListIsTooLarge' | 'ClosedContractMemberNotFound' | 'InvalidOracleMemberId' | 'InvalidStakingAccountForMember' | 'ZeroWinnerReward' | 'TotalRewardShouldBeEqualToTotalFunding' | 'EntrantStakeIsLessThanMininum' | 'FundingAmountCannotBeZero' | 'FundingPeriodCannotBeZero' | 'WinnerShouldHasWorkSubmission' | 'InvalidContributorActorSpecified' | 'InvalidOracleActorSpecified' | 'InvalidEntrantWorkerSpecified' | 'InvalidCreatorActorSpecified' | 'WorkEntryDoesntBelongToWorker' | 'OracleRewardAlreadyWithdrawn';
     }
-    /** @name PalletJoystreamUtilityError (549) */
+    /** @name PalletJoystreamUtilityError (552) */
     interface PalletJoystreamUtilityError extends Enum {
         readonly isInsufficientFundsForBudgetUpdate: boolean;
         readonly isZeroTokensBurn: boolean;
         readonly isInsufficientFundsForBurn: boolean;
         readonly type: 'InsufficientFundsForBudgetUpdate' | 'ZeroTokensBurn' | 'InsufficientFundsForBurn';
     }
-    /** @name PalletContentVideoRecord (550) */
+    /** @name PalletContentVideoRecord (553) */
     interface PalletContentVideoRecord extends Struct {
         readonly inChannel: u64;
         readonly nftStatus: Option<PalletContentNftTypesOwnedNft>;
         readonly dataObjects: BTreeSet<u64>;
         readonly videoStateBloatBond: PalletCommonBloatBondRepayableBloatBond;
     }
-    /** @name PalletContentNftTypesOwnedNft (551) */
+    /** @name PalletContentNftTypesOwnedNft (554) */
     interface PalletContentNftTypesOwnedNft extends Struct {
         readonly owner: PalletContentNftTypesNftOwner;
         readonly transactionalStatus: PalletContentNftTypesTransactionalStatusRecord;
         readonly creatorRoyalty: Option<Perbill>;
         readonly openAuctionsNonce: u64;
     }
-    /** @name PalletContentNftTypesTransactionalStatusRecord (552) */
+    /** @name PalletContentNftTypesTransactionalStatusRecord (555) */
     interface PalletContentNftTypesTransactionalStatusRecord extends Enum {
         readonly isIdle: boolean;
         readonly isInitiatedOfferToMember: boolean;
@@ -4718,7 +4779,7 @@ declare module '@polkadot/types/lookup' {
         readonly asBuyNow: u128;
         readonly type: 'Idle' | 'InitiatedOfferToMember' | 'EnglishAuction' | 'OpenAuction' | 'BuyNow';
     }
-    /** @name PalletContentNftTypesEnglishAuctionRecord (553) */
+    /** @name PalletContentNftTypesEnglishAuctionRecord (556) */
     interface PalletContentNftTypesEnglishAuctionRecord extends Struct {
         readonly startingPrice: u128;
         readonly buyNowPrice: Option<u128>;
@@ -4729,12 +4790,12 @@ declare module '@polkadot/types/lookup' {
         readonly minBidStep: u128;
         readonly topBid: Option<PalletContentNftTypesEnglishAuctionBid>;
     }
-    /** @name PalletContentNftTypesEnglishAuctionBid (556) */
+    /** @name PalletContentNftTypesEnglishAuctionBid (559) */
     interface PalletContentNftTypesEnglishAuctionBid extends Struct {
         readonly amount: u128;
         readonly bidderId: u64;
     }
-    /** @name PalletContentNftTypesOpenAuctionRecord (557) */
+    /** @name PalletContentNftTypesOpenAuctionRecord (560) */
     interface PalletContentNftTypesOpenAuctionRecord extends Struct {
         readonly startingPrice: u128;
         readonly buyNowPrice: Option<u128>;
@@ -4743,26 +4804,26 @@ declare module '@polkadot/types/lookup' {
         readonly auctionId: u64;
         readonly start: u32;
     }
-    /** @name PalletContentNftTypesNftOwner (558) */
+    /** @name PalletContentNftTypesNftOwner (561) */
     interface PalletContentNftTypesNftOwner extends Enum {
         readonly isChannelOwner: boolean;
         readonly isMember: boolean;
         readonly asMember: u64;
         readonly type: 'ChannelOwner' | 'Member';
     }
-    /** @name PalletContentPermissionsCuratorGroupCuratorGroupRecord (561) */
+    /** @name PalletContentPermissionsCuratorGroupCuratorGroupRecord (564) */
     interface PalletContentPermissionsCuratorGroupCuratorGroupRecord extends Struct {
         readonly curators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
         readonly active: bool;
         readonly permissionsByLevel: BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>;
     }
-    /** @name PalletContentNftTypesOpenAuctionBidRecord (568) */
+    /** @name PalletContentNftTypesOpenAuctionBidRecord (571) */
     interface PalletContentNftTypesOpenAuctionBidRecord extends Struct {
         readonly amount: u128;
         readonly madeAtBlock: u32;
         readonly auctionId: u64;
     }
-    /** @name PalletContentErrorsError (569) */
+    /** @name PalletContentErrorsError (572) */
     interface PalletContentErrorsError extends Enum {
         readonly isChannelStateBloatBondChanged: boolean;
         readonly isVideoStateBloatBondChanged: boolean;
@@ -4895,21 +4956,21 @@ declare module '@polkadot/types/lookup' {
         readonly isChannelTransfersBlockedDuringActiveAmm: boolean;
         readonly type: 'ChannelStateBloatBondChanged' | 'VideoStateBloatBondChanged' | 'MinCashoutValueTooLow' | 'MaxCashoutValueTooHigh' | 'MaxNumberOfChannelCollaboratorsExceeded' | 'MaxNumberOfChannelAssetsExceeded' | 'MaxNumberOfVideoAssetsExceeded' | 'MaxNumberOfChannelAgentPermissionsExceeded' | 'MaxNumberOfPausedFeaturesPerChannelExceeded' | 'InvalidChannelBagWitnessProvided' | 'InvalidStorageBucketsNumWitnessProvided' | 'MissingStorageBucketsNumWitness' | 'ChannelOwnerMemberDoesNotExist' | 'ChannelOwnerCuratorGroupDoesNotExist' | 'ChannelStateBloatBondBelowExistentialDeposit' | 'NumberOfAssetsToRemoveIsZero' | 'CuratorIsNotAMemberOfGivenCuratorGroup' | 'CuratorIsAlreadyAMemberOfGivenCuratorGroup' | 'CuratorGroupDoesNotExist' | 'CuratorsPerGroupLimitReached' | 'CuratorGroupIsNotActive' | 'CuratorIdInvalid' | 'LeadAuthFailed' | 'MemberAuthFailed' | 'CuratorAuthFailed' | 'BadOrigin' | 'ActorNotAuthorized' | 'CategoryDoesNotExist' | 'ChannelDoesNotExist' | 'VideoDoesNotExist' | 'VideoInSeason' | 'ActorCannotBeLead' | 'ActorCannotOwnChannel' | 'NftAlreadyOwnedByChannel' | 'NftAlreadyExists' | 'NftDoesNotExist' | 'OverflowOrUnderflowHappened' | 'DoesNotOwnNft' | 'RoyaltyUpperBoundExceeded' | 'RoyaltyLowerBoundExceeded' | 'AuctionDurationUpperBoundExceeded' | 'AuctionDurationLowerBoundExceeded' | 'ExtensionPeriodUpperBoundExceeded' | 'ExtensionPeriodLowerBoundExceeded' | 'BidLockDurationUpperBoundExceeded' | 'BidLockDurationLowerBoundExceeded' | 'StartingPriceUpperBoundExceeded' | 'StartingPriceLowerBoundExceeded' | 'AuctionBidStepUpperBoundExceeded' | 'AuctionBidStepLowerBoundExceeded' | 'InsufficientBalance' | 'BidStepConstraintViolated' | 'InvalidBidAmountSpecified' | 'StartingPriceConstraintViolated' | 'ActionHasBidsAlready' | 'NftIsNotIdle' | 'PendingOfferDoesNotExist' | 'RewardAccountIsNotSet' | 'ActorIsNotBidder' | 'AuctionCannotBeCompleted' | 'BidDoesNotExist' | 'BidIsForPastAuction' | 'StartsAtLowerBoundExceeded' | 'StartsAtUpperBoundExceeded' | 'AuctionDidNotStart' | 'NotInAuctionState' | 'MemberIsNotAllowedToParticipate' | 'MemberProfileNotFound' | 'NftNotInBuyNowState' | 'InvalidBuyNowWitnessPriceProvided' | 'IsNotOpenAuctionType' | 'IsNotEnglishAuctionType' | 'BidLockDurationIsNotExpired' | 'NftAuctionIsAlreadyExpired' | 'BuyNowMustBeGreaterThanStartingPrice' | 'TargetMemberDoesNotExist' | 'InvalidNftOfferWitnessPriceProvided' | 'MaxAuctionWhiteListLengthUpperBoundExceeded' | 'WhitelistHasOnlyOneMember' | 'WhitelistedMemberDoesNotExist' | 'NftNonChannelOwnerDoesNotExist' | 'ExtensionPeriodIsGreaterThenAuctionDuration' | 'NoAssetsSpecified' | 'InvalidAssetsProvided' | 'ChannelContainsVideos' | 'ChannelContainsAssets' | 'InvalidBagSizeSpecified' | 'MigrationNotFinished' | 'ReplyDoesNotExist' | 'UnsufficientBalance' | 'InsufficientTreasuryBalance' | 'InvalidMemberProvided' | 'ActorNotAMember' | 'PaymentProofVerificationFailed' | 'CashoutAmountExceedsMaximumAmount' | 'CashoutAmountBelowMinimumAmount' | 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance' | 'WithdrawFromChannelAmountIsZero' | 'ChannelCashoutsDisabled' | 'MinCashoutAllowedExceedsMaxCashoutAllowed' | 'CuratorModerationActionNotAllowed' | 'MaxCuratorPermissionsPerLevelExceeded' | 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded' | 'ChannelFeaturePaused' | 'ChannelBagMissing' | 'AssetsToRemoveBeyondEntityAssetsSet' | 'InvalidVideoDataObjectsCountProvided' | 'InvalidChannelTransferStatus' | 'InvalidChannelTransferAcceptor' | 'InvalidChannelTransferCommitmentParams' | 'ChannelAgentInsufficientPermissions' | 'InvalidChannelOwner' | 'ZeroReward' | 'InsufficientBalanceForTransfer' | 'InsufficientBalanceForChannelCreation' | 'InsufficientBalanceForVideoCreation' | 'InsufficientCouncilBudget' | 'GlobalNftDailyLimitExceeded' | 'GlobalNftWeeklyLimitExceeded' | 'ChannelNftDailyLimitExceeded' | 'ChannelNftWeeklyLimitExceeded' | 'CreatorTokenAlreadyIssued' | 'CreatorTokenNotIssued' | 'MemberIdCouldNotBeDerivedFromActor' | 'CannotWithdrawFromChannelWithCreatorTokenIssued' | 'PatronageCanOnlyBeClaimedForMemberOwnedChannels' | 'ChannelTransfersBlockedDuringRevenueSplits' | 'ChannelTransfersBlockedDuringTokenSales' | 'ChannelTransfersBlockedDuringActiveAmm';
     }
-    /** @name PalletStorageBagRecord (570) */
+    /** @name PalletStorageBagRecord (573) */
     interface PalletStorageBagRecord extends Struct {
         readonly storedBy: BTreeSet<u64>;
         readonly distributedBy: BTreeSet<PalletStorageDistributionBucketIdRecord>;
         readonly objectsTotalSize: u64;
         readonly objectsNumber: u64;
     }
-    /** @name PalletStorageStorageBucketRecord (573) */
+    /** @name PalletStorageStorageBucketRecord (576) */
     interface PalletStorageStorageBucketRecord extends Struct {
         readonly operatorStatus: PalletStorageStorageBucketOperatorStatus;
         readonly acceptingNewBags: bool;
         readonly voucher: PalletStorageVoucher;
         readonly assignedBags: u64;
     }
-    /** @name PalletStorageStorageBucketOperatorStatus (574) */
+    /** @name PalletStorageStorageBucketOperatorStatus (577) */
     interface PalletStorageStorageBucketOperatorStatus extends Enum {
         readonly isMissing: boolean;
         readonly isInvitedStorageWorker: boolean;
@@ -4918,23 +4979,23 @@ declare module '@polkadot/types/lookup' {
         readonly asStorageWorker: ITuple<[u64, AccountId32]>;
         readonly type: 'Missing' | 'InvitedStorageWorker' | 'StorageWorker';
     }
-    /** @name PalletStorageDynamicBagCreationPolicy (576) */
+    /** @name PalletStorageDynamicBagCreationPolicy (579) */
     interface PalletStorageDynamicBagCreationPolicy extends Struct {
         readonly numberOfStorageBuckets: u32;
         readonly families: BTreeMap<u64, u32>;
     }
-    /** @name PalletStorageDataObject (579) */
+    /** @name PalletStorageDataObject (582) */
     interface PalletStorageDataObject extends Struct {
         readonly accepted: bool;
         readonly stateBloatBond: PalletCommonBloatBondRepayableBloatBond;
         readonly size_: u64;
         readonly ipfsContentId: Bytes;
     }
-    /** @name PalletStorageDistributionBucketFamilyRecord (580) */
+    /** @name PalletStorageDistributionBucketFamilyRecord (583) */
     interface PalletStorageDistributionBucketFamilyRecord extends Struct {
         readonly nextDistributionBucketIndex: u64;
     }
-    /** @name PalletStorageDistributionBucketRecord (581) */
+    /** @name PalletStorageDistributionBucketRecord (584) */
     interface PalletStorageDistributionBucketRecord extends Struct {
         readonly acceptingNewBags: bool;
         readonly distributing: bool;
@@ -4942,7 +5003,7 @@ declare module '@polkadot/types/lookup' {
         readonly operators: BTreeSet<u64>;
         readonly assignedBags: u64;
     }
-    /** @name PalletStorageError (584) */
+    /** @name PalletStorageError (587) */
     interface PalletStorageError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isInvalidCidLength: boolean;
@@ -5011,7 +5072,7 @@ declare module '@polkadot/types/lookup' {
         readonly isCallDisabled: boolean;
         readonly type: 'ArithmeticError' | 'InvalidCidLength' | 'NoObjectsOnUpload' | 'StorageBucketDoesntExist' | 'StorageBucketIsNotBoundToBag' | 'StorageBucketIsBoundToBag' | 'NoStorageBucketInvitation' | 'StorageProviderAlreadySet' | 'StorageProviderMustBeSet' | 'DifferentStorageProviderInvited' | 'InvitedStorageProvider' | 'StorageBucketIdCollectionsAreEmpty' | 'StorageBucketsNumberViolatesDynamicBagCreationPolicy' | 'DistributionBucketsViolatesDynamicBagCreationPolicy' | 'EmptyContentId' | 'ZeroObjectSize' | 'InvalidStateBloatBondSourceAccount' | 'InvalidStorageProvider' | 'InsufficientBalance' | 'DataObjectDoesntExist' | 'UploadingBlocked' | 'DataObjectIdCollectionIsEmpty' | 'SourceAndDestinationBagsAreEqual' | 'DataObjectBlacklisted' | 'BlacklistSizeLimitExceeded' | 'VoucherMaxObjectSizeLimitExceeded' | 'VoucherMaxObjectNumberLimitExceeded' | 'StorageBucketObjectNumberLimitReached' | 'StorageBucketObjectSizeLimitReached' | 'InsufficientTreasuryBalance' | 'CannotDeleteNonEmptyStorageBucket' | 'DataObjectIdParamsAreEmpty' | 'StorageBucketsPerBagLimitTooLow' | 'StorageBucketsPerBagLimitTooHigh' | 'StorageBucketPerBagLimitExceeded' | 'StorageBucketDoesntAcceptNewBags' | 'DynamicBagExists' | 'DynamicBagDoesntExist' | 'StorageProviderOperatorDoesntExist' | 'DataSizeFeeChanged' | 'DataObjectStateBloatBondChanged' | 'CannotDeleteNonEmptyDynamicBag' | 'MaxDistributionBucketFamilyNumberLimitExceeded' | 'DistributionBucketFamilyDoesntExist' | 'DistributionBucketDoesntExist' | 'DistributionBucketIdCollectionsAreEmpty' | 'DistributionBucketDoesntAcceptNewBags' | 'MaxDistributionBucketNumberPerBagLimitExceeded' | 'DistributionBucketIsNotBoundToBag' | 'DistributionBucketIsBoundToBag' | 'DistributionBucketsPerBagLimitTooLow' | 'DistributionBucketsPerBagLimitTooHigh' | 'DistributionProviderOperatorDoesntExist' | 'DistributionProviderOperatorAlreadyInvited' | 'DistributionProviderOperatorSet' | 'NoDistributionBucketInvitation' | 'MustBeDistributionProviderOperatorForBucket' | 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached' | 'MaxNumberOfOperatorsPerDistributionBucketReached' | 'DistributionFamilyBoundToBagCreationPolicy' | 'MaxDataObjectSizeExceeded' | 'InvalidTransactorAccount' | 'NumberOfStorageBucketsOutsideOfAllowedContraints' | 'NumberOfDistributionBucketsOutsideOfAllowedContraints' | 'CallDisabled';
     }
-    /** @name PalletProjectTokenAccountData (585) */
+    /** @name PalletProjectTokenAccountData (588) */
     interface PalletProjectTokenAccountData extends Struct {
         readonly vestingSchedules: BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>;
         readonly amount: u128;
@@ -5020,12 +5081,12 @@ declare module '@polkadot/types/lookup' {
         readonly nextVestingTransferId: u64;
         readonly lastSaleTotalPurchasedAmount: Option<ITuple<[u32, u128]>>;
     }
-    /** @name PalletProjectTokenStakingStatus (586) */
+    /** @name PalletProjectTokenStakingStatus (589) */
     interface PalletProjectTokenStakingStatus extends Struct {
         readonly splitId: u32;
         readonly amount: u128;
     }
-    /** @name PalletProjectTokenVestingSchedule (588) */
+    /** @name PalletProjectTokenVestingSchedule (591) */
     interface PalletProjectTokenVestingSchedule extends Struct {
         readonly linearVestingStartBlock: u32;
         readonly linearVestingDuration: u32;
@@ -5033,7 +5094,7 @@ declare module '@polkadot/types/lookup' {
         readonly postCliffTotalAmount: u128;
         readonly burnedAmount: u128;
     }
-    /** @name PalletProjectTokenTokenData (595) */
+    /** @name PalletProjectTokenTokenData (598) */
     interface PalletProjectTokenTokenData extends Struct {
         readonly totalSupply: u128;
         readonly tokensIssued: u128;
@@ -5047,31 +5108,31 @@ declare module '@polkadot/types/lookup' {
         readonly nextRevenueSplitId: u32;
         readonly ammCurve: Option<PalletProjectTokenAmmCurve>;
     }
-    /** @name PalletProjectTokenRevenueSplitState (596) */
+    /** @name PalletProjectTokenRevenueSplitState (599) */
     interface PalletProjectTokenRevenueSplitState extends Enum {
         readonly isInactive: boolean;
         readonly isActive: boolean;
         readonly asActive: PalletProjectTokenRevenueSplitInfo;
         readonly type: 'Inactive' | 'Active';
     }
-    /** @name PalletProjectTokenRevenueSplitInfo (597) */
+    /** @name PalletProjectTokenRevenueSplitInfo (600) */
     interface PalletProjectTokenRevenueSplitInfo extends Struct {
         readonly allocation: u128;
         readonly timeline: PalletProjectTokenTimeline;
         readonly dividendsClaimed: u128;
     }
-    /** @name PalletProjectTokenTimeline (598) */
+    /** @name PalletProjectTokenTimeline (601) */
     interface PalletProjectTokenTimeline extends Struct {
         readonly start: u32;
         readonly duration: u32;
     }
-    /** @name PalletProjectTokenPatronageData (600) */
+    /** @name PalletProjectTokenPatronageData (603) */
     interface PalletProjectTokenPatronageData extends Struct {
         readonly rate: Permill;
         readonly unclaimedPatronageTallyAmount: u128;
         readonly lastUnclaimedPatronageTallyBlock: u32;
     }
-    /** @name PalletProjectTokenErrorsError (602) */
+    /** @name PalletProjectTokenErrorsError (605) */
     interface PalletProjectTokenErrorsError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isInsufficientTransferrableBalance: boolean;
@@ -5136,7 +5197,7 @@ declare module '@polkadot/types/lookup' {
         readonly isPalletFrozen: boolean;
         readonly type: 'ArithmeticError' | 'InsufficientTransferrableBalance' | 'TokenDoesNotExist' | 'AccountInformationDoesNotExist' | 'TransferDestinationMemberDoesNotExist' | 'MerkleProofVerificationFailure' | 'TokenSymbolAlreadyInUse' | 'InitialAllocationToNonExistingMember' | 'AccountAlreadyExists' | 'TooManyTransferOutputs' | 'TokenIssuanceNotInIdleState' | 'InsufficientJoyBalance' | 'JoyTransferSubjectToDusting' | 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode' | 'AttemptToRemoveNonEmptyAccount' | 'CannotJoinWhitelistInPermissionlessMode' | 'CannotDeissueTokenWithOutstandingAccounts' | 'NoUpcomingSale' | 'NoActiveSale' | 'InsufficientBalanceForTokenPurchase' | 'NotEnoughTokensOnSale' | 'SaleStartingBlockInThePast' | 'SaleAccessProofRequired' | 'SaleAccessProofParticipantIsNotSender' | 'SalePurchaseCapExceeded' | 'MaxVestingSchedulesPerAccountPerTokenReached' | 'PreviousSaleNotFinalized' | 'NoTokensToRecover' | 'SaleDurationTooShort' | 'SaleDurationIsZero' | 'SaleUpperBoundQuantityIsZero' | 'SaleCapPerMemberIsZero' | 'SaleUnitPriceIsZero' | 'SalePurchaseAmountIsZero' | 'CannotInitSaleIfAmmIsActive' | 'RevenueSplitTimeToStartTooShort' | 'RevenueSplitDurationTooShort' | 'RevenueSplitAlreadyActiveForToken' | 'RevenueSplitNotActiveForToken' | 'RevenueSplitDidNotEnd' | 'RevenueSplitNotOngoing' | 'UserAlreadyParticipating' | 'InsufficientBalanceForSplitParticipation' | 'UserNotParticipantingInAnySplit' | 'CannotParticipateInSplitWithZeroAmount' | 'CannotIssueSplitWithZeroAllocationAmount' | 'CannotModifySupplyWhenRevenueSplitsAreActive' | 'RevenueSplitRateIsZero' | 'BurnAmountIsZero' | 'BurnAmountGreaterThanAccountTokensAmount' | 'NotInAmmState' | 'InvalidCurveParameters' | 'DeadlineExpired' | 'SlippageToleranceExceeded' | 'InsufficientTokenBalance' | 'OutstandingAmmProvidedSupplyTooLarge' | 'CurveSlopeParametersTooLow' | 'NotEnoughTokenMintedByAmmForThisSale' | 'TargetPatronageRateIsHigherThanCurrentRate' | 'YearlyPatronageRateLimitExceeded' | 'PalletFrozen';
     }
-    /** @name PalletProposalsEngineProposal (603) */
+    /** @name PalletProposalsEngineProposal (606) */
     interface PalletProposalsEngineProposal extends Struct {
         readonly parameters: PalletProposalsEngineProposalParameters;
         readonly proposerId: u64;
@@ -5147,7 +5208,7 @@ declare module '@polkadot/types/lookup' {
         readonly nrOfCouncilConfirmations: u32;
         readonly stakingAccountId: Option<AccountId32>;
     }
-    /** @name PalletProposalsEngineProposalParameters (604) */
+    /** @name PalletProposalsEngineProposalParameters (607) */
     interface PalletProposalsEngineProposalParameters extends Struct {
         readonly votingPeriod: u32;
         readonly gracePeriod: u32;
@@ -5158,14 +5219,14 @@ declare module '@polkadot/types/lookup' {
         readonly requiredStake: Option<u128>;
         readonly constitutionality: u32;
     }
-    /** @name PalletProposalsEngineVotingResults (605) */
+    /** @name PalletProposalsEngineVotingResults (608) */
     interface PalletProposalsEngineVotingResults extends Struct {
         readonly abstentions: u32;
         readonly approvals: u32;
         readonly rejections: u32;
         readonly slashes: u32;
     }
-    /** @name PalletProposalsEngineError (608) */
+    /** @name PalletProposalsEngineError (611) */
     interface PalletProposalsEngineError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isEmptyTitleProvided: boolean;
@@ -5192,26 +5253,26 @@ declare module '@polkadot/types/lookup' {
         readonly isMaxDispatchableCallCodeSizeExceeded: boolean;
         readonly type: 'ArithmeticError' | 'EmptyTitleProvided' | 'EmptyDescriptionProvided' | 'TitleIsTooLong' | 'DescriptionIsTooLong' | 'ProposalNotFound' | 'ProposalFinalized' | 'AlreadyVoted' | 'NotAuthor' | 'MaxActiveProposalNumberExceeded' | 'EmptyStake' | 'StakeShouldBeEmpty' | 'StakeDiffersFromRequired' | 'InvalidParameterApprovalThreshold' | 'InvalidParameterSlashingThreshold' | 'RequireRootOrigin' | 'ProposalHasVotes' | 'ZeroExactExecutionBlock' | 'InvalidExactExecutionBlock' | 'InsufficientBalanceForStake' | 'ConflictingStakes' | 'InvalidStakingAccountForMember' | 'MaxDispatchableCallCodeSizeExceeded';
     }
-    /** @name PalletProposalsDiscussionDiscussionThread (609) */
+    /** @name PalletProposalsDiscussionDiscussionThread (612) */
     interface PalletProposalsDiscussionDiscussionThread extends Struct {
         readonly activatedAt: u32;
         readonly authorId: u64;
         readonly mode: PalletProposalsDiscussionThreadModeBoundedBTreeSet;
     }
-    /** @name PalletProposalsDiscussionThreadModeBoundedBTreeSet (611) */
+    /** @name PalletProposalsDiscussionThreadModeBoundedBTreeSet (614) */
     interface PalletProposalsDiscussionThreadModeBoundedBTreeSet extends Enum {
         readonly isOpen: boolean;
         readonly isClosed: boolean;
         readonly asClosed: BTreeSet<u64>;
         readonly type: 'Open' | 'Closed';
     }
-    /** @name PalletProposalsDiscussionDiscussionPost (612) */
+    /** @name PalletProposalsDiscussionDiscussionPost (615) */
     interface PalletProposalsDiscussionDiscussionPost extends Struct {
         readonly authorId: u64;
         readonly cleanupPayOff: PalletCommonBloatBondRepayableBloatBond;
         readonly lastEdited: u32;
     }
-    /** @name PalletProposalsDiscussionError (613) */
+    /** @name PalletProposalsDiscussionError (616) */
     interface PalletProposalsDiscussionError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isThreadDoesntExist: boolean;
@@ -5225,7 +5286,7 @@ declare module '@polkadot/types/lookup' {
         readonly isCannotDeletePost: boolean;
         readonly type: 'ArithmeticError' | 'ThreadDoesntExist' | 'PostDoesntExist' | 'RequireRootOrigin' | 'CannotPostOnClosedThread' | 'NotAuthorOrCouncilor' | 'MaxWhiteListSizeExceeded' | 'WhitelistedMemberDoesNotExist' | 'InsufficientBalanceForPost' | 'CannotDeletePost';
     }
-    /** @name PalletProposalsCodexError (614) */
+    /** @name PalletProposalsCodexError (617) */
     interface PalletProposalsCodexError extends Enum {
         readonly isSignalProposalIsEmpty: boolean;
         readonly isRuntimeProposalIsEmpty: boolean;
@@ -5253,9 +5314,10 @@ declare module '@polkadot/types/lookup' {
         readonly isInvalidLeadApplicationId: boolean;
         readonly isInvalidProposalId: boolean;
         readonly isArithmeticError: boolean;
-        readonly type: 'SignalProposalIsEmpty' | 'RuntimeProposalIsEmpty' | 'InvalidFundingRequestProposalBalance' | 'InvalidValidatorCount' | 'RequireRootOrigin' | 'InvalidCouncilElectionParameterCouncilSize' | 'InvalidCouncilElectionParameterCandidacyLimit' | 'InvalidCouncilElectionParameterMinVotingStake' | 'InvalidCouncilElectionParameterNewTermDuration' | 'InvalidCouncilElectionParameterMinCouncilStake' | 'InvalidCouncilElectionParameterRevealingPeriod' | 'InvalidCouncilElectionParameterVotingPeriod' | 'InvalidCouncilElectionParameterAnnouncingPeriod' | 'InvalidWorkingGroupBudgetCapacity' | 'InvalidSetLeadParameterCannotBeCouncilor' | 'SlashingStakeIsZero' | 'DecreasingStakeIsZero' | 'InsufficientFundsForBudgetUpdate' | 'InvalidFundingRequestProposalNumberOfAccount' | 'InvalidFundingRequestProposalRepeatedAccount' | 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout' | 'InvalidLeadWorkerId' | 'InvalidLeadOpeningId' | 'InvalidLeadApplicationId' | 'InvalidProposalId' | 'ArithmeticError';
+        readonly isReductionAmountZero: boolean;
+        readonly type: 'SignalProposalIsEmpty' | 'RuntimeProposalIsEmpty' | 'InvalidFundingRequestProposalBalance' | 'InvalidValidatorCount' | 'RequireRootOrigin' | 'InvalidCouncilElectionParameterCouncilSize' | 'InvalidCouncilElectionParameterCandidacyLimit' | 'InvalidCouncilElectionParameterMinVotingStake' | 'InvalidCouncilElectionParameterNewTermDuration' | 'InvalidCouncilElectionParameterMinCouncilStake' | 'InvalidCouncilElectionParameterRevealingPeriod' | 'InvalidCouncilElectionParameterVotingPeriod' | 'InvalidCouncilElectionParameterAnnouncingPeriod' | 'InvalidWorkingGroupBudgetCapacity' | 'InvalidSetLeadParameterCannotBeCouncilor' | 'SlashingStakeIsZero' | 'DecreasingStakeIsZero' | 'InsufficientFundsForBudgetUpdate' | 'InvalidFundingRequestProposalNumberOfAccount' | 'InvalidFundingRequestProposalRepeatedAccount' | 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout' | 'InvalidLeadWorkerId' | 'InvalidLeadOpeningId' | 'InvalidLeadApplicationId' | 'InvalidProposalId' | 'ArithmeticError' | 'ReductionAmountZero';
     }
-    /** @name PalletWorkingGroupOpening (615) */
+    /** @name PalletWorkingGroupOpening (618) */
     interface PalletWorkingGroupOpening extends Struct {
         readonly openingType: PalletWorkingGroupOpeningType;
         readonly created: u32;
@@ -5264,7 +5326,7 @@ declare module '@polkadot/types/lookup' {
         readonly rewardPerBlock: Option<u128>;
         readonly creationStake: u128;
     }
-    /** @name PalletWorkingGroupJobApplication (616) */
+    /** @name PalletWorkingGroupJobApplication (619) */
     interface PalletWorkingGroupJobApplication extends Struct {
         readonly roleAccountId: AccountId32;
         readonly rewardAccountId: AccountId32;
@@ -5273,7 +5335,7 @@ declare module '@polkadot/types/lookup' {
         readonly descriptionHash: H256;
         readonly openingId: u64;
     }
-    /** @name PalletWorkingGroupGroupWorker (617) */
+    /** @name PalletWorkingGroupGroupWorker (620) */
     interface PalletWorkingGroupGroupWorker extends Struct {
         readonly memberId: u64;
         readonly roleAccountId: AccountId32;
@@ -5285,7 +5347,7 @@ declare module '@polkadot/types/lookup' {
         readonly missedReward: Option<u128>;
         readonly createdAt: u32;
     }
-    /** @name PalletWorkingGroupErrorsError (618) */
+    /** @name PalletWorkingGroupErrorsError (621) */
     interface PalletWorkingGroupErrorsError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isStakeBalanceCannotBeZero: boolean;
@@ -5321,7 +5383,7 @@ declare module '@polkadot/types/lookup' {
         readonly isInsufficientBalanceForTransfer: boolean;
         readonly type: 'ArithmeticError' | 'StakeBalanceCannotBeZero' | 'OpeningDoesNotExist' | 'CannotHireMultipleLeaders' | 'WorkerApplicationDoesNotExist' | 'MaxActiveWorkerNumberExceeded' | 'SuccessfulWorkerApplicationDoesNotExist' | 'CannotHireLeaderWhenLeaderExists' | 'IsNotLeadAccount' | 'CurrentLeadNotSet' | 'WorkerDoesNotExist' | 'InvalidMemberOrigin' | 'SignerIsNotWorkerRoleAccount' | 'BelowMinimumStakes' | 'InsufficientBalanceToCoverStake' | 'ApplicationStakeDoesntMatchOpening' | 'OriginIsNotApplicant' | 'WorkerIsLeaving' | 'CannotRewardWithZero' | 'InvalidStakingAccountForMember' | 'ConflictStakesOnAccount' | 'WorkerHasNoReward' | 'UnstakingPeriodLessThanMinimum' | 'CannotSpendZero' | 'InsufficientBudgetForSpending' | 'NoApplicationsProvided' | 'CannotDecreaseStakeDeltaGreaterThanStake' | 'ApplicationsNotForOpening' | 'WorkerStorageValueTooLong' | 'InsufficientTokensForFunding' | 'ZeroTokensFunding' | 'InsufficientBalanceForTransfer';
     }
-    /** @name SpRuntimeMultiSignature (628) */
+    /** @name SpRuntimeMultiSignature (631) */
     interface SpRuntimeMultiSignature extends Enum {
         readonly isEd25519: boolean;
         readonly asEd25519: SpCoreEd25519Signature;
@@ -5331,25 +5393,25 @@ declare module '@polkadot/types/lookup' {
         readonly asEcdsa: SpCoreEcdsaSignature;
         readonly type: 'Ed25519' | 'Sr25519' | 'Ecdsa';
     }
-    /** @name SpCoreEcdsaSignature (629) */
+    /** @name SpCoreEcdsaSignature (632) */
     interface SpCoreEcdsaSignature extends U8aFixed {
     }
-    /** @name FrameSystemExtensionsCheckNonZeroSender (632) */
+    /** @name FrameSystemExtensionsCheckNonZeroSender (635) */
     type FrameSystemExtensionsCheckNonZeroSender = Null;
-    /** @name FrameSystemExtensionsCheckSpecVersion (633) */
+    /** @name FrameSystemExtensionsCheckSpecVersion (636) */
     type FrameSystemExtensionsCheckSpecVersion = Null;
-    /** @name FrameSystemExtensionsCheckTxVersion (634) */
+    /** @name FrameSystemExtensionsCheckTxVersion (637) */
     type FrameSystemExtensionsCheckTxVersion = Null;
-    /** @name FrameSystemExtensionsCheckGenesis (635) */
+    /** @name FrameSystemExtensionsCheckGenesis (638) */
     type FrameSystemExtensionsCheckGenesis = Null;
-    /** @name FrameSystemExtensionsCheckNonce (638) */
+    /** @name FrameSystemExtensionsCheckNonce (641) */
     interface FrameSystemExtensionsCheckNonce extends Compact<u32> {
     }
-    /** @name FrameSystemExtensionsCheckWeight (639) */
+    /** @name FrameSystemExtensionsCheckWeight (642) */
     type FrameSystemExtensionsCheckWeight = Null;
-    /** @name PalletTransactionPaymentChargeTransactionPayment (640) */
+    /** @name PalletTransactionPaymentChargeTransactionPayment (643) */
     interface PalletTransactionPaymentChargeTransactionPayment extends Compact<u128> {
     }
-    /** @name JoystreamNodeRuntimeRuntime (641) */
+    /** @name JoystreamNodeRuntimeRuntime (644) */
     type JoystreamNodeRuntimeRuntime = Null;
 }
diff --git a/lib/cjs/augment/lookup.js b/lib/cjs/augment/lookup.js
index 23d5c9d63ca89dc370c72d73c513991506d7fe40..ae085b1cf5a12d07635a702b967efad477c33a2d 100644
--- a/lib/cjs/augment/lookup.js
+++ b/lib/cjs/augment/lookup.js
@@ -544,14 +544,16 @@ exports.default = {
             BudgetRefillPlanned: 'u32',
             BudgetIncrementUpdated: 'u128',
             CouncilorRewardUpdated: 'u128',
+            CouncilBudgetDecreased: 'u128',
             RequestFunded: '(AccountId32,u128)',
             CouncilBudgetFunded: '(u64,u128,Bytes)',
             CouncilorRemarked: '(u64,Bytes)',
-            CandidateRemarked: '(u64,Bytes)'
+            CandidateRemarked: '(u64,Bytes)',
+            EraPayoutDampingFactorSet: 'Percent'
         }
     },
     /**
-     * Lookup70: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
+     * Lookup71: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
      **/
     PalletReferendumRawEvent: {
         _enum: {
@@ -566,18 +568,18 @@ exports.default = {
         }
     },
     /**
-     * Lookup71: pallet_referendum::Instance1
+     * Lookup72: pallet_referendum::Instance1
      **/
     PalletReferendumInstance1: 'Null',
     /**
-     * Lookup73: pallet_referendum::OptionResult<MemberId, VotePower>
+     * Lookup74: pallet_referendum::OptionResult<MemberId, VotePower>
      **/
     PalletReferendumOptionResult: {
         optionId: 'u64',
         votePower: 'u128'
     },
     /**
-     * Lookup74: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
+     * Lookup75: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletMembershipRawEvent: {
         _enum: {
@@ -601,7 +603,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup75: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+     * Lookup76: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
      **/
     PalletMembershipBuyMembershipParameters: {
         rootAccount: 'AccountId32',
@@ -611,7 +613,7 @@ exports.default = {
         referrerId: 'Option<u64>'
     },
     /**
-     * Lookup78: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+     * Lookup79: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
      **/
     PalletMembershipInviteMembershipParameters: {
         invitingMemberId: 'u64',
@@ -621,7 +623,7 @@ exports.default = {
         metadata: 'Bytes'
     },
     /**
-     * Lookup79: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
+     * Lookup80: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
      **/
     PalletMembershipCreateMemberParameters: {
         rootAccount: 'AccountId32',
@@ -631,7 +633,7 @@ exports.default = {
         isFoundingMember: 'bool'
     },
     /**
-     * Lookup80: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup81: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletMembershipGiftMembershipParameters: {
         rootAccount: 'AccountId32',
@@ -644,7 +646,7 @@ exports.default = {
         applyRootAccountInvitationLock: 'Option<u128>'
     },
     /**
-     * Lookup84: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
+     * Lookup85: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
      **/
     PalletForumRawEvent: {
         _enum: {
@@ -668,7 +670,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup85: pallet_forum::PrivilegedActor<T>
+     * Lookup86: pallet_forum::PrivilegedActor<T>
      **/
     PalletForumPrivilegedActor: {
         _enum: {
@@ -677,7 +679,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup86: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
+     * Lookup87: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
      **/
     PalletForumExtendedPostIdObject: {
         categoryId: 'u64',
@@ -685,7 +687,7 @@ exports.default = {
         postId: 'u64'
     },
     /**
-     * Lookup91: pallet_constitution::RawEvent<primitive_types::H256>
+     * Lookup92: pallet_constitution::RawEvent<primitive_types::H256>
      **/
     PalletConstitutionRawEvent: {
         _enum: {
@@ -693,7 +695,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup92: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
+     * Lookup93: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
      **/
     PalletBountyRawEvent: {
         _enum: {
@@ -723,7 +725,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup93: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
+     * Lookup94: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
      **/
     PalletBountyBountyParametersBTreeSet: {
         oracle: 'PalletBountyBountyActor',
@@ -735,7 +737,7 @@ exports.default = {
         fundingType: 'PalletBountyFundingType'
     },
     /**
-     * Lookup94: pallet_bounty::BountyActor<MemberId>
+     * Lookup95: pallet_bounty::BountyActor<MemberId>
      **/
     PalletBountyBountyActor: {
         _enum: {
@@ -744,7 +746,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup95: pallet_bounty::AssuranceContractType<BTreeSet<T>>
+     * Lookup96: pallet_bounty::AssuranceContractType<BTreeSet<T>>
      **/
     PalletBountyAssuranceContractTypeBTreeSet: {
         _enum: {
@@ -753,7 +755,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup96: pallet_bounty::FundingType<BlockNumber, Balance>
+     * Lookup97: pallet_bounty::FundingType<BlockNumber, Balance>
      **/
     PalletBountyFundingType: {
         _enum: {
@@ -767,7 +769,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup98: pallet_bounty::OracleWorkEntryJudgment<Balance>
+     * Lookup99: pallet_bounty::OracleWorkEntryJudgment<Balance>
      **/
     PalletBountyOracleWorkEntryJudgment: {
         _enum: {
@@ -781,7 +783,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup101: pallet_joystream_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
+     * Lookup102: pallet_joystream_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
      **/
     PalletJoystreamUtilityRawEvent: {
         _enum: {
@@ -792,19 +794,19 @@ exports.default = {
         }
     },
     /**
-     * Lookup102: pallet_common::working_group::iterable_enums::WorkingGroup
+     * Lookup103: pallet_common::working_group::iterable_enums::WorkingGroup
      **/
     PalletCommonWorkingGroupIterableEnumsWorkingGroup: {
         _enum: ['Forum', 'Storage', 'Content', 'OperationsAlpha', 'App', 'Distribution', 'OperationsBeta', 'OperationsGamma', 'Membership']
     },
     /**
-     * Lookup103: pallet_common::BalanceKind
+     * Lookup104: pallet_common::BalanceKind
      **/
     PalletCommonBalanceKind: {
         _enum: ['Positive', 'Negative']
     },
     /**
-     * Lookup104: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
+     * Lookup105: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
      **/
     PalletContentRawEvent: {
         _enum: {
@@ -864,7 +866,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup105: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
+     * Lookup106: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
      **/
     PalletContentPermissionsContentActor: {
         _enum: {
@@ -874,7 +876,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup106: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup107: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentChannelRecord: {
         owner: 'PalletContentChannelOwner',
@@ -893,26 +895,26 @@ exports.default = {
         channelStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
     },
     /**
-     * Lookup110: pallet_content::types::iterable_enums::ChannelActionPermission
+     * Lookup111: pallet_content::types::iterable_enums::ChannelActionPermission
      **/
     PalletContentIterableEnumsChannelActionPermission: {
         _enum: ['UpdateChannelMetadata', 'ManageNonVideoChannelAssets', 'ManageChannelCollaborators', 'UpdateVideoMetadata', 'AddVideo', 'ManageVideoAssets', 'DeleteChannel', 'DeleteVideo', 'ManageVideoNfts', 'AgentRemark', 'TransferChannel', 'ClaimChannelReward', 'WithdrawFromChannelBalance', 'IssueCreatorToken', 'ClaimCreatorTokenPatronage', 'InitAndManageCreatorTokenSale', 'CreatorTokenIssuerTransfer', 'MakeCreatorTokenPermissionless', 'ReduceCreatorTokenPatronageRate', 'ManageRevenueSplits', 'DeissueCreatorToken', 'AmmControl']
     },
     /**
-     * Lookup117: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
+     * Lookup118: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
      **/
     PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature: {
         _enum: ['ChannelFundsTransfer', 'CreatorCashout', 'VideoNftIssuance', 'VideoCreation', 'VideoUpdate', 'ChannelUpdate', 'CreatorTokenIssuance']
     },
     /**
-     * Lookup120: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
+     * Lookup121: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
      **/
     PalletCommonBloatBondRepayableBloatBond: {
         repaymentRestrictedTo: 'Option<AccountId32>',
         amount: 'u128'
     },
     /**
-     * Lookup121: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
+     * Lookup122: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
      **/
     PalletContentChannelOwner: {
         _enum: {
@@ -921,7 +923,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup122: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+     * Lookup123: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
      **/
     PalletContentChannelTransferStatus: {
         _enum: {
@@ -930,14 +932,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup123: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+     * Lookup124: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
      **/
     PalletContentPendingTransfer: {
         newOwner: 'PalletContentChannelOwner',
         transferParams: 'PalletContentTransferCommitmentParametersBoundedBTreeMap'
     },
     /**
-     * Lookup124: pallet_content::types::TransferCommitmentParameters<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
+     * Lookup125: pallet_content::types::TransferCommitmentParameters<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
      **/
     PalletContentTransferCommitmentParametersBoundedBTreeMap: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -945,21 +947,21 @@ exports.default = {
         transferId: 'u64'
     },
     /**
-     * Lookup125: pallet_content::types::LimitPerPeriod<BlockNumber>
+     * Lookup126: pallet_content::types::LimitPerPeriod<BlockNumber>
      **/
     PalletContentLimitPerPeriod: {
         limit: 'u64',
         blockNumberPeriod: 'u32'
     },
     /**
-     * Lookup126: pallet_content::types::NftCounter<BlockNumber>
+     * Lookup127: pallet_content::types::NftCounter<BlockNumber>
      **/
     PalletContentNftCounter: {
         counter: 'u64',
         lastUpdated: 'u32'
     },
     /**
-     * Lookup127: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
+     * Lookup128: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionParamsRecord: {
         startingPrice: 'u128',
@@ -971,7 +973,7 @@ exports.default = {
         minBidStep: 'u128'
     },
     /**
-     * Lookup129: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
+     * Lookup130: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
      **/
     PalletContentNftTypesOpenAuctionParamsRecord: {
         startingPrice: 'u128',
@@ -981,7 +983,7 @@ exports.default = {
         bidLockDuration: 'u32'
     },
     /**
-     * Lookup130: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
+     * Lookup131: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
      **/
     PalletContentNftTypesNftIssuanceParametersRecord: {
         royalty: 'Option<Perbill>',
@@ -990,7 +992,7 @@ exports.default = {
         initTransactionalStatus: 'PalletContentNftTypesInitTransactionalStatusRecord'
     },
     /**
-     * Lookup131: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
+     * Lookup132: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
      **/
     PalletContentNftTypesInitTransactionalStatusRecord: {
         _enum: {
@@ -1002,7 +1004,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup133: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
+     * Lookup134: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
      **/
     PalletContentChannelCreationParametersRecord: {
         assets: 'Option<PalletContentStorageAssetsRecord>',
@@ -1014,14 +1016,14 @@ exports.default = {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup134: pallet_content::types::StorageAssetsRecord<Balance>
+     * Lookup135: pallet_content::types::StorageAssetsRecord<Balance>
      **/
     PalletContentStorageAssetsRecord: {
         objectCreationList: 'Vec<PalletStorageDataObjectCreationParameters>',
         expectedDataSizeFee: 'u128'
     },
     /**
-     * Lookup136: pallet_storage::DataObjectCreationParameters
+     * Lookup137: pallet_storage::DataObjectCreationParameters
      **/
     PalletStorageDataObjectCreationParameters: {
         _alias: {
@@ -1031,14 +1033,14 @@ exports.default = {
         ipfsContentId: 'Bytes'
     },
     /**
-     * Lookup137: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
+     * Lookup138: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketIdRecord: {
         distributionBucketFamilyId: 'u64',
         distributionBucketIndex: 'u64'
     },
     /**
-     * Lookup144: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
+     * Lookup145: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
      **/
     PalletContentChannelUpdateParametersRecord: {
         assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',
@@ -1049,7 +1051,7 @@ exports.default = {
         storageBucketsNumWitness: 'Option<u32>'
     },
     /**
-     * Lookup146: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+     * Lookup147: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
      **/
     PalletContentVideoCreationParametersRecord: {
         assets: 'Option<PalletContentStorageAssetsRecord>',
@@ -1060,7 +1062,7 @@ exports.default = {
         storageBucketsNumWitness: 'u32'
     },
     /**
-     * Lookup148: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+     * Lookup149: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
      **/
     PalletContentVideoUpdateParametersRecord: {
         assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',
@@ -1071,7 +1073,7 @@ exports.default = {
         storageBucketsNumWitness: 'Option<u32>'
     },
     /**
-     * Lookup151: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
+     * Lookup152: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
      **/
     PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction: {
         _enum: {
@@ -1084,7 +1086,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup155: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
+     * Lookup156: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
      **/
     PalletContentTransferCommitmentParametersBTreeMap: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -1092,7 +1094,7 @@ exports.default = {
         transferId: 'u64'
     },
     /**
-     * Lookup156: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>
+     * Lookup157: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>
      **/
     PalletContentUpdateChannelPayoutsParametersRecord: {
         commitment: 'Option<H256>',
@@ -1102,7 +1104,7 @@ exports.default = {
         channelCashoutsEnabled: 'Option<bool>'
     },
     /**
-     * Lookup157: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>
+     * Lookup158: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>
      **/
     PalletContentChannelPayoutsPayloadParametersRecord: {
         objectCreationParams: 'PalletStorageDataObjectCreationParameters',
@@ -1110,7 +1112,7 @@ exports.default = {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup161: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
+     * Lookup162: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
      **/
     PalletContentChannelFundsDestination: {
         _enum: {
@@ -1119,13 +1121,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup162: pallet_content::types::NftLimitPeriod
+     * Lookup163: pallet_content::types::NftLimitPeriod
      **/
     PalletContentNftLimitPeriod: {
         _enum: ['Daily', 'Weekly']
     },
     /**
-     * Lookup163: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
+     * Lookup164: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
      **/
     PalletStorageRawEvent: {
         _enum: {
@@ -1174,7 +1176,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup164: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
+     * Lookup165: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
      **/
     PalletStorageUploadParametersRecord: {
         bagId: 'PalletStorageBagIdType',
@@ -1184,7 +1186,7 @@ exports.default = {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup165: pallet_storage::BagIdType<MemberId, ChannelId>
+     * Lookup166: pallet_storage::BagIdType<MemberId, ChannelId>
      **/
     PalletStorageBagIdType: {
         _enum: {
@@ -1193,7 +1195,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup166: pallet_storage::StaticBagId
+     * Lookup167: pallet_storage::StaticBagId
      **/
     PalletStorageStaticBagId: {
         _enum: {
@@ -1202,7 +1204,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup167: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
+     * Lookup168: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
      **/
     PalletStorageDynamicBagIdType: {
         _enum: {
@@ -1211,7 +1213,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup168: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
+     * Lookup169: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
      **/
     PalletStorageDynBagCreationParametersRecord: {
         bagId: 'PalletStorageDynamicBagIdType',
@@ -1223,7 +1225,7 @@ exports.default = {
         distributionBuckets: 'BTreeSet<PalletStorageDistributionBucketIdRecord>'
     },
     /**
-     * Lookup171: pallet_storage::Voucher
+     * Lookup172: pallet_storage::Voucher
      **/
     PalletStorageVoucher: {
         sizeLimit: 'u64',
@@ -1232,13 +1234,13 @@ exports.default = {
         objectsUsed: 'u64'
     },
     /**
-     * Lookup172: pallet_storage::DynamicBagType
+     * Lookup173: pallet_storage::DynamicBagType
      **/
     PalletStorageDynamicBagType: {
         _enum: ['Member', 'Channel']
     },
     /**
-     * Lookup176: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::AmmCurve<Balance>>
+     * Lookup177: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::AmmCurve<Balance>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>
      **/
     PalletProjectTokenEventsRawEvent: {
         _enum: {
@@ -1264,11 +1266,12 @@ exports.default = {
             TokensBoughtOnAmm: '(u64,u64,u128,u128)',
             TokensSoldOnAmm: '(u64,u64,u128,u128)',
             AmmDeactivated: '(u64,u64,u128)',
-            FrozenStatusUpdated: 'bool'
+            FrozenStatusUpdated: 'bool',
+            TokenConstraintsUpdated: 'PalletProjectTokenTokenConstraints'
         }
     },
     /**
-     * Lookup177: pallet_project_token::types::TransferPolicy<primitive_types::H256>
+     * Lookup178: pallet_project_token::types::TransferPolicy<primitive_types::H256>
      **/
     PalletProjectTokenTransferPolicy: {
         _enum: {
@@ -1277,7 +1280,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup178: pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
+     * Lookup179: pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
      **/
     PalletProjectTokenTokenIssuanceParameters: {
         initialAllocation: 'BTreeMap<u64, PalletProjectTokenTokenAllocation>',
@@ -1287,14 +1290,14 @@ exports.default = {
         metadata: 'Bytes'
     },
     /**
-     * Lookup179: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup180: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenAllocation: {
         amount: 'u128',
         vestingScheduleParams: 'Option<PalletProjectTokenVestingScheduleParams>'
     },
     /**
-     * Lookup180: pallet_project_token::types::VestingScheduleParams<BlockNumber>
+     * Lookup181: pallet_project_token::types::VestingScheduleParams<BlockNumber>
      **/
     PalletProjectTokenVestingScheduleParams: {
         linearVestingDuration: 'u32',
@@ -1302,7 +1305,7 @@ exports.default = {
         cliffAmountPercentage: 'Permill'
     },
     /**
-     * Lookup183: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
+     * Lookup184: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
      **/
     PalletProjectTokenTransferPolicyParams: {
         _enum: {
@@ -1311,14 +1314,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup184: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
+     * Lookup185: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
      **/
     PalletProjectTokenWhitelistParams: {
         commitment: 'H256',
         payload: 'Option<PalletProjectTokenSingleDataObjectUploadParams>'
     },
     /**
-     * Lookup185: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
+     * Lookup186: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
      **/
     PalletProjectTokenSingleDataObjectUploadParams: {
         objectCreationParams: 'PalletStorageDataObjectCreationParameters',
@@ -1326,11 +1329,11 @@ exports.default = {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup191: pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>
+     * Lookup192: pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>
      **/
     PalletProjectTokenTransfers: 'BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>',
     /**
-     * Lookup192: pallet_project_token::types::Validated<MemberId>
+     * Lookup193: pallet_project_token::types::Validated<MemberId>
      **/
     PalletProjectTokenValidated: {
         _enum: {
@@ -1339,21 +1342,21 @@ exports.default = {
         }
     },
     /**
-     * Lookup193: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
+     * Lookup194: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
      **/
     PalletProjectTokenValidatedPayment: {
         payment: 'PalletProjectTokenPaymentWithVesting',
         vestingCleanupCandidate: 'Option<PalletProjectTokenVestingSource>'
     },
     /**
-     * Lookup194: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup195: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenPaymentWithVesting: {
         amount: 'u128',
         vestingSchedule: 'Option<PalletProjectTokenVestingScheduleParams>'
     },
     /**
-     * Lookup196: pallet_project_token::types::VestingSource
+     * Lookup197: pallet_project_token::types::VestingSource
      **/
     PalletProjectTokenVestingSource: {
         _enum: {
@@ -1363,7 +1366,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup200: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
+     * Lookup201: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
      **/
     PalletProjectTokenTokenSale: {
         unitPrice: 'u128',
@@ -1378,7 +1381,7 @@ exports.default = {
         autoFinalize: 'bool'
     },
     /**
-     * Lookup201: pallet_project_token::types::AmmCurve<Balance>
+     * Lookup202: pallet_project_token::types::AmmCurve<Balance>
      **/
     PalletProjectTokenAmmCurve: {
         slope: 'u128',
@@ -1386,7 +1389,21 @@ exports.default = {
         providedSupply: 'u128'
     },
     /**
-     * Lookup202: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
+     * Lookup203: pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>
+     **/
+    PalletProjectTokenTokenConstraints: {
+        maxYearlyRate: 'Option<Permill>',
+        minAmmSlope: 'Option<u128>',
+        minSaleDuration: 'Option<u32>',
+        minRevenueSplitDuration: 'Option<u32>',
+        minRevenueSplitTimeToStart: 'Option<u32>',
+        salePlatformFee: 'Option<Permill>',
+        ammBuyTxFees: 'Option<Permill>',
+        ammSellTxFees: 'Option<Permill>',
+        bloatBond: 'Option<u128>'
+    },
+    /**
+     * Lookup206: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
      **/
     PalletProposalsEngineRawEvent: {
         _enum: {
@@ -1399,7 +1416,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup203: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
+     * Lookup207: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
      **/
     PalletProposalsEngineProposalStatusesProposalStatus: {
         _enum: {
@@ -1409,7 +1426,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup204: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
+     * Lookup208: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
      **/
     PalletProposalsEngineProposalStatusesProposalDecision: {
         _enum: {
@@ -1423,13 +1440,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup205: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
+     * Lookup209: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
      **/
     PalletProposalsEngineProposalStatusesApprovedProposalDecision: {
         _enum: ['PendingExecution', 'PendingConstitutionality']
     },
     /**
-     * Lookup206: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
+     * Lookup210: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
      **/
     PalletProposalsEngineProposalStatusesExecutionStatus: {
         _enum: {
@@ -1440,13 +1457,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup207: pallet_proposals_engine::types::VoteKind
+     * Lookup211: pallet_proposals_engine::types::VoteKind
      **/
     PalletProposalsEngineVoteKind: {
         _enum: ['Approve', 'Reject', 'Slash', 'Abstain']
     },
     /**
-     * Lookup208: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
+     * Lookup212: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
      **/
     PalletProposalsDiscussionRawEvent: {
         _enum: {
@@ -1458,7 +1475,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup209: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
+     * Lookup213: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
      **/
     PalletProposalsDiscussionThreadModeBTreeSet: {
         _enum: {
@@ -1467,7 +1484,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup210: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>
+     * Lookup214: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>, ProposalId, ThreadId>
      **/
     PalletProposalsCodexRawEvent: {
         _enum: {
@@ -1475,7 +1492,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup211: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
+     * Lookup215: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
      **/
     PalletProposalsCodexGeneralProposalParams: {
         memberId: 'u64',
@@ -1485,7 +1502,7 @@ exports.default = {
         exactExecutionBlock: 'Option<u32>'
     },
     /**
-     * Lookup212: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>
+     * Lookup216: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>
      **/
     PalletProposalsCodexProposalDetails: {
         _enum: {
@@ -1512,18 +1529,21 @@ exports.default = {
             VetoProposal: 'u32',
             UpdateGlobalNftLimit: '(PalletContentNftLimitPeriod,u64)',
             UpdateChannelPayouts: 'PalletContentUpdateChannelPayoutsParametersRecord',
-            SetPalletFozenStatus: '(bool,PalletCommonFreezablePallet)'
+            SetPalletFozenStatus: '(bool,PalletCommonFreezablePallet)',
+            UpdateTokenPalletTokenConstraints: 'PalletProjectTokenTokenConstraints',
+            SetEraPayoutDampingFactor: 'Percent',
+            DecreaseCouncilBudget: 'u128'
         }
     },
     /**
-     * Lookup214: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
+     * Lookup218: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
      **/
     PalletCommonFundingRequestParameters: {
         account: 'AccountId32',
         amount: 'u128'
     },
     /**
-     * Lookup215: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
+     * Lookup219: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
      **/
     PalletProposalsCodexCreateOpeningParameters: {
         description: 'Bytes',
@@ -1532,14 +1552,14 @@ exports.default = {
         group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup216: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
+     * Lookup220: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
      **/
     PalletWorkingGroupStakePolicy: {
         stakeAmount: 'u128',
         leavingUnstakingPeriod: 'u32'
     },
     /**
-     * Lookup217: pallet_proposals_codex::types::FillOpeningParameters
+     * Lookup221: pallet_proposals_codex::types::FillOpeningParameters
      **/
     PalletProposalsCodexFillOpeningParameters: {
         openingId: 'u64',
@@ -1547,7 +1567,7 @@ exports.default = {
         workingGroup: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup218: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
+     * Lookup222: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
      **/
     PalletProposalsCodexTerminateRoleParameters: {
         workerId: 'u64',
@@ -1555,13 +1575,13 @@ exports.default = {
         group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup219: pallet_common::FreezablePallet
+     * Lookup223: pallet_common::FreezablePallet
      **/
     PalletCommonFreezablePallet: {
         _enum: ['ProjectToken']
     },
     /**
-     * Lookup220: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>
+     * Lookup224: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance1>
      **/
     PalletWorkingGroupRawEventInstance1: {
         _enum: {
@@ -1584,6 +1604,7 @@ exports.default = {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1593,13 +1614,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup224: pallet_working_group::types::OpeningType
+     * Lookup228: pallet_working_group::types::OpeningType
      **/
     PalletWorkingGroupOpeningType: {
         _enum: ['Leader', 'Regular']
     },
     /**
-     * Lookup225: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
+     * Lookup229: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupApplyOnOpeningParams: {
         memberId: 'u64',
@@ -1610,24 +1631,32 @@ exports.default = {
         stakeParameters: 'PalletWorkingGroupStakeParameters'
     },
     /**
-     * Lookup226: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup230: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupStakeParameters: {
         stake: 'u128',
         stakingAccountId: 'AccountId32'
     },
     /**
-     * Lookup227: pallet_working_group::Instance1
+     * Lookup231: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
+     **/
+    PalletVestingVestingInfo: {
+        locked: 'u128',
+        perBlock: 'u128',
+        startingBlock: 'u32'
+    },
+    /**
+     * Lookup232: pallet_working_group::Instance1
      **/
     PalletWorkingGroupInstance1: 'Null',
     /**
-     * Lookup228: pallet_working_group::types::RewardPaymentType
+     * Lookup233: pallet_working_group::types::RewardPaymentType
      **/
     PalletWorkingGroupRewardPaymentType: {
         _enum: ['MissedReward', 'RegularReward']
     },
     /**
-     * Lookup229: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>
+     * Lookup234: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance2>
      **/
     PalletWorkingGroupRawEventInstance2: {
         _enum: {
@@ -1650,6 +1679,7 @@ exports.default = {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1659,11 +1689,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup230: pallet_working_group::Instance2
+     * Lookup235: pallet_working_group::Instance2
      **/
     PalletWorkingGroupInstance2: 'Null',
     /**
-     * Lookup231: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>
+     * Lookup236: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance3>
      **/
     PalletWorkingGroupRawEventInstance3: {
         _enum: {
@@ -1686,6 +1716,7 @@ exports.default = {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1695,11 +1726,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup232: pallet_working_group::Instance3
+     * Lookup237: pallet_working_group::Instance3
      **/
     PalletWorkingGroupInstance3: 'Null',
     /**
-     * Lookup233: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>
+     * Lookup238: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance4>
      **/
     PalletWorkingGroupRawEventInstance4: {
         _enum: {
@@ -1722,6 +1753,7 @@ exports.default = {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1731,11 +1763,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup234: pallet_working_group::Instance4
+     * Lookup239: pallet_working_group::Instance4
      **/
     PalletWorkingGroupInstance4: 'Null',
     /**
-     * Lookup235: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>
+     * Lookup240: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance5>
      **/
     PalletWorkingGroupRawEventInstance5: {
         _enum: {
@@ -1758,6 +1790,7 @@ exports.default = {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1767,11 +1800,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup236: pallet_working_group::Instance5
+     * Lookup241: pallet_working_group::Instance5
      **/
     PalletWorkingGroupInstance5: 'Null',
     /**
-     * Lookup237: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>
+     * Lookup242: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance6>
      **/
     PalletWorkingGroupRawEventInstance6: {
         _enum: {
@@ -1794,6 +1827,7 @@ exports.default = {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1803,11 +1837,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup238: pallet_working_group::Instance6
+     * Lookup243: pallet_working_group::Instance6
      **/
     PalletWorkingGroupInstance6: 'Null',
     /**
-     * Lookup239: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>
+     * Lookup244: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance7>
      **/
     PalletWorkingGroupRawEventInstance7: {
         _enum: {
@@ -1830,6 +1864,7 @@ exports.default = {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1839,11 +1874,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup240: pallet_working_group::Instance7
+     * Lookup245: pallet_working_group::Instance7
      **/
     PalletWorkingGroupInstance7: 'Null',
     /**
-     * Lookup241: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>
+     * Lookup246: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance8>
      **/
     PalletWorkingGroupRawEventInstance8: {
         _enum: {
@@ -1866,6 +1901,7 @@ exports.default = {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1875,11 +1911,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup242: pallet_working_group::Instance8
+     * Lookup247: pallet_working_group::Instance8
      **/
     PalletWorkingGroupInstance8: 'Null',
     /**
-     * Lookup243: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>
+     * Lookup248: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance9>
      **/
     PalletWorkingGroupRawEventInstance9: {
         _enum: {
@@ -1902,6 +1938,7 @@ exports.default = {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1911,11 +1948,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup244: pallet_working_group::Instance9
+     * Lookup249: pallet_working_group::Instance9
      **/
     PalletWorkingGroupInstance9: 'Null',
     /**
-     * Lookup245: frame_system::Phase
+     * Lookup250: frame_system::Phase
      **/
     FrameSystemPhase: {
         _enum: {
@@ -1925,14 +1962,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup249: frame_system::LastRuntimeUpgradeInfo
+     * Lookup254: frame_system::LastRuntimeUpgradeInfo
      **/
     FrameSystemLastRuntimeUpgradeInfo: {
         specVersion: 'Compact<u32>',
         specName: 'Text'
     },
     /**
-     * Lookup252: frame_system::pallet::Call<T>
+     * Lookup257: frame_system::pallet::Call<T>
      **/
     FrameSystemCall: {
         _enum: {
@@ -1967,7 +2004,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup255: frame_system::limits::BlockWeights
+     * Lookup260: frame_system::limits::BlockWeights
      **/
     FrameSystemLimitsBlockWeights: {
         baseBlock: 'SpWeightsWeightV2Weight',
@@ -1975,7 +2012,7 @@ exports.default = {
         perClass: 'FrameSupportDispatchPerDispatchClassWeightsPerClass'
     },
     /**
-     * Lookup256: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
+     * Lookup261: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
      **/
     FrameSupportDispatchPerDispatchClassWeightsPerClass: {
         normal: 'FrameSystemLimitsWeightsPerClass',
@@ -1983,7 +2020,7 @@ exports.default = {
         mandatory: 'FrameSystemLimitsWeightsPerClass'
     },
     /**
-     * Lookup257: frame_system::limits::WeightsPerClass
+     * Lookup262: frame_system::limits::WeightsPerClass
      **/
     FrameSystemLimitsWeightsPerClass: {
         baseExtrinsic: 'SpWeightsWeightV2Weight',
@@ -1992,13 +2029,13 @@ exports.default = {
         reserved: 'Option<SpWeightsWeightV2Weight>'
     },
     /**
-     * Lookup259: frame_system::limits::BlockLength
+     * Lookup264: frame_system::limits::BlockLength
      **/
     FrameSystemLimitsBlockLength: {
         max: 'FrameSupportDispatchPerDispatchClassU32'
     },
     /**
-     * Lookup260: frame_support::dispatch::PerDispatchClass<T>
+     * Lookup265: frame_support::dispatch::PerDispatchClass<T>
      **/
     FrameSupportDispatchPerDispatchClassU32: {
         normal: 'u32',
@@ -2006,14 +2043,14 @@ exports.default = {
         mandatory: 'u32'
     },
     /**
-     * Lookup261: sp_weights::RuntimeDbWeight
+     * Lookup266: sp_weights::RuntimeDbWeight
      **/
     SpWeightsRuntimeDbWeight: {
         read: 'u64',
         write: 'u64'
     },
     /**
-     * Lookup262: sp_version::RuntimeVersion
+     * Lookup267: sp_version::RuntimeVersion
      **/
     SpVersionRuntimeVersion: {
         specName: 'Text',
@@ -2026,13 +2063,13 @@ exports.default = {
         stateVersion: 'u8'
     },
     /**
-     * Lookup268: frame_system::pallet::Error<T>
+     * Lookup273: frame_system::pallet::Error<T>
      **/
     FrameSystemError: {
         _enum: ['InvalidSpecName', 'SpecVersionNeedsToIncrease', 'FailedToExtractRuntimeVersion', 'NonDefaultComposite', 'NonZeroRefCount', 'CallFiltered']
     },
     /**
-     * Lookup269: pallet_utility::pallet::Call<T>
+     * Lookup274: pallet_utility::pallet::Call<T>
      **/
     PalletUtilityCall: {
         _enum: {
@@ -2060,7 +2097,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup272: pallet_babe::pallet::Call<T>
+     * Lookup277: pallet_babe::pallet::Call<T>
      **/
     PalletBabeCall: {
         _enum: {
@@ -2078,7 +2115,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup273: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
+     * Lookup278: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
      **/
     SpConsensusSlotsEquivocationProof: {
         offender: 'SpConsensusBabeAppPublic',
@@ -2087,7 +2124,7 @@ exports.default = {
         secondHeader: 'SpRuntimeHeader'
     },
     /**
-     * Lookup274: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
+     * Lookup279: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
      **/
     SpRuntimeHeader: {
         parentHash: 'H256',
@@ -2097,15 +2134,15 @@ exports.default = {
         digest: 'SpRuntimeDigest'
     },
     /**
-     * Lookup275: sp_runtime::traits::BlakeTwo256
+     * Lookup280: sp_runtime::traits::BlakeTwo256
      **/
     SpRuntimeBlakeTwo256: 'Null',
     /**
-     * Lookup276: sp_consensus_babe::app::Public
+     * Lookup281: sp_consensus_babe::app::Public
      **/
     SpConsensusBabeAppPublic: 'SpCoreSr25519Public',
     /**
-     * Lookup278: sp_session::MembershipProof
+     * Lookup283: sp_session::MembershipProof
      **/
     SpSessionMembershipProof: {
         session: 'u32',
@@ -2113,7 +2150,7 @@ exports.default = {
         validatorCount: 'u32'
     },
     /**
-     * Lookup279: sp_consensus_babe::digests::NextConfigDescriptor
+     * Lookup284: sp_consensus_babe::digests::NextConfigDescriptor
      **/
     SpConsensusBabeDigestsNextConfigDescriptor: {
         _enum: {
@@ -2125,13 +2162,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup280: sp_consensus_babe::AllowedSlots
+     * Lookup285: sp_consensus_babe::AllowedSlots
      **/
     SpConsensusBabeAllowedSlots: {
         _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']
     },
     /**
-     * Lookup281: pallet_timestamp::pallet::Call<T>
+     * Lookup286: pallet_timestamp::pallet::Call<T>
      **/
     PalletTimestampCall: {
         _enum: {
@@ -2141,7 +2178,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup282: pallet_balances::pallet::Call<T, I>
+     * Lookup287: pallet_balances::pallet::Call<T, I>
      **/
     PalletBalancesCall: {
         _enum: {
@@ -2174,7 +2211,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup283: pallet_election_provider_multi_phase::pallet::Call<T>
+     * Lookup288: pallet_election_provider_multi_phase::pallet::Call<T>
      **/
     PalletElectionProviderMultiPhaseCall: {
         _enum: {
@@ -2198,7 +2235,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup284: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
+     * Lookup289: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseRawSolution: {
         solution: 'JoystreamNodeRuntimeNposSolution16',
@@ -2206,7 +2243,7 @@ exports.default = {
         round: 'u32'
     },
     /**
-     * Lookup285: joystream_node_runtime::NposSolution16
+     * Lookup290: joystream_node_runtime::NposSolution16
      **/
     JoystreamNodeRuntimeNposSolution16: {
         votes1: 'Vec<(Compact<u32>,Compact<u16>)>',
@@ -2227,21 +2264,21 @@ exports.default = {
         votes16: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);15],Compact<u16>)>'
     },
     /**
-     * Lookup336: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
+     * Lookup341: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
      **/
     PalletElectionProviderMultiPhaseSolutionOrSnapshotSize: {
         voters: 'Compact<u32>',
         targets: 'Compact<u32>'
     },
     /**
-     * Lookup340: sp_npos_elections::Support<sp_core::crypto::AccountId32>
+     * Lookup345: sp_npos_elections::Support<sp_core::crypto::AccountId32>
      **/
     SpNposElectionsSupport: {
         total: 'u128',
         voters: 'Vec<(AccountId32,u128)>'
     },
     /**
-     * Lookup342: pallet_staking::pallet::pallet::Call<T>
+     * Lookup347: pallet_staking::pallet::pallet::Call<T>
      **/
     PalletStakingPalletCall: {
         _enum: {
@@ -2335,7 +2372,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup343: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
+     * Lookup348: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
      **/
     PalletStakingRewardDestination: {
         _enum: {
@@ -2347,7 +2384,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup347: pallet_staking::pallet::pallet::ConfigOp<T>
+     * Lookup351: pallet_staking::pallet::pallet::ConfigOp<T>
      **/
     PalletStakingPalletConfigOpU128: {
         _enum: {
@@ -2357,7 +2394,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup348: pallet_staking::pallet::pallet::ConfigOp<T>
+     * Lookup352: pallet_staking::pallet::pallet::ConfigOp<T>
      **/
     PalletStakingPalletConfigOpU32: {
         _enum: {
@@ -2367,7 +2404,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup349: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
+     * Lookup353: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
      **/
     PalletStakingPalletConfigOpPercent: {
         _enum: {
@@ -2377,7 +2414,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup350: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
+     * Lookup354: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
      **/
     PalletStakingPalletConfigOpPerbill: {
         _enum: {
@@ -2387,7 +2424,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup351: pallet_session::pallet::Call<T>
+     * Lookup355: pallet_session::pallet::Call<T>
      **/
     PalletSessionCall: {
         _enum: {
@@ -2402,7 +2439,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup352: joystream_node_runtime::SessionKeys
+     * Lookup356: joystream_node_runtime::SessionKeys
      **/
     JoystreamNodeRuntimeSessionKeys: {
         grandpa: 'SpConsensusGrandpaAppPublic',
@@ -2411,11 +2448,11 @@ exports.default = {
         authorityDiscovery: 'SpAuthorityDiscoveryAppPublic'
     },
     /**
-     * Lookup353: sp_authority_discovery::app::Public
+     * Lookup357: sp_authority_discovery::app::Public
      **/
     SpAuthorityDiscoveryAppPublic: 'SpCoreSr25519Public',
     /**
-     * Lookup354: pallet_grandpa::pallet::Call<T>
+     * Lookup358: pallet_grandpa::pallet::Call<T>
      **/
     PalletGrandpaCall: {
         _enum: {
@@ -2434,14 +2471,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup355: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
+     * Lookup359: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
      **/
     SpConsensusGrandpaEquivocationProof: {
         setId: 'u64',
         equivocation: 'SpConsensusGrandpaEquivocation'
     },
     /**
-     * Lookup356: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
+     * Lookup360: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
      **/
     SpConsensusGrandpaEquivocation: {
         _enum: {
@@ -2450,7 +2487,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup357: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+     * Lookup361: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
      **/
     FinalityGrandpaEquivocationPrevote: {
         roundNumber: 'u64',
@@ -2459,22 +2496,22 @@ exports.default = {
         second: '(FinalityGrandpaPrevote,SpConsensusGrandpaAppSignature)'
     },
     /**
-     * Lookup358: finality_grandpa::Prevote<primitive_types::H256, N>
+     * Lookup362: finality_grandpa::Prevote<primitive_types::H256, N>
      **/
     FinalityGrandpaPrevote: {
         targetHash: 'H256',
         targetNumber: 'u32'
     },
     /**
-     * Lookup359: sp_consensus_grandpa::app::Signature
+     * Lookup363: sp_consensus_grandpa::app::Signature
      **/
     SpConsensusGrandpaAppSignature: 'SpCoreEd25519Signature',
     /**
-     * Lookup360: sp_core::ed25519::Signature
+     * Lookup364: sp_core::ed25519::Signature
      **/
     SpCoreEd25519Signature: '[u8;64]',
     /**
-     * Lookup363: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+     * Lookup367: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
      **/
     FinalityGrandpaEquivocationPrecommit: {
         roundNumber: 'u64',
@@ -2483,14 +2520,14 @@ exports.default = {
         second: '(FinalityGrandpaPrecommit,SpConsensusGrandpaAppSignature)'
     },
     /**
-     * Lookup364: finality_grandpa::Precommit<primitive_types::H256, N>
+     * Lookup368: finality_grandpa::Precommit<primitive_types::H256, N>
      **/
     FinalityGrandpaPrecommit: {
         targetHash: 'H256',
         targetNumber: 'u32'
     },
     /**
-     * Lookup366: pallet_im_online::pallet::Call<T>
+     * Lookup370: pallet_im_online::pallet::Call<T>
      **/
     PalletImOnlineCall: {
         _enum: {
@@ -2501,7 +2538,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup367: pallet_im_online::Heartbeat<BlockNumber>
+     * Lookup371: pallet_im_online::Heartbeat<BlockNumber>
      **/
     PalletImOnlineHeartbeat: {
         blockNumber: 'u32',
@@ -2511,22 +2548,22 @@ exports.default = {
         validatorsLen: 'u32'
     },
     /**
-     * Lookup368: sp_core::offchain::OpaqueNetworkState
+     * Lookup372: sp_core::offchain::OpaqueNetworkState
      **/
     SpCoreOffchainOpaqueNetworkState: {
         peerId: 'OpaquePeerId',
         externalAddresses: 'Vec<OpaqueMultiaddr>'
     },
     /**
-     * Lookup372: pallet_im_online::sr25519::app_sr25519::Signature
+     * Lookup376: pallet_im_online::sr25519::app_sr25519::Signature
      **/
     PalletImOnlineSr25519AppSr25519Signature: 'SpCoreSr25519Signature',
     /**
-     * Lookup373: sp_core::sr25519::Signature
+     * Lookup377: sp_core::sr25519::Signature
      **/
     SpCoreSr25519Signature: '[u8;64]',
     /**
-     * Lookup374: pallet_bags_list::pallet::Call<T, I>
+     * Lookup378: pallet_bags_list::pallet::Call<T, I>
      **/
     PalletBagsListCall: {
         _enum: {
@@ -2539,7 +2576,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup375: pallet_vesting::pallet::Call<T>
+     * Lookup379: pallet_vesting::pallet::Call<T>
      **/
     PalletVestingCall: {
         _enum: {
@@ -2563,15 +2600,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup376: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
-     **/
-    PalletVestingVestingInfo: {
-        locked: 'u128',
-        perBlock: 'u128',
-        startingBlock: 'u32'
-    },
-    /**
-     * Lookup377: pallet_multisig::pallet::Call<T>
+     * Lookup380: pallet_multisig::pallet::Call<T>
      **/
     PalletMultisigCall: {
         _enum: {
@@ -2602,7 +2631,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup379: pallet_council::Call<T>
+     * Lookup382: pallet_council::Call<T>
      **/
     PalletCouncilCall: {
         _enum: {
@@ -2634,6 +2663,12 @@ exports.default = {
             set_councilor_reward: {
                 councilorReward: 'u128',
             },
+            set_era_payout_damping_factor: {
+                newParameter: 'Percent',
+            },
+            decrease_council_budget: {
+                reductionAmount: 'u128',
+            },
             funding_request: {
                 fundingRequests: 'Vec<PalletCommonFundingRequestParameters>',
             },
@@ -2653,7 +2688,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup380: pallet_referendum::Call<T, I>
+     * Lookup383: pallet_referendum::Call<T, I>
      **/
     PalletReferendumCall: {
         _enum: {
@@ -2670,7 +2705,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup381: pallet_membership::Call<T>
+     * Lookup384: pallet_membership::Call<T>
      **/
     PalletMembershipCall: {
         _enum: {
@@ -2739,7 +2774,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup382: pallet_forum::Call<T>
+     * Lookup385: pallet_forum::Call<T>
      **/
     PalletForumCall: {
         _enum: {
@@ -2836,7 +2871,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup383: pallet_constitution::Call<T>
+     * Lookup386: pallet_constitution::Call<T>
      **/
     PalletConstitutionCall: {
         _enum: {
@@ -2846,7 +2881,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup384: pallet_bounty::Call<T>
+     * Lookup387: pallet_bounty::Call<T>
      **/
     PalletBountyCall: {
         _enum: {
@@ -2922,7 +2957,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup385: pallet_joystream_utility::Call<T>
+     * Lookup388: pallet_joystream_utility::Call<T>
      **/
     PalletJoystreamUtilityCall: {
         _enum: {
@@ -2943,7 +2978,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup386: pallet_content::Call<T>
+     * Lookup389: pallet_content::Call<T>
      **/
     PalletContentCall: {
         _enum: {
@@ -3252,14 +3287,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup387: pallet_content::types::ChannelBagWitness
+     * Lookup390: pallet_content::types::ChannelBagWitness
      **/
     PalletContentChannelBagWitness: {
         storageBucketsNum: 'u32',
         distributionBucketsNum: 'u32'
     },
     /**
-     * Lookup389: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
+     * Lookup392: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
      **/
     PalletCommonMerkleTreeProofElementRecord: {
         _alias: {
@@ -3269,13 +3304,13 @@ exports.default = {
         side: 'PalletCommonMerkleTreeSide'
     },
     /**
-     * Lookup390: pallet_common::merkle_tree::Side
+     * Lookup393: pallet_common::merkle_tree::Side
      **/
     PalletCommonMerkleTreeSide: {
         _enum: ['Left', 'Right']
     },
     /**
-     * Lookup391: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
+     * Lookup394: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
      **/
     PalletContentPullPaymentElement: {
         channelId: 'u64',
@@ -3283,7 +3318,7 @@ exports.default = {
         reason: 'H256'
     },
     /**
-     * Lookup392: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
+     * Lookup395: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
      **/
     PalletContentInitTransferParameters: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -3291,7 +3326,7 @@ exports.default = {
         newOwner: 'PalletContentChannelOwner'
     },
     /**
-     * Lookup393: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup396: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenSaleParams: {
         unitPrice: 'u128',
@@ -3303,14 +3338,14 @@ exports.default = {
         metadata: 'Option<Bytes>'
     },
     /**
-     * Lookup397: pallet_project_token::types::AmmParams<Balance>
+     * Lookup400: pallet_project_token::types::AmmParams<Balance>
      **/
     PalletProjectTokenAmmParams: {
         slope: 'u128',
         intercept: 'u128'
     },
     /**
-     * Lookup398: pallet_storage::Call<T>
+     * Lookup401: pallet_storage::Call<T>
      **/
     PalletStorageCall: {
         _enum: {
@@ -3457,10 +3492,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup399: pallet_project_token::Call<T>
+     * Lookup402: pallet_project_token::Call<T>
      **/
     PalletProjectTokenCall: {
         _enum: {
+            update_token_constraints: {
+                parameters: 'PalletProjectTokenTokenConstraints',
+            },
             transfer: {
                 srcMemberId: 'u64',
                 tokenId: 'u64',
@@ -3513,17 +3551,17 @@ exports.default = {
         }
     },
     /**
-     * Lookup403: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
+     * Lookup406: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
      **/
     PalletProjectTokenMerkleProof: 'Vec<(H256,PalletProjectTokenMerkleSide)>',
     /**
-     * Lookup406: pallet_project_token::types::MerkleSide
+     * Lookup409: pallet_project_token::types::MerkleSide
      **/
     PalletProjectTokenMerkleSide: {
         _enum: ['Right', 'Left']
     },
     /**
-     * Lookup409: pallet_proposals_engine::Call<T>
+     * Lookup412: pallet_proposals_engine::Call<T>
      **/
     PalletProposalsEngineCall: {
         _enum: {
@@ -3548,7 +3586,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup410: pallet_proposals_discussion::Call<T>
+     * Lookup413: pallet_proposals_discussion::Call<T>
      **/
     PalletProposalsDiscussionCall: {
         _enum: {
@@ -3577,7 +3615,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup411: pallet_proposals_codex::Call<T>
+     * Lookup414: pallet_proposals_codex::Call<T>
      **/
     PalletProposalsCodexCall: {
         _enum: {
@@ -3588,7 +3626,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup412: pallet_working_group::Call<T, I>
+     * Lookup415: pallet_working_group::Call<T, I>
      **/
     PalletWorkingGroupCall: {
         _enum: {
@@ -3656,6 +3694,11 @@ exports.default = {
                 amount: 'u128',
                 rationale: 'Option<Bytes>',
             },
+            vested_spend_from_budget: {
+                accountId: 'AccountId32',
+                vestingSchedule: 'PalletVestingVestingInfo',
+                rationale: 'Option<Bytes>',
+            },
             fund_working_group_budget: {
                 memberId: 'u64',
                 amount: 'u128',
@@ -3671,7 +3714,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup421: joystream_node_runtime::OriginCaller
+     * Lookup424: joystream_node_runtime::OriginCaller
      **/
     JoystreamNodeRuntimeOriginCaller: {
         _enum: {
@@ -3680,7 +3723,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup422: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
+     * Lookup425: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
      **/
     FrameSupportDispatchRawOrigin: {
         _enum: {
@@ -3690,17 +3733,17 @@ exports.default = {
         }
     },
     /**
-     * Lookup423: sp_core::Void
+     * Lookup426: sp_core::Void
      **/
     SpCoreVoid: 'Null',
     /**
-     * Lookup424: pallet_utility::pallet::Error<T>
+     * Lookup427: pallet_utility::pallet::Error<T>
      **/
     PalletUtilityError: {
         _enum: ['TooManyCalls']
     },
     /**
-     * Lookup431: sp_consensus_babe::digests::PreDigest
+     * Lookup434: sp_consensus_babe::digests::PreDigest
      **/
     SpConsensusBabeDigestsPreDigest: {
         _enum: {
@@ -3711,7 +3754,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup432: sp_consensus_babe::digests::PrimaryPreDigest
+     * Lookup435: sp_consensus_babe::digests::PrimaryPreDigest
      **/
     SpConsensusBabeDigestsPrimaryPreDigest: {
         authorityIndex: 'u32',
@@ -3720,14 +3763,14 @@ exports.default = {
         vrfProof: '[u8;64]'
     },
     /**
-     * Lookup433: sp_consensus_babe::digests::SecondaryPlainPreDigest
+     * Lookup436: sp_consensus_babe::digests::SecondaryPlainPreDigest
      **/
     SpConsensusBabeDigestsSecondaryPlainPreDigest: {
         authorityIndex: 'u32',
         slot: 'u64'
     },
     /**
-     * Lookup434: sp_consensus_babe::digests::SecondaryVRFPreDigest
+     * Lookup437: sp_consensus_babe::digests::SecondaryVRFPreDigest
      **/
     SpConsensusBabeDigestsSecondaryVRFPreDigest: {
         authorityIndex: 'u32',
@@ -3736,20 +3779,20 @@ exports.default = {
         vrfProof: '[u8;64]'
     },
     /**
-     * Lookup436: sp_consensus_babe::BabeEpochConfiguration
+     * Lookup439: sp_consensus_babe::BabeEpochConfiguration
      **/
     SpConsensusBabeBabeEpochConfiguration: {
         c: '(u64,u64)',
         allowedSlots: 'SpConsensusBabeAllowedSlots'
     },
     /**
-     * Lookup438: pallet_babe::pallet::Error<T>
+     * Lookup441: pallet_babe::pallet::Error<T>
      **/
     PalletBabeError: {
         _enum: ['InvalidEquivocationProof', 'InvalidKeyOwnershipProof', 'DuplicateOffenceReport', 'InvalidConfiguration']
     },
     /**
-     * Lookup440: pallet_balances::BalanceLock<Balance>
+     * Lookup443: pallet_balances::BalanceLock<Balance>
      **/
     PalletBalancesBalanceLock: {
         id: '[u8;8]',
@@ -3757,32 +3800,32 @@ exports.default = {
         reasons: 'PalletBalancesReasons'
     },
     /**
-     * Lookup441: pallet_balances::Reasons
+     * Lookup444: pallet_balances::Reasons
      **/
     PalletBalancesReasons: {
         _enum: ['Fee', 'Misc', 'All']
     },
     /**
-     * Lookup444: pallet_balances::ReserveData<ReserveIdentifier, Balance>
+     * Lookup447: pallet_balances::ReserveData<ReserveIdentifier, Balance>
      **/
     PalletBalancesReserveData: {
         id: '[u8;8]',
         amount: 'u128'
     },
     /**
-     * Lookup446: pallet_balances::pallet::Error<T, I>
+     * Lookup449: pallet_balances::pallet::Error<T, I>
      **/
     PalletBalancesError: {
         _enum: ['VestingBalance', 'LiquidityRestrictions', 'InsufficientBalance', 'ExistentialDeposit', 'KeepAlive', 'ExistingVestingSchedule', 'DeadAccount', 'TooManyReserves']
     },
     /**
-     * Lookup448: pallet_transaction_payment::Releases
+     * Lookup451: pallet_transaction_payment::Releases
      **/
     PalletTransactionPaymentReleases: {
         _enum: ['V1Ancient', 'V2']
     },
     /**
-     * Lookup449: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
+     * Lookup452: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
      **/
     PalletElectionProviderMultiPhaseReadySolution: {
         supports: 'Vec<(AccountId32,SpNposElectionsSupport)>',
@@ -3790,14 +3833,14 @@ exports.default = {
         compute: 'PalletElectionProviderMultiPhaseElectionCompute'
     },
     /**
-     * Lookup451: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
+     * Lookup454: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
      **/
     PalletElectionProviderMultiPhaseRoundSnapshot: {
         voters: 'Vec<(AccountId32,u64,Vec<AccountId32>)>',
         targets: 'Vec<AccountId32>'
     },
     /**
-     * Lookup458: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
+     * Lookup461: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseSignedSignedSubmission: {
         who: 'AccountId32',
@@ -3806,13 +3849,13 @@ exports.default = {
         callFee: 'u128'
     },
     /**
-     * Lookup459: pallet_election_provider_multi_phase::pallet::Error<T>
+     * Lookup462: pallet_election_provider_multi_phase::pallet::Error<T>
      **/
     PalletElectionProviderMultiPhaseError: {
         _enum: ['PreDispatchEarlySubmission', 'PreDispatchWrongWinnerCount', 'PreDispatchWeakSubmission', 'SignedQueueFull', 'SignedCannotPayDeposit', 'SignedInvalidWitness', 'SignedTooMuchWeight', 'OcwCallWrongEra', 'MissingSnapshotMetadata', 'InvalidSubmissionIndex', 'CallNotAllowed', 'FallbackFailed', 'BoundNotMet', 'TooManyWinners']
     },
     /**
-     * Lookup460: pallet_staking::StakingLedger<T>
+     * Lookup463: pallet_staking::StakingLedger<T>
      **/
     PalletStakingStakingLedger: {
         stash: 'AccountId32',
@@ -3822,14 +3865,14 @@ exports.default = {
         claimedRewards: 'Vec<u32>'
     },
     /**
-     * Lookup462: pallet_staking::UnlockChunk<Balance>
+     * Lookup465: pallet_staking::UnlockChunk<Balance>
      **/
     PalletStakingUnlockChunk: {
         value: 'Compact<u128>',
         era: 'Compact<u32>'
     },
     /**
-     * Lookup465: pallet_staking::Nominations<T>
+     * Lookup468: pallet_staking::Nominations<T>
      **/
     PalletStakingNominations: {
         targets: 'Vec<AccountId32>',
@@ -3837,21 +3880,21 @@ exports.default = {
         suppressed: 'bool'
     },
     /**
-     * Lookup466: pallet_staking::ActiveEraInfo
+     * Lookup469: pallet_staking::ActiveEraInfo
      **/
     PalletStakingActiveEraInfo: {
         index: 'u32',
         start: 'Option<u64>'
     },
     /**
-     * Lookup468: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
+     * Lookup471: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
      **/
     PalletStakingEraRewardPoints: {
         total: 'u32',
         individual: 'BTreeMap<AccountId32, u32>'
     },
     /**
-     * Lookup473: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
+     * Lookup476: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
      **/
     PalletStakingUnappliedSlash: {
         validator: 'AccountId32',
@@ -3861,7 +3904,7 @@ exports.default = {
         payout: 'u128'
     },
     /**
-     * Lookup475: pallet_staking::slashing::SlashingSpans
+     * Lookup478: pallet_staking::slashing::SlashingSpans
      **/
     PalletStakingSlashingSlashingSpans: {
         spanIndex: 'u32',
@@ -3870,30 +3913,30 @@ exports.default = {
         prior: 'Vec<u32>'
     },
     /**
-     * Lookup476: pallet_staking::slashing::SpanRecord<Balance>
+     * Lookup479: pallet_staking::slashing::SpanRecord<Balance>
      **/
     PalletStakingSlashingSpanRecord: {
         slashed: 'u128',
         paidOut: 'u128'
     },
     /**
-     * Lookup479: pallet_staking::pallet::pallet::Error<T>
+     * Lookup482: pallet_staking::pallet::pallet::Error<T>
      **/
     PalletStakingPalletError: {
         _enum: ['NotController', 'NotStash', 'AlreadyBonded', 'AlreadyPaired', 'EmptyTargets', 'DuplicateIndex', 'InvalidSlashIndex', 'InsufficientBond', 'NoMoreChunks', 'NoUnlockChunk', 'FundedTarget', 'InvalidEraToReward', 'InvalidNumberOfNominations', 'NotSortedAndUnique', 'AlreadyClaimed', 'IncorrectHistoryDepth', 'IncorrectSlashingSpans', 'BadState', 'TooManyTargets', 'BadTarget', 'CannotChillOther', 'TooManyNominators', 'TooManyValidators', 'CommissionTooLow', 'BoundNotMet', 'BondingRestricted']
     },
     /**
-     * Lookup483: sp_core::crypto::KeyTypeId
+     * Lookup486: sp_core::crypto::KeyTypeId
      **/
     SpCoreCryptoKeyTypeId: '[u8;4]',
     /**
-     * Lookup484: pallet_session::pallet::Error<T>
+     * Lookup487: pallet_session::pallet::Error<T>
      **/
     PalletSessionError: {
         _enum: ['InvalidProof', 'NoAssociatedValidatorId', 'DuplicatedKey', 'NoKeys', 'NoAccount']
     },
     /**
-     * Lookup486: pallet_grandpa::StoredState<N>
+     * Lookup489: pallet_grandpa::StoredState<N>
      **/
     PalletGrandpaStoredState: {
         _enum: {
@@ -3910,7 +3953,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup487: pallet_grandpa::StoredPendingChange<N, Limit>
+     * Lookup490: pallet_grandpa::StoredPendingChange<N, Limit>
      **/
     PalletGrandpaStoredPendingChange: {
         scheduledAt: 'u32',
@@ -3919,33 +3962,33 @@ exports.default = {
         forced: 'Option<u32>'
     },
     /**
-     * Lookup489: pallet_grandpa::pallet::Error<T>
+     * Lookup492: pallet_grandpa::pallet::Error<T>
      **/
     PalletGrandpaError: {
         _enum: ['PauseFailed', 'ResumeFailed', 'ChangePending', 'TooSoon', 'InvalidKeyOwnershipProof', 'InvalidEquivocationProof', 'DuplicateOffenceReport']
     },
     /**
-     * Lookup495: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
+     * Lookup498: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
      **/
     PalletImOnlineBoundedOpaqueNetworkState: {
         peerId: 'Bytes',
         externalAddresses: 'Vec<Bytes>'
     },
     /**
-     * Lookup499: pallet_im_online::pallet::Error<T>
+     * Lookup502: pallet_im_online::pallet::Error<T>
      **/
     PalletImOnlineError: {
         _enum: ['InvalidKey', 'DuplicatedHeartbeat']
     },
     /**
-     * Lookup500: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
+     * Lookup503: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
      **/
     SpStakingOffenceOffenceDetails: {
         offender: '(AccountId32,PalletStakingExposure)',
         reporters: 'Vec<AccountId32>'
     },
     /**
-     * Lookup503: pallet_bags_list::list::Node<T, I>
+     * Lookup506: pallet_bags_list::list::Node<T, I>
      **/
     PalletBagsListListNode: {
         id: 'AccountId32',
@@ -3955,14 +3998,14 @@ exports.default = {
         score: 'u64'
     },
     /**
-     * Lookup504: pallet_bags_list::list::Bag<T, I>
+     * Lookup507: pallet_bags_list::list::Bag<T, I>
      **/
     PalletBagsListListBag: {
         head: 'Option<AccountId32>',
         tail: 'Option<AccountId32>'
     },
     /**
-     * Lookup505: pallet_bags_list::pallet::Error<T, I>
+     * Lookup508: pallet_bags_list::pallet::Error<T, I>
      **/
     PalletBagsListError: {
         _enum: {
@@ -3970,25 +4013,25 @@ exports.default = {
         }
     },
     /**
-     * Lookup506: pallet_bags_list::list::ListError
+     * Lookup509: pallet_bags_list::list::ListError
      **/
     PalletBagsListListListError: {
         _enum: ['Duplicate', 'NotHeavier', 'NotInSameBag', 'NodeNotFound']
     },
     /**
-     * Lookup509: pallet_vesting::Releases
+     * Lookup512: pallet_vesting::Releases
      **/
     PalletVestingReleases: {
         _enum: ['V0', 'V1']
     },
     /**
-     * Lookup510: pallet_vesting::pallet::Error<T>
+     * Lookup513: pallet_vesting::pallet::Error<T>
      **/
     PalletVestingError: {
         _enum: ['NotVesting', 'AtMaxVestingSchedules', 'AmountLow', 'ScheduleIndexOutOfBounds', 'InvalidScheduleParams']
     },
     /**
-     * Lookup512: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
+     * Lookup515: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
      **/
     PalletMultisigMultisig: {
         when: 'PalletMultisigTimepoint',
@@ -3997,20 +4040,20 @@ exports.default = {
         approvals: 'Vec<AccountId32>'
     },
     /**
-     * Lookup514: pallet_multisig::pallet::Error<T>
+     * Lookup517: pallet_multisig::pallet::Error<T>
      **/
     PalletMultisigError: {
         _enum: ['MinimumThreshold', 'AlreadyApproved', 'NoApprovalsNeeded', 'TooFewSignatories', 'TooManySignatories', 'SignatoriesOutOfOrder', 'SenderInSignatories', 'NotFound', 'NotOwner', 'NoTimepoint', 'WrongTimepoint', 'UnexpectedTimepoint', 'MaxWeightTooLow', 'AlreadyStored']
     },
     /**
-     * Lookup515: pallet_council::CouncilStageUpdate<BlockNumber>
+     * Lookup518: pallet_council::CouncilStageUpdate<BlockNumber>
      **/
     PalletCouncilCouncilStageUpdate: {
         stage: 'PalletCouncilCouncilStage',
         changedAt: 'u32'
     },
     /**
-     * Lookup516: pallet_council::CouncilStage<BlockNumber>
+     * Lookup519: pallet_council::CouncilStage<BlockNumber>
      **/
     PalletCouncilCouncilStage: {
         _enum: {
@@ -4020,26 +4063,26 @@ exports.default = {
         }
     },
     /**
-     * Lookup517: pallet_council::CouncilStageAnnouncing<BlockNumber>
+     * Lookup520: pallet_council::CouncilStageAnnouncing<BlockNumber>
      **/
     PalletCouncilCouncilStageAnnouncing: {
         candidatesCount: 'u32',
         endsAt: 'u32'
     },
     /**
-     * Lookup518: pallet_council::CouncilStageElection
+     * Lookup521: pallet_council::CouncilStageElection
      **/
     PalletCouncilCouncilStageElection: {
         candidatesCount: 'u32'
     },
     /**
-     * Lookup519: pallet_council::CouncilStageIdle<BlockNumber>
+     * Lookup522: pallet_council::CouncilStageIdle<BlockNumber>
      **/
     PalletCouncilCouncilStageIdle: {
         endsAt: 'u32'
     },
     /**
-     * Lookup521: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
+     * Lookup524: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
      **/
     PalletCouncilCouncilMember: {
         stakingAccountId: 'AccountId32',
@@ -4050,7 +4093,7 @@ exports.default = {
         unpaidReward: 'u128'
     },
     /**
-     * Lookup523: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
+     * Lookup526: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
      **/
     PalletCouncilCandidate: {
         stakingAccountId: 'AccountId32',
@@ -4061,13 +4104,13 @@ exports.default = {
         noteHash: 'Option<H256>'
     },
     /**
-     * Lookup524: pallet_council::Error<T>
+     * Lookup527: pallet_council::Error<T>
      **/
     PalletCouncilError: {
-        _enum: ['ArithmeticError', 'BadOrigin', 'CantCandidateNow', 'CantReleaseStakeNow', 'CandidacyStakeTooLow', 'CantCandidateTwice', 'ConflictingStake', 'StakeStillNeeded', 'NoStake', 'InsufficientBalanceForStaking', 'CantVoteForYourself', 'MemberIdNotMatchAccount', 'InvalidAccountToStakeReuse', 'NotCandidatingNow', 'CantWithdrawCandidacyNow', 'NotCouncilor', 'InsufficientFundsForFundingRequest', 'ZeroBalanceFundRequest', 'RepeatedFundRequestAccount', 'EmptyFundingRequests', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'CandidateDoesNotExist', 'InsufficientBalanceForTransfer']
+        _enum: ['ArithmeticError', 'BadOrigin', 'CantCandidateNow', 'CantReleaseStakeNow', 'CandidacyStakeTooLow', 'CantCandidateTwice', 'ConflictingStake', 'StakeStillNeeded', 'NoStake', 'InsufficientBalanceForStaking', 'CantVoteForYourself', 'MemberIdNotMatchAccount', 'InvalidAccountToStakeReuse', 'NotCandidatingNow', 'CantWithdrawCandidacyNow', 'NotCouncilor', 'InsufficientFundsForFundingRequest', 'ZeroBalanceFundRequest', 'RepeatedFundRequestAccount', 'EmptyFundingRequests', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'CandidateDoesNotExist', 'InsufficientBalanceForTransfer', 'ReductionAmountTooLarge']
     },
     /**
-     * Lookup525: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup528: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStage: {
         _enum: {
@@ -4077,7 +4120,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup527: pallet_referendum::ReferendumStageVoting<BlockNumber>
+     * Lookup530: pallet_referendum::ReferendumStageVoting<BlockNumber>
      **/
     PalletReferendumReferendumStageVoting: {
         started: 'u32',
@@ -4086,7 +4129,7 @@ exports.default = {
         endsAt: 'u32'
     },
     /**
-     * Lookup528: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup531: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStageRevealing: {
         started: 'u32',
@@ -4096,7 +4139,7 @@ exports.default = {
         endsAt: 'u32'
     },
     /**
-     * Lookup529: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
+     * Lookup532: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
      **/
     PalletReferendumCastVote: {
         commitment: 'H256',
@@ -4105,13 +4148,13 @@ exports.default = {
         voteFor: 'Option<u64>'
     },
     /**
-     * Lookup530: pallet_referendum::Error<T, I>
+     * Lookup533: pallet_referendum::Error<T, I>
      **/
     PalletReferendumError: {
         _enum: ['BadOrigin', 'ReferendumNotRunning', 'RevealingNotInProgress', 'ConflictStakesOnAccount', 'InsufficientBalanceToStake', 'InsufficientStake', 'InvalidReveal', 'InvalidVote', 'VoteNotExisting', 'AlreadyVotedThisCycle', 'UnstakingVoteInSameCycle', 'SaltTooLong', 'UnstakingForbidden', 'AccountAlreadyOptedOutOfVoting']
     },
     /**
-     * Lookup531: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
+     * Lookup534: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
      **/
     PalletMembershipMembershipObject: {
         handleHash: 'H256',
@@ -4121,20 +4164,20 @@ exports.default = {
         invites: 'u32'
     },
     /**
-     * Lookup532: pallet_membership::StakingAccountMemberBinding<MemberId>
+     * Lookup535: pallet_membership::StakingAccountMemberBinding<MemberId>
      **/
     PalletMembershipStakingAccountMemberBinding: {
         memberId: 'u64',
         confirmed: 'bool'
     },
     /**
-     * Lookup533: pallet_membership::Error<T>
+     * Lookup536: pallet_membership::Error<T>
      **/
     PalletMembershipError: {
         _enum: ['NotEnoughBalanceToBuyMembership', 'ControllerAccountRequired', 'RootAccountRequired', 'UnsignedOrigin', 'MemberProfileNotFound', 'HandleAlreadyRegistered', 'HandleMustBeProvidedDuringRegistration', 'ReferrerIsNotMember', 'CannotTransferInvitesForNotMember', 'NotEnoughInvites', 'WorkingGroupLeaderNotSet', 'StakingAccountIsAlreadyRegistered', 'StakingAccountDoesntExist', 'StakingAccountAlreadyConfirmed', 'WorkingGroupBudgetIsNotSufficientForInviting', 'ConflictingLock', 'CannotExceedReferralCutPercentLimit', 'ConflictStakesOnAccount', 'InsufficientBalanceToCoverStake', 'GifLockExceedsCredit', 'InsufficientBalanceToGift', 'InsufficientBalanceToCoverPayment']
     },
     /**
-     * Lookup534: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup537: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletForumCategory: {
         titleHash: 'H256',
@@ -4147,7 +4190,7 @@ exports.default = {
         stickyThreadIds: 'BTreeSet<u64>'
     },
     /**
-     * Lookup536: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup539: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumThread: {
         categoryId: 'u64',
@@ -4156,7 +4199,7 @@ exports.default = {
         numberOfEditablePosts: 'u64'
     },
     /**
-     * Lookup537: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup540: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumPost: {
         threadId: 'u64',
@@ -4166,19 +4209,19 @@ exports.default = {
         lastEdited: 'u32'
     },
     /**
-     * Lookup538: pallet_forum::Error<T>
+     * Lookup541: pallet_forum::Error<T>
      **/
     PalletForumError: {
         _enum: ['ArithmeticError', 'OriginNotForumLead', 'ForumUserIdNotMatchAccount', 'ModeratorIdNotMatchAccount', 'AccountDoesNotMatchThreadAuthor', 'ThreadDoesNotExist', 'ModeratorModerateOriginCategory', 'ModeratorModerateDestinationCategory', 'ThreadMoveInvalid', 'ThreadNotBeingUpdated', 'InsufficientBalanceForThreadCreation', 'CannotDeleteThreadWithOutstandingPosts', 'PostDoesNotExist', 'AccountDoesNotMatchPostAuthor', 'InsufficientBalanceForPost', 'CategoryNotBeingUpdated', 'AncestorCategoryImmutable', 'MaxValidCategoryDepthExceeded', 'CategoryDoesNotExist', 'CategoryModeratorDoesNotExist', 'CategoryNotEmptyThreads', 'CategoryNotEmptyCategories', 'ModeratorCantDeleteCategory', 'ModeratorCantUpdateCategory', 'MapSizeLimit', 'PathLengthShouldBeGreaterThanZero', 'MaxNumberOfStickiedThreadsExceeded']
     },
     /**
-     * Lookup539: pallet_constitution::ConstitutionInfo<primitive_types::H256>
+     * Lookup542: pallet_constitution::ConstitutionInfo<primitive_types::H256>
      **/
     PalletConstitutionConstitutionInfo: {
         textHash: 'H256'
     },
     /**
-     * Lookup540: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup543: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyRecord: {
         creationParams: 'PalletBountyBountyParametersBoundedBTreeSet',
@@ -4188,7 +4231,7 @@ exports.default = {
         hasUnpaidOracleReward: 'bool'
     },
     /**
-     * Lookup542: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup545: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyParametersBoundedBTreeSet: {
         oracle: 'PalletBountyBountyActor',
@@ -4200,7 +4243,7 @@ exports.default = {
         fundingType: 'PalletBountyFundingType'
     },
     /**
-     * Lookup543: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup546: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyAssuranceContractTypeBoundedBTreeSet: {
         _enum: {
@@ -4209,7 +4252,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup544: pallet_bounty::BountyMilestone<BlockNumber>
+     * Lookup547: pallet_bounty::BountyMilestone<BlockNumber>
      **/
     PalletBountyBountyMilestone: {
         _enum: {
@@ -4226,14 +4269,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup546: pallet_bounty::Contribution<T>
+     * Lookup549: pallet_bounty::Contribution<T>
      **/
     PalletBountyContribution: {
         amount: 'u128',
         funderStateBloatBondAmount: 'u128'
     },
     /**
-     * Lookup547: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
+     * Lookup550: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
      **/
     PalletBountyEntryRecord: {
         memberId: 'u64',
@@ -4242,19 +4285,19 @@ exports.default = {
         workSubmitted: 'bool'
     },
     /**
-     * Lookup548: pallet_bounty::Error<T>
+     * Lookup551: pallet_bounty::Error<T>
      **/
     PalletBountyError: {
         _enum: ['ArithmeticError', 'MinFundingAmountCannotBeGreaterThanMaxAmount', 'BountyDoesntExist', 'SwitchOracleOriginIsRoot', 'InvalidStageUnexpectedFunding', 'InvalidStageUnexpectedNoFundingContributed', 'InvalidStageUnexpectedCancelled', 'InvalidStageUnexpectedWorkSubmission', 'InvalidStageUnexpectedJudgment', 'InvalidStageUnexpectedSuccessfulBountyWithdrawal', 'InvalidStageUnexpectedFailedBountyWithdrawal', 'InsufficientBalanceForBounty', 'NoBountyContributionFound', 'InsufficientBalanceForStake', 'ConflictingStakes', 'WorkEntryDoesntExist', 'CherryLessThenMinimumAllowed', 'CannotSubmitWorkToClosedContractBounty', 'ClosedContractMemberListIsEmpty', 'ClosedContractMemberListIsTooLarge', 'ClosedContractMemberNotFound', 'InvalidOracleMemberId', 'InvalidStakingAccountForMember', 'ZeroWinnerReward', 'TotalRewardShouldBeEqualToTotalFunding', 'EntrantStakeIsLessThanMininum', 'FundingAmountCannotBeZero', 'FundingPeriodCannotBeZero', 'WinnerShouldHasWorkSubmission', 'InvalidContributorActorSpecified', 'InvalidOracleActorSpecified', 'InvalidEntrantWorkerSpecified', 'InvalidCreatorActorSpecified', 'WorkEntryDoesntBelongToWorker', 'OracleRewardAlreadyWithdrawn']
     },
     /**
-     * Lookup549: pallet_joystream_utility::Error<T>
+     * Lookup552: pallet_joystream_utility::Error<T>
      **/
     PalletJoystreamUtilityError: {
         _enum: ['InsufficientFundsForBudgetUpdate', 'ZeroTokensBurn', 'InsufficientFundsForBurn']
     },
     /**
-     * Lookup550: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup553: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentVideoRecord: {
         inChannel: 'u64',
@@ -4263,7 +4306,7 @@ exports.default = {
         videoStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
     },
     /**
-     * Lookup551: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
+     * Lookup554: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
      **/
     PalletContentNftTypesOwnedNft: {
         owner: 'PalletContentNftTypesNftOwner',
@@ -4272,7 +4315,7 @@ exports.default = {
         openAuctionsNonce: 'u64'
     },
     /**
-     * Lookup552: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
+     * Lookup555: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
      **/
     PalletContentNftTypesTransactionalStatusRecord: {
         _enum: {
@@ -4284,7 +4327,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup553: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup556: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesEnglishAuctionRecord: {
         startingPrice: 'u128',
@@ -4297,14 +4340,14 @@ exports.default = {
         topBid: 'Option<PalletContentNftTypesEnglishAuctionBid>'
     },
     /**
-     * Lookup556: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
+     * Lookup559: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionBid: {
         amount: 'u128',
         bidderId: 'u64'
     },
     /**
-     * Lookup557: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup560: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesOpenAuctionRecord: {
         startingPrice: 'u128',
@@ -4315,7 +4358,7 @@ exports.default = {
         start: 'u32'
     },
     /**
-     * Lookup558: pallet_content::nft::types::NftOwner<MemberId>
+     * Lookup561: pallet_content::nft::types::NftOwner<MemberId>
      **/
     PalletContentNftTypesNftOwner: {
         _enum: {
@@ -4324,7 +4367,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup561: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
+     * Lookup564: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
      **/
     PalletContentPermissionsCuratorGroupCuratorGroupRecord: {
         curators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -4332,7 +4375,7 @@ exports.default = {
         permissionsByLevel: 'BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>'
     },
     /**
-     * Lookup568: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
+     * Lookup571: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
      **/
     PalletContentNftTypesOpenAuctionBidRecord: {
         amount: 'u128',
@@ -4340,13 +4383,13 @@ exports.default = {
         auctionId: 'u64'
     },
     /**
-     * Lookup569: pallet_content::errors::Error<T>
+     * Lookup572: pallet_content::errors::Error<T>
      **/
     PalletContentErrorsError: {
         _enum: ['ChannelStateBloatBondChanged', 'VideoStateBloatBondChanged', 'MinCashoutValueTooLow', 'MaxCashoutValueTooHigh', 'MaxNumberOfChannelCollaboratorsExceeded', 'MaxNumberOfChannelAssetsExceeded', 'MaxNumberOfVideoAssetsExceeded', 'MaxNumberOfChannelAgentPermissionsExceeded', 'MaxNumberOfPausedFeaturesPerChannelExceeded', 'InvalidChannelBagWitnessProvided', 'InvalidStorageBucketsNumWitnessProvided', 'MissingStorageBucketsNumWitness', 'ChannelOwnerMemberDoesNotExist', 'ChannelOwnerCuratorGroupDoesNotExist', 'ChannelStateBloatBondBelowExistentialDeposit', 'NumberOfAssetsToRemoveIsZero', 'CuratorIsNotAMemberOfGivenCuratorGroup', 'CuratorIsAlreadyAMemberOfGivenCuratorGroup', 'CuratorGroupDoesNotExist', 'CuratorsPerGroupLimitReached', 'CuratorGroupIsNotActive', 'CuratorIdInvalid', 'LeadAuthFailed', 'MemberAuthFailed', 'CuratorAuthFailed', 'BadOrigin', 'ActorNotAuthorized', 'CategoryDoesNotExist', 'ChannelDoesNotExist', 'VideoDoesNotExist', 'VideoInSeason', 'ActorCannotBeLead', 'ActorCannotOwnChannel', 'NftAlreadyOwnedByChannel', 'NftAlreadyExists', 'NftDoesNotExist', 'OverflowOrUnderflowHappened', 'DoesNotOwnNft', 'RoyaltyUpperBoundExceeded', 'RoyaltyLowerBoundExceeded', 'AuctionDurationUpperBoundExceeded', 'AuctionDurationLowerBoundExceeded', 'ExtensionPeriodUpperBoundExceeded', 'ExtensionPeriodLowerBoundExceeded', 'BidLockDurationUpperBoundExceeded', 'BidLockDurationLowerBoundExceeded', 'StartingPriceUpperBoundExceeded', 'StartingPriceLowerBoundExceeded', 'AuctionBidStepUpperBoundExceeded', 'AuctionBidStepLowerBoundExceeded', 'InsufficientBalance', 'BidStepConstraintViolated', 'InvalidBidAmountSpecified', 'StartingPriceConstraintViolated', 'ActionHasBidsAlready', 'NftIsNotIdle', 'PendingOfferDoesNotExist', 'RewardAccountIsNotSet', 'ActorIsNotBidder', 'AuctionCannotBeCompleted', 'BidDoesNotExist', 'BidIsForPastAuction', 'StartsAtLowerBoundExceeded', 'StartsAtUpperBoundExceeded', 'AuctionDidNotStart', 'NotInAuctionState', 'MemberIsNotAllowedToParticipate', 'MemberProfileNotFound', 'NftNotInBuyNowState', 'InvalidBuyNowWitnessPriceProvided', 'IsNotOpenAuctionType', 'IsNotEnglishAuctionType', 'BidLockDurationIsNotExpired', 'NftAuctionIsAlreadyExpired', 'BuyNowMustBeGreaterThanStartingPrice', 'TargetMemberDoesNotExist', 'InvalidNftOfferWitnessPriceProvided', 'MaxAuctionWhiteListLengthUpperBoundExceeded', 'WhitelistHasOnlyOneMember', 'WhitelistedMemberDoesNotExist', 'NftNonChannelOwnerDoesNotExist', 'ExtensionPeriodIsGreaterThenAuctionDuration', 'NoAssetsSpecified', 'InvalidAssetsProvided', 'ChannelContainsVideos', 'ChannelContainsAssets', 'InvalidBagSizeSpecified', 'MigrationNotFinished', 'ReplyDoesNotExist', 'UnsufficientBalance', 'InsufficientTreasuryBalance', 'InvalidMemberProvided', 'ActorNotAMember', 'PaymentProofVerificationFailed', 'CashoutAmountExceedsMaximumAmount', 'CashoutAmountBelowMinimumAmount', 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance', 'WithdrawFromChannelAmountIsZero', 'ChannelCashoutsDisabled', 'MinCashoutAllowedExceedsMaxCashoutAllowed', 'CuratorModerationActionNotAllowed', 'MaxCuratorPermissionsPerLevelExceeded', 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded', 'ChannelFeaturePaused', 'ChannelBagMissing', 'AssetsToRemoveBeyondEntityAssetsSet', 'InvalidVideoDataObjectsCountProvided', 'InvalidChannelTransferStatus', 'InvalidChannelTransferAcceptor', 'InvalidChannelTransferCommitmentParams', 'ChannelAgentInsufficientPermissions', 'InvalidChannelOwner', 'ZeroReward', 'InsufficientBalanceForTransfer', 'InsufficientBalanceForChannelCreation', 'InsufficientBalanceForVideoCreation', 'InsufficientCouncilBudget', 'GlobalNftDailyLimitExceeded', 'GlobalNftWeeklyLimitExceeded', 'ChannelNftDailyLimitExceeded', 'ChannelNftWeeklyLimitExceeded', 'CreatorTokenAlreadyIssued', 'CreatorTokenNotIssued', 'MemberIdCouldNotBeDerivedFromActor', 'CannotWithdrawFromChannelWithCreatorTokenIssued', 'PatronageCanOnlyBeClaimedForMemberOwnedChannels', 'ChannelTransfersBlockedDuringRevenueSplits', 'ChannelTransfersBlockedDuringTokenSales', 'ChannelTransfersBlockedDuringActiveAmm']
     },
     /**
-     * Lookup570: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
+     * Lookup573: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
      **/
     PalletStorageBagRecord: {
         storedBy: 'BTreeSet<u64>',
@@ -4355,7 +4398,7 @@ exports.default = {
         objectsNumber: 'u64'
     },
     /**
-     * Lookup573: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup576: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketRecord: {
         operatorStatus: 'PalletStorageStorageBucketOperatorStatus',
@@ -4364,7 +4407,7 @@ exports.default = {
         assignedBags: 'u64'
     },
     /**
-     * Lookup574: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup577: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketOperatorStatus: {
         _enum: {
@@ -4374,14 +4417,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup576: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
+     * Lookup579: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
      **/
     PalletStorageDynamicBagCreationPolicy: {
         numberOfStorageBuckets: 'u32',
         families: 'BTreeMap<u64, u32>'
     },
     /**
-     * Lookup579: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup582: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletStorageDataObject: {
         _alias: {
@@ -4393,13 +4436,13 @@ exports.default = {
         ipfsContentId: 'Bytes'
     },
     /**
-     * Lookup580: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
+     * Lookup583: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketFamilyRecord: {
         nextDistributionBucketIndex: 'u64'
     },
     /**
-     * Lookup581: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup584: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletStorageDistributionBucketRecord: {
         acceptingNewBags: 'bool',
@@ -4409,13 +4452,13 @@ exports.default = {
         assignedBags: 'u64'
     },
     /**
-     * Lookup584: pallet_storage::Error<T>
+     * Lookup587: pallet_storage::Error<T>
      **/
     PalletStorageError: {
         _enum: ['ArithmeticError', 'InvalidCidLength', 'NoObjectsOnUpload', 'StorageBucketDoesntExist', 'StorageBucketIsNotBoundToBag', 'StorageBucketIsBoundToBag', 'NoStorageBucketInvitation', 'StorageProviderAlreadySet', 'StorageProviderMustBeSet', 'DifferentStorageProviderInvited', 'InvitedStorageProvider', 'StorageBucketIdCollectionsAreEmpty', 'StorageBucketsNumberViolatesDynamicBagCreationPolicy', 'DistributionBucketsViolatesDynamicBagCreationPolicy', 'EmptyContentId', 'ZeroObjectSize', 'InvalidStateBloatBondSourceAccount', 'InvalidStorageProvider', 'InsufficientBalance', 'DataObjectDoesntExist', 'UploadingBlocked', 'DataObjectIdCollectionIsEmpty', 'SourceAndDestinationBagsAreEqual', 'DataObjectBlacklisted', 'BlacklistSizeLimitExceeded', 'VoucherMaxObjectSizeLimitExceeded', 'VoucherMaxObjectNumberLimitExceeded', 'StorageBucketObjectNumberLimitReached', 'StorageBucketObjectSizeLimitReached', 'InsufficientTreasuryBalance', 'CannotDeleteNonEmptyStorageBucket', 'DataObjectIdParamsAreEmpty', 'StorageBucketsPerBagLimitTooLow', 'StorageBucketsPerBagLimitTooHigh', 'StorageBucketPerBagLimitExceeded', 'StorageBucketDoesntAcceptNewBags', 'DynamicBagExists', 'DynamicBagDoesntExist', 'StorageProviderOperatorDoesntExist', 'DataSizeFeeChanged', 'DataObjectStateBloatBondChanged', 'CannotDeleteNonEmptyDynamicBag', 'MaxDistributionBucketFamilyNumberLimitExceeded', 'DistributionBucketFamilyDoesntExist', 'DistributionBucketDoesntExist', 'DistributionBucketIdCollectionsAreEmpty', 'DistributionBucketDoesntAcceptNewBags', 'MaxDistributionBucketNumberPerBagLimitExceeded', 'DistributionBucketIsNotBoundToBag', 'DistributionBucketIsBoundToBag', 'DistributionBucketsPerBagLimitTooLow', 'DistributionBucketsPerBagLimitTooHigh', 'DistributionProviderOperatorDoesntExist', 'DistributionProviderOperatorAlreadyInvited', 'DistributionProviderOperatorSet', 'NoDistributionBucketInvitation', 'MustBeDistributionProviderOperatorForBucket', 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached', 'MaxNumberOfOperatorsPerDistributionBucketReached', 'DistributionFamilyBoundToBagCreationPolicy', 'MaxDataObjectSizeExceeded', 'InvalidTransactorAccount', 'NumberOfStorageBucketsOutsideOfAllowedContraints', 'NumberOfDistributionBucketsOutsideOfAllowedContraints', 'CallDisabled']
     },
     /**
-     * Lookup585: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
+     * Lookup588: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
      **/
     PalletProjectTokenAccountData: {
         vestingSchedules: 'BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>',
@@ -4426,14 +4469,14 @@ exports.default = {
         lastSaleTotalPurchasedAmount: 'Option<(u32,u128)>'
     },
     /**
-     * Lookup586: pallet_project_token::types::StakingStatus<Balance>
+     * Lookup589: pallet_project_token::types::StakingStatus<Balance>
      **/
     PalletProjectTokenStakingStatus: {
         splitId: 'u32',
         amount: 'u128'
     },
     /**
-     * Lookup588: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
+     * Lookup591: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
      **/
     PalletProjectTokenVestingSchedule: {
         linearVestingStartBlock: 'u32',
@@ -4443,7 +4486,7 @@ exports.default = {
         burnedAmount: 'u128'
     },
     /**
-     * Lookup595: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
+     * Lookup598: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
      **/
     PalletProjectTokenTokenData: {
         totalSupply: 'u128',
@@ -4459,7 +4502,7 @@ exports.default = {
         ammCurve: 'Option<PalletProjectTokenAmmCurve>'
     },
     /**
-     * Lookup596: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
+     * Lookup599: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitState: {
         _enum: {
@@ -4468,7 +4511,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup597: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
+     * Lookup600: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitInfo: {
         allocation: 'u128',
@@ -4476,14 +4519,14 @@ exports.default = {
         dividendsClaimed: 'u128'
     },
     /**
-     * Lookup598: pallet_project_token::types::Timeline<BlockNumber>
+     * Lookup601: pallet_project_token::types::Timeline<BlockNumber>
      **/
     PalletProjectTokenTimeline: {
         start: 'u32',
         duration: 'u32'
     },
     /**
-     * Lookup600: pallet_project_token::types::PatronageData<Balance, BlockNumber>
+     * Lookup603: pallet_project_token::types::PatronageData<Balance, BlockNumber>
      **/
     PalletProjectTokenPatronageData: {
         rate: 'Permill',
@@ -4491,13 +4534,13 @@ exports.default = {
         lastUnclaimedPatronageTallyBlock: 'u32'
     },
     /**
-     * Lookup602: pallet_project_token::errors::Error<T>
+     * Lookup605: pallet_project_token::errors::Error<T>
      **/
     PalletProjectTokenErrorsError: {
         _enum: ['ArithmeticError', 'InsufficientTransferrableBalance', 'TokenDoesNotExist', 'AccountInformationDoesNotExist', 'TransferDestinationMemberDoesNotExist', 'MerkleProofVerificationFailure', 'TokenSymbolAlreadyInUse', 'InitialAllocationToNonExistingMember', 'AccountAlreadyExists', 'TooManyTransferOutputs', 'TokenIssuanceNotInIdleState', 'InsufficientJoyBalance', 'JoyTransferSubjectToDusting', 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode', 'AttemptToRemoveNonEmptyAccount', 'CannotJoinWhitelistInPermissionlessMode', 'CannotDeissueTokenWithOutstandingAccounts', 'NoUpcomingSale', 'NoActiveSale', 'InsufficientBalanceForTokenPurchase', 'NotEnoughTokensOnSale', 'SaleStartingBlockInThePast', 'SaleAccessProofRequired', 'SaleAccessProofParticipantIsNotSender', 'SalePurchaseCapExceeded', 'MaxVestingSchedulesPerAccountPerTokenReached', 'PreviousSaleNotFinalized', 'NoTokensToRecover', 'SaleDurationTooShort', 'SaleDurationIsZero', 'SaleUpperBoundQuantityIsZero', 'SaleCapPerMemberIsZero', 'SaleUnitPriceIsZero', 'SalePurchaseAmountIsZero', 'CannotInitSaleIfAmmIsActive', 'RevenueSplitTimeToStartTooShort', 'RevenueSplitDurationTooShort', 'RevenueSplitAlreadyActiveForToken', 'RevenueSplitNotActiveForToken', 'RevenueSplitDidNotEnd', 'RevenueSplitNotOngoing', 'UserAlreadyParticipating', 'InsufficientBalanceForSplitParticipation', 'UserNotParticipantingInAnySplit', 'CannotParticipateInSplitWithZeroAmount', 'CannotIssueSplitWithZeroAllocationAmount', 'CannotModifySupplyWhenRevenueSplitsAreActive', 'RevenueSplitRateIsZero', 'BurnAmountIsZero', 'BurnAmountGreaterThanAccountTokensAmount', 'NotInAmmState', 'InvalidCurveParameters', 'DeadlineExpired', 'SlippageToleranceExceeded', 'InsufficientTokenBalance', 'OutstandingAmmProvidedSupplyTooLarge', 'CurveSlopeParametersTooLow', 'NotEnoughTokenMintedByAmmForThisSale', 'TargetPatronageRateIsHigherThanCurrentRate', 'YearlyPatronageRateLimitExceeded', 'PalletFrozen']
     },
     /**
-     * Lookup603: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
+     * Lookup606: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
      **/
     PalletProposalsEngineProposal: {
         parameters: 'PalletProposalsEngineProposalParameters',
@@ -4510,7 +4553,7 @@ exports.default = {
         stakingAccountId: 'Option<AccountId32>'
     },
     /**
-     * Lookup604: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
+     * Lookup607: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
      **/
     PalletProposalsEngineProposalParameters: {
         votingPeriod: 'u32',
@@ -4523,7 +4566,7 @@ exports.default = {
         constitutionality: 'u32'
     },
     /**
-     * Lookup605: pallet_proposals_engine::types::VotingResults
+     * Lookup608: pallet_proposals_engine::types::VotingResults
      **/
     PalletProposalsEngineVotingResults: {
         abstentions: 'u32',
@@ -4532,13 +4575,13 @@ exports.default = {
         slashes: 'u32'
     },
     /**
-     * Lookup608: pallet_proposals_engine::Error<T>
+     * Lookup611: pallet_proposals_engine::Error<T>
      **/
     PalletProposalsEngineError: {
         _enum: ['ArithmeticError', 'EmptyTitleProvided', 'EmptyDescriptionProvided', 'TitleIsTooLong', 'DescriptionIsTooLong', 'ProposalNotFound', 'ProposalFinalized', 'AlreadyVoted', 'NotAuthor', 'MaxActiveProposalNumberExceeded', 'EmptyStake', 'StakeShouldBeEmpty', 'StakeDiffersFromRequired', 'InvalidParameterApprovalThreshold', 'InvalidParameterSlashingThreshold', 'RequireRootOrigin', 'ProposalHasVotes', 'ZeroExactExecutionBlock', 'InvalidExactExecutionBlock', 'InsufficientBalanceForStake', 'ConflictingStakes', 'InvalidStakingAccountForMember', 'MaxDispatchableCallCodeSizeExceeded']
     },
     /**
-     * Lookup609: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup612: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionDiscussionThread: {
         activatedAt: 'u32',
@@ -4546,7 +4589,7 @@ exports.default = {
         mode: 'PalletProposalsDiscussionThreadModeBoundedBTreeSet'
     },
     /**
-     * Lookup611: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup614: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionThreadModeBoundedBTreeSet: {
         _enum: {
@@ -4555,7 +4598,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup612: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup615: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletProposalsDiscussionDiscussionPost: {
         authorId: 'u64',
@@ -4563,19 +4606,19 @@ exports.default = {
         lastEdited: 'u32'
     },
     /**
-     * Lookup613: pallet_proposals_discussion::Error<T>
+     * Lookup616: pallet_proposals_discussion::Error<T>
      **/
     PalletProposalsDiscussionError: {
         _enum: ['ArithmeticError', 'ThreadDoesntExist', 'PostDoesntExist', 'RequireRootOrigin', 'CannotPostOnClosedThread', 'NotAuthorOrCouncilor', 'MaxWhiteListSizeExceeded', 'WhitelistedMemberDoesNotExist', 'InsufficientBalanceForPost', 'CannotDeletePost']
     },
     /**
-     * Lookup614: pallet_proposals_codex::Error<T>
+     * Lookup617: pallet_proposals_codex::Error<T>
      **/
     PalletProposalsCodexError: {
-        _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError']
+        _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError', 'ReductionAmountZero']
     },
     /**
-     * Lookup615: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
+     * Lookup618: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
      **/
     PalletWorkingGroupOpening: {
         openingType: 'PalletWorkingGroupOpeningType',
@@ -4586,7 +4629,7 @@ exports.default = {
         creationStake: 'u128'
     },
     /**
-     * Lookup616: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
+     * Lookup619: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
      **/
     PalletWorkingGroupJobApplication: {
         roleAccountId: 'AccountId32',
@@ -4597,7 +4640,7 @@ exports.default = {
         openingId: 'u64'
     },
     /**
-     * Lookup617: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
+     * Lookup620: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
      **/
     PalletWorkingGroupGroupWorker: {
         memberId: 'u64',
@@ -4611,13 +4654,13 @@ exports.default = {
         createdAt: 'u32'
     },
     /**
-     * Lookup618: pallet_working_group::errors::Error<T, I>
+     * Lookup621: pallet_working_group::errors::Error<T, I>
      **/
     PalletWorkingGroupErrorsError: {
         _enum: ['ArithmeticError', 'StakeBalanceCannotBeZero', 'OpeningDoesNotExist', 'CannotHireMultipleLeaders', 'WorkerApplicationDoesNotExist', 'MaxActiveWorkerNumberExceeded', 'SuccessfulWorkerApplicationDoesNotExist', 'CannotHireLeaderWhenLeaderExists', 'IsNotLeadAccount', 'CurrentLeadNotSet', 'WorkerDoesNotExist', 'InvalidMemberOrigin', 'SignerIsNotWorkerRoleAccount', 'BelowMinimumStakes', 'InsufficientBalanceToCoverStake', 'ApplicationStakeDoesntMatchOpening', 'OriginIsNotApplicant', 'WorkerIsLeaving', 'CannotRewardWithZero', 'InvalidStakingAccountForMember', 'ConflictStakesOnAccount', 'WorkerHasNoReward', 'UnstakingPeriodLessThanMinimum', 'CannotSpendZero', 'InsufficientBudgetForSpending', 'NoApplicationsProvided', 'CannotDecreaseStakeDeltaGreaterThanStake', 'ApplicationsNotForOpening', 'WorkerStorageValueTooLong', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'InsufficientBalanceForTransfer']
     },
     /**
-     * Lookup628: sp_runtime::MultiSignature
+     * Lookup631: sp_runtime::MultiSignature
      **/
     SpRuntimeMultiSignature: {
         _enum: {
@@ -4627,39 +4670,39 @@ exports.default = {
         }
     },
     /**
-     * Lookup629: sp_core::ecdsa::Signature
+     * Lookup632: sp_core::ecdsa::Signature
      **/
     SpCoreEcdsaSignature: '[u8;65]',
     /**
-     * Lookup632: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
+     * Lookup635: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
      **/
     FrameSystemExtensionsCheckNonZeroSender: 'Null',
     /**
-     * Lookup633: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
+     * Lookup636: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
      **/
     FrameSystemExtensionsCheckSpecVersion: 'Null',
     /**
-     * Lookup634: frame_system::extensions::check_tx_version::CheckTxVersion<T>
+     * Lookup637: frame_system::extensions::check_tx_version::CheckTxVersion<T>
      **/
     FrameSystemExtensionsCheckTxVersion: 'Null',
     /**
-     * Lookup635: frame_system::extensions::check_genesis::CheckGenesis<T>
+     * Lookup638: frame_system::extensions::check_genesis::CheckGenesis<T>
      **/
     FrameSystemExtensionsCheckGenesis: 'Null',
     /**
-     * Lookup638: frame_system::extensions::check_nonce::CheckNonce<T>
+     * Lookup641: frame_system::extensions::check_nonce::CheckNonce<T>
      **/
     FrameSystemExtensionsCheckNonce: 'Compact<u32>',
     /**
-     * Lookup639: frame_system::extensions::check_weight::CheckWeight<T>
+     * Lookup642: frame_system::extensions::check_weight::CheckWeight<T>
      **/
     FrameSystemExtensionsCheckWeight: 'Null',
     /**
-     * Lookup640: pallet_transaction_payment::ChargeTransactionPayment<T>
+     * Lookup643: pallet_transaction_payment::ChargeTransactionPayment<T>
      **/
     PalletTransactionPaymentChargeTransactionPayment: 'Compact<u128>',
     /**
-     * Lookup641: joystream_node_runtime::Runtime
+     * Lookup644: joystream_node_runtime::Runtime
      **/
     JoystreamNodeRuntimeRuntime: 'Null'
 };
diff --git a/lib/mjs/augment/lookup.js b/lib/mjs/augment/lookup.js
index 7f10085159ebd54e03771940c213d9dbf9db5444..03d14ab6d1febd6fe966cbd6386dd1a901ba6782 100644
--- a/lib/mjs/augment/lookup.js
+++ b/lib/mjs/augment/lookup.js
@@ -542,14 +542,16 @@ export default {
             BudgetRefillPlanned: 'u32',
             BudgetIncrementUpdated: 'u128',
             CouncilorRewardUpdated: 'u128',
+            CouncilBudgetDecreased: 'u128',
             RequestFunded: '(AccountId32,u128)',
             CouncilBudgetFunded: '(u64,u128,Bytes)',
             CouncilorRemarked: '(u64,Bytes)',
-            CandidateRemarked: '(u64,Bytes)'
+            CandidateRemarked: '(u64,Bytes)',
+            EraPayoutDampingFactorSet: 'Percent'
         }
     },
     /**
-     * Lookup70: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
+     * Lookup71: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
      **/
     PalletReferendumRawEvent: {
         _enum: {
@@ -564,18 +566,18 @@ export default {
         }
     },
     /**
-     * Lookup71: pallet_referendum::Instance1
+     * Lookup72: pallet_referendum::Instance1
      **/
     PalletReferendumInstance1: 'Null',
     /**
-     * Lookup73: pallet_referendum::OptionResult<MemberId, VotePower>
+     * Lookup74: pallet_referendum::OptionResult<MemberId, VotePower>
      **/
     PalletReferendumOptionResult: {
         optionId: 'u64',
         votePower: 'u128'
     },
     /**
-     * Lookup74: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
+     * Lookup75: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletMembershipRawEvent: {
         _enum: {
@@ -599,7 +601,7 @@ export default {
         }
     },
     /**
-     * Lookup75: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+     * Lookup76: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
      **/
     PalletMembershipBuyMembershipParameters: {
         rootAccount: 'AccountId32',
@@ -609,7 +611,7 @@ export default {
         referrerId: 'Option<u64>'
     },
     /**
-     * Lookup78: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+     * Lookup79: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
      **/
     PalletMembershipInviteMembershipParameters: {
         invitingMemberId: 'u64',
@@ -619,7 +621,7 @@ export default {
         metadata: 'Bytes'
     },
     /**
-     * Lookup79: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
+     * Lookup80: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
      **/
     PalletMembershipCreateMemberParameters: {
         rootAccount: 'AccountId32',
@@ -629,7 +631,7 @@ export default {
         isFoundingMember: 'bool'
     },
     /**
-     * Lookup80: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup81: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletMembershipGiftMembershipParameters: {
         rootAccount: 'AccountId32',
@@ -642,7 +644,7 @@ export default {
         applyRootAccountInvitationLock: 'Option<u128>'
     },
     /**
-     * Lookup84: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
+     * Lookup85: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
      **/
     PalletForumRawEvent: {
         _enum: {
@@ -666,7 +668,7 @@ export default {
         }
     },
     /**
-     * Lookup85: pallet_forum::PrivilegedActor<T>
+     * Lookup86: pallet_forum::PrivilegedActor<T>
      **/
     PalletForumPrivilegedActor: {
         _enum: {
@@ -675,7 +677,7 @@ export default {
         }
     },
     /**
-     * Lookup86: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
+     * Lookup87: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
      **/
     PalletForumExtendedPostIdObject: {
         categoryId: 'u64',
@@ -683,7 +685,7 @@ export default {
         postId: 'u64'
     },
     /**
-     * Lookup91: pallet_constitution::RawEvent<primitive_types::H256>
+     * Lookup92: pallet_constitution::RawEvent<primitive_types::H256>
      **/
     PalletConstitutionRawEvent: {
         _enum: {
@@ -691,7 +693,7 @@ export default {
         }
     },
     /**
-     * Lookup92: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
+     * Lookup93: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
      **/
     PalletBountyRawEvent: {
         _enum: {
@@ -721,7 +723,7 @@ export default {
         }
     },
     /**
-     * Lookup93: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
+     * Lookup94: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
      **/
     PalletBountyBountyParametersBTreeSet: {
         oracle: 'PalletBountyBountyActor',
@@ -733,7 +735,7 @@ export default {
         fundingType: 'PalletBountyFundingType'
     },
     /**
-     * Lookup94: pallet_bounty::BountyActor<MemberId>
+     * Lookup95: pallet_bounty::BountyActor<MemberId>
      **/
     PalletBountyBountyActor: {
         _enum: {
@@ -742,7 +744,7 @@ export default {
         }
     },
     /**
-     * Lookup95: pallet_bounty::AssuranceContractType<BTreeSet<T>>
+     * Lookup96: pallet_bounty::AssuranceContractType<BTreeSet<T>>
      **/
     PalletBountyAssuranceContractTypeBTreeSet: {
         _enum: {
@@ -751,7 +753,7 @@ export default {
         }
     },
     /**
-     * Lookup96: pallet_bounty::FundingType<BlockNumber, Balance>
+     * Lookup97: pallet_bounty::FundingType<BlockNumber, Balance>
      **/
     PalletBountyFundingType: {
         _enum: {
@@ -765,7 +767,7 @@ export default {
         }
     },
     /**
-     * Lookup98: pallet_bounty::OracleWorkEntryJudgment<Balance>
+     * Lookup99: pallet_bounty::OracleWorkEntryJudgment<Balance>
      **/
     PalletBountyOracleWorkEntryJudgment: {
         _enum: {
@@ -779,7 +781,7 @@ export default {
         }
     },
     /**
-     * Lookup101: pallet_joystream_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
+     * Lookup102: pallet_joystream_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
      **/
     PalletJoystreamUtilityRawEvent: {
         _enum: {
@@ -790,19 +792,19 @@ export default {
         }
     },
     /**
-     * Lookup102: pallet_common::working_group::iterable_enums::WorkingGroup
+     * Lookup103: pallet_common::working_group::iterable_enums::WorkingGroup
      **/
     PalletCommonWorkingGroupIterableEnumsWorkingGroup: {
         _enum: ['Forum', 'Storage', 'Content', 'OperationsAlpha', 'App', 'Distribution', 'OperationsBeta', 'OperationsGamma', 'Membership']
     },
     /**
-     * Lookup103: pallet_common::BalanceKind
+     * Lookup104: pallet_common::BalanceKind
      **/
     PalletCommonBalanceKind: {
         _enum: ['Positive', 'Negative']
     },
     /**
-     * Lookup104: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
+     * Lookup105: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
      **/
     PalletContentRawEvent: {
         _enum: {
@@ -862,7 +864,7 @@ export default {
         }
     },
     /**
-     * Lookup105: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
+     * Lookup106: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
      **/
     PalletContentPermissionsContentActor: {
         _enum: {
@@ -872,7 +874,7 @@ export default {
         }
     },
     /**
-     * Lookup106: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup107: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentChannelRecord: {
         owner: 'PalletContentChannelOwner',
@@ -891,26 +893,26 @@ export default {
         channelStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
     },
     /**
-     * Lookup110: pallet_content::types::iterable_enums::ChannelActionPermission
+     * Lookup111: pallet_content::types::iterable_enums::ChannelActionPermission
      **/
     PalletContentIterableEnumsChannelActionPermission: {
         _enum: ['UpdateChannelMetadata', 'ManageNonVideoChannelAssets', 'ManageChannelCollaborators', 'UpdateVideoMetadata', 'AddVideo', 'ManageVideoAssets', 'DeleteChannel', 'DeleteVideo', 'ManageVideoNfts', 'AgentRemark', 'TransferChannel', 'ClaimChannelReward', 'WithdrawFromChannelBalance', 'IssueCreatorToken', 'ClaimCreatorTokenPatronage', 'InitAndManageCreatorTokenSale', 'CreatorTokenIssuerTransfer', 'MakeCreatorTokenPermissionless', 'ReduceCreatorTokenPatronageRate', 'ManageRevenueSplits', 'DeissueCreatorToken', 'AmmControl']
     },
     /**
-     * Lookup117: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
+     * Lookup118: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
      **/
     PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature: {
         _enum: ['ChannelFundsTransfer', 'CreatorCashout', 'VideoNftIssuance', 'VideoCreation', 'VideoUpdate', 'ChannelUpdate', 'CreatorTokenIssuance']
     },
     /**
-     * Lookup120: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
+     * Lookup121: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
      **/
     PalletCommonBloatBondRepayableBloatBond: {
         repaymentRestrictedTo: 'Option<AccountId32>',
         amount: 'u128'
     },
     /**
-     * Lookup121: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
+     * Lookup122: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
      **/
     PalletContentChannelOwner: {
         _enum: {
@@ -919,7 +921,7 @@ export default {
         }
     },
     /**
-     * Lookup122: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+     * Lookup123: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
      **/
     PalletContentChannelTransferStatus: {
         _enum: {
@@ -928,14 +930,14 @@ export default {
         }
     },
     /**
-     * Lookup123: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+     * Lookup124: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
      **/
     PalletContentPendingTransfer: {
         newOwner: 'PalletContentChannelOwner',
         transferParams: 'PalletContentTransferCommitmentParametersBoundedBTreeMap'
     },
     /**
-     * Lookup124: pallet_content::types::TransferCommitmentParameters<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
+     * Lookup125: pallet_content::types::TransferCommitmentParameters<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
      **/
     PalletContentTransferCommitmentParametersBoundedBTreeMap: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -943,21 +945,21 @@ export default {
         transferId: 'u64'
     },
     /**
-     * Lookup125: pallet_content::types::LimitPerPeriod<BlockNumber>
+     * Lookup126: pallet_content::types::LimitPerPeriod<BlockNumber>
      **/
     PalletContentLimitPerPeriod: {
         limit: 'u64',
         blockNumberPeriod: 'u32'
     },
     /**
-     * Lookup126: pallet_content::types::NftCounter<BlockNumber>
+     * Lookup127: pallet_content::types::NftCounter<BlockNumber>
      **/
     PalletContentNftCounter: {
         counter: 'u64',
         lastUpdated: 'u32'
     },
     /**
-     * Lookup127: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
+     * Lookup128: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionParamsRecord: {
         startingPrice: 'u128',
@@ -969,7 +971,7 @@ export default {
         minBidStep: 'u128'
     },
     /**
-     * Lookup129: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
+     * Lookup130: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
      **/
     PalletContentNftTypesOpenAuctionParamsRecord: {
         startingPrice: 'u128',
@@ -979,7 +981,7 @@ export default {
         bidLockDuration: 'u32'
     },
     /**
-     * Lookup130: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
+     * Lookup131: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
      **/
     PalletContentNftTypesNftIssuanceParametersRecord: {
         royalty: 'Option<Perbill>',
@@ -988,7 +990,7 @@ export default {
         initTransactionalStatus: 'PalletContentNftTypesInitTransactionalStatusRecord'
     },
     /**
-     * Lookup131: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
+     * Lookup132: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
      **/
     PalletContentNftTypesInitTransactionalStatusRecord: {
         _enum: {
@@ -1000,7 +1002,7 @@ export default {
         }
     },
     /**
-     * Lookup133: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
+     * Lookup134: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
      **/
     PalletContentChannelCreationParametersRecord: {
         assets: 'Option<PalletContentStorageAssetsRecord>',
@@ -1012,14 +1014,14 @@ export default {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup134: pallet_content::types::StorageAssetsRecord<Balance>
+     * Lookup135: pallet_content::types::StorageAssetsRecord<Balance>
      **/
     PalletContentStorageAssetsRecord: {
         objectCreationList: 'Vec<PalletStorageDataObjectCreationParameters>',
         expectedDataSizeFee: 'u128'
     },
     /**
-     * Lookup136: pallet_storage::DataObjectCreationParameters
+     * Lookup137: pallet_storage::DataObjectCreationParameters
      **/
     PalletStorageDataObjectCreationParameters: {
         _alias: {
@@ -1029,14 +1031,14 @@ export default {
         ipfsContentId: 'Bytes'
     },
     /**
-     * Lookup137: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
+     * Lookup138: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketIdRecord: {
         distributionBucketFamilyId: 'u64',
         distributionBucketIndex: 'u64'
     },
     /**
-     * Lookup144: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
+     * Lookup145: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
      **/
     PalletContentChannelUpdateParametersRecord: {
         assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',
@@ -1047,7 +1049,7 @@ export default {
         storageBucketsNumWitness: 'Option<u32>'
     },
     /**
-     * Lookup146: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+     * Lookup147: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
      **/
     PalletContentVideoCreationParametersRecord: {
         assets: 'Option<PalletContentStorageAssetsRecord>',
@@ -1058,7 +1060,7 @@ export default {
         storageBucketsNumWitness: 'u32'
     },
     /**
-     * Lookup148: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+     * Lookup149: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
      **/
     PalletContentVideoUpdateParametersRecord: {
         assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',
@@ -1069,7 +1071,7 @@ export default {
         storageBucketsNumWitness: 'Option<u32>'
     },
     /**
-     * Lookup151: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
+     * Lookup152: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
      **/
     PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction: {
         _enum: {
@@ -1082,7 +1084,7 @@ export default {
         }
     },
     /**
-     * Lookup155: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
+     * Lookup156: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
      **/
     PalletContentTransferCommitmentParametersBTreeMap: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -1090,7 +1092,7 @@ export default {
         transferId: 'u64'
     },
     /**
-     * Lookup156: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>
+     * Lookup157: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>
      **/
     PalletContentUpdateChannelPayoutsParametersRecord: {
         commitment: 'Option<H256>',
@@ -1100,7 +1102,7 @@ export default {
         channelCashoutsEnabled: 'Option<bool>'
     },
     /**
-     * Lookup157: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>
+     * Lookup158: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>
      **/
     PalletContentChannelPayoutsPayloadParametersRecord: {
         objectCreationParams: 'PalletStorageDataObjectCreationParameters',
@@ -1108,7 +1110,7 @@ export default {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup161: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
+     * Lookup162: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
      **/
     PalletContentChannelFundsDestination: {
         _enum: {
@@ -1117,13 +1119,13 @@ export default {
         }
     },
     /**
-     * Lookup162: pallet_content::types::NftLimitPeriod
+     * Lookup163: pallet_content::types::NftLimitPeriod
      **/
     PalletContentNftLimitPeriod: {
         _enum: ['Daily', 'Weekly']
     },
     /**
-     * Lookup163: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
+     * Lookup164: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
      **/
     PalletStorageRawEvent: {
         _enum: {
@@ -1172,7 +1174,7 @@ export default {
         }
     },
     /**
-     * Lookup164: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
+     * Lookup165: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
      **/
     PalletStorageUploadParametersRecord: {
         bagId: 'PalletStorageBagIdType',
@@ -1182,7 +1184,7 @@ export default {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup165: pallet_storage::BagIdType<MemberId, ChannelId>
+     * Lookup166: pallet_storage::BagIdType<MemberId, ChannelId>
      **/
     PalletStorageBagIdType: {
         _enum: {
@@ -1191,7 +1193,7 @@ export default {
         }
     },
     /**
-     * Lookup166: pallet_storage::StaticBagId
+     * Lookup167: pallet_storage::StaticBagId
      **/
     PalletStorageStaticBagId: {
         _enum: {
@@ -1200,7 +1202,7 @@ export default {
         }
     },
     /**
-     * Lookup167: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
+     * Lookup168: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
      **/
     PalletStorageDynamicBagIdType: {
         _enum: {
@@ -1209,7 +1211,7 @@ export default {
         }
     },
     /**
-     * Lookup168: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
+     * Lookup169: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
      **/
     PalletStorageDynBagCreationParametersRecord: {
         bagId: 'PalletStorageDynamicBagIdType',
@@ -1221,7 +1223,7 @@ export default {
         distributionBuckets: 'BTreeSet<PalletStorageDistributionBucketIdRecord>'
     },
     /**
-     * Lookup171: pallet_storage::Voucher
+     * Lookup172: pallet_storage::Voucher
      **/
     PalletStorageVoucher: {
         sizeLimit: 'u64',
@@ -1230,13 +1232,13 @@ export default {
         objectsUsed: 'u64'
     },
     /**
-     * Lookup172: pallet_storage::DynamicBagType
+     * Lookup173: pallet_storage::DynamicBagType
      **/
     PalletStorageDynamicBagType: {
         _enum: ['Member', 'Channel']
     },
     /**
-     * Lookup176: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::AmmCurve<Balance>>
+     * Lookup177: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::AmmCurve<Balance>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>
      **/
     PalletProjectTokenEventsRawEvent: {
         _enum: {
@@ -1262,11 +1264,12 @@ export default {
             TokensBoughtOnAmm: '(u64,u64,u128,u128)',
             TokensSoldOnAmm: '(u64,u64,u128,u128)',
             AmmDeactivated: '(u64,u64,u128)',
-            FrozenStatusUpdated: 'bool'
+            FrozenStatusUpdated: 'bool',
+            TokenConstraintsUpdated: 'PalletProjectTokenTokenConstraints'
         }
     },
     /**
-     * Lookup177: pallet_project_token::types::TransferPolicy<primitive_types::H256>
+     * Lookup178: pallet_project_token::types::TransferPolicy<primitive_types::H256>
      **/
     PalletProjectTokenTransferPolicy: {
         _enum: {
@@ -1275,7 +1278,7 @@ export default {
         }
     },
     /**
-     * Lookup178: pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
+     * Lookup179: pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
      **/
     PalletProjectTokenTokenIssuanceParameters: {
         initialAllocation: 'BTreeMap<u64, PalletProjectTokenTokenAllocation>',
@@ -1285,14 +1288,14 @@ export default {
         metadata: 'Bytes'
     },
     /**
-     * Lookup179: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup180: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenAllocation: {
         amount: 'u128',
         vestingScheduleParams: 'Option<PalletProjectTokenVestingScheduleParams>'
     },
     /**
-     * Lookup180: pallet_project_token::types::VestingScheduleParams<BlockNumber>
+     * Lookup181: pallet_project_token::types::VestingScheduleParams<BlockNumber>
      **/
     PalletProjectTokenVestingScheduleParams: {
         linearVestingDuration: 'u32',
@@ -1300,7 +1303,7 @@ export default {
         cliffAmountPercentage: 'Permill'
     },
     /**
-     * Lookup183: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
+     * Lookup184: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
      **/
     PalletProjectTokenTransferPolicyParams: {
         _enum: {
@@ -1309,14 +1312,14 @@ export default {
         }
     },
     /**
-     * Lookup184: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
+     * Lookup185: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
      **/
     PalletProjectTokenWhitelistParams: {
         commitment: 'H256',
         payload: 'Option<PalletProjectTokenSingleDataObjectUploadParams>'
     },
     /**
-     * Lookup185: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
+     * Lookup186: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
      **/
     PalletProjectTokenSingleDataObjectUploadParams: {
         objectCreationParams: 'PalletStorageDataObjectCreationParameters',
@@ -1324,11 +1327,11 @@ export default {
         expectedDataObjectStateBloatBond: 'u128'
     },
     /**
-     * Lookup191: pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>
+     * Lookup192: pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>
      **/
     PalletProjectTokenTransfers: 'BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>',
     /**
-     * Lookup192: pallet_project_token::types::Validated<MemberId>
+     * Lookup193: pallet_project_token::types::Validated<MemberId>
      **/
     PalletProjectTokenValidated: {
         _enum: {
@@ -1337,21 +1340,21 @@ export default {
         }
     },
     /**
-     * Lookup193: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
+     * Lookup194: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
      **/
     PalletProjectTokenValidatedPayment: {
         payment: 'PalletProjectTokenPaymentWithVesting',
         vestingCleanupCandidate: 'Option<PalletProjectTokenVestingSource>'
     },
     /**
-     * Lookup194: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup195: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenPaymentWithVesting: {
         amount: 'u128',
         vestingSchedule: 'Option<PalletProjectTokenVestingScheduleParams>'
     },
     /**
-     * Lookup196: pallet_project_token::types::VestingSource
+     * Lookup197: pallet_project_token::types::VestingSource
      **/
     PalletProjectTokenVestingSource: {
         _enum: {
@@ -1361,7 +1364,7 @@ export default {
         }
     },
     /**
-     * Lookup200: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
+     * Lookup201: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
      **/
     PalletProjectTokenTokenSale: {
         unitPrice: 'u128',
@@ -1376,7 +1379,7 @@ export default {
         autoFinalize: 'bool'
     },
     /**
-     * Lookup201: pallet_project_token::types::AmmCurve<Balance>
+     * Lookup202: pallet_project_token::types::AmmCurve<Balance>
      **/
     PalletProjectTokenAmmCurve: {
         slope: 'u128',
@@ -1384,7 +1387,21 @@ export default {
         providedSupply: 'u128'
     },
     /**
-     * Lookup202: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
+     * Lookup203: pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>
+     **/
+    PalletProjectTokenTokenConstraints: {
+        maxYearlyRate: 'Option<Permill>',
+        minAmmSlope: 'Option<u128>',
+        minSaleDuration: 'Option<u32>',
+        minRevenueSplitDuration: 'Option<u32>',
+        minRevenueSplitTimeToStart: 'Option<u32>',
+        salePlatformFee: 'Option<Permill>',
+        ammBuyTxFees: 'Option<Permill>',
+        ammSellTxFees: 'Option<Permill>',
+        bloatBond: 'Option<u128>'
+    },
+    /**
+     * Lookup206: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
      **/
     PalletProposalsEngineRawEvent: {
         _enum: {
@@ -1397,7 +1414,7 @@ export default {
         }
     },
     /**
-     * Lookup203: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
+     * Lookup207: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
      **/
     PalletProposalsEngineProposalStatusesProposalStatus: {
         _enum: {
@@ -1407,7 +1424,7 @@ export default {
         }
     },
     /**
-     * Lookup204: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
+     * Lookup208: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
      **/
     PalletProposalsEngineProposalStatusesProposalDecision: {
         _enum: {
@@ -1421,13 +1438,13 @@ export default {
         }
     },
     /**
-     * Lookup205: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
+     * Lookup209: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
      **/
     PalletProposalsEngineProposalStatusesApprovedProposalDecision: {
         _enum: ['PendingExecution', 'PendingConstitutionality']
     },
     /**
-     * Lookup206: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
+     * Lookup210: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
      **/
     PalletProposalsEngineProposalStatusesExecutionStatus: {
         _enum: {
@@ -1438,13 +1455,13 @@ export default {
         }
     },
     /**
-     * Lookup207: pallet_proposals_engine::types::VoteKind
+     * Lookup211: pallet_proposals_engine::types::VoteKind
      **/
     PalletProposalsEngineVoteKind: {
         _enum: ['Approve', 'Reject', 'Slash', 'Abstain']
     },
     /**
-     * Lookup208: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
+     * Lookup212: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
      **/
     PalletProposalsDiscussionRawEvent: {
         _enum: {
@@ -1456,7 +1473,7 @@ export default {
         }
     },
     /**
-     * Lookup209: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
+     * Lookup213: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
      **/
     PalletProposalsDiscussionThreadModeBTreeSet: {
         _enum: {
@@ -1465,7 +1482,7 @@ export default {
         }
     },
     /**
-     * Lookup210: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>
+     * Lookup214: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>, ProposalId, ThreadId>
      **/
     PalletProposalsCodexRawEvent: {
         _enum: {
@@ -1473,7 +1490,7 @@ export default {
         }
     },
     /**
-     * Lookup211: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
+     * Lookup215: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
      **/
     PalletProposalsCodexGeneralProposalParams: {
         memberId: 'u64',
@@ -1483,7 +1500,7 @@ export default {
         exactExecutionBlock: 'Option<u32>'
     },
     /**
-     * Lookup212: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>
+     * Lookup216: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>
      **/
     PalletProposalsCodexProposalDetails: {
         _enum: {
@@ -1510,18 +1527,21 @@ export default {
             VetoProposal: 'u32',
             UpdateGlobalNftLimit: '(PalletContentNftLimitPeriod,u64)',
             UpdateChannelPayouts: 'PalletContentUpdateChannelPayoutsParametersRecord',
-            SetPalletFozenStatus: '(bool,PalletCommonFreezablePallet)'
+            SetPalletFozenStatus: '(bool,PalletCommonFreezablePallet)',
+            UpdateTokenPalletTokenConstraints: 'PalletProjectTokenTokenConstraints',
+            SetEraPayoutDampingFactor: 'Percent',
+            DecreaseCouncilBudget: 'u128'
         }
     },
     /**
-     * Lookup214: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
+     * Lookup218: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
      **/
     PalletCommonFundingRequestParameters: {
         account: 'AccountId32',
         amount: 'u128'
     },
     /**
-     * Lookup215: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
+     * Lookup219: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
      **/
     PalletProposalsCodexCreateOpeningParameters: {
         description: 'Bytes',
@@ -1530,14 +1550,14 @@ export default {
         group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup216: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
+     * Lookup220: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
      **/
     PalletWorkingGroupStakePolicy: {
         stakeAmount: 'u128',
         leavingUnstakingPeriod: 'u32'
     },
     /**
-     * Lookup217: pallet_proposals_codex::types::FillOpeningParameters
+     * Lookup221: pallet_proposals_codex::types::FillOpeningParameters
      **/
     PalletProposalsCodexFillOpeningParameters: {
         openingId: 'u64',
@@ -1545,7 +1565,7 @@ export default {
         workingGroup: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup218: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
+     * Lookup222: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
      **/
     PalletProposalsCodexTerminateRoleParameters: {
         workerId: 'u64',
@@ -1553,13 +1573,13 @@ export default {
         group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup219: pallet_common::FreezablePallet
+     * Lookup223: pallet_common::FreezablePallet
      **/
     PalletCommonFreezablePallet: {
         _enum: ['ProjectToken']
     },
     /**
-     * Lookup220: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>
+     * Lookup224: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance1>
      **/
     PalletWorkingGroupRawEventInstance1: {
         _enum: {
@@ -1582,6 +1602,7 @@ export default {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1591,13 +1612,13 @@ export default {
         }
     },
     /**
-     * Lookup224: pallet_working_group::types::OpeningType
+     * Lookup228: pallet_working_group::types::OpeningType
      **/
     PalletWorkingGroupOpeningType: {
         _enum: ['Leader', 'Regular']
     },
     /**
-     * Lookup225: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
+     * Lookup229: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupApplyOnOpeningParams: {
         memberId: 'u64',
@@ -1608,24 +1629,32 @@ export default {
         stakeParameters: 'PalletWorkingGroupStakeParameters'
     },
     /**
-     * Lookup226: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup230: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupStakeParameters: {
         stake: 'u128',
         stakingAccountId: 'AccountId32'
     },
     /**
-     * Lookup227: pallet_working_group::Instance1
+     * Lookup231: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
+     **/
+    PalletVestingVestingInfo: {
+        locked: 'u128',
+        perBlock: 'u128',
+        startingBlock: 'u32'
+    },
+    /**
+     * Lookup232: pallet_working_group::Instance1
      **/
     PalletWorkingGroupInstance1: 'Null',
     /**
-     * Lookup228: pallet_working_group::types::RewardPaymentType
+     * Lookup233: pallet_working_group::types::RewardPaymentType
      **/
     PalletWorkingGroupRewardPaymentType: {
         _enum: ['MissedReward', 'RegularReward']
     },
     /**
-     * Lookup229: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>
+     * Lookup234: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance2>
      **/
     PalletWorkingGroupRawEventInstance2: {
         _enum: {
@@ -1648,6 +1677,7 @@ export default {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1657,11 +1687,11 @@ export default {
         }
     },
     /**
-     * Lookup230: pallet_working_group::Instance2
+     * Lookup235: pallet_working_group::Instance2
      **/
     PalletWorkingGroupInstance2: 'Null',
     /**
-     * Lookup231: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>
+     * Lookup236: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance3>
      **/
     PalletWorkingGroupRawEventInstance3: {
         _enum: {
@@ -1684,6 +1714,7 @@ export default {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1693,11 +1724,11 @@ export default {
         }
     },
     /**
-     * Lookup232: pallet_working_group::Instance3
+     * Lookup237: pallet_working_group::Instance3
      **/
     PalletWorkingGroupInstance3: 'Null',
     /**
-     * Lookup233: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>
+     * Lookup238: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance4>
      **/
     PalletWorkingGroupRawEventInstance4: {
         _enum: {
@@ -1720,6 +1751,7 @@ export default {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1729,11 +1761,11 @@ export default {
         }
     },
     /**
-     * Lookup234: pallet_working_group::Instance4
+     * Lookup239: pallet_working_group::Instance4
      **/
     PalletWorkingGroupInstance4: 'Null',
     /**
-     * Lookup235: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>
+     * Lookup240: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance5>
      **/
     PalletWorkingGroupRawEventInstance5: {
         _enum: {
@@ -1756,6 +1788,7 @@ export default {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1765,11 +1798,11 @@ export default {
         }
     },
     /**
-     * Lookup236: pallet_working_group::Instance5
+     * Lookup241: pallet_working_group::Instance5
      **/
     PalletWorkingGroupInstance5: 'Null',
     /**
-     * Lookup237: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>
+     * Lookup242: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance6>
      **/
     PalletWorkingGroupRawEventInstance6: {
         _enum: {
@@ -1792,6 +1825,7 @@ export default {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1801,11 +1835,11 @@ export default {
         }
     },
     /**
-     * Lookup238: pallet_working_group::Instance6
+     * Lookup243: pallet_working_group::Instance6
      **/
     PalletWorkingGroupInstance6: 'Null',
     /**
-     * Lookup239: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>
+     * Lookup244: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance7>
      **/
     PalletWorkingGroupRawEventInstance7: {
         _enum: {
@@ -1828,6 +1862,7 @@ export default {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1837,11 +1872,11 @@ export default {
         }
     },
     /**
-     * Lookup240: pallet_working_group::Instance7
+     * Lookup245: pallet_working_group::Instance7
      **/
     PalletWorkingGroupInstance7: 'Null',
     /**
-     * Lookup241: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>
+     * Lookup246: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance8>
      **/
     PalletWorkingGroupRawEventInstance8: {
         _enum: {
@@ -1864,6 +1899,7 @@ export default {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1873,11 +1909,11 @@ export default {
         }
     },
     /**
-     * Lookup242: pallet_working_group::Instance8
+     * Lookup247: pallet_working_group::Instance8
      **/
     PalletWorkingGroupInstance8: 'Null',
     /**
-     * Lookup243: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>
+     * Lookup248: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance9>
      **/
     PalletWorkingGroupRawEventInstance9: {
         _enum: {
@@ -1900,6 +1936,7 @@ export default {
             WorkerRewardAccountUpdated: '(u64,AccountId32)',
             WorkerRewardAmountUpdated: '(u64,Option<u128>)',
             StatusTextChanged: '(H256,Option<Bytes>)',
+            VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
             BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
             RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
             NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1909,11 +1946,11 @@ export default {
         }
     },
     /**
-     * Lookup244: pallet_working_group::Instance9
+     * Lookup249: pallet_working_group::Instance9
      **/
     PalletWorkingGroupInstance9: 'Null',
     /**
-     * Lookup245: frame_system::Phase
+     * Lookup250: frame_system::Phase
      **/
     FrameSystemPhase: {
         _enum: {
@@ -1923,14 +1960,14 @@ export default {
         }
     },
     /**
-     * Lookup249: frame_system::LastRuntimeUpgradeInfo
+     * Lookup254: frame_system::LastRuntimeUpgradeInfo
      **/
     FrameSystemLastRuntimeUpgradeInfo: {
         specVersion: 'Compact<u32>',
         specName: 'Text'
     },
     /**
-     * Lookup252: frame_system::pallet::Call<T>
+     * Lookup257: frame_system::pallet::Call<T>
      **/
     FrameSystemCall: {
         _enum: {
@@ -1965,7 +2002,7 @@ export default {
         }
     },
     /**
-     * Lookup255: frame_system::limits::BlockWeights
+     * Lookup260: frame_system::limits::BlockWeights
      **/
     FrameSystemLimitsBlockWeights: {
         baseBlock: 'SpWeightsWeightV2Weight',
@@ -1973,7 +2010,7 @@ export default {
         perClass: 'FrameSupportDispatchPerDispatchClassWeightsPerClass'
     },
     /**
-     * Lookup256: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
+     * Lookup261: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
      **/
     FrameSupportDispatchPerDispatchClassWeightsPerClass: {
         normal: 'FrameSystemLimitsWeightsPerClass',
@@ -1981,7 +2018,7 @@ export default {
         mandatory: 'FrameSystemLimitsWeightsPerClass'
     },
     /**
-     * Lookup257: frame_system::limits::WeightsPerClass
+     * Lookup262: frame_system::limits::WeightsPerClass
      **/
     FrameSystemLimitsWeightsPerClass: {
         baseExtrinsic: 'SpWeightsWeightV2Weight',
@@ -1990,13 +2027,13 @@ export default {
         reserved: 'Option<SpWeightsWeightV2Weight>'
     },
     /**
-     * Lookup259: frame_system::limits::BlockLength
+     * Lookup264: frame_system::limits::BlockLength
      **/
     FrameSystemLimitsBlockLength: {
         max: 'FrameSupportDispatchPerDispatchClassU32'
     },
     /**
-     * Lookup260: frame_support::dispatch::PerDispatchClass<T>
+     * Lookup265: frame_support::dispatch::PerDispatchClass<T>
      **/
     FrameSupportDispatchPerDispatchClassU32: {
         normal: 'u32',
@@ -2004,14 +2041,14 @@ export default {
         mandatory: 'u32'
     },
     /**
-     * Lookup261: sp_weights::RuntimeDbWeight
+     * Lookup266: sp_weights::RuntimeDbWeight
      **/
     SpWeightsRuntimeDbWeight: {
         read: 'u64',
         write: 'u64'
     },
     /**
-     * Lookup262: sp_version::RuntimeVersion
+     * Lookup267: sp_version::RuntimeVersion
      **/
     SpVersionRuntimeVersion: {
         specName: 'Text',
@@ -2024,13 +2061,13 @@ export default {
         stateVersion: 'u8'
     },
     /**
-     * Lookup268: frame_system::pallet::Error<T>
+     * Lookup273: frame_system::pallet::Error<T>
      **/
     FrameSystemError: {
         _enum: ['InvalidSpecName', 'SpecVersionNeedsToIncrease', 'FailedToExtractRuntimeVersion', 'NonDefaultComposite', 'NonZeroRefCount', 'CallFiltered']
     },
     /**
-     * Lookup269: pallet_utility::pallet::Call<T>
+     * Lookup274: pallet_utility::pallet::Call<T>
      **/
     PalletUtilityCall: {
         _enum: {
@@ -2058,7 +2095,7 @@ export default {
         }
     },
     /**
-     * Lookup272: pallet_babe::pallet::Call<T>
+     * Lookup277: pallet_babe::pallet::Call<T>
      **/
     PalletBabeCall: {
         _enum: {
@@ -2076,7 +2113,7 @@ export default {
         }
     },
     /**
-     * Lookup273: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
+     * Lookup278: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
      **/
     SpConsensusSlotsEquivocationProof: {
         offender: 'SpConsensusBabeAppPublic',
@@ -2085,7 +2122,7 @@ export default {
         secondHeader: 'SpRuntimeHeader'
     },
     /**
-     * Lookup274: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
+     * Lookup279: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
      **/
     SpRuntimeHeader: {
         parentHash: 'H256',
@@ -2095,15 +2132,15 @@ export default {
         digest: 'SpRuntimeDigest'
     },
     /**
-     * Lookup275: sp_runtime::traits::BlakeTwo256
+     * Lookup280: sp_runtime::traits::BlakeTwo256
      **/
     SpRuntimeBlakeTwo256: 'Null',
     /**
-     * Lookup276: sp_consensus_babe::app::Public
+     * Lookup281: sp_consensus_babe::app::Public
      **/
     SpConsensusBabeAppPublic: 'SpCoreSr25519Public',
     /**
-     * Lookup278: sp_session::MembershipProof
+     * Lookup283: sp_session::MembershipProof
      **/
     SpSessionMembershipProof: {
         session: 'u32',
@@ -2111,7 +2148,7 @@ export default {
         validatorCount: 'u32'
     },
     /**
-     * Lookup279: sp_consensus_babe::digests::NextConfigDescriptor
+     * Lookup284: sp_consensus_babe::digests::NextConfigDescriptor
      **/
     SpConsensusBabeDigestsNextConfigDescriptor: {
         _enum: {
@@ -2123,13 +2160,13 @@ export default {
         }
     },
     /**
-     * Lookup280: sp_consensus_babe::AllowedSlots
+     * Lookup285: sp_consensus_babe::AllowedSlots
      **/
     SpConsensusBabeAllowedSlots: {
         _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']
     },
     /**
-     * Lookup281: pallet_timestamp::pallet::Call<T>
+     * Lookup286: pallet_timestamp::pallet::Call<T>
      **/
     PalletTimestampCall: {
         _enum: {
@@ -2139,7 +2176,7 @@ export default {
         }
     },
     /**
-     * Lookup282: pallet_balances::pallet::Call<T, I>
+     * Lookup287: pallet_balances::pallet::Call<T, I>
      **/
     PalletBalancesCall: {
         _enum: {
@@ -2172,7 +2209,7 @@ export default {
         }
     },
     /**
-     * Lookup283: pallet_election_provider_multi_phase::pallet::Call<T>
+     * Lookup288: pallet_election_provider_multi_phase::pallet::Call<T>
      **/
     PalletElectionProviderMultiPhaseCall: {
         _enum: {
@@ -2196,7 +2233,7 @@ export default {
         }
     },
     /**
-     * Lookup284: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
+     * Lookup289: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseRawSolution: {
         solution: 'JoystreamNodeRuntimeNposSolution16',
@@ -2204,7 +2241,7 @@ export default {
         round: 'u32'
     },
     /**
-     * Lookup285: joystream_node_runtime::NposSolution16
+     * Lookup290: joystream_node_runtime::NposSolution16
      **/
     JoystreamNodeRuntimeNposSolution16: {
         votes1: 'Vec<(Compact<u32>,Compact<u16>)>',
@@ -2225,21 +2262,21 @@ export default {
         votes16: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);15],Compact<u16>)>'
     },
     /**
-     * Lookup336: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
+     * Lookup341: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
      **/
     PalletElectionProviderMultiPhaseSolutionOrSnapshotSize: {
         voters: 'Compact<u32>',
         targets: 'Compact<u32>'
     },
     /**
-     * Lookup340: sp_npos_elections::Support<sp_core::crypto::AccountId32>
+     * Lookup345: sp_npos_elections::Support<sp_core::crypto::AccountId32>
      **/
     SpNposElectionsSupport: {
         total: 'u128',
         voters: 'Vec<(AccountId32,u128)>'
     },
     /**
-     * Lookup342: pallet_staking::pallet::pallet::Call<T>
+     * Lookup347: pallet_staking::pallet::pallet::Call<T>
      **/
     PalletStakingPalletCall: {
         _enum: {
@@ -2333,7 +2370,7 @@ export default {
         }
     },
     /**
-     * Lookup343: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
+     * Lookup348: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
      **/
     PalletStakingRewardDestination: {
         _enum: {
@@ -2345,7 +2382,7 @@ export default {
         }
     },
     /**
-     * Lookup347: pallet_staking::pallet::pallet::ConfigOp<T>
+     * Lookup351: pallet_staking::pallet::pallet::ConfigOp<T>
      **/
     PalletStakingPalletConfigOpU128: {
         _enum: {
@@ -2355,7 +2392,7 @@ export default {
         }
     },
     /**
-     * Lookup348: pallet_staking::pallet::pallet::ConfigOp<T>
+     * Lookup352: pallet_staking::pallet::pallet::ConfigOp<T>
      **/
     PalletStakingPalletConfigOpU32: {
         _enum: {
@@ -2365,7 +2402,7 @@ export default {
         }
     },
     /**
-     * Lookup349: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
+     * Lookup353: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
      **/
     PalletStakingPalletConfigOpPercent: {
         _enum: {
@@ -2375,7 +2412,7 @@ export default {
         }
     },
     /**
-     * Lookup350: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
+     * Lookup354: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
      **/
     PalletStakingPalletConfigOpPerbill: {
         _enum: {
@@ -2385,7 +2422,7 @@ export default {
         }
     },
     /**
-     * Lookup351: pallet_session::pallet::Call<T>
+     * Lookup355: pallet_session::pallet::Call<T>
      **/
     PalletSessionCall: {
         _enum: {
@@ -2400,7 +2437,7 @@ export default {
         }
     },
     /**
-     * Lookup352: joystream_node_runtime::SessionKeys
+     * Lookup356: joystream_node_runtime::SessionKeys
      **/
     JoystreamNodeRuntimeSessionKeys: {
         grandpa: 'SpConsensusGrandpaAppPublic',
@@ -2409,11 +2446,11 @@ export default {
         authorityDiscovery: 'SpAuthorityDiscoveryAppPublic'
     },
     /**
-     * Lookup353: sp_authority_discovery::app::Public
+     * Lookup357: sp_authority_discovery::app::Public
      **/
     SpAuthorityDiscoveryAppPublic: 'SpCoreSr25519Public',
     /**
-     * Lookup354: pallet_grandpa::pallet::Call<T>
+     * Lookup358: pallet_grandpa::pallet::Call<T>
      **/
     PalletGrandpaCall: {
         _enum: {
@@ -2432,14 +2469,14 @@ export default {
         }
     },
     /**
-     * Lookup355: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
+     * Lookup359: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
      **/
     SpConsensusGrandpaEquivocationProof: {
         setId: 'u64',
         equivocation: 'SpConsensusGrandpaEquivocation'
     },
     /**
-     * Lookup356: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
+     * Lookup360: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
      **/
     SpConsensusGrandpaEquivocation: {
         _enum: {
@@ -2448,7 +2485,7 @@ export default {
         }
     },
     /**
-     * Lookup357: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+     * Lookup361: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
      **/
     FinalityGrandpaEquivocationPrevote: {
         roundNumber: 'u64',
@@ -2457,22 +2494,22 @@ export default {
         second: '(FinalityGrandpaPrevote,SpConsensusGrandpaAppSignature)'
     },
     /**
-     * Lookup358: finality_grandpa::Prevote<primitive_types::H256, N>
+     * Lookup362: finality_grandpa::Prevote<primitive_types::H256, N>
      **/
     FinalityGrandpaPrevote: {
         targetHash: 'H256',
         targetNumber: 'u32'
     },
     /**
-     * Lookup359: sp_consensus_grandpa::app::Signature
+     * Lookup363: sp_consensus_grandpa::app::Signature
      **/
     SpConsensusGrandpaAppSignature: 'SpCoreEd25519Signature',
     /**
-     * Lookup360: sp_core::ed25519::Signature
+     * Lookup364: sp_core::ed25519::Signature
      **/
     SpCoreEd25519Signature: '[u8;64]',
     /**
-     * Lookup363: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+     * Lookup367: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
      **/
     FinalityGrandpaEquivocationPrecommit: {
         roundNumber: 'u64',
@@ -2481,14 +2518,14 @@ export default {
         second: '(FinalityGrandpaPrecommit,SpConsensusGrandpaAppSignature)'
     },
     /**
-     * Lookup364: finality_grandpa::Precommit<primitive_types::H256, N>
+     * Lookup368: finality_grandpa::Precommit<primitive_types::H256, N>
      **/
     FinalityGrandpaPrecommit: {
         targetHash: 'H256',
         targetNumber: 'u32'
     },
     /**
-     * Lookup366: pallet_im_online::pallet::Call<T>
+     * Lookup370: pallet_im_online::pallet::Call<T>
      **/
     PalletImOnlineCall: {
         _enum: {
@@ -2499,7 +2536,7 @@ export default {
         }
     },
     /**
-     * Lookup367: pallet_im_online::Heartbeat<BlockNumber>
+     * Lookup371: pallet_im_online::Heartbeat<BlockNumber>
      **/
     PalletImOnlineHeartbeat: {
         blockNumber: 'u32',
@@ -2509,22 +2546,22 @@ export default {
         validatorsLen: 'u32'
     },
     /**
-     * Lookup368: sp_core::offchain::OpaqueNetworkState
+     * Lookup372: sp_core::offchain::OpaqueNetworkState
      **/
     SpCoreOffchainOpaqueNetworkState: {
         peerId: 'OpaquePeerId',
         externalAddresses: 'Vec<OpaqueMultiaddr>'
     },
     /**
-     * Lookup372: pallet_im_online::sr25519::app_sr25519::Signature
+     * Lookup376: pallet_im_online::sr25519::app_sr25519::Signature
      **/
     PalletImOnlineSr25519AppSr25519Signature: 'SpCoreSr25519Signature',
     /**
-     * Lookup373: sp_core::sr25519::Signature
+     * Lookup377: sp_core::sr25519::Signature
      **/
     SpCoreSr25519Signature: '[u8;64]',
     /**
-     * Lookup374: pallet_bags_list::pallet::Call<T, I>
+     * Lookup378: pallet_bags_list::pallet::Call<T, I>
      **/
     PalletBagsListCall: {
         _enum: {
@@ -2537,7 +2574,7 @@ export default {
         }
     },
     /**
-     * Lookup375: pallet_vesting::pallet::Call<T>
+     * Lookup379: pallet_vesting::pallet::Call<T>
      **/
     PalletVestingCall: {
         _enum: {
@@ -2561,15 +2598,7 @@ export default {
         }
     },
     /**
-     * Lookup376: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
-     **/
-    PalletVestingVestingInfo: {
-        locked: 'u128',
-        perBlock: 'u128',
-        startingBlock: 'u32'
-    },
-    /**
-     * Lookup377: pallet_multisig::pallet::Call<T>
+     * Lookup380: pallet_multisig::pallet::Call<T>
      **/
     PalletMultisigCall: {
         _enum: {
@@ -2600,7 +2629,7 @@ export default {
         }
     },
     /**
-     * Lookup379: pallet_council::Call<T>
+     * Lookup382: pallet_council::Call<T>
      **/
     PalletCouncilCall: {
         _enum: {
@@ -2632,6 +2661,12 @@ export default {
             set_councilor_reward: {
                 councilorReward: 'u128',
             },
+            set_era_payout_damping_factor: {
+                newParameter: 'Percent',
+            },
+            decrease_council_budget: {
+                reductionAmount: 'u128',
+            },
             funding_request: {
                 fundingRequests: 'Vec<PalletCommonFundingRequestParameters>',
             },
@@ -2651,7 +2686,7 @@ export default {
         }
     },
     /**
-     * Lookup380: pallet_referendum::Call<T, I>
+     * Lookup383: pallet_referendum::Call<T, I>
      **/
     PalletReferendumCall: {
         _enum: {
@@ -2668,7 +2703,7 @@ export default {
         }
     },
     /**
-     * Lookup381: pallet_membership::Call<T>
+     * Lookup384: pallet_membership::Call<T>
      **/
     PalletMembershipCall: {
         _enum: {
@@ -2737,7 +2772,7 @@ export default {
         }
     },
     /**
-     * Lookup382: pallet_forum::Call<T>
+     * Lookup385: pallet_forum::Call<T>
      **/
     PalletForumCall: {
         _enum: {
@@ -2834,7 +2869,7 @@ export default {
         }
     },
     /**
-     * Lookup383: pallet_constitution::Call<T>
+     * Lookup386: pallet_constitution::Call<T>
      **/
     PalletConstitutionCall: {
         _enum: {
@@ -2844,7 +2879,7 @@ export default {
         }
     },
     /**
-     * Lookup384: pallet_bounty::Call<T>
+     * Lookup387: pallet_bounty::Call<T>
      **/
     PalletBountyCall: {
         _enum: {
@@ -2920,7 +2955,7 @@ export default {
         }
     },
     /**
-     * Lookup385: pallet_joystream_utility::Call<T>
+     * Lookup388: pallet_joystream_utility::Call<T>
      **/
     PalletJoystreamUtilityCall: {
         _enum: {
@@ -2941,7 +2976,7 @@ export default {
         }
     },
     /**
-     * Lookup386: pallet_content::Call<T>
+     * Lookup389: pallet_content::Call<T>
      **/
     PalletContentCall: {
         _enum: {
@@ -3250,14 +3285,14 @@ export default {
         }
     },
     /**
-     * Lookup387: pallet_content::types::ChannelBagWitness
+     * Lookup390: pallet_content::types::ChannelBagWitness
      **/
     PalletContentChannelBagWitness: {
         storageBucketsNum: 'u32',
         distributionBucketsNum: 'u32'
     },
     /**
-     * Lookup389: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
+     * Lookup392: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
      **/
     PalletCommonMerkleTreeProofElementRecord: {
         _alias: {
@@ -3267,13 +3302,13 @@ export default {
         side: 'PalletCommonMerkleTreeSide'
     },
     /**
-     * Lookup390: pallet_common::merkle_tree::Side
+     * Lookup393: pallet_common::merkle_tree::Side
      **/
     PalletCommonMerkleTreeSide: {
         _enum: ['Left', 'Right']
     },
     /**
-     * Lookup391: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
+     * Lookup394: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
      **/
     PalletContentPullPaymentElement: {
         channelId: 'u64',
@@ -3281,7 +3316,7 @@ export default {
         reason: 'H256'
     },
     /**
-     * Lookup392: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
+     * Lookup395: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
      **/
     PalletContentInitTransferParameters: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -3289,7 +3324,7 @@ export default {
         newOwner: 'PalletContentChannelOwner'
     },
     /**
-     * Lookup393: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup396: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenSaleParams: {
         unitPrice: 'u128',
@@ -3301,14 +3336,14 @@ export default {
         metadata: 'Option<Bytes>'
     },
     /**
-     * Lookup397: pallet_project_token::types::AmmParams<Balance>
+     * Lookup400: pallet_project_token::types::AmmParams<Balance>
      **/
     PalletProjectTokenAmmParams: {
         slope: 'u128',
         intercept: 'u128'
     },
     /**
-     * Lookup398: pallet_storage::Call<T>
+     * Lookup401: pallet_storage::Call<T>
      **/
     PalletStorageCall: {
         _enum: {
@@ -3455,10 +3490,13 @@ export default {
         }
     },
     /**
-     * Lookup399: pallet_project_token::Call<T>
+     * Lookup402: pallet_project_token::Call<T>
      **/
     PalletProjectTokenCall: {
         _enum: {
+            update_token_constraints: {
+                parameters: 'PalletProjectTokenTokenConstraints',
+            },
             transfer: {
                 srcMemberId: 'u64',
                 tokenId: 'u64',
@@ -3511,17 +3549,17 @@ export default {
         }
     },
     /**
-     * Lookup403: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
+     * Lookup406: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
      **/
     PalletProjectTokenMerkleProof: 'Vec<(H256,PalletProjectTokenMerkleSide)>',
     /**
-     * Lookup406: pallet_project_token::types::MerkleSide
+     * Lookup409: pallet_project_token::types::MerkleSide
      **/
     PalletProjectTokenMerkleSide: {
         _enum: ['Right', 'Left']
     },
     /**
-     * Lookup409: pallet_proposals_engine::Call<T>
+     * Lookup412: pallet_proposals_engine::Call<T>
      **/
     PalletProposalsEngineCall: {
         _enum: {
@@ -3546,7 +3584,7 @@ export default {
         }
     },
     /**
-     * Lookup410: pallet_proposals_discussion::Call<T>
+     * Lookup413: pallet_proposals_discussion::Call<T>
      **/
     PalletProposalsDiscussionCall: {
         _enum: {
@@ -3575,7 +3613,7 @@ export default {
         }
     },
     /**
-     * Lookup411: pallet_proposals_codex::Call<T>
+     * Lookup414: pallet_proposals_codex::Call<T>
      **/
     PalletProposalsCodexCall: {
         _enum: {
@@ -3586,7 +3624,7 @@ export default {
         }
     },
     /**
-     * Lookup412: pallet_working_group::Call<T, I>
+     * Lookup415: pallet_working_group::Call<T, I>
      **/
     PalletWorkingGroupCall: {
         _enum: {
@@ -3654,6 +3692,11 @@ export default {
                 amount: 'u128',
                 rationale: 'Option<Bytes>',
             },
+            vested_spend_from_budget: {
+                accountId: 'AccountId32',
+                vestingSchedule: 'PalletVestingVestingInfo',
+                rationale: 'Option<Bytes>',
+            },
             fund_working_group_budget: {
                 memberId: 'u64',
                 amount: 'u128',
@@ -3669,7 +3712,7 @@ export default {
         }
     },
     /**
-     * Lookup421: joystream_node_runtime::OriginCaller
+     * Lookup424: joystream_node_runtime::OriginCaller
      **/
     JoystreamNodeRuntimeOriginCaller: {
         _enum: {
@@ -3678,7 +3721,7 @@ export default {
         }
     },
     /**
-     * Lookup422: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
+     * Lookup425: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
      **/
     FrameSupportDispatchRawOrigin: {
         _enum: {
@@ -3688,17 +3731,17 @@ export default {
         }
     },
     /**
-     * Lookup423: sp_core::Void
+     * Lookup426: sp_core::Void
      **/
     SpCoreVoid: 'Null',
     /**
-     * Lookup424: pallet_utility::pallet::Error<T>
+     * Lookup427: pallet_utility::pallet::Error<T>
      **/
     PalletUtilityError: {
         _enum: ['TooManyCalls']
     },
     /**
-     * Lookup431: sp_consensus_babe::digests::PreDigest
+     * Lookup434: sp_consensus_babe::digests::PreDigest
      **/
     SpConsensusBabeDigestsPreDigest: {
         _enum: {
@@ -3709,7 +3752,7 @@ export default {
         }
     },
     /**
-     * Lookup432: sp_consensus_babe::digests::PrimaryPreDigest
+     * Lookup435: sp_consensus_babe::digests::PrimaryPreDigest
      **/
     SpConsensusBabeDigestsPrimaryPreDigest: {
         authorityIndex: 'u32',
@@ -3718,14 +3761,14 @@ export default {
         vrfProof: '[u8;64]'
     },
     /**
-     * Lookup433: sp_consensus_babe::digests::SecondaryPlainPreDigest
+     * Lookup436: sp_consensus_babe::digests::SecondaryPlainPreDigest
      **/
     SpConsensusBabeDigestsSecondaryPlainPreDigest: {
         authorityIndex: 'u32',
         slot: 'u64'
     },
     /**
-     * Lookup434: sp_consensus_babe::digests::SecondaryVRFPreDigest
+     * Lookup437: sp_consensus_babe::digests::SecondaryVRFPreDigest
      **/
     SpConsensusBabeDigestsSecondaryVRFPreDigest: {
         authorityIndex: 'u32',
@@ -3734,20 +3777,20 @@ export default {
         vrfProof: '[u8;64]'
     },
     /**
-     * Lookup436: sp_consensus_babe::BabeEpochConfiguration
+     * Lookup439: sp_consensus_babe::BabeEpochConfiguration
      **/
     SpConsensusBabeBabeEpochConfiguration: {
         c: '(u64,u64)',
         allowedSlots: 'SpConsensusBabeAllowedSlots'
     },
     /**
-     * Lookup438: pallet_babe::pallet::Error<T>
+     * Lookup441: pallet_babe::pallet::Error<T>
      **/
     PalletBabeError: {
         _enum: ['InvalidEquivocationProof', 'InvalidKeyOwnershipProof', 'DuplicateOffenceReport', 'InvalidConfiguration']
     },
     /**
-     * Lookup440: pallet_balances::BalanceLock<Balance>
+     * Lookup443: pallet_balances::BalanceLock<Balance>
      **/
     PalletBalancesBalanceLock: {
         id: '[u8;8]',
@@ -3755,32 +3798,32 @@ export default {
         reasons: 'PalletBalancesReasons'
     },
     /**
-     * Lookup441: pallet_balances::Reasons
+     * Lookup444: pallet_balances::Reasons
      **/
     PalletBalancesReasons: {
         _enum: ['Fee', 'Misc', 'All']
     },
     /**
-     * Lookup444: pallet_balances::ReserveData<ReserveIdentifier, Balance>
+     * Lookup447: pallet_balances::ReserveData<ReserveIdentifier, Balance>
      **/
     PalletBalancesReserveData: {
         id: '[u8;8]',
         amount: 'u128'
     },
     /**
-     * Lookup446: pallet_balances::pallet::Error<T, I>
+     * Lookup449: pallet_balances::pallet::Error<T, I>
      **/
     PalletBalancesError: {
         _enum: ['VestingBalance', 'LiquidityRestrictions', 'InsufficientBalance', 'ExistentialDeposit', 'KeepAlive', 'ExistingVestingSchedule', 'DeadAccount', 'TooManyReserves']
     },
     /**
-     * Lookup448: pallet_transaction_payment::Releases
+     * Lookup451: pallet_transaction_payment::Releases
      **/
     PalletTransactionPaymentReleases: {
         _enum: ['V1Ancient', 'V2']
     },
     /**
-     * Lookup449: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
+     * Lookup452: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
      **/
     PalletElectionProviderMultiPhaseReadySolution: {
         supports: 'Vec<(AccountId32,SpNposElectionsSupport)>',
@@ -3788,14 +3831,14 @@ export default {
         compute: 'PalletElectionProviderMultiPhaseElectionCompute'
     },
     /**
-     * Lookup451: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
+     * Lookup454: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
      **/
     PalletElectionProviderMultiPhaseRoundSnapshot: {
         voters: 'Vec<(AccountId32,u64,Vec<AccountId32>)>',
         targets: 'Vec<AccountId32>'
     },
     /**
-     * Lookup458: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
+     * Lookup461: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseSignedSignedSubmission: {
         who: 'AccountId32',
@@ -3804,13 +3847,13 @@ export default {
         callFee: 'u128'
     },
     /**
-     * Lookup459: pallet_election_provider_multi_phase::pallet::Error<T>
+     * Lookup462: pallet_election_provider_multi_phase::pallet::Error<T>
      **/
     PalletElectionProviderMultiPhaseError: {
         _enum: ['PreDispatchEarlySubmission', 'PreDispatchWrongWinnerCount', 'PreDispatchWeakSubmission', 'SignedQueueFull', 'SignedCannotPayDeposit', 'SignedInvalidWitness', 'SignedTooMuchWeight', 'OcwCallWrongEra', 'MissingSnapshotMetadata', 'InvalidSubmissionIndex', 'CallNotAllowed', 'FallbackFailed', 'BoundNotMet', 'TooManyWinners']
     },
     /**
-     * Lookup460: pallet_staking::StakingLedger<T>
+     * Lookup463: pallet_staking::StakingLedger<T>
      **/
     PalletStakingStakingLedger: {
         stash: 'AccountId32',
@@ -3820,14 +3863,14 @@ export default {
         claimedRewards: 'Vec<u32>'
     },
     /**
-     * Lookup462: pallet_staking::UnlockChunk<Balance>
+     * Lookup465: pallet_staking::UnlockChunk<Balance>
      **/
     PalletStakingUnlockChunk: {
         value: 'Compact<u128>',
         era: 'Compact<u32>'
     },
     /**
-     * Lookup465: pallet_staking::Nominations<T>
+     * Lookup468: pallet_staking::Nominations<T>
      **/
     PalletStakingNominations: {
         targets: 'Vec<AccountId32>',
@@ -3835,21 +3878,21 @@ export default {
         suppressed: 'bool'
     },
     /**
-     * Lookup466: pallet_staking::ActiveEraInfo
+     * Lookup469: pallet_staking::ActiveEraInfo
      **/
     PalletStakingActiveEraInfo: {
         index: 'u32',
         start: 'Option<u64>'
     },
     /**
-     * Lookup468: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
+     * Lookup471: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
      **/
     PalletStakingEraRewardPoints: {
         total: 'u32',
         individual: 'BTreeMap<AccountId32, u32>'
     },
     /**
-     * Lookup473: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
+     * Lookup476: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
      **/
     PalletStakingUnappliedSlash: {
         validator: 'AccountId32',
@@ -3859,7 +3902,7 @@ export default {
         payout: 'u128'
     },
     /**
-     * Lookup475: pallet_staking::slashing::SlashingSpans
+     * Lookup478: pallet_staking::slashing::SlashingSpans
      **/
     PalletStakingSlashingSlashingSpans: {
         spanIndex: 'u32',
@@ -3868,30 +3911,30 @@ export default {
         prior: 'Vec<u32>'
     },
     /**
-     * Lookup476: pallet_staking::slashing::SpanRecord<Balance>
+     * Lookup479: pallet_staking::slashing::SpanRecord<Balance>
      **/
     PalletStakingSlashingSpanRecord: {
         slashed: 'u128',
         paidOut: 'u128'
     },
     /**
-     * Lookup479: pallet_staking::pallet::pallet::Error<T>
+     * Lookup482: pallet_staking::pallet::pallet::Error<T>
      **/
     PalletStakingPalletError: {
         _enum: ['NotController', 'NotStash', 'AlreadyBonded', 'AlreadyPaired', 'EmptyTargets', 'DuplicateIndex', 'InvalidSlashIndex', 'InsufficientBond', 'NoMoreChunks', 'NoUnlockChunk', 'FundedTarget', 'InvalidEraToReward', 'InvalidNumberOfNominations', 'NotSortedAndUnique', 'AlreadyClaimed', 'IncorrectHistoryDepth', 'IncorrectSlashingSpans', 'BadState', 'TooManyTargets', 'BadTarget', 'CannotChillOther', 'TooManyNominators', 'TooManyValidators', 'CommissionTooLow', 'BoundNotMet', 'BondingRestricted']
     },
     /**
-     * Lookup483: sp_core::crypto::KeyTypeId
+     * Lookup486: sp_core::crypto::KeyTypeId
      **/
     SpCoreCryptoKeyTypeId: '[u8;4]',
     /**
-     * Lookup484: pallet_session::pallet::Error<T>
+     * Lookup487: pallet_session::pallet::Error<T>
      **/
     PalletSessionError: {
         _enum: ['InvalidProof', 'NoAssociatedValidatorId', 'DuplicatedKey', 'NoKeys', 'NoAccount']
     },
     /**
-     * Lookup486: pallet_grandpa::StoredState<N>
+     * Lookup489: pallet_grandpa::StoredState<N>
      **/
     PalletGrandpaStoredState: {
         _enum: {
@@ -3908,7 +3951,7 @@ export default {
         }
     },
     /**
-     * Lookup487: pallet_grandpa::StoredPendingChange<N, Limit>
+     * Lookup490: pallet_grandpa::StoredPendingChange<N, Limit>
      **/
     PalletGrandpaStoredPendingChange: {
         scheduledAt: 'u32',
@@ -3917,33 +3960,33 @@ export default {
         forced: 'Option<u32>'
     },
     /**
-     * Lookup489: pallet_grandpa::pallet::Error<T>
+     * Lookup492: pallet_grandpa::pallet::Error<T>
      **/
     PalletGrandpaError: {
         _enum: ['PauseFailed', 'ResumeFailed', 'ChangePending', 'TooSoon', 'InvalidKeyOwnershipProof', 'InvalidEquivocationProof', 'DuplicateOffenceReport']
     },
     /**
-     * Lookup495: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
+     * Lookup498: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
      **/
     PalletImOnlineBoundedOpaqueNetworkState: {
         peerId: 'Bytes',
         externalAddresses: 'Vec<Bytes>'
     },
     /**
-     * Lookup499: pallet_im_online::pallet::Error<T>
+     * Lookup502: pallet_im_online::pallet::Error<T>
      **/
     PalletImOnlineError: {
         _enum: ['InvalidKey', 'DuplicatedHeartbeat']
     },
     /**
-     * Lookup500: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
+     * Lookup503: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
      **/
     SpStakingOffenceOffenceDetails: {
         offender: '(AccountId32,PalletStakingExposure)',
         reporters: 'Vec<AccountId32>'
     },
     /**
-     * Lookup503: pallet_bags_list::list::Node<T, I>
+     * Lookup506: pallet_bags_list::list::Node<T, I>
      **/
     PalletBagsListListNode: {
         id: 'AccountId32',
@@ -3953,14 +3996,14 @@ export default {
         score: 'u64'
     },
     /**
-     * Lookup504: pallet_bags_list::list::Bag<T, I>
+     * Lookup507: pallet_bags_list::list::Bag<T, I>
      **/
     PalletBagsListListBag: {
         head: 'Option<AccountId32>',
         tail: 'Option<AccountId32>'
     },
     /**
-     * Lookup505: pallet_bags_list::pallet::Error<T, I>
+     * Lookup508: pallet_bags_list::pallet::Error<T, I>
      **/
     PalletBagsListError: {
         _enum: {
@@ -3968,25 +4011,25 @@ export default {
         }
     },
     /**
-     * Lookup506: pallet_bags_list::list::ListError
+     * Lookup509: pallet_bags_list::list::ListError
      **/
     PalletBagsListListListError: {
         _enum: ['Duplicate', 'NotHeavier', 'NotInSameBag', 'NodeNotFound']
     },
     /**
-     * Lookup509: pallet_vesting::Releases
+     * Lookup512: pallet_vesting::Releases
      **/
     PalletVestingReleases: {
         _enum: ['V0', 'V1']
     },
     /**
-     * Lookup510: pallet_vesting::pallet::Error<T>
+     * Lookup513: pallet_vesting::pallet::Error<T>
      **/
     PalletVestingError: {
         _enum: ['NotVesting', 'AtMaxVestingSchedules', 'AmountLow', 'ScheduleIndexOutOfBounds', 'InvalidScheduleParams']
     },
     /**
-     * Lookup512: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
+     * Lookup515: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
      **/
     PalletMultisigMultisig: {
         when: 'PalletMultisigTimepoint',
@@ -3995,20 +4038,20 @@ export default {
         approvals: 'Vec<AccountId32>'
     },
     /**
-     * Lookup514: pallet_multisig::pallet::Error<T>
+     * Lookup517: pallet_multisig::pallet::Error<T>
      **/
     PalletMultisigError: {
         _enum: ['MinimumThreshold', 'AlreadyApproved', 'NoApprovalsNeeded', 'TooFewSignatories', 'TooManySignatories', 'SignatoriesOutOfOrder', 'SenderInSignatories', 'NotFound', 'NotOwner', 'NoTimepoint', 'WrongTimepoint', 'UnexpectedTimepoint', 'MaxWeightTooLow', 'AlreadyStored']
     },
     /**
-     * Lookup515: pallet_council::CouncilStageUpdate<BlockNumber>
+     * Lookup518: pallet_council::CouncilStageUpdate<BlockNumber>
      **/
     PalletCouncilCouncilStageUpdate: {
         stage: 'PalletCouncilCouncilStage',
         changedAt: 'u32'
     },
     /**
-     * Lookup516: pallet_council::CouncilStage<BlockNumber>
+     * Lookup519: pallet_council::CouncilStage<BlockNumber>
      **/
     PalletCouncilCouncilStage: {
         _enum: {
@@ -4018,26 +4061,26 @@ export default {
         }
     },
     /**
-     * Lookup517: pallet_council::CouncilStageAnnouncing<BlockNumber>
+     * Lookup520: pallet_council::CouncilStageAnnouncing<BlockNumber>
      **/
     PalletCouncilCouncilStageAnnouncing: {
         candidatesCount: 'u32',
         endsAt: 'u32'
     },
     /**
-     * Lookup518: pallet_council::CouncilStageElection
+     * Lookup521: pallet_council::CouncilStageElection
      **/
     PalletCouncilCouncilStageElection: {
         candidatesCount: 'u32'
     },
     /**
-     * Lookup519: pallet_council::CouncilStageIdle<BlockNumber>
+     * Lookup522: pallet_council::CouncilStageIdle<BlockNumber>
      **/
     PalletCouncilCouncilStageIdle: {
         endsAt: 'u32'
     },
     /**
-     * Lookup521: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
+     * Lookup524: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
      **/
     PalletCouncilCouncilMember: {
         stakingAccountId: 'AccountId32',
@@ -4048,7 +4091,7 @@ export default {
         unpaidReward: 'u128'
     },
     /**
-     * Lookup523: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
+     * Lookup526: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
      **/
     PalletCouncilCandidate: {
         stakingAccountId: 'AccountId32',
@@ -4059,13 +4102,13 @@ export default {
         noteHash: 'Option<H256>'
     },
     /**
-     * Lookup524: pallet_council::Error<T>
+     * Lookup527: pallet_council::Error<T>
      **/
     PalletCouncilError: {
-        _enum: ['ArithmeticError', 'BadOrigin', 'CantCandidateNow', 'CantReleaseStakeNow', 'CandidacyStakeTooLow', 'CantCandidateTwice', 'ConflictingStake', 'StakeStillNeeded', 'NoStake', 'InsufficientBalanceForStaking', 'CantVoteForYourself', 'MemberIdNotMatchAccount', 'InvalidAccountToStakeReuse', 'NotCandidatingNow', 'CantWithdrawCandidacyNow', 'NotCouncilor', 'InsufficientFundsForFundingRequest', 'ZeroBalanceFundRequest', 'RepeatedFundRequestAccount', 'EmptyFundingRequests', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'CandidateDoesNotExist', 'InsufficientBalanceForTransfer']
+        _enum: ['ArithmeticError', 'BadOrigin', 'CantCandidateNow', 'CantReleaseStakeNow', 'CandidacyStakeTooLow', 'CantCandidateTwice', 'ConflictingStake', 'StakeStillNeeded', 'NoStake', 'InsufficientBalanceForStaking', 'CantVoteForYourself', 'MemberIdNotMatchAccount', 'InvalidAccountToStakeReuse', 'NotCandidatingNow', 'CantWithdrawCandidacyNow', 'NotCouncilor', 'InsufficientFundsForFundingRequest', 'ZeroBalanceFundRequest', 'RepeatedFundRequestAccount', 'EmptyFundingRequests', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'CandidateDoesNotExist', 'InsufficientBalanceForTransfer', 'ReductionAmountTooLarge']
     },
     /**
-     * Lookup525: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup528: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStage: {
         _enum: {
@@ -4075,7 +4118,7 @@ export default {
         }
     },
     /**
-     * Lookup527: pallet_referendum::ReferendumStageVoting<BlockNumber>
+     * Lookup530: pallet_referendum::ReferendumStageVoting<BlockNumber>
      **/
     PalletReferendumReferendumStageVoting: {
         started: 'u32',
@@ -4084,7 +4127,7 @@ export default {
         endsAt: 'u32'
     },
     /**
-     * Lookup528: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup531: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStageRevealing: {
         started: 'u32',
@@ -4094,7 +4137,7 @@ export default {
         endsAt: 'u32'
     },
     /**
-     * Lookup529: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
+     * Lookup532: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
      **/
     PalletReferendumCastVote: {
         commitment: 'H256',
@@ -4103,13 +4146,13 @@ export default {
         voteFor: 'Option<u64>'
     },
     /**
-     * Lookup530: pallet_referendum::Error<T, I>
+     * Lookup533: pallet_referendum::Error<T, I>
      **/
     PalletReferendumError: {
         _enum: ['BadOrigin', 'ReferendumNotRunning', 'RevealingNotInProgress', 'ConflictStakesOnAccount', 'InsufficientBalanceToStake', 'InsufficientStake', 'InvalidReveal', 'InvalidVote', 'VoteNotExisting', 'AlreadyVotedThisCycle', 'UnstakingVoteInSameCycle', 'SaltTooLong', 'UnstakingForbidden', 'AccountAlreadyOptedOutOfVoting']
     },
     /**
-     * Lookup531: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
+     * Lookup534: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
      **/
     PalletMembershipMembershipObject: {
         handleHash: 'H256',
@@ -4119,20 +4162,20 @@ export default {
         invites: 'u32'
     },
     /**
-     * Lookup532: pallet_membership::StakingAccountMemberBinding<MemberId>
+     * Lookup535: pallet_membership::StakingAccountMemberBinding<MemberId>
      **/
     PalletMembershipStakingAccountMemberBinding: {
         memberId: 'u64',
         confirmed: 'bool'
     },
     /**
-     * Lookup533: pallet_membership::Error<T>
+     * Lookup536: pallet_membership::Error<T>
      **/
     PalletMembershipError: {
         _enum: ['NotEnoughBalanceToBuyMembership', 'ControllerAccountRequired', 'RootAccountRequired', 'UnsignedOrigin', 'MemberProfileNotFound', 'HandleAlreadyRegistered', 'HandleMustBeProvidedDuringRegistration', 'ReferrerIsNotMember', 'CannotTransferInvitesForNotMember', 'NotEnoughInvites', 'WorkingGroupLeaderNotSet', 'StakingAccountIsAlreadyRegistered', 'StakingAccountDoesntExist', 'StakingAccountAlreadyConfirmed', 'WorkingGroupBudgetIsNotSufficientForInviting', 'ConflictingLock', 'CannotExceedReferralCutPercentLimit', 'ConflictStakesOnAccount', 'InsufficientBalanceToCoverStake', 'GifLockExceedsCredit', 'InsufficientBalanceToGift', 'InsufficientBalanceToCoverPayment']
     },
     /**
-     * Lookup534: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup537: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletForumCategory: {
         titleHash: 'H256',
@@ -4145,7 +4188,7 @@ export default {
         stickyThreadIds: 'BTreeSet<u64>'
     },
     /**
-     * Lookup536: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup539: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumThread: {
         categoryId: 'u64',
@@ -4154,7 +4197,7 @@ export default {
         numberOfEditablePosts: 'u64'
     },
     /**
-     * Lookup537: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup540: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumPost: {
         threadId: 'u64',
@@ -4164,19 +4207,19 @@ export default {
         lastEdited: 'u32'
     },
     /**
-     * Lookup538: pallet_forum::Error<T>
+     * Lookup541: pallet_forum::Error<T>
      **/
     PalletForumError: {
         _enum: ['ArithmeticError', 'OriginNotForumLead', 'ForumUserIdNotMatchAccount', 'ModeratorIdNotMatchAccount', 'AccountDoesNotMatchThreadAuthor', 'ThreadDoesNotExist', 'ModeratorModerateOriginCategory', 'ModeratorModerateDestinationCategory', 'ThreadMoveInvalid', 'ThreadNotBeingUpdated', 'InsufficientBalanceForThreadCreation', 'CannotDeleteThreadWithOutstandingPosts', 'PostDoesNotExist', 'AccountDoesNotMatchPostAuthor', 'InsufficientBalanceForPost', 'CategoryNotBeingUpdated', 'AncestorCategoryImmutable', 'MaxValidCategoryDepthExceeded', 'CategoryDoesNotExist', 'CategoryModeratorDoesNotExist', 'CategoryNotEmptyThreads', 'CategoryNotEmptyCategories', 'ModeratorCantDeleteCategory', 'ModeratorCantUpdateCategory', 'MapSizeLimit', 'PathLengthShouldBeGreaterThanZero', 'MaxNumberOfStickiedThreadsExceeded']
     },
     /**
-     * Lookup539: pallet_constitution::ConstitutionInfo<primitive_types::H256>
+     * Lookup542: pallet_constitution::ConstitutionInfo<primitive_types::H256>
      **/
     PalletConstitutionConstitutionInfo: {
         textHash: 'H256'
     },
     /**
-     * Lookup540: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup543: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyRecord: {
         creationParams: 'PalletBountyBountyParametersBoundedBTreeSet',
@@ -4186,7 +4229,7 @@ export default {
         hasUnpaidOracleReward: 'bool'
     },
     /**
-     * Lookup542: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup545: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyParametersBoundedBTreeSet: {
         oracle: 'PalletBountyBountyActor',
@@ -4198,7 +4241,7 @@ export default {
         fundingType: 'PalletBountyFundingType'
     },
     /**
-     * Lookup543: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup546: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyAssuranceContractTypeBoundedBTreeSet: {
         _enum: {
@@ -4207,7 +4250,7 @@ export default {
         }
     },
     /**
-     * Lookup544: pallet_bounty::BountyMilestone<BlockNumber>
+     * Lookup547: pallet_bounty::BountyMilestone<BlockNumber>
      **/
     PalletBountyBountyMilestone: {
         _enum: {
@@ -4224,14 +4267,14 @@ export default {
         }
     },
     /**
-     * Lookup546: pallet_bounty::Contribution<T>
+     * Lookup549: pallet_bounty::Contribution<T>
      **/
     PalletBountyContribution: {
         amount: 'u128',
         funderStateBloatBondAmount: 'u128'
     },
     /**
-     * Lookup547: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
+     * Lookup550: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
      **/
     PalletBountyEntryRecord: {
         memberId: 'u64',
@@ -4240,19 +4283,19 @@ export default {
         workSubmitted: 'bool'
     },
     /**
-     * Lookup548: pallet_bounty::Error<T>
+     * Lookup551: pallet_bounty::Error<T>
      **/
     PalletBountyError: {
         _enum: ['ArithmeticError', 'MinFundingAmountCannotBeGreaterThanMaxAmount', 'BountyDoesntExist', 'SwitchOracleOriginIsRoot', 'InvalidStageUnexpectedFunding', 'InvalidStageUnexpectedNoFundingContributed', 'InvalidStageUnexpectedCancelled', 'InvalidStageUnexpectedWorkSubmission', 'InvalidStageUnexpectedJudgment', 'InvalidStageUnexpectedSuccessfulBountyWithdrawal', 'InvalidStageUnexpectedFailedBountyWithdrawal', 'InsufficientBalanceForBounty', 'NoBountyContributionFound', 'InsufficientBalanceForStake', 'ConflictingStakes', 'WorkEntryDoesntExist', 'CherryLessThenMinimumAllowed', 'CannotSubmitWorkToClosedContractBounty', 'ClosedContractMemberListIsEmpty', 'ClosedContractMemberListIsTooLarge', 'ClosedContractMemberNotFound', 'InvalidOracleMemberId', 'InvalidStakingAccountForMember', 'ZeroWinnerReward', 'TotalRewardShouldBeEqualToTotalFunding', 'EntrantStakeIsLessThanMininum', 'FundingAmountCannotBeZero', 'FundingPeriodCannotBeZero', 'WinnerShouldHasWorkSubmission', 'InvalidContributorActorSpecified', 'InvalidOracleActorSpecified', 'InvalidEntrantWorkerSpecified', 'InvalidCreatorActorSpecified', 'WorkEntryDoesntBelongToWorker', 'OracleRewardAlreadyWithdrawn']
     },
     /**
-     * Lookup549: pallet_joystream_utility::Error<T>
+     * Lookup552: pallet_joystream_utility::Error<T>
      **/
     PalletJoystreamUtilityError: {
         _enum: ['InsufficientFundsForBudgetUpdate', 'ZeroTokensBurn', 'InsufficientFundsForBurn']
     },
     /**
-     * Lookup550: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup553: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentVideoRecord: {
         inChannel: 'u64',
@@ -4261,7 +4304,7 @@ export default {
         videoStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
     },
     /**
-     * Lookup551: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
+     * Lookup554: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
      **/
     PalletContentNftTypesOwnedNft: {
         owner: 'PalletContentNftTypesNftOwner',
@@ -4270,7 +4313,7 @@ export default {
         openAuctionsNonce: 'u64'
     },
     /**
-     * Lookup552: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
+     * Lookup555: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
      **/
     PalletContentNftTypesTransactionalStatusRecord: {
         _enum: {
@@ -4282,7 +4325,7 @@ export default {
         }
     },
     /**
-     * Lookup553: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup556: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesEnglishAuctionRecord: {
         startingPrice: 'u128',
@@ -4295,14 +4338,14 @@ export default {
         topBid: 'Option<PalletContentNftTypesEnglishAuctionBid>'
     },
     /**
-     * Lookup556: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
+     * Lookup559: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionBid: {
         amount: 'u128',
         bidderId: 'u64'
     },
     /**
-     * Lookup557: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup560: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesOpenAuctionRecord: {
         startingPrice: 'u128',
@@ -4313,7 +4356,7 @@ export default {
         start: 'u32'
     },
     /**
-     * Lookup558: pallet_content::nft::types::NftOwner<MemberId>
+     * Lookup561: pallet_content::nft::types::NftOwner<MemberId>
      **/
     PalletContentNftTypesNftOwner: {
         _enum: {
@@ -4322,7 +4365,7 @@ export default {
         }
     },
     /**
-     * Lookup561: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
+     * Lookup564: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
      **/
     PalletContentPermissionsCuratorGroupCuratorGroupRecord: {
         curators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -4330,7 +4373,7 @@ export default {
         permissionsByLevel: 'BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>'
     },
     /**
-     * Lookup568: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
+     * Lookup571: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
      **/
     PalletContentNftTypesOpenAuctionBidRecord: {
         amount: 'u128',
@@ -4338,13 +4381,13 @@ export default {
         auctionId: 'u64'
     },
     /**
-     * Lookup569: pallet_content::errors::Error<T>
+     * Lookup572: pallet_content::errors::Error<T>
      **/
     PalletContentErrorsError: {
         _enum: ['ChannelStateBloatBondChanged', 'VideoStateBloatBondChanged', 'MinCashoutValueTooLow', 'MaxCashoutValueTooHigh', 'MaxNumberOfChannelCollaboratorsExceeded', 'MaxNumberOfChannelAssetsExceeded', 'MaxNumberOfVideoAssetsExceeded', 'MaxNumberOfChannelAgentPermissionsExceeded', 'MaxNumberOfPausedFeaturesPerChannelExceeded', 'InvalidChannelBagWitnessProvided', 'InvalidStorageBucketsNumWitnessProvided', 'MissingStorageBucketsNumWitness', 'ChannelOwnerMemberDoesNotExist', 'ChannelOwnerCuratorGroupDoesNotExist', 'ChannelStateBloatBondBelowExistentialDeposit', 'NumberOfAssetsToRemoveIsZero', 'CuratorIsNotAMemberOfGivenCuratorGroup', 'CuratorIsAlreadyAMemberOfGivenCuratorGroup', 'CuratorGroupDoesNotExist', 'CuratorsPerGroupLimitReached', 'CuratorGroupIsNotActive', 'CuratorIdInvalid', 'LeadAuthFailed', 'MemberAuthFailed', 'CuratorAuthFailed', 'BadOrigin', 'ActorNotAuthorized', 'CategoryDoesNotExist', 'ChannelDoesNotExist', 'VideoDoesNotExist', 'VideoInSeason', 'ActorCannotBeLead', 'ActorCannotOwnChannel', 'NftAlreadyOwnedByChannel', 'NftAlreadyExists', 'NftDoesNotExist', 'OverflowOrUnderflowHappened', 'DoesNotOwnNft', 'RoyaltyUpperBoundExceeded', 'RoyaltyLowerBoundExceeded', 'AuctionDurationUpperBoundExceeded', 'AuctionDurationLowerBoundExceeded', 'ExtensionPeriodUpperBoundExceeded', 'ExtensionPeriodLowerBoundExceeded', 'BidLockDurationUpperBoundExceeded', 'BidLockDurationLowerBoundExceeded', 'StartingPriceUpperBoundExceeded', 'StartingPriceLowerBoundExceeded', 'AuctionBidStepUpperBoundExceeded', 'AuctionBidStepLowerBoundExceeded', 'InsufficientBalance', 'BidStepConstraintViolated', 'InvalidBidAmountSpecified', 'StartingPriceConstraintViolated', 'ActionHasBidsAlready', 'NftIsNotIdle', 'PendingOfferDoesNotExist', 'RewardAccountIsNotSet', 'ActorIsNotBidder', 'AuctionCannotBeCompleted', 'BidDoesNotExist', 'BidIsForPastAuction', 'StartsAtLowerBoundExceeded', 'StartsAtUpperBoundExceeded', 'AuctionDidNotStart', 'NotInAuctionState', 'MemberIsNotAllowedToParticipate', 'MemberProfileNotFound', 'NftNotInBuyNowState', 'InvalidBuyNowWitnessPriceProvided', 'IsNotOpenAuctionType', 'IsNotEnglishAuctionType', 'BidLockDurationIsNotExpired', 'NftAuctionIsAlreadyExpired', 'BuyNowMustBeGreaterThanStartingPrice', 'TargetMemberDoesNotExist', 'InvalidNftOfferWitnessPriceProvided', 'MaxAuctionWhiteListLengthUpperBoundExceeded', 'WhitelistHasOnlyOneMember', 'WhitelistedMemberDoesNotExist', 'NftNonChannelOwnerDoesNotExist', 'ExtensionPeriodIsGreaterThenAuctionDuration', 'NoAssetsSpecified', 'InvalidAssetsProvided', 'ChannelContainsVideos', 'ChannelContainsAssets', 'InvalidBagSizeSpecified', 'MigrationNotFinished', 'ReplyDoesNotExist', 'UnsufficientBalance', 'InsufficientTreasuryBalance', 'InvalidMemberProvided', 'ActorNotAMember', 'PaymentProofVerificationFailed', 'CashoutAmountExceedsMaximumAmount', 'CashoutAmountBelowMinimumAmount', 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance', 'WithdrawFromChannelAmountIsZero', 'ChannelCashoutsDisabled', 'MinCashoutAllowedExceedsMaxCashoutAllowed', 'CuratorModerationActionNotAllowed', 'MaxCuratorPermissionsPerLevelExceeded', 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded', 'ChannelFeaturePaused', 'ChannelBagMissing', 'AssetsToRemoveBeyondEntityAssetsSet', 'InvalidVideoDataObjectsCountProvided', 'InvalidChannelTransferStatus', 'InvalidChannelTransferAcceptor', 'InvalidChannelTransferCommitmentParams', 'ChannelAgentInsufficientPermissions', 'InvalidChannelOwner', 'ZeroReward', 'InsufficientBalanceForTransfer', 'InsufficientBalanceForChannelCreation', 'InsufficientBalanceForVideoCreation', 'InsufficientCouncilBudget', 'GlobalNftDailyLimitExceeded', 'GlobalNftWeeklyLimitExceeded', 'ChannelNftDailyLimitExceeded', 'ChannelNftWeeklyLimitExceeded', 'CreatorTokenAlreadyIssued', 'CreatorTokenNotIssued', 'MemberIdCouldNotBeDerivedFromActor', 'CannotWithdrawFromChannelWithCreatorTokenIssued', 'PatronageCanOnlyBeClaimedForMemberOwnedChannels', 'ChannelTransfersBlockedDuringRevenueSplits', 'ChannelTransfersBlockedDuringTokenSales', 'ChannelTransfersBlockedDuringActiveAmm']
     },
     /**
-     * Lookup570: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
+     * Lookup573: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
      **/
     PalletStorageBagRecord: {
         storedBy: 'BTreeSet<u64>',
@@ -4353,7 +4396,7 @@ export default {
         objectsNumber: 'u64'
     },
     /**
-     * Lookup573: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup576: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketRecord: {
         operatorStatus: 'PalletStorageStorageBucketOperatorStatus',
@@ -4362,7 +4405,7 @@ export default {
         assignedBags: 'u64'
     },
     /**
-     * Lookup574: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup577: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketOperatorStatus: {
         _enum: {
@@ -4372,14 +4415,14 @@ export default {
         }
     },
     /**
-     * Lookup576: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
+     * Lookup579: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
      **/
     PalletStorageDynamicBagCreationPolicy: {
         numberOfStorageBuckets: 'u32',
         families: 'BTreeMap<u64, u32>'
     },
     /**
-     * Lookup579: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup582: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletStorageDataObject: {
         _alias: {
@@ -4391,13 +4434,13 @@ export default {
         ipfsContentId: 'Bytes'
     },
     /**
-     * Lookup580: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
+     * Lookup583: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketFamilyRecord: {
         nextDistributionBucketIndex: 'u64'
     },
     /**
-     * Lookup581: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup584: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletStorageDistributionBucketRecord: {
         acceptingNewBags: 'bool',
@@ -4407,13 +4450,13 @@ export default {
         assignedBags: 'u64'
     },
     /**
-     * Lookup584: pallet_storage::Error<T>
+     * Lookup587: pallet_storage::Error<T>
      **/
     PalletStorageError: {
         _enum: ['ArithmeticError', 'InvalidCidLength', 'NoObjectsOnUpload', 'StorageBucketDoesntExist', 'StorageBucketIsNotBoundToBag', 'StorageBucketIsBoundToBag', 'NoStorageBucketInvitation', 'StorageProviderAlreadySet', 'StorageProviderMustBeSet', 'DifferentStorageProviderInvited', 'InvitedStorageProvider', 'StorageBucketIdCollectionsAreEmpty', 'StorageBucketsNumberViolatesDynamicBagCreationPolicy', 'DistributionBucketsViolatesDynamicBagCreationPolicy', 'EmptyContentId', 'ZeroObjectSize', 'InvalidStateBloatBondSourceAccount', 'InvalidStorageProvider', 'InsufficientBalance', 'DataObjectDoesntExist', 'UploadingBlocked', 'DataObjectIdCollectionIsEmpty', 'SourceAndDestinationBagsAreEqual', 'DataObjectBlacklisted', 'BlacklistSizeLimitExceeded', 'VoucherMaxObjectSizeLimitExceeded', 'VoucherMaxObjectNumberLimitExceeded', 'StorageBucketObjectNumberLimitReached', 'StorageBucketObjectSizeLimitReached', 'InsufficientTreasuryBalance', 'CannotDeleteNonEmptyStorageBucket', 'DataObjectIdParamsAreEmpty', 'StorageBucketsPerBagLimitTooLow', 'StorageBucketsPerBagLimitTooHigh', 'StorageBucketPerBagLimitExceeded', 'StorageBucketDoesntAcceptNewBags', 'DynamicBagExists', 'DynamicBagDoesntExist', 'StorageProviderOperatorDoesntExist', 'DataSizeFeeChanged', 'DataObjectStateBloatBondChanged', 'CannotDeleteNonEmptyDynamicBag', 'MaxDistributionBucketFamilyNumberLimitExceeded', 'DistributionBucketFamilyDoesntExist', 'DistributionBucketDoesntExist', 'DistributionBucketIdCollectionsAreEmpty', 'DistributionBucketDoesntAcceptNewBags', 'MaxDistributionBucketNumberPerBagLimitExceeded', 'DistributionBucketIsNotBoundToBag', 'DistributionBucketIsBoundToBag', 'DistributionBucketsPerBagLimitTooLow', 'DistributionBucketsPerBagLimitTooHigh', 'DistributionProviderOperatorDoesntExist', 'DistributionProviderOperatorAlreadyInvited', 'DistributionProviderOperatorSet', 'NoDistributionBucketInvitation', 'MustBeDistributionProviderOperatorForBucket', 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached', 'MaxNumberOfOperatorsPerDistributionBucketReached', 'DistributionFamilyBoundToBagCreationPolicy', 'MaxDataObjectSizeExceeded', 'InvalidTransactorAccount', 'NumberOfStorageBucketsOutsideOfAllowedContraints', 'NumberOfDistributionBucketsOutsideOfAllowedContraints', 'CallDisabled']
     },
     /**
-     * Lookup585: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
+     * Lookup588: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
      **/
     PalletProjectTokenAccountData: {
         vestingSchedules: 'BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>',
@@ -4424,14 +4467,14 @@ export default {
         lastSaleTotalPurchasedAmount: 'Option<(u32,u128)>'
     },
     /**
-     * Lookup586: pallet_project_token::types::StakingStatus<Balance>
+     * Lookup589: pallet_project_token::types::StakingStatus<Balance>
      **/
     PalletProjectTokenStakingStatus: {
         splitId: 'u32',
         amount: 'u128'
     },
     /**
-     * Lookup588: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
+     * Lookup591: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
      **/
     PalletProjectTokenVestingSchedule: {
         linearVestingStartBlock: 'u32',
@@ -4441,7 +4484,7 @@ export default {
         burnedAmount: 'u128'
     },
     /**
-     * Lookup595: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
+     * Lookup598: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
      **/
     PalletProjectTokenTokenData: {
         totalSupply: 'u128',
@@ -4457,7 +4500,7 @@ export default {
         ammCurve: 'Option<PalletProjectTokenAmmCurve>'
     },
     /**
-     * Lookup596: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
+     * Lookup599: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitState: {
         _enum: {
@@ -4466,7 +4509,7 @@ export default {
         }
     },
     /**
-     * Lookup597: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
+     * Lookup600: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitInfo: {
         allocation: 'u128',
@@ -4474,14 +4517,14 @@ export default {
         dividendsClaimed: 'u128'
     },
     /**
-     * Lookup598: pallet_project_token::types::Timeline<BlockNumber>
+     * Lookup601: pallet_project_token::types::Timeline<BlockNumber>
      **/
     PalletProjectTokenTimeline: {
         start: 'u32',
         duration: 'u32'
     },
     /**
-     * Lookup600: pallet_project_token::types::PatronageData<Balance, BlockNumber>
+     * Lookup603: pallet_project_token::types::PatronageData<Balance, BlockNumber>
      **/
     PalletProjectTokenPatronageData: {
         rate: 'Permill',
@@ -4489,13 +4532,13 @@ export default {
         lastUnclaimedPatronageTallyBlock: 'u32'
     },
     /**
-     * Lookup602: pallet_project_token::errors::Error<T>
+     * Lookup605: pallet_project_token::errors::Error<T>
      **/
     PalletProjectTokenErrorsError: {
         _enum: ['ArithmeticError', 'InsufficientTransferrableBalance', 'TokenDoesNotExist', 'AccountInformationDoesNotExist', 'TransferDestinationMemberDoesNotExist', 'MerkleProofVerificationFailure', 'TokenSymbolAlreadyInUse', 'InitialAllocationToNonExistingMember', 'AccountAlreadyExists', 'TooManyTransferOutputs', 'TokenIssuanceNotInIdleState', 'InsufficientJoyBalance', 'JoyTransferSubjectToDusting', 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode', 'AttemptToRemoveNonEmptyAccount', 'CannotJoinWhitelistInPermissionlessMode', 'CannotDeissueTokenWithOutstandingAccounts', 'NoUpcomingSale', 'NoActiveSale', 'InsufficientBalanceForTokenPurchase', 'NotEnoughTokensOnSale', 'SaleStartingBlockInThePast', 'SaleAccessProofRequired', 'SaleAccessProofParticipantIsNotSender', 'SalePurchaseCapExceeded', 'MaxVestingSchedulesPerAccountPerTokenReached', 'PreviousSaleNotFinalized', 'NoTokensToRecover', 'SaleDurationTooShort', 'SaleDurationIsZero', 'SaleUpperBoundQuantityIsZero', 'SaleCapPerMemberIsZero', 'SaleUnitPriceIsZero', 'SalePurchaseAmountIsZero', 'CannotInitSaleIfAmmIsActive', 'RevenueSplitTimeToStartTooShort', 'RevenueSplitDurationTooShort', 'RevenueSplitAlreadyActiveForToken', 'RevenueSplitNotActiveForToken', 'RevenueSplitDidNotEnd', 'RevenueSplitNotOngoing', 'UserAlreadyParticipating', 'InsufficientBalanceForSplitParticipation', 'UserNotParticipantingInAnySplit', 'CannotParticipateInSplitWithZeroAmount', 'CannotIssueSplitWithZeroAllocationAmount', 'CannotModifySupplyWhenRevenueSplitsAreActive', 'RevenueSplitRateIsZero', 'BurnAmountIsZero', 'BurnAmountGreaterThanAccountTokensAmount', 'NotInAmmState', 'InvalidCurveParameters', 'DeadlineExpired', 'SlippageToleranceExceeded', 'InsufficientTokenBalance', 'OutstandingAmmProvidedSupplyTooLarge', 'CurveSlopeParametersTooLow', 'NotEnoughTokenMintedByAmmForThisSale', 'TargetPatronageRateIsHigherThanCurrentRate', 'YearlyPatronageRateLimitExceeded', 'PalletFrozen']
     },
     /**
-     * Lookup603: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
+     * Lookup606: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
      **/
     PalletProposalsEngineProposal: {
         parameters: 'PalletProposalsEngineProposalParameters',
@@ -4508,7 +4551,7 @@ export default {
         stakingAccountId: 'Option<AccountId32>'
     },
     /**
-     * Lookup604: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
+     * Lookup607: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
      **/
     PalletProposalsEngineProposalParameters: {
         votingPeriod: 'u32',
@@ -4521,7 +4564,7 @@ export default {
         constitutionality: 'u32'
     },
     /**
-     * Lookup605: pallet_proposals_engine::types::VotingResults
+     * Lookup608: pallet_proposals_engine::types::VotingResults
      **/
     PalletProposalsEngineVotingResults: {
         abstentions: 'u32',
@@ -4530,13 +4573,13 @@ export default {
         slashes: 'u32'
     },
     /**
-     * Lookup608: pallet_proposals_engine::Error<T>
+     * Lookup611: pallet_proposals_engine::Error<T>
      **/
     PalletProposalsEngineError: {
         _enum: ['ArithmeticError', 'EmptyTitleProvided', 'EmptyDescriptionProvided', 'TitleIsTooLong', 'DescriptionIsTooLong', 'ProposalNotFound', 'ProposalFinalized', 'AlreadyVoted', 'NotAuthor', 'MaxActiveProposalNumberExceeded', 'EmptyStake', 'StakeShouldBeEmpty', 'StakeDiffersFromRequired', 'InvalidParameterApprovalThreshold', 'InvalidParameterSlashingThreshold', 'RequireRootOrigin', 'ProposalHasVotes', 'ZeroExactExecutionBlock', 'InvalidExactExecutionBlock', 'InsufficientBalanceForStake', 'ConflictingStakes', 'InvalidStakingAccountForMember', 'MaxDispatchableCallCodeSizeExceeded']
     },
     /**
-     * Lookup609: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup612: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionDiscussionThread: {
         activatedAt: 'u32',
@@ -4544,7 +4587,7 @@ export default {
         mode: 'PalletProposalsDiscussionThreadModeBoundedBTreeSet'
     },
     /**
-     * Lookup611: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup614: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionThreadModeBoundedBTreeSet: {
         _enum: {
@@ -4553,7 +4596,7 @@ export default {
         }
     },
     /**
-     * Lookup612: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup615: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletProposalsDiscussionDiscussionPost: {
         authorId: 'u64',
@@ -4561,19 +4604,19 @@ export default {
         lastEdited: 'u32'
     },
     /**
-     * Lookup613: pallet_proposals_discussion::Error<T>
+     * Lookup616: pallet_proposals_discussion::Error<T>
      **/
     PalletProposalsDiscussionError: {
         _enum: ['ArithmeticError', 'ThreadDoesntExist', 'PostDoesntExist', 'RequireRootOrigin', 'CannotPostOnClosedThread', 'NotAuthorOrCouncilor', 'MaxWhiteListSizeExceeded', 'WhitelistedMemberDoesNotExist', 'InsufficientBalanceForPost', 'CannotDeletePost']
     },
     /**
-     * Lookup614: pallet_proposals_codex::Error<T>
+     * Lookup617: pallet_proposals_codex::Error<T>
      **/
     PalletProposalsCodexError: {
-        _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError']
+        _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError', 'ReductionAmountZero']
     },
     /**
-     * Lookup615: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
+     * Lookup618: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
      **/
     PalletWorkingGroupOpening: {
         openingType: 'PalletWorkingGroupOpeningType',
@@ -4584,7 +4627,7 @@ export default {
         creationStake: 'u128'
     },
     /**
-     * Lookup616: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
+     * Lookup619: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
      **/
     PalletWorkingGroupJobApplication: {
         roleAccountId: 'AccountId32',
@@ -4595,7 +4638,7 @@ export default {
         openingId: 'u64'
     },
     /**
-     * Lookup617: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
+     * Lookup620: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
      **/
     PalletWorkingGroupGroupWorker: {
         memberId: 'u64',
@@ -4609,13 +4652,13 @@ export default {
         createdAt: 'u32'
     },
     /**
-     * Lookup618: pallet_working_group::errors::Error<T, I>
+     * Lookup621: pallet_working_group::errors::Error<T, I>
      **/
     PalletWorkingGroupErrorsError: {
         _enum: ['ArithmeticError', 'StakeBalanceCannotBeZero', 'OpeningDoesNotExist', 'CannotHireMultipleLeaders', 'WorkerApplicationDoesNotExist', 'MaxActiveWorkerNumberExceeded', 'SuccessfulWorkerApplicationDoesNotExist', 'CannotHireLeaderWhenLeaderExists', 'IsNotLeadAccount', 'CurrentLeadNotSet', 'WorkerDoesNotExist', 'InvalidMemberOrigin', 'SignerIsNotWorkerRoleAccount', 'BelowMinimumStakes', 'InsufficientBalanceToCoverStake', 'ApplicationStakeDoesntMatchOpening', 'OriginIsNotApplicant', 'WorkerIsLeaving', 'CannotRewardWithZero', 'InvalidStakingAccountForMember', 'ConflictStakesOnAccount', 'WorkerHasNoReward', 'UnstakingPeriodLessThanMinimum', 'CannotSpendZero', 'InsufficientBudgetForSpending', 'NoApplicationsProvided', 'CannotDecreaseStakeDeltaGreaterThanStake', 'ApplicationsNotForOpening', 'WorkerStorageValueTooLong', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'InsufficientBalanceForTransfer']
     },
     /**
-     * Lookup628: sp_runtime::MultiSignature
+     * Lookup631: sp_runtime::MultiSignature
      **/
     SpRuntimeMultiSignature: {
         _enum: {
@@ -4625,39 +4668,39 @@ export default {
         }
     },
     /**
-     * Lookup629: sp_core::ecdsa::Signature
+     * Lookup632: sp_core::ecdsa::Signature
      **/
     SpCoreEcdsaSignature: '[u8;65]',
     /**
-     * Lookup632: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
+     * Lookup635: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
      **/
     FrameSystemExtensionsCheckNonZeroSender: 'Null',
     /**
-     * Lookup633: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
+     * Lookup636: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
      **/
     FrameSystemExtensionsCheckSpecVersion: 'Null',
     /**
-     * Lookup634: frame_system::extensions::check_tx_version::CheckTxVersion<T>
+     * Lookup637: frame_system::extensions::check_tx_version::CheckTxVersion<T>
      **/
     FrameSystemExtensionsCheckTxVersion: 'Null',
     /**
-     * Lookup635: frame_system::extensions::check_genesis::CheckGenesis<T>
+     * Lookup638: frame_system::extensions::check_genesis::CheckGenesis<T>
      **/
     FrameSystemExtensionsCheckGenesis: 'Null',
     /**
-     * Lookup638: frame_system::extensions::check_nonce::CheckNonce<T>
+     * Lookup641: frame_system::extensions::check_nonce::CheckNonce<T>
      **/
     FrameSystemExtensionsCheckNonce: 'Compact<u32>',
     /**
-     * Lookup639: frame_system::extensions::check_weight::CheckWeight<T>
+     * Lookup642: frame_system::extensions::check_weight::CheckWeight<T>
      **/
     FrameSystemExtensionsCheckWeight: 'Null',
     /**
-     * Lookup640: pallet_transaction_payment::ChargeTransactionPayment<T>
+     * Lookup643: pallet_transaction_payment::ChargeTransactionPayment<T>
      **/
     PalletTransactionPaymentChargeTransactionPayment: 'Compact<u128>',
     /**
-     * Lookup641: joystream_node_runtime::Runtime
+     * Lookup644: joystream_node_runtime::Runtime
      **/
     JoystreamNodeRuntimeRuntime: 'Null'
 };
diff --git a/src/augment/augment-api-consts.ts b/src/augment/augment-api-consts.ts
index c82de3001ca3561eb2417f0d81d6239f0429ce5d..b221838c6e5f535fc75f67d05ddd4c7d67714b11 100644
--- a/src/augment/augment-api-consts.ts
+++ b/src/augment/augment-api-consts.ts
@@ -553,6 +553,10 @@ declare module '@polkadot/api-base/types/consts' {
        * Exports 'Create Working Group Lead Opening' proposal parameters.
        **/
       createWorkingGroupLeadOpeningProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
+      /**
+       * Decrease Council budget parameters
+       **/
+      decreaseCouncilBudgetProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
       /**
        * Exports 'Decrease Working Group Lead Stake' proposal parameters.
        **/
@@ -585,6 +589,10 @@ declare module '@polkadot/api-base/types/consts' {
        * Exports `Set Councilor Reward Proposal Parameters` proposal parameters.
        **/
       setCouncilorRewardProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
+      /**
+       * Era payout damping factor
+       **/
+      setEraPayoutDampingFactorProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
       /**
        * Exports `Set Initial Invitation Balance` proposal parameters.
        **/
@@ -603,6 +611,9 @@ declare module '@polkadot/api-base/types/consts' {
        * Exports 'Set Membership Price' proposal parameters.
        **/
       setMembershipPriceProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
+      /**
+       * Set Pallet Frozen status
+       **/
       setPalletFozenStatusProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
       setReferralCutProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
       /**
@@ -623,6 +634,10 @@ declare module '@polkadot/api-base/types/consts' {
       terminateWorkingGroupLeadProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
       updateChannelPayoutsProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
       updateGlobalNftLimitProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
+      /**
+       * pallet token governance parameters proposal
+       **/
+      updateTokenPalletTokenConstraints: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
       /**
        * Exports 'Update Working Group Budget' proposal parameters.
        **/
diff --git a/src/augment/augment-api-errors.ts b/src/augment/augment-api-errors.ts
index 98b5b35477a3dc227aae75109abdaa2bc6dc7d4b..ea3f7eeec6a01e7f165c2bf8a9b5f7b34b4d0e2d 100644
--- a/src/augment/augment-api-errors.ts
+++ b/src/augment/augment-api-errors.ts
@@ -1059,6 +1059,10 @@ declare module '@polkadot/api-base/types/errors' {
        * The member is not a councilor.
        **/
       NotCouncilor: AugmentedError<ApiType>;
+      /**
+       * Cannot reduce the budget by the given amount.
+       **/
+      ReductionAmountTooLarge: AugmentedError<ApiType>;
       /**
        * The same account is recieving funds from the same request twice
        **/
@@ -2569,6 +2573,10 @@ declare module '@polkadot/api-base/types/errors' {
        * Invalid working group budget capacity parameter
        **/
       InvalidWorkingGroupBudgetCapacity: AugmentedError<ApiType>;
+      /**
+       * Reduction Amount Zero
+       **/
+      ReductionAmountZero: AugmentedError<ApiType>;
       /**
        * Require root origin in extrinsics
        **/
diff --git a/src/augment/augment-api-events.ts b/src/augment/augment-api-events.ts
index 26e6f1fd2f0bd3f6036ef5e1c279bc32094648e0..509996b147d4322afd8a2ed0a0ed484a3a884ffb 100644
--- a/src/augment/augment-api-events.ts
+++ b/src/augment/augment-api-events.ts
@@ -8,8 +8,8 @@ import '@polkadot/api-base/types/events';
 import type { ApiTypes, AugmentedEvent } from '@polkadot/api-base/types';
 import type { BTreeMap, BTreeSet, Bytes, Null, Option, Result, U8aFixed, Vec, bool, u128, u32, u64, u8 } from '@polkadot/types-codec';
 import type { ITuple } from '@polkadot/types-codec/types';
-import type { AccountId32, H256, Perbill, Permill } from '@polkadot/types/interfaces/runtime';
-import type { FrameSupportDispatchDispatchInfo, FrameSupportTokensMiscBalanceStatus, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelRecord, PalletContentChannelUpdateParametersRecord, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhasePhase, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineSr25519AppSr25519Public, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmCurve, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTransferPolicy, PalletProjectTokenTransfers, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineVoteKind, PalletReferendumOptionResult, PalletStakingExposure, PalletStakingForcing, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakePolicy, SpConsensusGrandpaAppPublic, SpNposElectionsElectionScore, SpRuntimeDispatchError } from '@polkadot/types/lookup';
+import type { AccountId32, H256, Perbill, Percent, Permill } from '@polkadot/types/interfaces/runtime';
+import type { FrameSupportDispatchDispatchInfo, FrameSupportTokensMiscBalanceStatus, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelRecord, PalletContentChannelUpdateParametersRecord, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhasePhase, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineSr25519AppSr25519Public, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmCurve, PalletProjectTokenTokenConstraints, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTransferPolicy, PalletProjectTokenTransfers, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineVoteKind, PalletReferendumOptionResult, PalletStakingExposure, PalletStakingForcing, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakePolicy, SpConsensusGrandpaAppPublic, SpNposElectionsElectionScore, SpRuntimeDispatchError } from '@polkadot/types/lookup';
 
 export type __AugmentedEvent<ApiType extends ApiTypes> = AugmentedEvent<ApiType>;
 
@@ -39,7 +39,7 @@ declare module '@polkadot/api-base/types/events' {
        * Emits on budget from the working group being spent
        * Params:
        * - Receiver Account Id.
-       * - Balance spent.
+       * - Amount to spend
        * - Rationale.
        **/
       BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -145,6 +145,14 @@ declare module '@polkadot/api-base/types/events' {
        * - Rationale.
        **/
       TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+      /**
+       * Emits on budget from the working group being spent
+       * Params:
+       * - Receiver Account Id.
+       * - Vesting scheduled
+       * - Rationale.
+       **/
+      VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Emits on exiting the worker.
        * Params:
@@ -517,7 +525,7 @@ declare module '@polkadot/api-base/types/events' {
        * Emits on budget from the working group being spent
        * Params:
        * - Receiver Account Id.
-       * - Balance spent.
+       * - Amount to spend
        * - Rationale.
        **/
       BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -623,6 +631,14 @@ declare module '@polkadot/api-base/types/events' {
        * - Rationale.
        **/
       TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+      /**
+       * Emits on budget from the working group being spent
+       * Params:
+       * - Receiver Account Id.
+       * - Vesting scheduled
+       * - Rationale.
+       **/
+      VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Emits on exiting the worker.
        * Params:
@@ -711,6 +727,12 @@ declare module '@polkadot/api-base/types/events' {
        * Candidate remark message
        **/
       CandidateRemarked: AugmentedEvent<ApiType, [u64, Bytes]>;
+      /**
+       * Councilor budget has been decreased
+       * Params:
+       * - Reduction amount
+       **/
+      CouncilBudgetDecreased: AugmentedEvent<ApiType, [u128]>;
       /**
        * Fund the council budget.
        * Params:
@@ -727,6 +749,10 @@ declare module '@polkadot/api-base/types/events' {
        * Councilor reward has been updated.
        **/
       CouncilorRewardUpdated: AugmentedEvent<ApiType, [u128]>;
+      /**
+       * Era payou damping factor set
+       **/
+      EraPayoutDampingFactorSet: AugmentedEvent<ApiType, [Percent]>;
       /**
        * New candidate announced
        **/
@@ -780,7 +806,7 @@ declare module '@polkadot/api-base/types/events' {
        * Emits on budget from the working group being spent
        * Params:
        * - Receiver Account Id.
-       * - Balance spent.
+       * - Amount to spend
        * - Rationale.
        **/
       BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -886,6 +912,14 @@ declare module '@polkadot/api-base/types/events' {
        * - Rationale.
        **/
       TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+      /**
+       * Emits on budget from the working group being spent
+       * Params:
+       * - Receiver Account Id.
+       * - Vesting scheduled
+       * - Rationale.
+       **/
+      VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Emits on exiting the worker.
        * Params:
@@ -1071,7 +1105,7 @@ declare module '@polkadot/api-base/types/events' {
        * Emits on budget from the working group being spent
        * Params:
        * - Receiver Account Id.
-       * - Balance spent.
+       * - Amount to spend
        * - Rationale.
        **/
       BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -1177,6 +1211,14 @@ declare module '@polkadot/api-base/types/events' {
        * - Rationale.
        **/
       TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+      /**
+       * Emits on budget from the working group being spent
+       * Params:
+       * - Receiver Account Id.
+       * - Vesting scheduled
+       * - Rationale.
+       **/
+      VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Emits on exiting the worker.
        * Params:
@@ -1329,7 +1371,7 @@ declare module '@polkadot/api-base/types/events' {
        * Emits on budget from the working group being spent
        * Params:
        * - Receiver Account Id.
-       * - Balance spent.
+       * - Amount to spend
        * - Rationale.
        **/
       BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -1435,6 +1477,14 @@ declare module '@polkadot/api-base/types/events' {
        * - Rationale.
        **/
       TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+      /**
+       * Emits on budget from the working group being spent
+       * Params:
+       * - Receiver Account Id.
+       * - Vesting scheduled
+       * - Rationale.
+       **/
+      VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Emits on exiting the worker.
        * Params:
@@ -1536,7 +1586,7 @@ declare module '@polkadot/api-base/types/events' {
        * Emits on budget from the working group being spent
        * Params:
        * - Receiver Account Id.
-       * - Balance spent.
+       * - Amount to spend
        * - Rationale.
        **/
       BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -1642,6 +1692,14 @@ declare module '@polkadot/api-base/types/events' {
        * - Rationale.
        **/
       TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+      /**
+       * Emits on budget from the working group being spent
+       * Params:
+       * - Receiver Account Id.
+       * - Vesting scheduled
+       * - Rationale.
+       **/
+      VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Emits on exiting the worker.
        * Params:
@@ -1717,7 +1775,7 @@ declare module '@polkadot/api-base/types/events' {
        * Emits on budget from the working group being spent
        * Params:
        * - Receiver Account Id.
-       * - Balance spent.
+       * - Amount to spend
        * - Rationale.
        **/
       BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -1823,6 +1881,14 @@ declare module '@polkadot/api-base/types/events' {
        * - Rationale.
        **/
       TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+      /**
+       * Emits on budget from the working group being spent
+       * Params:
+       * - Receiver Account Id.
+       * - Vesting scheduled
+       * - Rationale.
+       **/
+      VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Emits on exiting the worker.
        * Params:
@@ -1898,7 +1964,7 @@ declare module '@polkadot/api-base/types/events' {
        * Emits on budget from the working group being spent
        * Params:
        * - Receiver Account Id.
-       * - Balance spent.
+       * - Amount to spend
        * - Rationale.
        **/
       BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -2004,6 +2070,14 @@ declare module '@polkadot/api-base/types/events' {
        * - Rationale.
        **/
       TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+      /**
+       * Emits on budget from the working group being spent
+       * Params:
+       * - Receiver Account Id.
+       * - Vesting scheduled
+       * - Rationale.
+       **/
+      VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Emits on exiting the worker.
        * Params:
@@ -2155,6 +2229,12 @@ declare module '@polkadot/api-base/types/events' {
        * - transfer's metadata
        **/
       TokenAmountTransferredByIssuer: AugmentedEvent<ApiType, [u64, u64, PalletProjectTokenTransfers, Bytes]>;
+      /**
+       * Governance parameters updated
+       * Params:
+       * - governance parameters
+       **/
+      TokenConstraintsUpdated: AugmentedEvent<ApiType, [PalletProjectTokenTokenConstraints]>;
       /**
        * Token Deissued
        * Params:
@@ -2762,7 +2842,7 @@ declare module '@polkadot/api-base/types/events' {
        * Emits on budget from the working group being spent
        * Params:
        * - Receiver Account Id.
-       * - Balance spent.
+       * - Amount to spend
        * - Rationale.
        **/
       BudgetSpending: AugmentedEvent<ApiType, [AccountId32, u128, Option<Bytes>]>;
@@ -2868,6 +2948,14 @@ declare module '@polkadot/api-base/types/events' {
        * - Rationale.
        **/
       TerminatedWorker: AugmentedEvent<ApiType, [u64, Option<u128>, Option<Bytes>]>;
+      /**
+       * Emits on budget from the working group being spent
+       * Params:
+       * - Receiver Account Id.
+       * - Vesting scheduled
+       * - Rationale.
+       **/
+      VestedBudgetSpending: AugmentedEvent<ApiType, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Emits on exiting the worker.
        * Params:
diff --git a/src/augment/augment-api-query.ts b/src/augment/augment-api-query.ts
index cea2802dc61cc463d329f9a6742ec6db7197eabe..b9a579c9c4319259d41c784ae6a3ce439db66d05 100644
--- a/src/augment/augment-api-query.ts
+++ b/src/augment/augment-api-query.ts
@@ -425,6 +425,11 @@ declare module '@polkadot/api-base/types/storage' {
        * Councilor reward per block
        **/
       councilorReward: AugmentedQuery<ApiType, () => Observable<u128>, []>;
+      /**
+       * Era payou damping factor: a parameter in [0,1] that can be used to reduce the era
+       * payout without changing the reward curve directly
+       **/
+      eraPayoutDampingFactor: AugmentedQuery<ApiType, () => Observable<Percent>, []>;
       /**
        * The next block in which the budget will be increased.
        **/
diff --git a/src/augment/augment-api-tx.ts b/src/augment/augment-api-tx.ts
index ab25a69a7cd8860a711a190a76961adcc41380fb..743c857c258894e394ecbdf612f00907efe716a9 100644
--- a/src/augment/augment-api-tx.ts
+++ b/src/augment/augment-api-tx.ts
@@ -9,7 +9,7 @@ import type { ApiTypes, AugmentedSubmittable, SubmittableExtrinsic, SubmittableE
 import type { BTreeMap, BTreeSet, Bytes, Compact, Option, U8aFixed, Vec, bool, u128, u16, u32, u64, u8 } from '@polkadot/types-codec';
 import type { AnyNumber, IMethod, ITuple } from '@polkadot/types-codec/types';
 import type { AccountId32, Call, H256, Perbill, Percent, Permill } from '@polkadot/types/interfaces/runtime';
-import type { JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeSessionKeys, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelOwner, PalletContentChannelUpdateParametersRecord, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmParams, PalletProjectTokenMerkleProof, PalletProjectTokenPaymentWithVesting, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSaleParams, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineVoteKind, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingRewardDestination, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynamicBagType, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusGrandpaEquivocationProof, SpConsensusSlotsEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpSessionMembershipProof, SpWeightsWeightV2Weight } from '@polkadot/types/lookup';
+import type { JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeSessionKeys, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelOwner, PalletContentChannelUpdateParametersRecord, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmParams, PalletProjectTokenMerkleProof, PalletProjectTokenPaymentWithVesting, PalletProjectTokenTokenConstraints, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSaleParams, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineVoteKind, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingRewardDestination, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynamicBagType, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusGrandpaEquivocationProof, SpConsensusSlotsEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpSessionMembershipProof, SpWeightsWeightV2Weight } from '@polkadot/types/lookup';
 
 export type __AugmentedSubmittable = AugmentedSubmittable<() => unknown>;
 export type __SubmittableExtrinsic<ApiType extends ApiTypes> = SubmittableExtrinsic<ApiType>;
@@ -177,18 +177,6 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-      /**
-       * Transfers specified amount to any account.
-       * Requires leader origin.
-       * 
-       * # <weight>
-       * 
-       * ## Weight
-       * `O (1)`
-       * - DB:
-       * - O(1) doesn't depend on the state or parameters
-       * # </weight>
-       **/
       spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
       /**
        * Terminate the active worker by the lead.
@@ -240,6 +228,19 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+      /**
+       * Transfers specified amount to any account.
+       * Requires leader origin.
+       * 
+       * # <weight>
+       * 
+       * ## Weight
+       * `O (1)`
+       * - DB:
+       * - O(1) doesn't depend on the state or parameters
+       * # </weight>
+       **/
+      vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | { locked?: any; perBlock?: any; startingBlock?: any } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Withdraw the worker application. Can be done by the worker only.
        * 
@@ -1508,18 +1509,6 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-      /**
-       * Transfers specified amount to any account.
-       * Requires leader origin.
-       * 
-       * # <weight>
-       * 
-       * ## Weight
-       * `O (1)`
-       * - DB:
-       * - O(1) doesn't depend on the state or parameters
-       * # </weight>
-       **/
       spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
       /**
        * Terminate the active worker by the lead.
@@ -1571,6 +1560,19 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+      /**
+       * Transfers specified amount to any account.
+       * Requires leader origin.
+       * 
+       * # <weight>
+       * 
+       * ## Weight
+       * `O (1)`
+       * - DB:
+       * - O(1) doesn't depend on the state or parameters
+       * # </weight>
+       **/
+      vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | { locked?: any; perBlock?: any; startingBlock?: any } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Withdraw the worker application. Can be done by the worker only.
        * 
@@ -1634,6 +1636,18 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       councilorRemark: AugmentedSubmittable<(councilorId: u64 | AnyNumber | Uint8Array, msg: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, Bytes]>;
+      /**
+       * Decrease the council total budget
+       * 
+       * # <weight>
+       * 
+       * ## weight
+       * `O (1)`
+       * - db:
+       * - `O(1)` doesn't depend on the state or parameters
+       * # </weight>
+       **/
+      decreaseCouncilBudget: AugmentedSubmittable<(reductionAmount: u128 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [u128]>;
       /**
        * Fund the council budget by a member.
        * <weight>
@@ -1731,6 +1745,18 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       setCouncilorReward: AugmentedSubmittable<(councilorReward: u128 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [u128]>;
+      /**
+       * Set the era payout damping factor
+       * 
+       * # <weight>
+       * 
+       * ## weight
+       * `O (1)`
+       * - db:
+       * - `O(1)` doesn't depend on the state or parameters
+       * # </weight>
+       **/
+      setEraPayoutDampingFactor: AugmentedSubmittable<(newParameter: Percent | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [Percent]>;
       /**
        * Withdraw candidacy and release candidacy stake.
        * 
@@ -1904,18 +1930,6 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-      /**
-       * Transfers specified amount to any account.
-       * Requires leader origin.
-       * 
-       * # <weight>
-       * 
-       * ## Weight
-       * `O (1)`
-       * - DB:
-       * - O(1) doesn't depend on the state or parameters
-       * # </weight>
-       **/
       spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
       /**
        * Terminate the active worker by the lead.
@@ -1967,6 +1981,19 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+      /**
+       * Transfers specified amount to any account.
+       * Requires leader origin.
+       * 
+       * # <weight>
+       * 
+       * ## Weight
+       * `O (1)`
+       * - DB:
+       * - O(1) doesn't depend on the state or parameters
+       * # </weight>
+       **/
+      vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | { locked?: any; perBlock?: any; startingBlock?: any } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Withdraw the worker application. Can be done by the worker only.
        * 
@@ -2435,18 +2462,6 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-      /**
-       * Transfers specified amount to any account.
-       * Requires leader origin.
-       * 
-       * # <weight>
-       * 
-       * ## Weight
-       * `O (1)`
-       * - DB:
-       * - O(1) doesn't depend on the state or parameters
-       * # </weight>
-       **/
       spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
       /**
        * Terminate the active worker by the lead.
@@ -2498,6 +2513,19 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+      /**
+       * Transfers specified amount to any account.
+       * Requires leader origin.
+       * 
+       * # <weight>
+       * 
+       * ## Weight
+       * `O (1)`
+       * - DB:
+       * - O(1) doesn't depend on the state or parameters
+       * # </weight>
+       **/
+      vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | { locked?: any; perBlock?: any; startingBlock?: any } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Withdraw the worker application. Can be done by the worker only.
        * 
@@ -2992,18 +3020,6 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-      /**
-       * Transfers specified amount to any account.
-       * Requires leader origin.
-       * 
-       * # <weight>
-       * 
-       * ## Weight
-       * `O (1)`
-       * - DB:
-       * - O(1) doesn't depend on the state or parameters
-       * # </weight>
-       **/
       spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
       /**
        * Terminate the active worker by the lead.
@@ -3055,6 +3071,19 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+      /**
+       * Transfers specified amount to any account.
+       * Requires leader origin.
+       * 
+       * # <weight>
+       * 
+       * ## Weight
+       * `O (1)`
+       * - DB:
+       * - O(1) doesn't depend on the state or parameters
+       * # </weight>
+       **/
+      vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | { locked?: any; perBlock?: any; startingBlock?: any } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Withdraw the worker application. Can be done by the worker only.
        * 
@@ -3357,18 +3386,6 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-      /**
-       * Transfers specified amount to any account.
-       * Requires leader origin.
-       * 
-       * # <weight>
-       * 
-       * ## Weight
-       * `O (1)`
-       * - DB:
-       * - O(1) doesn't depend on the state or parameters
-       * # </weight>
-       **/
       spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
       /**
        * Terminate the active worker by the lead.
@@ -3420,6 +3437,19 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+      /**
+       * Transfers specified amount to any account.
+       * Requires leader origin.
+       * 
+       * # <weight>
+       * 
+       * ## Weight
+       * `O (1)`
+       * - DB:
+       * - O(1) doesn't depend on the state or parameters
+       * # </weight>
+       **/
+      vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | { locked?: any; perBlock?: any; startingBlock?: any } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Withdraw the worker application. Can be done by the worker only.
        * 
@@ -3606,18 +3636,6 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-      /**
-       * Transfers specified amount to any account.
-       * Requires leader origin.
-       * 
-       * # <weight>
-       * 
-       * ## Weight
-       * `O (1)`
-       * - DB:
-       * - O(1) doesn't depend on the state or parameters
-       * # </weight>
-       **/
       spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
       /**
        * Terminate the active worker by the lead.
@@ -3669,6 +3687,19 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+      /**
+       * Transfers specified amount to any account.
+       * Requires leader origin.
+       * 
+       * # <weight>
+       * 
+       * ## Weight
+       * `O (1)`
+       * - DB:
+       * - O(1) doesn't depend on the state or parameters
+       * # </weight>
+       **/
+      vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | { locked?: any; perBlock?: any; startingBlock?: any } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Withdraw the worker application. Can be done by the worker only.
        * 
@@ -3855,18 +3886,6 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-      /**
-       * Transfers specified amount to any account.
-       * Requires leader origin.
-       * 
-       * # <weight>
-       * 
-       * ## Weight
-       * `O (1)`
-       * - DB:
-       * - O(1) doesn't depend on the state or parameters
-       * # </weight>
-       **/
       spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
       /**
        * Terminate the active worker by the lead.
@@ -3918,6 +3937,19 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+      /**
+       * Transfers specified amount to any account.
+       * Requires leader origin.
+       * 
+       * # <weight>
+       * 
+       * ## Weight
+       * `O (1)`
+       * - DB:
+       * - O(1) doesn't depend on the state or parameters
+       * # </weight>
+       **/
+      vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | { locked?: any; perBlock?: any; startingBlock?: any } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Withdraw the worker application. Can be done by the worker only.
        * 
@@ -4210,6 +4242,19 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       transfer: AugmentedSubmittable<(srcMemberId: u64 | AnyNumber | Uint8Array, tokenId: u64 | AnyNumber | Uint8Array, outputs: Vec<ITuple<[u64, u128]>> | ([u64 | AnyNumber | Uint8Array, u128 | AnyNumber | Uint8Array])[], metadata: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, u64, Vec<ITuple<[u64, u128]>>, Bytes]>;
+      /**
+       * Allow Governance to Set constraints
+       * Preconditions:
+       * - origin is signed by `root`
+       * PostConditions:
+       * - governance parameters storage value set to the provided values
+       * <weight>
+       * 
+       * ## Weight
+       * `O (1)`
+       * # </weight>
+       **/
+      updateTokenConstraints: AugmentedSubmittable<(parameters: PalletProjectTokenTokenConstraints | { maxYearlyRate?: any; minAmmSlope?: any; minSaleDuration?: any; minRevenueSplitDuration?: any; minRevenueSplitTimeToStart?: any; salePlatformFee?: any; ammBuyTxFees?: any; ammSellTxFees?: any; bloatBond?: any } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletProjectTokenTokenConstraints]>;
     };
     proposalsCodex: {
       /**
@@ -4227,7 +4272,7 @@ declare module '@polkadot/api-base/types/submittable' {
        * - O(1) doesn't depend on the state or parameters
        * # </weight>
        **/
-      createProposal: AugmentedSubmittable<(generalProposalParameters: PalletProposalsCodexGeneralProposalParams | { memberId?: any; title?: any; description?: any; stakingAccountId?: any; exactExecutionBlock?: any } | string | Uint8Array, proposalDetails: PalletProposalsCodexProposalDetails | { Signal: any } | { RuntimeUpgrade: any } | { FundingRequest: any } | { SetMaxValidatorCount: any } | { CreateWorkingGroupLeadOpening: any } | { FillWorkingGroupLeadOpening: any } | { UpdateWorkingGroupBudget: any } | { DecreaseWorkingGroupLeadStake: any } | { SlashWorkingGroupLead: any } | { SetWorkingGroupLeadReward: any } | { TerminateWorkingGroupLead: any } | { AmendConstitution: any } | { CancelWorkingGroupLeadOpening: any } | { SetMembershipPrice: any } | { SetCouncilBudgetIncrement: any } | { SetCouncilorReward: any } | { SetInitialInvitationBalance: any } | { SetInitialInvitationCount: any } | { SetMembershipLeadInvitationQuota: any } | { SetReferralCut: any } | { VetoProposal: any } | { UpdateGlobalNftLimit: any } | { UpdateChannelPayouts: any } | { SetPalletFozenStatus: any } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails]>;
+      createProposal: AugmentedSubmittable<(generalProposalParameters: PalletProposalsCodexGeneralProposalParams | { memberId?: any; title?: any; description?: any; stakingAccountId?: any; exactExecutionBlock?: any } | string | Uint8Array, proposalDetails: PalletProposalsCodexProposalDetails | { Signal: any } | { RuntimeUpgrade: any } | { FundingRequest: any } | { SetMaxValidatorCount: any } | { CreateWorkingGroupLeadOpening: any } | { FillWorkingGroupLeadOpening: any } | { UpdateWorkingGroupBudget: any } | { DecreaseWorkingGroupLeadStake: any } | { SlashWorkingGroupLead: any } | { SetWorkingGroupLeadReward: any } | { TerminateWorkingGroupLead: any } | { AmendConstitution: any } | { CancelWorkingGroupLeadOpening: any } | { SetMembershipPrice: any } | { SetCouncilBudgetIncrement: any } | { SetCouncilorReward: any } | { SetInitialInvitationBalance: any } | { SetInitialInvitationCount: any } | { SetMembershipLeadInvitationQuota: any } | { SetReferralCut: any } | { VetoProposal: any } | { UpdateGlobalNftLimit: any } | { UpdateChannelPayouts: any } | { SetPalletFozenStatus: any } | { UpdateTokenPalletTokenConstraints: any } | { SetEraPayoutDampingFactor: any } | { DecreaseCouncilBudget: any } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails]>;
     };
     proposalsDiscussion: {
       /**
@@ -5327,18 +5372,6 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       slashStake: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, penalty: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [u64, u128, Option<Bytes>]>;
-      /**
-       * Transfers specified amount to any account.
-       * Requires leader origin.
-       * 
-       * # <weight>
-       * 
-       * ## Weight
-       * `O (1)`
-       * - DB:
-       * - O(1) doesn't depend on the state or parameters
-       * # </weight>
-       **/
       spendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, u128, Option<Bytes>]>;
       /**
        * Terminate the active worker by the lead.
@@ -5390,6 +5423,19 @@ declare module '@polkadot/api-base/types/submittable' {
        * # </weight>
        **/
       updateRoleAccount: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, newRoleAccountId: AccountId32 | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32]>;
+      /**
+       * Transfers specified amount to any account.
+       * Requires leader origin.
+       * 
+       * # <weight>
+       * 
+       * ## Weight
+       * `O (1)`
+       * - DB:
+       * - O(1) doesn't depend on the state or parameters
+       * # </weight>
+       **/
+      vestedSpendFromBudget: AugmentedSubmittable<(accountId: AccountId32 | string | Uint8Array, vestingSchedule: PalletVestingVestingInfo | { locked?: any; perBlock?: any; startingBlock?: any } | string | Uint8Array, rationale: Option<Bytes> | null | Uint8Array | Bytes | string) => SubmittableExtrinsic<ApiType>, [AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
       /**
        * Withdraw the worker application. Can be done by the worker only.
        * 
diff --git a/src/augment/lookup.ts b/src/augment/lookup.ts
index 143f41ba8e42a170842715bcfaaf4ffaa6e07954..fa0c51bd878d5a81d73b0be83f5e323d21557b47 100644
--- a/src/augment/lookup.ts
+++ b/src/augment/lookup.ts
@@ -544,14 +544,16 @@ export default {
       BudgetRefillPlanned: 'u32',
       BudgetIncrementUpdated: 'u128',
       CouncilorRewardUpdated: 'u128',
+      CouncilBudgetDecreased: 'u128',
       RequestFunded: '(AccountId32,u128)',
       CouncilBudgetFunded: '(u64,u128,Bytes)',
       CouncilorRemarked: '(u64,Bytes)',
-      CandidateRemarked: '(u64,Bytes)'
+      CandidateRemarked: '(u64,Bytes)',
+      EraPayoutDampingFactorSet: 'Percent'
     }
   },
   /**
-   * Lookup70: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
+   * Lookup71: pallet_referendum::RawEvent<BlockNumber, Balance, primitive_types::H256, sp_core::crypto::AccountId32, VotePower, MemberId, pallet_referendum::Instance1>
    **/
   PalletReferendumRawEvent: {
     _enum: {
@@ -566,18 +568,18 @@ export default {
     }
   },
   /**
-   * Lookup71: pallet_referendum::Instance1
+   * Lookup72: pallet_referendum::Instance1
    **/
   PalletReferendumInstance1: 'Null',
   /**
-   * Lookup73: pallet_referendum::OptionResult<MemberId, VotePower>
+   * Lookup74: pallet_referendum::OptionResult<MemberId, VotePower>
    **/
   PalletReferendumOptionResult: {
     optionId: 'u64',
     votePower: 'u128'
   },
   /**
-   * Lookup74: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
+   * Lookup75: pallet_membership::RawEvent<MemberId, Balance, sp_core::crypto::AccountId32, pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>, ActorId, pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>, pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>, pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletMembershipRawEvent: {
     _enum: {
@@ -601,7 +603,7 @@ export default {
     }
   },
   /**
-   * Lookup75: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+   * Lookup76: pallet_membership::BuyMembershipParameters<sp_core::crypto::AccountId32, MemberId>
    **/
   PalletMembershipBuyMembershipParameters: {
     rootAccount: 'AccountId32',
@@ -611,7 +613,7 @@ export default {
     referrerId: 'Option<u64>'
   },
   /**
-   * Lookup78: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
+   * Lookup79: pallet_membership::InviteMembershipParameters<sp_core::crypto::AccountId32, MemberId>
    **/
   PalletMembershipInviteMembershipParameters: {
     invitingMemberId: 'u64',
@@ -621,7 +623,7 @@ export default {
     metadata: 'Bytes'
   },
   /**
-   * Lookup79: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
+   * Lookup80: pallet_membership::CreateMemberParameters<sp_core::crypto::AccountId32>
    **/
   PalletMembershipCreateMemberParameters: {
     rootAccount: 'AccountId32',
@@ -631,7 +633,7 @@ export default {
     isFoundingMember: 'bool'
   },
   /**
-   * Lookup80: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
+   * Lookup81: pallet_membership::GiftMembershipParameters<sp_core::crypto::AccountId32, Balance>
    **/
   PalletMembershipGiftMembershipParameters: {
     rootAccount: 'AccountId32',
@@ -644,7 +646,7 @@ export default {
     applyRootAccountInvitationLock: 'Option<u128>'
   },
   /**
-   * Lookup84: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
+   * Lookup85: pallet_forum::RawEvent<CategoryId, ModeratorId, ThreadId, PostId, primitive_types::H256, ForumUserId, pallet_forum::PrivilegedActor<T>, pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>>
    **/
   PalletForumRawEvent: {
     _enum: {
@@ -668,7 +670,7 @@ export default {
     }
   },
   /**
-   * Lookup85: pallet_forum::PrivilegedActor<T>
+   * Lookup86: pallet_forum::PrivilegedActor<T>
    **/
   PalletForumPrivilegedActor: {
     _enum: {
@@ -677,7 +679,7 @@ export default {
     }
   },
   /**
-   * Lookup86: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
+   * Lookup87: pallet_forum::ExtendedPostIdObject<CategoryId, ThreadId, PostId>
    **/
   PalletForumExtendedPostIdObject: {
     categoryId: 'u64',
@@ -685,7 +687,7 @@ export default {
     postId: 'u64'
   },
   /**
-   * Lookup91: pallet_constitution::RawEvent<primitive_types::H256>
+   * Lookup92: pallet_constitution::RawEvent<primitive_types::H256>
    **/
   PalletConstitutionRawEvent: {
     _enum: {
@@ -693,7 +695,7 @@ export default {
     }
   },
   /**
-   * Lookup92: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
+   * Lookup93: pallet_bounty::RawEvent<BountyId, EntryId, Balance, MemberId, sp_core::crypto::AccountId32, pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>, BTreeMap<K, pallet_bounty::OracleWorkEntryJudgment<Balance>>>
    **/
   PalletBountyRawEvent: {
     _enum: {
@@ -723,7 +725,7 @@ export default {
     }
   },
   /**
-   * Lookup93: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
+   * Lookup94: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, BTreeSet<T>>
    **/
   PalletBountyBountyParametersBTreeSet: {
     oracle: 'PalletBountyBountyActor',
@@ -735,7 +737,7 @@ export default {
     fundingType: 'PalletBountyFundingType'
   },
   /**
-   * Lookup94: pallet_bounty::BountyActor<MemberId>
+   * Lookup95: pallet_bounty::BountyActor<MemberId>
    **/
   PalletBountyBountyActor: {
     _enum: {
@@ -744,7 +746,7 @@ export default {
     }
   },
   /**
-   * Lookup95: pallet_bounty::AssuranceContractType<BTreeSet<T>>
+   * Lookup96: pallet_bounty::AssuranceContractType<BTreeSet<T>>
    **/
   PalletBountyAssuranceContractTypeBTreeSet: {
     _enum: {
@@ -753,7 +755,7 @@ export default {
     }
   },
   /**
-   * Lookup96: pallet_bounty::FundingType<BlockNumber, Balance>
+   * Lookup97: pallet_bounty::FundingType<BlockNumber, Balance>
    **/
   PalletBountyFundingType: {
     _enum: {
@@ -767,7 +769,7 @@ export default {
     }
   },
   /**
-   * Lookup98: pallet_bounty::OracleWorkEntryJudgment<Balance>
+   * Lookup99: pallet_bounty::OracleWorkEntryJudgment<Balance>
    **/
   PalletBountyOracleWorkEntryJudgment: {
     _enum: {
@@ -781,7 +783,7 @@ export default {
     }
   },
   /**
-   * Lookup101: pallet_joystream_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
+   * Lookup102: pallet_joystream_utility::RawEvent<Balance, sp_core::crypto::AccountId32>
    **/
   PalletJoystreamUtilityRawEvent: {
     _enum: {
@@ -792,19 +794,19 @@ export default {
     }
   },
   /**
-   * Lookup102: pallet_common::working_group::iterable_enums::WorkingGroup
+   * Lookup103: pallet_common::working_group::iterable_enums::WorkingGroup
    **/
   PalletCommonWorkingGroupIterableEnumsWorkingGroup: {
     _enum: ['Forum', 'Storage', 'Content', 'OperationsAlpha', 'App', 'Distribution', 'OperationsBeta', 'OperationsGamma', 'Membership']
   },
   /**
-   * Lookup103: pallet_common::BalanceKind
+   * Lookup104: pallet_common::BalanceKind
    **/
   PalletCommonBalanceKind: {
     _enum: ['Positive', 'Negative']
   },
   /**
-   * Lookup104: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
+   * Lookup105: pallet_content::RawEvent<pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>, MemberId, CuratorGroupId, CuratorId, VideoId, ChannelId, pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>, DataObjectId, pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, OpenAuctionId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance, pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>, pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>, pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>, ChannelPrivilegeLevel, BTreeMap<K, BTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction>>, pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>, pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>, sp_core::crypto::AccountId32, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, TokenId, pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>>
    **/
   PalletContentRawEvent: {
     _enum: {
@@ -864,7 +866,7 @@ export default {
     }
   },
   /**
-   * Lookup105: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
+   * Lookup106: pallet_content::permissions::ContentActor<CuratorGroupId, CuratorId, MemberId>
    **/
   PalletContentPermissionsContentActor: {
     _enum: {
@@ -874,7 +876,7 @@ export default {
     }
   },
   /**
-   * Lookup106: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+   * Lookup107: pallet_content::types::ChannelRecord<MemberId, CuratorGroupId, Balance, ChannelPrivilegeLevel, BlockNumber, TokenId, TransferId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletContentChannelRecord: {
     owner: 'PalletContentChannelOwner',
@@ -893,26 +895,26 @@ export default {
     channelStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
   },
   /**
-   * Lookup110: pallet_content::types::iterable_enums::ChannelActionPermission
+   * Lookup111: pallet_content::types::iterable_enums::ChannelActionPermission
    **/
   PalletContentIterableEnumsChannelActionPermission: {
     _enum: ['UpdateChannelMetadata', 'ManageNonVideoChannelAssets', 'ManageChannelCollaborators', 'UpdateVideoMetadata', 'AddVideo', 'ManageVideoAssets', 'DeleteChannel', 'DeleteVideo', 'ManageVideoNfts', 'AgentRemark', 'TransferChannel', 'ClaimChannelReward', 'WithdrawFromChannelBalance', 'IssueCreatorToken', 'ClaimCreatorTokenPatronage', 'InitAndManageCreatorTokenSale', 'CreatorTokenIssuerTransfer', 'MakeCreatorTokenPermissionless', 'ReduceCreatorTokenPatronageRate', 'ManageRevenueSplits', 'DeissueCreatorToken', 'AmmControl']
   },
   /**
-   * Lookup117: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
+   * Lookup118: pallet_content::permissions::curator_group::iterable_enums::PausableChannelFeature
    **/
   PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature: {
     _enum: ['ChannelFundsTransfer', 'CreatorCashout', 'VideoNftIssuance', 'VideoCreation', 'VideoUpdate', 'ChannelUpdate', 'CreatorTokenIssuance']
   },
   /**
-   * Lookup120: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
+   * Lookup121: pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>
    **/
   PalletCommonBloatBondRepayableBloatBond: {
     repaymentRestrictedTo: 'Option<AccountId32>',
     amount: 'u128'
   },
   /**
-   * Lookup121: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
+   * Lookup122: pallet_content::types::ChannelOwner<MemberId, CuratorGroupId>
    **/
   PalletContentChannelOwner: {
     _enum: {
@@ -921,7 +923,7 @@ export default {
     }
   },
   /**
-   * Lookup122: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+   * Lookup123: pallet_content::types::ChannelTransferStatus<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
    **/
   PalletContentChannelTransferStatus: {
     _enum: {
@@ -930,14 +932,14 @@ export default {
     }
   },
   /**
-   * Lookup123: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
+   * Lookup124: pallet_content::types::PendingTransfer<MemberId, CuratorGroupId, Balance, TransferId, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>>
    **/
   PalletContentPendingTransfer: {
     newOwner: 'PalletContentChannelOwner',
     transferParams: 'PalletContentTransferCommitmentParametersBoundedBTreeMap'
   },
   /**
-   * Lookup124: pallet_content::types::TransferCommitmentParameters<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
+   * Lookup125: pallet_content::types::TransferCommitmentParameters<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, Balance, TransferId>
    **/
   PalletContentTransferCommitmentParametersBoundedBTreeMap: {
     newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -945,21 +947,21 @@ export default {
     transferId: 'u64'
   },
   /**
-   * Lookup125: pallet_content::types::LimitPerPeriod<BlockNumber>
+   * Lookup126: pallet_content::types::LimitPerPeriod<BlockNumber>
    **/
   PalletContentLimitPerPeriod: {
     limit: 'u64',
     blockNumberPeriod: 'u32'
   },
   /**
-   * Lookup126: pallet_content::types::NftCounter<BlockNumber>
+   * Lookup127: pallet_content::types::NftCounter<BlockNumber>
    **/
   PalletContentNftCounter: {
     counter: 'u64',
     lastUpdated: 'u32'
   },
   /**
-   * Lookup127: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
+   * Lookup128: pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>
    **/
   PalletContentNftTypesEnglishAuctionParamsRecord: {
     startingPrice: 'u128',
@@ -971,7 +973,7 @@ export default {
     minBidStep: 'u128'
   },
   /**
-   * Lookup129: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
+   * Lookup130: pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>
    **/
   PalletContentNftTypesOpenAuctionParamsRecord: {
     startingPrice: 'u128',
@@ -981,7 +983,7 @@ export default {
     bidLockDuration: 'u32'
   },
   /**
-   * Lookup130: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
+   * Lookup131: pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>
    **/
   PalletContentNftTypesNftIssuanceParametersRecord: {
     royalty: 'Option<Perbill>',
@@ -990,7 +992,7 @@ export default {
     initTransactionalStatus: 'PalletContentNftTypesInitTransactionalStatusRecord'
   },
   /**
-   * Lookup131: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
+   * Lookup132: pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>
    **/
   PalletContentNftTypesInitTransactionalStatusRecord: {
     _enum: {
@@ -1002,7 +1004,7 @@ export default {
     }
   },
   /**
-   * Lookup133: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
+   * Lookup134: pallet_content::types::ChannelCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, MemberId, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, Balance>
    **/
   PalletContentChannelCreationParametersRecord: {
     assets: 'Option<PalletContentStorageAssetsRecord>',
@@ -1014,14 +1016,14 @@ export default {
     expectedDataObjectStateBloatBond: 'u128'
   },
   /**
-   * Lookup134: pallet_content::types::StorageAssetsRecord<Balance>
+   * Lookup135: pallet_content::types::StorageAssetsRecord<Balance>
    **/
   PalletContentStorageAssetsRecord: {
     objectCreationList: 'Vec<PalletStorageDataObjectCreationParameters>',
     expectedDataSizeFee: 'u128'
   },
   /**
-   * Lookup136: pallet_storage::DataObjectCreationParameters
+   * Lookup137: pallet_storage::DataObjectCreationParameters
    **/
   PalletStorageDataObjectCreationParameters: {
     _alias: {
@@ -1031,14 +1033,14 @@ export default {
     ipfsContentId: 'Bytes'
   },
   /**
-   * Lookup137: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
+   * Lookup138: pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>
    **/
   PalletStorageDistributionBucketIdRecord: {
     distributionBucketFamilyId: 'u64',
     distributionBucketIndex: 'u64'
   },
   /**
-   * Lookup144: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
+   * Lookup145: pallet_content::types::ChannelUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, MemberId, Balance>
    **/
   PalletContentChannelUpdateParametersRecord: {
     assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',
@@ -1049,7 +1051,7 @@ export default {
     storageBucketsNumWitness: 'Option<u32>'
   },
   /**
-   * Lookup146: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+   * Lookup147: pallet_content::types::VideoCreationParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
    **/
   PalletContentVideoCreationParametersRecord: {
     assets: 'Option<PalletContentStorageAssetsRecord>',
@@ -1060,7 +1062,7 @@ export default {
     storageBucketsNumWitness: 'u32'
   },
   /**
-   * Lookup148: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
+   * Lookup149: pallet_content::types::VideoUpdateParametersRecord<pallet_content::types::StorageAssetsRecord<Balance>, DataObjectId, pallet_content::nft::types::NftIssuanceParametersRecord<MemberId, pallet_content::nft::types::InitTransactionalStatusRecord<pallet_content::nft::types::EnglishAuctionParamsRecord<BlockNumber, Balance, MemberId>, pallet_content::nft::types::OpenAuctionParamsRecord<BlockNumber, Balance, MemberId>, MemberId, Balance>>, Balance>
    **/
   PalletContentVideoUpdateParametersRecord: {
     assetsToUpload: 'Option<PalletContentStorageAssetsRecord>',
@@ -1071,7 +1073,7 @@ export default {
     storageBucketsNumWitness: 'Option<u32>'
   },
   /**
-   * Lookup151: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
+   * Lookup152: pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction
    **/
   PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction: {
     _enum: {
@@ -1084,7 +1086,7 @@ export default {
     }
   },
   /**
-   * Lookup155: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
+   * Lookup156: pallet_content::types::TransferCommitmentParameters<BTreeMap<K, BTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission>>, Balance, TransferId>
    **/
   PalletContentTransferCommitmentParametersBTreeMap: {
     newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -1092,7 +1094,7 @@ export default {
     transferId: 'u64'
   },
   /**
-   * Lookup156: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>
+   * Lookup157: pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>
    **/
   PalletContentUpdateChannelPayoutsParametersRecord: {
     commitment: 'Option<H256>',
@@ -1102,7 +1104,7 @@ export default {
     channelCashoutsEnabled: 'Option<bool>'
   },
   /**
-   * Lookup157: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>
+   * Lookup158: pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>
    **/
   PalletContentChannelPayoutsPayloadParametersRecord: {
     objectCreationParams: 'PalletStorageDataObjectCreationParameters',
@@ -1110,7 +1112,7 @@ export default {
     expectedDataObjectStateBloatBond: 'u128'
   },
   /**
-   * Lookup161: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
+   * Lookup162: pallet_content::types::ChannelFundsDestination<sp_core::crypto::AccountId32>
    **/
   PalletContentChannelFundsDestination: {
     _enum: {
@@ -1119,13 +1121,13 @@ export default {
     }
   },
   /**
-   * Lookup162: pallet_content::types::NftLimitPeriod
+   * Lookup163: pallet_content::types::NftLimitPeriod
    **/
   PalletContentNftLimitPeriod: {
     _enum: ['Daily', 'Weekly']
   },
   /**
-   * Lookup163: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
+   * Lookup164: pallet_storage::RawEvent<StorageBucketId, WorkerId, DataObjectId, pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>, pallet_storage::BagIdType<MemberId, ChannelId>, pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, DistributionBucketFamilyId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, DistributionBucketIndex, pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>>
    **/
   PalletStorageRawEvent: {
     _enum: {
@@ -1174,7 +1176,7 @@ export default {
     }
   },
   /**
-   * Lookup164: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
+   * Lookup165: pallet_storage::UploadParametersRecord<pallet_storage::BagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance>
    **/
   PalletStorageUploadParametersRecord: {
     bagId: 'PalletStorageBagIdType',
@@ -1184,7 +1186,7 @@ export default {
     expectedDataObjectStateBloatBond: 'u128'
   },
   /**
-   * Lookup165: pallet_storage::BagIdType<MemberId, ChannelId>
+   * Lookup166: pallet_storage::BagIdType<MemberId, ChannelId>
    **/
   PalletStorageBagIdType: {
     _enum: {
@@ -1193,7 +1195,7 @@ export default {
     }
   },
   /**
-   * Lookup166: pallet_storage::StaticBagId
+   * Lookup167: pallet_storage::StaticBagId
    **/
   PalletStorageStaticBagId: {
     _enum: {
@@ -1202,7 +1204,7 @@ export default {
     }
   },
   /**
-   * Lookup167: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
+   * Lookup168: pallet_storage::DynamicBagIdType<MemberId, ChannelId>
    **/
   PalletStorageDynamicBagIdType: {
     _enum: {
@@ -1211,7 +1213,7 @@ export default {
     }
   },
   /**
-   * Lookup168: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
+   * Lookup169: pallet_storage::DynBagCreationParametersRecord<pallet_storage::DynamicBagIdType<MemberId, ChannelId>, sp_core::crypto::AccountId32, Balance, StorageBucketId, pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>>
    **/
   PalletStorageDynBagCreationParametersRecord: {
     bagId: 'PalletStorageDynamicBagIdType',
@@ -1223,7 +1225,7 @@ export default {
     distributionBuckets: 'BTreeSet<PalletStorageDistributionBucketIdRecord>'
   },
   /**
-   * Lookup171: pallet_storage::Voucher
+   * Lookup172: pallet_storage::Voucher
    **/
   PalletStorageVoucher: {
     sizeLimit: 'u64',
@@ -1232,13 +1234,13 @@ export default {
     objectsUsed: 'u64'
   },
   /**
-   * Lookup172: pallet_storage::DynamicBagType
+   * Lookup173: pallet_storage::DynamicBagType
    **/
   PalletStorageDynamicBagType: {
     _enum: ['Member', 'Channel']
   },
   /**
-   * Lookup176: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::AmmCurve<Balance>>
+   * Lookup177: pallet_project_token::events::RawEvent<Balance, JoyBalance, TokenId, sp_core::crypto::AccountId32, MemberId, BlockNumber, pallet_project_token::types::TransferPolicy<primitive_types::H256>, pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>, pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::AmmCurve<Balance>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>
    **/
   PalletProjectTokenEventsRawEvent: {
     _enum: {
@@ -1264,11 +1266,12 @@ export default {
       TokensBoughtOnAmm: '(u64,u64,u128,u128)',
       TokensSoldOnAmm: '(u64,u64,u128,u128)',
       AmmDeactivated: '(u64,u64,u128)',
-      FrozenStatusUpdated: 'bool'
+      FrozenStatusUpdated: 'bool',
+      TokenConstraintsUpdated: 'PalletProjectTokenTokenConstraints'
     }
   },
   /**
-   * Lookup177: pallet_project_token::types::TransferPolicy<primitive_types::H256>
+   * Lookup178: pallet_project_token::types::TransferPolicy<primitive_types::H256>
    **/
   PalletProjectTokenTransferPolicy: {
     _enum: {
@@ -1277,7 +1280,7 @@ export default {
     }
   },
   /**
-   * Lookup178: pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
+   * Lookup179: pallet_project_token::types::TokenIssuanceParameters<pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>, pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>, MemberId>
    **/
   PalletProjectTokenTokenIssuanceParameters: {
     initialAllocation: 'BTreeMap<u64, PalletProjectTokenTokenAllocation>',
@@ -1287,14 +1290,14 @@ export default {
     metadata: 'Bytes'
   },
   /**
-   * Lookup179: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+   * Lookup180: pallet_project_token::types::TokenAllocation<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
    **/
   PalletProjectTokenTokenAllocation: {
     amount: 'u128',
     vestingScheduleParams: 'Option<PalletProjectTokenVestingScheduleParams>'
   },
   /**
-   * Lookup180: pallet_project_token::types::VestingScheduleParams<BlockNumber>
+   * Lookup181: pallet_project_token::types::VestingScheduleParams<BlockNumber>
    **/
   PalletProjectTokenVestingScheduleParams: {
     linearVestingDuration: 'u32',
@@ -1302,7 +1305,7 @@ export default {
     cliffAmountPercentage: 'Permill'
   },
   /**
-   * Lookup183: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
+   * Lookup184: pallet_project_token::types::TransferPolicyParams<pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>>
    **/
   PalletProjectTokenTransferPolicyParams: {
     _enum: {
@@ -1311,14 +1314,14 @@ export default {
     }
   },
   /**
-   * Lookup184: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
+   * Lookup185: pallet_project_token::types::WhitelistParams<primitive_types::H256, pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>>
    **/
   PalletProjectTokenWhitelistParams: {
     commitment: 'H256',
     payload: 'Option<PalletProjectTokenSingleDataObjectUploadParams>'
   },
   /**
-   * Lookup185: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
+   * Lookup186: pallet_project_token::types::SingleDataObjectUploadParams<JoyBalance>
    **/
   PalletProjectTokenSingleDataObjectUploadParams: {
     objectCreationParams: 'PalletStorageDataObjectCreationParameters',
@@ -1326,11 +1329,11 @@ export default {
     expectedDataObjectStateBloatBond: 'u128'
   },
   /**
-   * Lookup191: pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>
+   * Lookup192: pallet_project_token::types::Transfers<pallet_project_token::types::Validated<MemberId>, pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>>
    **/
   PalletProjectTokenTransfers: 'BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment>',
   /**
-   * Lookup192: pallet_project_token::types::Validated<MemberId>
+   * Lookup193: pallet_project_token::types::Validated<MemberId>
    **/
   PalletProjectTokenValidated: {
     _enum: {
@@ -1339,21 +1342,21 @@ export default {
     }
   },
   /**
-   * Lookup193: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
+   * Lookup194: pallet_project_token::types::ValidatedPayment<pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>>
    **/
   PalletProjectTokenValidatedPayment: {
     payment: 'PalletProjectTokenPaymentWithVesting',
     vestingCleanupCandidate: 'Option<PalletProjectTokenVestingSource>'
   },
   /**
-   * Lookup194: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+   * Lookup195: pallet_project_token::types::PaymentWithVesting<Balance, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
    **/
   PalletProjectTokenPaymentWithVesting: {
     amount: 'u128',
     vestingSchedule: 'Option<PalletProjectTokenVestingScheduleParams>'
   },
   /**
-   * Lookup196: pallet_project_token::types::VestingSource
+   * Lookup197: pallet_project_token::types::VestingSource
    **/
   PalletProjectTokenVestingSource: {
     _enum: {
@@ -1363,7 +1366,7 @@ export default {
     }
   },
   /**
-   * Lookup200: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
+   * Lookup201: pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>
    **/
   PalletProjectTokenTokenSale: {
     unitPrice: 'u128',
@@ -1378,7 +1381,7 @@ export default {
     autoFinalize: 'bool'
   },
   /**
-   * Lookup201: pallet_project_token::types::AmmCurve<Balance>
+   * Lookup202: pallet_project_token::types::AmmCurve<Balance>
    **/
   PalletProjectTokenAmmCurve: {
     slope: 'u128',
@@ -1386,7 +1389,21 @@ export default {
     providedSupply: 'u128'
   },
   /**
-   * Lookup202: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
+   * Lookup203: pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>
+   **/
+  PalletProjectTokenTokenConstraints: {
+    maxYearlyRate: 'Option<Permill>',
+    minAmmSlope: 'Option<u128>',
+    minSaleDuration: 'Option<u32>',
+    minRevenueSplitDuration: 'Option<u32>',
+    minRevenueSplitTimeToStart: 'Option<u32>',
+    salePlatformFee: 'Option<Permill>',
+    ammBuyTxFees: 'Option<Permill>',
+    ammSellTxFees: 'Option<Permill>',
+    bloatBond: 'Option<u128>'
+  },
+  /**
+   * Lookup206: pallet_proposals_engine::RawEvent<ProposalId, MemberId, BlockNumber>
    **/
   PalletProposalsEngineRawEvent: {
     _enum: {
@@ -1399,7 +1416,7 @@ export default {
     }
   },
   /**
-   * Lookup203: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
+   * Lookup207: pallet_proposals_engine::types::proposal_statuses::ProposalStatus<BlockNumber>
    **/
   PalletProposalsEngineProposalStatusesProposalStatus: {
     _enum: {
@@ -1409,7 +1426,7 @@ export default {
     }
   },
   /**
-   * Lookup204: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
+   * Lookup208: pallet_proposals_engine::types::proposal_statuses::ProposalDecision
    **/
   PalletProposalsEngineProposalStatusesProposalDecision: {
     _enum: {
@@ -1423,13 +1440,13 @@ export default {
     }
   },
   /**
-   * Lookup205: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
+   * Lookup209: pallet_proposals_engine::types::proposal_statuses::ApprovedProposalDecision
    **/
   PalletProposalsEngineProposalStatusesApprovedProposalDecision: {
     _enum: ['PendingExecution', 'PendingConstitutionality']
   },
   /**
-   * Lookup206: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
+   * Lookup210: pallet_proposals_engine::types::proposal_statuses::ExecutionStatus
    **/
   PalletProposalsEngineProposalStatusesExecutionStatus: {
     _enum: {
@@ -1440,13 +1457,13 @@ export default {
     }
   },
   /**
-   * Lookup207: pallet_proposals_engine::types::VoteKind
+   * Lookup211: pallet_proposals_engine::types::VoteKind
    **/
   PalletProposalsEngineVoteKind: {
     _enum: ['Approve', 'Reject', 'Slash', 'Abstain']
   },
   /**
-   * Lookup208: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
+   * Lookup212: pallet_proposals_discussion::RawEvent<ThreadId, MemberId, PostId>
    **/
   PalletProposalsDiscussionRawEvent: {
     _enum: {
@@ -1458,7 +1475,7 @@ export default {
     }
   },
   /**
-   * Lookup209: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
+   * Lookup213: pallet_proposals_discussion::types::ThreadMode<BTreeSet<T>>
    **/
   PalletProposalsDiscussionThreadModeBTreeSet: {
     _enum: {
@@ -1467,7 +1484,7 @@ export default {
     }
   },
   /**
-   * Lookup210: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>, ProposalId, ThreadId>
+   * Lookup214: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>, ProposalId, ThreadId>
    **/
   PalletProposalsCodexRawEvent: {
     _enum: {
@@ -1475,7 +1492,7 @@ export default {
     }
   },
   /**
-   * Lookup211: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
+   * Lookup215: pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>
    **/
   PalletProposalsCodexGeneralProposalParams: {
     memberId: 'u64',
@@ -1485,7 +1502,7 @@ export default {
     exactExecutionBlock: 'Option<u32>'
   },
   /**
-   * Lookup212: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>>
+   * Lookup216: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>
    **/
   PalletProposalsCodexProposalDetails: {
     _enum: {
@@ -1512,18 +1529,21 @@ export default {
       VetoProposal: 'u32',
       UpdateGlobalNftLimit: '(PalletContentNftLimitPeriod,u64)',
       UpdateChannelPayouts: 'PalletContentUpdateChannelPayoutsParametersRecord',
-      SetPalletFozenStatus: '(bool,PalletCommonFreezablePallet)'
+      SetPalletFozenStatus: '(bool,PalletCommonFreezablePallet)',
+      UpdateTokenPalletTokenConstraints: 'PalletProjectTokenTokenConstraints',
+      SetEraPayoutDampingFactor: 'Percent',
+      DecreaseCouncilBudget: 'u128'
     }
   },
   /**
-   * Lookup214: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
+   * Lookup218: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
    **/
   PalletCommonFundingRequestParameters: {
     account: 'AccountId32',
     amount: 'u128'
   },
   /**
-   * Lookup215: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
+   * Lookup219: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
    **/
   PalletProposalsCodexCreateOpeningParameters: {
     description: 'Bytes',
@@ -1532,14 +1552,14 @@ export default {
     group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
   },
   /**
-   * Lookup216: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
+   * Lookup220: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
    **/
   PalletWorkingGroupStakePolicy: {
     stakeAmount: 'u128',
     leavingUnstakingPeriod: 'u32'
   },
   /**
-   * Lookup217: pallet_proposals_codex::types::FillOpeningParameters
+   * Lookup221: pallet_proposals_codex::types::FillOpeningParameters
    **/
   PalletProposalsCodexFillOpeningParameters: {
     openingId: 'u64',
@@ -1547,7 +1567,7 @@ export default {
     workingGroup: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
   },
   /**
-   * Lookup218: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
+   * Lookup222: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
    **/
   PalletProposalsCodexTerminateRoleParameters: {
     workerId: 'u64',
@@ -1555,13 +1575,13 @@ export default {
     group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
   },
   /**
-   * Lookup219: pallet_common::FreezablePallet
+   * Lookup223: pallet_common::FreezablePallet
    **/
   PalletCommonFreezablePallet: {
     _enum: ['ProjectToken']
   },
   /**
-   * Lookup220: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance1>
+   * Lookup224: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance1>
    **/
   PalletWorkingGroupRawEventInstance1: {
     _enum: {
@@ -1584,6 +1604,7 @@ export default {
       WorkerRewardAccountUpdated: '(u64,AccountId32)',
       WorkerRewardAmountUpdated: '(u64,Option<u128>)',
       StatusTextChanged: '(H256,Option<Bytes>)',
+      VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
       BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
       RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
       NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1593,13 +1614,13 @@ export default {
     }
   },
   /**
-   * Lookup224: pallet_working_group::types::OpeningType
+   * Lookup228: pallet_working_group::types::OpeningType
    **/
   PalletWorkingGroupOpeningType: {
     _enum: ['Leader', 'Regular']
   },
   /**
-   * Lookup225: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
+   * Lookup229: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
    **/
   PalletWorkingGroupApplyOnOpeningParams: {
     memberId: 'u64',
@@ -1610,24 +1631,32 @@ export default {
     stakeParameters: 'PalletWorkingGroupStakeParameters'
   },
   /**
-   * Lookup226: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
+   * Lookup230: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
    **/
   PalletWorkingGroupStakeParameters: {
     stake: 'u128',
     stakingAccountId: 'AccountId32'
   },
   /**
-   * Lookup227: pallet_working_group::Instance1
+   * Lookup231: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
+   **/
+  PalletVestingVestingInfo: {
+    locked: 'u128',
+    perBlock: 'u128',
+    startingBlock: 'u32'
+  },
+  /**
+   * Lookup232: pallet_working_group::Instance1
    **/
   PalletWorkingGroupInstance1: 'Null',
   /**
-   * Lookup228: pallet_working_group::types::RewardPaymentType
+   * Lookup233: pallet_working_group::types::RewardPaymentType
    **/
   PalletWorkingGroupRewardPaymentType: {
     _enum: ['MissedReward', 'RegularReward']
   },
   /**
-   * Lookup229: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance2>
+   * Lookup234: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance2>
    **/
   PalletWorkingGroupRawEventInstance2: {
     _enum: {
@@ -1650,6 +1679,7 @@ export default {
       WorkerRewardAccountUpdated: '(u64,AccountId32)',
       WorkerRewardAmountUpdated: '(u64,Option<u128>)',
       StatusTextChanged: '(H256,Option<Bytes>)',
+      VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
       BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
       RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
       NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1659,11 +1689,11 @@ export default {
     }
   },
   /**
-   * Lookup230: pallet_working_group::Instance2
+   * Lookup235: pallet_working_group::Instance2
    **/
   PalletWorkingGroupInstance2: 'Null',
   /**
-   * Lookup231: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance3>
+   * Lookup236: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance3>
    **/
   PalletWorkingGroupRawEventInstance3: {
     _enum: {
@@ -1686,6 +1716,7 @@ export default {
       WorkerRewardAccountUpdated: '(u64,AccountId32)',
       WorkerRewardAmountUpdated: '(u64,Option<u128>)',
       StatusTextChanged: '(H256,Option<Bytes>)',
+      VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
       BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
       RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
       NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1695,11 +1726,11 @@ export default {
     }
   },
   /**
-   * Lookup232: pallet_working_group::Instance3
+   * Lookup237: pallet_working_group::Instance3
    **/
   PalletWorkingGroupInstance3: 'Null',
   /**
-   * Lookup233: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance4>
+   * Lookup238: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance4>
    **/
   PalletWorkingGroupRawEventInstance4: {
     _enum: {
@@ -1722,6 +1753,7 @@ export default {
       WorkerRewardAccountUpdated: '(u64,AccountId32)',
       WorkerRewardAmountUpdated: '(u64,Option<u128>)',
       StatusTextChanged: '(H256,Option<Bytes>)',
+      VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
       BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
       RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
       NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1731,11 +1763,11 @@ export default {
     }
   },
   /**
-   * Lookup234: pallet_working_group::Instance4
+   * Lookup239: pallet_working_group::Instance4
    **/
   PalletWorkingGroupInstance4: 'Null',
   /**
-   * Lookup235: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance5>
+   * Lookup240: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance5>
    **/
   PalletWorkingGroupRawEventInstance5: {
     _enum: {
@@ -1758,6 +1790,7 @@ export default {
       WorkerRewardAccountUpdated: '(u64,AccountId32)',
       WorkerRewardAmountUpdated: '(u64,Option<u128>)',
       StatusTextChanged: '(H256,Option<Bytes>)',
+      VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
       BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
       RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
       NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1767,11 +1800,11 @@ export default {
     }
   },
   /**
-   * Lookup236: pallet_working_group::Instance5
+   * Lookup241: pallet_working_group::Instance5
    **/
   PalletWorkingGroupInstance5: 'Null',
   /**
-   * Lookup237: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance6>
+   * Lookup242: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance6>
    **/
   PalletWorkingGroupRawEventInstance6: {
     _enum: {
@@ -1794,6 +1827,7 @@ export default {
       WorkerRewardAccountUpdated: '(u64,AccountId32)',
       WorkerRewardAmountUpdated: '(u64,Option<u128>)',
       StatusTextChanged: '(H256,Option<Bytes>)',
+      VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
       BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
       RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
       NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1803,11 +1837,11 @@ export default {
     }
   },
   /**
-   * Lookup238: pallet_working_group::Instance6
+   * Lookup243: pallet_working_group::Instance6
    **/
   PalletWorkingGroupInstance6: 'Null',
   /**
-   * Lookup239: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance7>
+   * Lookup244: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance7>
    **/
   PalletWorkingGroupRawEventInstance7: {
     _enum: {
@@ -1830,6 +1864,7 @@ export default {
       WorkerRewardAccountUpdated: '(u64,AccountId32)',
       WorkerRewardAmountUpdated: '(u64,Option<u128>)',
       StatusTextChanged: '(H256,Option<Bytes>)',
+      VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
       BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
       RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
       NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1839,11 +1874,11 @@ export default {
     }
   },
   /**
-   * Lookup240: pallet_working_group::Instance7
+   * Lookup245: pallet_working_group::Instance7
    **/
   PalletWorkingGroupInstance7: 'Null',
   /**
-   * Lookup241: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance8>
+   * Lookup246: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance8>
    **/
   PalletWorkingGroupRawEventInstance8: {
     _enum: {
@@ -1866,6 +1901,7 @@ export default {
       WorkerRewardAccountUpdated: '(u64,AccountId32)',
       WorkerRewardAmountUpdated: '(u64,Option<u128>)',
       StatusTextChanged: '(H256,Option<Bytes>)',
+      VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
       BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
       RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
       NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1875,11 +1911,11 @@ export default {
     }
   },
   /**
-   * Lookup242: pallet_working_group::Instance8
+   * Lookup247: pallet_working_group::Instance8
    **/
   PalletWorkingGroupInstance8: 'Null',
   /**
-   * Lookup243: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_working_group::Instance9>
+   * Lookup248: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance9>
    **/
   PalletWorkingGroupRawEventInstance9: {
     _enum: {
@@ -1902,6 +1938,7 @@ export default {
       WorkerRewardAccountUpdated: '(u64,AccountId32)',
       WorkerRewardAmountUpdated: '(u64,Option<u128>)',
       StatusTextChanged: '(H256,Option<Bytes>)',
+      VestedBudgetSpending: '(AccountId32,PalletVestingVestingInfo,Option<Bytes>)',
       BudgetSpending: '(AccountId32,u128,Option<Bytes>)',
       RewardPaid: '(u64,AccountId32,u128,PalletWorkingGroupRewardPaymentType)',
       NewMissedRewardLevelReached: '(u64,Option<u128>)',
@@ -1911,11 +1948,11 @@ export default {
     }
   },
   /**
-   * Lookup244: pallet_working_group::Instance9
+   * Lookup249: pallet_working_group::Instance9
    **/
   PalletWorkingGroupInstance9: 'Null',
   /**
-   * Lookup245: frame_system::Phase
+   * Lookup250: frame_system::Phase
    **/
   FrameSystemPhase: {
     _enum: {
@@ -1925,14 +1962,14 @@ export default {
     }
   },
   /**
-   * Lookup249: frame_system::LastRuntimeUpgradeInfo
+   * Lookup254: frame_system::LastRuntimeUpgradeInfo
    **/
   FrameSystemLastRuntimeUpgradeInfo: {
     specVersion: 'Compact<u32>',
     specName: 'Text'
   },
   /**
-   * Lookup252: frame_system::pallet::Call<T>
+   * Lookup257: frame_system::pallet::Call<T>
    **/
   FrameSystemCall: {
     _enum: {
@@ -1967,7 +2004,7 @@ export default {
     }
   },
   /**
-   * Lookup255: frame_system::limits::BlockWeights
+   * Lookup260: frame_system::limits::BlockWeights
    **/
   FrameSystemLimitsBlockWeights: {
     baseBlock: 'SpWeightsWeightV2Weight',
@@ -1975,7 +2012,7 @@ export default {
     perClass: 'FrameSupportDispatchPerDispatchClassWeightsPerClass'
   },
   /**
-   * Lookup256: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
+   * Lookup261: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
    **/
   FrameSupportDispatchPerDispatchClassWeightsPerClass: {
     normal: 'FrameSystemLimitsWeightsPerClass',
@@ -1983,7 +2020,7 @@ export default {
     mandatory: 'FrameSystemLimitsWeightsPerClass'
   },
   /**
-   * Lookup257: frame_system::limits::WeightsPerClass
+   * Lookup262: frame_system::limits::WeightsPerClass
    **/
   FrameSystemLimitsWeightsPerClass: {
     baseExtrinsic: 'SpWeightsWeightV2Weight',
@@ -1992,13 +2029,13 @@ export default {
     reserved: 'Option<SpWeightsWeightV2Weight>'
   },
   /**
-   * Lookup259: frame_system::limits::BlockLength
+   * Lookup264: frame_system::limits::BlockLength
    **/
   FrameSystemLimitsBlockLength: {
     max: 'FrameSupportDispatchPerDispatchClassU32'
   },
   /**
-   * Lookup260: frame_support::dispatch::PerDispatchClass<T>
+   * Lookup265: frame_support::dispatch::PerDispatchClass<T>
    **/
   FrameSupportDispatchPerDispatchClassU32: {
     normal: 'u32',
@@ -2006,14 +2043,14 @@ export default {
     mandatory: 'u32'
   },
   /**
-   * Lookup261: sp_weights::RuntimeDbWeight
+   * Lookup266: sp_weights::RuntimeDbWeight
    **/
   SpWeightsRuntimeDbWeight: {
     read: 'u64',
     write: 'u64'
   },
   /**
-   * Lookup262: sp_version::RuntimeVersion
+   * Lookup267: sp_version::RuntimeVersion
    **/
   SpVersionRuntimeVersion: {
     specName: 'Text',
@@ -2026,13 +2063,13 @@ export default {
     stateVersion: 'u8'
   },
   /**
-   * Lookup268: frame_system::pallet::Error<T>
+   * Lookup273: frame_system::pallet::Error<T>
    **/
   FrameSystemError: {
     _enum: ['InvalidSpecName', 'SpecVersionNeedsToIncrease', 'FailedToExtractRuntimeVersion', 'NonDefaultComposite', 'NonZeroRefCount', 'CallFiltered']
   },
   /**
-   * Lookup269: pallet_utility::pallet::Call<T>
+   * Lookup274: pallet_utility::pallet::Call<T>
    **/
   PalletUtilityCall: {
     _enum: {
@@ -2060,7 +2097,7 @@ export default {
     }
   },
   /**
-   * Lookup272: pallet_babe::pallet::Call<T>
+   * Lookup277: pallet_babe::pallet::Call<T>
    **/
   PalletBabeCall: {
     _enum: {
@@ -2078,7 +2115,7 @@ export default {
     }
   },
   /**
-   * Lookup273: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
+   * Lookup278: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
    **/
   SpConsensusSlotsEquivocationProof: {
     offender: 'SpConsensusBabeAppPublic',
@@ -2087,7 +2124,7 @@ export default {
     secondHeader: 'SpRuntimeHeader'
   },
   /**
-   * Lookup274: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
+   * Lookup279: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
    **/
   SpRuntimeHeader: {
     parentHash: 'H256',
@@ -2097,15 +2134,15 @@ export default {
     digest: 'SpRuntimeDigest'
   },
   /**
-   * Lookup275: sp_runtime::traits::BlakeTwo256
+   * Lookup280: sp_runtime::traits::BlakeTwo256
    **/
   SpRuntimeBlakeTwo256: 'Null',
   /**
-   * Lookup276: sp_consensus_babe::app::Public
+   * Lookup281: sp_consensus_babe::app::Public
    **/
   SpConsensusBabeAppPublic: 'SpCoreSr25519Public',
   /**
-   * Lookup278: sp_session::MembershipProof
+   * Lookup283: sp_session::MembershipProof
    **/
   SpSessionMembershipProof: {
     session: 'u32',
@@ -2113,7 +2150,7 @@ export default {
     validatorCount: 'u32'
   },
   /**
-   * Lookup279: sp_consensus_babe::digests::NextConfigDescriptor
+   * Lookup284: sp_consensus_babe::digests::NextConfigDescriptor
    **/
   SpConsensusBabeDigestsNextConfigDescriptor: {
     _enum: {
@@ -2125,13 +2162,13 @@ export default {
     }
   },
   /**
-   * Lookup280: sp_consensus_babe::AllowedSlots
+   * Lookup285: sp_consensus_babe::AllowedSlots
    **/
   SpConsensusBabeAllowedSlots: {
     _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']
   },
   /**
-   * Lookup281: pallet_timestamp::pallet::Call<T>
+   * Lookup286: pallet_timestamp::pallet::Call<T>
    **/
   PalletTimestampCall: {
     _enum: {
@@ -2141,7 +2178,7 @@ export default {
     }
   },
   /**
-   * Lookup282: pallet_balances::pallet::Call<T, I>
+   * Lookup287: pallet_balances::pallet::Call<T, I>
    **/
   PalletBalancesCall: {
     _enum: {
@@ -2174,7 +2211,7 @@ export default {
     }
   },
   /**
-   * Lookup283: pallet_election_provider_multi_phase::pallet::Call<T>
+   * Lookup288: pallet_election_provider_multi_phase::pallet::Call<T>
    **/
   PalletElectionProviderMultiPhaseCall: {
     _enum: {
@@ -2198,7 +2235,7 @@ export default {
     }
   },
   /**
-   * Lookup284: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
+   * Lookup289: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
    **/
   PalletElectionProviderMultiPhaseRawSolution: {
     solution: 'JoystreamNodeRuntimeNposSolution16',
@@ -2206,7 +2243,7 @@ export default {
     round: 'u32'
   },
   /**
-   * Lookup285: joystream_node_runtime::NposSolution16
+   * Lookup290: joystream_node_runtime::NposSolution16
    **/
   JoystreamNodeRuntimeNposSolution16: {
     votes1: 'Vec<(Compact<u32>,Compact<u16>)>',
@@ -2227,21 +2264,21 @@ export default {
     votes16: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);15],Compact<u16>)>'
   },
   /**
-   * Lookup336: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
+   * Lookup341: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
    **/
   PalletElectionProviderMultiPhaseSolutionOrSnapshotSize: {
     voters: 'Compact<u32>',
     targets: 'Compact<u32>'
   },
   /**
-   * Lookup340: sp_npos_elections::Support<sp_core::crypto::AccountId32>
+   * Lookup345: sp_npos_elections::Support<sp_core::crypto::AccountId32>
    **/
   SpNposElectionsSupport: {
     total: 'u128',
     voters: 'Vec<(AccountId32,u128)>'
   },
   /**
-   * Lookup342: pallet_staking::pallet::pallet::Call<T>
+   * Lookup347: pallet_staking::pallet::pallet::Call<T>
    **/
   PalletStakingPalletCall: {
     _enum: {
@@ -2335,7 +2372,7 @@ export default {
     }
   },
   /**
-   * Lookup343: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
+   * Lookup348: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
    **/
   PalletStakingRewardDestination: {
     _enum: {
@@ -2347,7 +2384,7 @@ export default {
     }
   },
   /**
-   * Lookup347: pallet_staking::pallet::pallet::ConfigOp<T>
+   * Lookup351: pallet_staking::pallet::pallet::ConfigOp<T>
    **/
   PalletStakingPalletConfigOpU128: {
     _enum: {
@@ -2357,7 +2394,7 @@ export default {
     }
   },
   /**
-   * Lookup348: pallet_staking::pallet::pallet::ConfigOp<T>
+   * Lookup352: pallet_staking::pallet::pallet::ConfigOp<T>
    **/
   PalletStakingPalletConfigOpU32: {
     _enum: {
@@ -2367,7 +2404,7 @@ export default {
     }
   },
   /**
-   * Lookup349: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
+   * Lookup353: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
    **/
   PalletStakingPalletConfigOpPercent: {
     _enum: {
@@ -2377,7 +2414,7 @@ export default {
     }
   },
   /**
-   * Lookup350: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
+   * Lookup354: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
    **/
   PalletStakingPalletConfigOpPerbill: {
     _enum: {
@@ -2387,7 +2424,7 @@ export default {
     }
   },
   /**
-   * Lookup351: pallet_session::pallet::Call<T>
+   * Lookup355: pallet_session::pallet::Call<T>
    **/
   PalletSessionCall: {
     _enum: {
@@ -2402,7 +2439,7 @@ export default {
     }
   },
   /**
-   * Lookup352: joystream_node_runtime::SessionKeys
+   * Lookup356: joystream_node_runtime::SessionKeys
    **/
   JoystreamNodeRuntimeSessionKeys: {
     grandpa: 'SpConsensusGrandpaAppPublic',
@@ -2411,11 +2448,11 @@ export default {
     authorityDiscovery: 'SpAuthorityDiscoveryAppPublic'
   },
   /**
-   * Lookup353: sp_authority_discovery::app::Public
+   * Lookup357: sp_authority_discovery::app::Public
    **/
   SpAuthorityDiscoveryAppPublic: 'SpCoreSr25519Public',
   /**
-   * Lookup354: pallet_grandpa::pallet::Call<T>
+   * Lookup358: pallet_grandpa::pallet::Call<T>
    **/
   PalletGrandpaCall: {
     _enum: {
@@ -2434,14 +2471,14 @@ export default {
     }
   },
   /**
-   * Lookup355: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
+   * Lookup359: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
    **/
   SpConsensusGrandpaEquivocationProof: {
     setId: 'u64',
     equivocation: 'SpConsensusGrandpaEquivocation'
   },
   /**
-   * Lookup356: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
+   * Lookup360: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
    **/
   SpConsensusGrandpaEquivocation: {
     _enum: {
@@ -2450,7 +2487,7 @@ export default {
     }
   },
   /**
-   * Lookup357: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+   * Lookup361: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
    **/
   FinalityGrandpaEquivocationPrevote: {
     roundNumber: 'u64',
@@ -2459,22 +2496,22 @@ export default {
     second: '(FinalityGrandpaPrevote,SpConsensusGrandpaAppSignature)'
   },
   /**
-   * Lookup358: finality_grandpa::Prevote<primitive_types::H256, N>
+   * Lookup362: finality_grandpa::Prevote<primitive_types::H256, N>
    **/
   FinalityGrandpaPrevote: {
     targetHash: 'H256',
     targetNumber: 'u32'
   },
   /**
-   * Lookup359: sp_consensus_grandpa::app::Signature
+   * Lookup363: sp_consensus_grandpa::app::Signature
    **/
   SpConsensusGrandpaAppSignature: 'SpCoreEd25519Signature',
   /**
-   * Lookup360: sp_core::ed25519::Signature
+   * Lookup364: sp_core::ed25519::Signature
    **/
   SpCoreEd25519Signature: '[u8;64]',
   /**
-   * Lookup363: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+   * Lookup367: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
    **/
   FinalityGrandpaEquivocationPrecommit: {
     roundNumber: 'u64',
@@ -2483,14 +2520,14 @@ export default {
     second: '(FinalityGrandpaPrecommit,SpConsensusGrandpaAppSignature)'
   },
   /**
-   * Lookup364: finality_grandpa::Precommit<primitive_types::H256, N>
+   * Lookup368: finality_grandpa::Precommit<primitive_types::H256, N>
    **/
   FinalityGrandpaPrecommit: {
     targetHash: 'H256',
     targetNumber: 'u32'
   },
   /**
-   * Lookup366: pallet_im_online::pallet::Call<T>
+   * Lookup370: pallet_im_online::pallet::Call<T>
    **/
   PalletImOnlineCall: {
     _enum: {
@@ -2501,7 +2538,7 @@ export default {
     }
   },
   /**
-   * Lookup367: pallet_im_online::Heartbeat<BlockNumber>
+   * Lookup371: pallet_im_online::Heartbeat<BlockNumber>
    **/
   PalletImOnlineHeartbeat: {
     blockNumber: 'u32',
@@ -2511,22 +2548,22 @@ export default {
     validatorsLen: 'u32'
   },
   /**
-   * Lookup368: sp_core::offchain::OpaqueNetworkState
+   * Lookup372: sp_core::offchain::OpaqueNetworkState
    **/
   SpCoreOffchainOpaqueNetworkState: {
     peerId: 'OpaquePeerId',
     externalAddresses: 'Vec<OpaqueMultiaddr>'
   },
   /**
-   * Lookup372: pallet_im_online::sr25519::app_sr25519::Signature
+   * Lookup376: pallet_im_online::sr25519::app_sr25519::Signature
    **/
   PalletImOnlineSr25519AppSr25519Signature: 'SpCoreSr25519Signature',
   /**
-   * Lookup373: sp_core::sr25519::Signature
+   * Lookup377: sp_core::sr25519::Signature
    **/
   SpCoreSr25519Signature: '[u8;64]',
   /**
-   * Lookup374: pallet_bags_list::pallet::Call<T, I>
+   * Lookup378: pallet_bags_list::pallet::Call<T, I>
    **/
   PalletBagsListCall: {
     _enum: {
@@ -2539,7 +2576,7 @@ export default {
     }
   },
   /**
-   * Lookup375: pallet_vesting::pallet::Call<T>
+   * Lookup379: pallet_vesting::pallet::Call<T>
    **/
   PalletVestingCall: {
     _enum: {
@@ -2563,15 +2600,7 @@ export default {
     }
   },
   /**
-   * Lookup376: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
-   **/
-  PalletVestingVestingInfo: {
-    locked: 'u128',
-    perBlock: 'u128',
-    startingBlock: 'u32'
-  },
-  /**
-   * Lookup377: pallet_multisig::pallet::Call<T>
+   * Lookup380: pallet_multisig::pallet::Call<T>
    **/
   PalletMultisigCall: {
     _enum: {
@@ -2602,7 +2631,7 @@ export default {
     }
   },
   /**
-   * Lookup379: pallet_council::Call<T>
+   * Lookup382: pallet_council::Call<T>
    **/
   PalletCouncilCall: {
     _enum: {
@@ -2634,6 +2663,12 @@ export default {
       set_councilor_reward: {
         councilorReward: 'u128',
       },
+      set_era_payout_damping_factor: {
+        newParameter: 'Percent',
+      },
+      decrease_council_budget: {
+        reductionAmount: 'u128',
+      },
       funding_request: {
         fundingRequests: 'Vec<PalletCommonFundingRequestParameters>',
       },
@@ -2653,7 +2688,7 @@ export default {
     }
   },
   /**
-   * Lookup380: pallet_referendum::Call<T, I>
+   * Lookup383: pallet_referendum::Call<T, I>
    **/
   PalletReferendumCall: {
     _enum: {
@@ -2670,7 +2705,7 @@ export default {
     }
   },
   /**
-   * Lookup381: pallet_membership::Call<T>
+   * Lookup384: pallet_membership::Call<T>
    **/
   PalletMembershipCall: {
     _enum: {
@@ -2739,7 +2774,7 @@ export default {
     }
   },
   /**
-   * Lookup382: pallet_forum::Call<T>
+   * Lookup385: pallet_forum::Call<T>
    **/
   PalletForumCall: {
     _enum: {
@@ -2836,7 +2871,7 @@ export default {
     }
   },
   /**
-   * Lookup383: pallet_constitution::Call<T>
+   * Lookup386: pallet_constitution::Call<T>
    **/
   PalletConstitutionCall: {
     _enum: {
@@ -2846,7 +2881,7 @@ export default {
     }
   },
   /**
-   * Lookup384: pallet_bounty::Call<T>
+   * Lookup387: pallet_bounty::Call<T>
    **/
   PalletBountyCall: {
     _enum: {
@@ -2922,7 +2957,7 @@ export default {
     }
   },
   /**
-   * Lookup385: pallet_joystream_utility::Call<T>
+   * Lookup388: pallet_joystream_utility::Call<T>
    **/
   PalletJoystreamUtilityCall: {
     _enum: {
@@ -2943,7 +2978,7 @@ export default {
     }
   },
   /**
-   * Lookup386: pallet_content::Call<T>
+   * Lookup389: pallet_content::Call<T>
    **/
   PalletContentCall: {
     _enum: {
@@ -3252,14 +3287,14 @@ export default {
     }
   },
   /**
-   * Lookup387: pallet_content::types::ChannelBagWitness
+   * Lookup390: pallet_content::types::ChannelBagWitness
    **/
   PalletContentChannelBagWitness: {
     storageBucketsNum: 'u32',
     distributionBucketsNum: 'u32'
   },
   /**
-   * Lookup389: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
+   * Lookup392: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
    **/
   PalletCommonMerkleTreeProofElementRecord: {
     _alias: {
@@ -3269,13 +3304,13 @@ export default {
     side: 'PalletCommonMerkleTreeSide'
   },
   /**
-   * Lookup390: pallet_common::merkle_tree::Side
+   * Lookup393: pallet_common::merkle_tree::Side
    **/
   PalletCommonMerkleTreeSide: {
     _enum: ['Left', 'Right']
   },
   /**
-   * Lookup391: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
+   * Lookup394: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
    **/
   PalletContentPullPaymentElement: {
     channelId: 'u64',
@@ -3283,7 +3318,7 @@ export default {
     reason: 'H256'
   },
   /**
-   * Lookup392: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
+   * Lookup395: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
    **/
   PalletContentInitTransferParameters: {
     newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -3291,7 +3326,7 @@ export default {
     newOwner: 'PalletContentChannelOwner'
   },
   /**
-   * Lookup393: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+   * Lookup396: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
    **/
   PalletProjectTokenTokenSaleParams: {
     unitPrice: 'u128',
@@ -3303,14 +3338,14 @@ export default {
     metadata: 'Option<Bytes>'
   },
   /**
-   * Lookup397: pallet_project_token::types::AmmParams<Balance>
+   * Lookup400: pallet_project_token::types::AmmParams<Balance>
    **/
   PalletProjectTokenAmmParams: {
     slope: 'u128',
     intercept: 'u128'
   },
   /**
-   * Lookup398: pallet_storage::Call<T>
+   * Lookup401: pallet_storage::Call<T>
    **/
   PalletStorageCall: {
     _enum: {
@@ -3457,10 +3492,13 @@ export default {
     }
   },
   /**
-   * Lookup399: pallet_project_token::Call<T>
+   * Lookup402: pallet_project_token::Call<T>
    **/
   PalletProjectTokenCall: {
     _enum: {
+      update_token_constraints: {
+        parameters: 'PalletProjectTokenTokenConstraints',
+      },
       transfer: {
         srcMemberId: 'u64',
         tokenId: 'u64',
@@ -3513,17 +3551,17 @@ export default {
     }
   },
   /**
-   * Lookup403: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
+   * Lookup406: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
    **/
   PalletProjectTokenMerkleProof: 'Vec<(H256,PalletProjectTokenMerkleSide)>',
   /**
-   * Lookup406: pallet_project_token::types::MerkleSide
+   * Lookup409: pallet_project_token::types::MerkleSide
    **/
   PalletProjectTokenMerkleSide: {
     _enum: ['Right', 'Left']
   },
   /**
-   * Lookup409: pallet_proposals_engine::Call<T>
+   * Lookup412: pallet_proposals_engine::Call<T>
    **/
   PalletProposalsEngineCall: {
     _enum: {
@@ -3548,7 +3586,7 @@ export default {
     }
   },
   /**
-   * Lookup410: pallet_proposals_discussion::Call<T>
+   * Lookup413: pallet_proposals_discussion::Call<T>
    **/
   PalletProposalsDiscussionCall: {
     _enum: {
@@ -3577,7 +3615,7 @@ export default {
     }
   },
   /**
-   * Lookup411: pallet_proposals_codex::Call<T>
+   * Lookup414: pallet_proposals_codex::Call<T>
    **/
   PalletProposalsCodexCall: {
     _enum: {
@@ -3588,7 +3626,7 @@ export default {
     }
   },
   /**
-   * Lookup412: pallet_working_group::Call<T, I>
+   * Lookup415: pallet_working_group::Call<T, I>
    **/
   PalletWorkingGroupCall: {
     _enum: {
@@ -3656,6 +3694,11 @@ export default {
         amount: 'u128',
         rationale: 'Option<Bytes>',
       },
+      vested_spend_from_budget: {
+        accountId: 'AccountId32',
+        vestingSchedule: 'PalletVestingVestingInfo',
+        rationale: 'Option<Bytes>',
+      },
       fund_working_group_budget: {
         memberId: 'u64',
         amount: 'u128',
@@ -3671,7 +3714,7 @@ export default {
     }
   },
   /**
-   * Lookup421: joystream_node_runtime::OriginCaller
+   * Lookup424: joystream_node_runtime::OriginCaller
    **/
   JoystreamNodeRuntimeOriginCaller: {
     _enum: {
@@ -3680,7 +3723,7 @@ export default {
     }
   },
   /**
-   * Lookup422: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
+   * Lookup425: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
    **/
   FrameSupportDispatchRawOrigin: {
     _enum: {
@@ -3690,17 +3733,17 @@ export default {
     }
   },
   /**
-   * Lookup423: sp_core::Void
+   * Lookup426: sp_core::Void
    **/
   SpCoreVoid: 'Null',
   /**
-   * Lookup424: pallet_utility::pallet::Error<T>
+   * Lookup427: pallet_utility::pallet::Error<T>
    **/
   PalletUtilityError: {
     _enum: ['TooManyCalls']
   },
   /**
-   * Lookup431: sp_consensus_babe::digests::PreDigest
+   * Lookup434: sp_consensus_babe::digests::PreDigest
    **/
   SpConsensusBabeDigestsPreDigest: {
     _enum: {
@@ -3711,7 +3754,7 @@ export default {
     }
   },
   /**
-   * Lookup432: sp_consensus_babe::digests::PrimaryPreDigest
+   * Lookup435: sp_consensus_babe::digests::PrimaryPreDigest
    **/
   SpConsensusBabeDigestsPrimaryPreDigest: {
     authorityIndex: 'u32',
@@ -3720,14 +3763,14 @@ export default {
     vrfProof: '[u8;64]'
   },
   /**
-   * Lookup433: sp_consensus_babe::digests::SecondaryPlainPreDigest
+   * Lookup436: sp_consensus_babe::digests::SecondaryPlainPreDigest
    **/
   SpConsensusBabeDigestsSecondaryPlainPreDigest: {
     authorityIndex: 'u32',
     slot: 'u64'
   },
   /**
-   * Lookup434: sp_consensus_babe::digests::SecondaryVRFPreDigest
+   * Lookup437: sp_consensus_babe::digests::SecondaryVRFPreDigest
    **/
   SpConsensusBabeDigestsSecondaryVRFPreDigest: {
     authorityIndex: 'u32',
@@ -3736,20 +3779,20 @@ export default {
     vrfProof: '[u8;64]'
   },
   /**
-   * Lookup436: sp_consensus_babe::BabeEpochConfiguration
+   * Lookup439: sp_consensus_babe::BabeEpochConfiguration
    **/
   SpConsensusBabeBabeEpochConfiguration: {
     c: '(u64,u64)',
     allowedSlots: 'SpConsensusBabeAllowedSlots'
   },
   /**
-   * Lookup438: pallet_babe::pallet::Error<T>
+   * Lookup441: pallet_babe::pallet::Error<T>
    **/
   PalletBabeError: {
     _enum: ['InvalidEquivocationProof', 'InvalidKeyOwnershipProof', 'DuplicateOffenceReport', 'InvalidConfiguration']
   },
   /**
-   * Lookup440: pallet_balances::BalanceLock<Balance>
+   * Lookup443: pallet_balances::BalanceLock<Balance>
    **/
   PalletBalancesBalanceLock: {
     id: '[u8;8]',
@@ -3757,32 +3800,32 @@ export default {
     reasons: 'PalletBalancesReasons'
   },
   /**
-   * Lookup441: pallet_balances::Reasons
+   * Lookup444: pallet_balances::Reasons
    **/
   PalletBalancesReasons: {
     _enum: ['Fee', 'Misc', 'All']
   },
   /**
-   * Lookup444: pallet_balances::ReserveData<ReserveIdentifier, Balance>
+   * Lookup447: pallet_balances::ReserveData<ReserveIdentifier, Balance>
    **/
   PalletBalancesReserveData: {
     id: '[u8;8]',
     amount: 'u128'
   },
   /**
-   * Lookup446: pallet_balances::pallet::Error<T, I>
+   * Lookup449: pallet_balances::pallet::Error<T, I>
    **/
   PalletBalancesError: {
     _enum: ['VestingBalance', 'LiquidityRestrictions', 'InsufficientBalance', 'ExistentialDeposit', 'KeepAlive', 'ExistingVestingSchedule', 'DeadAccount', 'TooManyReserves']
   },
   /**
-   * Lookup448: pallet_transaction_payment::Releases
+   * Lookup451: pallet_transaction_payment::Releases
    **/
   PalletTransactionPaymentReleases: {
     _enum: ['V1Ancient', 'V2']
   },
   /**
-   * Lookup449: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
+   * Lookup452: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
    **/
   PalletElectionProviderMultiPhaseReadySolution: {
     supports: 'Vec<(AccountId32,SpNposElectionsSupport)>',
@@ -3790,14 +3833,14 @@ export default {
     compute: 'PalletElectionProviderMultiPhaseElectionCompute'
   },
   /**
-   * Lookup451: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
+   * Lookup454: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
    **/
   PalletElectionProviderMultiPhaseRoundSnapshot: {
     voters: 'Vec<(AccountId32,u64,Vec<AccountId32>)>',
     targets: 'Vec<AccountId32>'
   },
   /**
-   * Lookup458: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
+   * Lookup461: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
    **/
   PalletElectionProviderMultiPhaseSignedSignedSubmission: {
     who: 'AccountId32',
@@ -3806,13 +3849,13 @@ export default {
     callFee: 'u128'
   },
   /**
-   * Lookup459: pallet_election_provider_multi_phase::pallet::Error<T>
+   * Lookup462: pallet_election_provider_multi_phase::pallet::Error<T>
    **/
   PalletElectionProviderMultiPhaseError: {
     _enum: ['PreDispatchEarlySubmission', 'PreDispatchWrongWinnerCount', 'PreDispatchWeakSubmission', 'SignedQueueFull', 'SignedCannotPayDeposit', 'SignedInvalidWitness', 'SignedTooMuchWeight', 'OcwCallWrongEra', 'MissingSnapshotMetadata', 'InvalidSubmissionIndex', 'CallNotAllowed', 'FallbackFailed', 'BoundNotMet', 'TooManyWinners']
   },
   /**
-   * Lookup460: pallet_staking::StakingLedger<T>
+   * Lookup463: pallet_staking::StakingLedger<T>
    **/
   PalletStakingStakingLedger: {
     stash: 'AccountId32',
@@ -3822,14 +3865,14 @@ export default {
     claimedRewards: 'Vec<u32>'
   },
   /**
-   * Lookup462: pallet_staking::UnlockChunk<Balance>
+   * Lookup465: pallet_staking::UnlockChunk<Balance>
    **/
   PalletStakingUnlockChunk: {
     value: 'Compact<u128>',
     era: 'Compact<u32>'
   },
   /**
-   * Lookup465: pallet_staking::Nominations<T>
+   * Lookup468: pallet_staking::Nominations<T>
    **/
   PalletStakingNominations: {
     targets: 'Vec<AccountId32>',
@@ -3837,21 +3880,21 @@ export default {
     suppressed: 'bool'
   },
   /**
-   * Lookup466: pallet_staking::ActiveEraInfo
+   * Lookup469: pallet_staking::ActiveEraInfo
    **/
   PalletStakingActiveEraInfo: {
     index: 'u32',
     start: 'Option<u64>'
   },
   /**
-   * Lookup468: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
+   * Lookup471: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
    **/
   PalletStakingEraRewardPoints: {
     total: 'u32',
     individual: 'BTreeMap<AccountId32, u32>'
   },
   /**
-   * Lookup473: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
+   * Lookup476: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
    **/
   PalletStakingUnappliedSlash: {
     validator: 'AccountId32',
@@ -3861,7 +3904,7 @@ export default {
     payout: 'u128'
   },
   /**
-   * Lookup475: pallet_staking::slashing::SlashingSpans
+   * Lookup478: pallet_staking::slashing::SlashingSpans
    **/
   PalletStakingSlashingSlashingSpans: {
     spanIndex: 'u32',
@@ -3870,30 +3913,30 @@ export default {
     prior: 'Vec<u32>'
   },
   /**
-   * Lookup476: pallet_staking::slashing::SpanRecord<Balance>
+   * Lookup479: pallet_staking::slashing::SpanRecord<Balance>
    **/
   PalletStakingSlashingSpanRecord: {
     slashed: 'u128',
     paidOut: 'u128'
   },
   /**
-   * Lookup479: pallet_staking::pallet::pallet::Error<T>
+   * Lookup482: pallet_staking::pallet::pallet::Error<T>
    **/
   PalletStakingPalletError: {
     _enum: ['NotController', 'NotStash', 'AlreadyBonded', 'AlreadyPaired', 'EmptyTargets', 'DuplicateIndex', 'InvalidSlashIndex', 'InsufficientBond', 'NoMoreChunks', 'NoUnlockChunk', 'FundedTarget', 'InvalidEraToReward', 'InvalidNumberOfNominations', 'NotSortedAndUnique', 'AlreadyClaimed', 'IncorrectHistoryDepth', 'IncorrectSlashingSpans', 'BadState', 'TooManyTargets', 'BadTarget', 'CannotChillOther', 'TooManyNominators', 'TooManyValidators', 'CommissionTooLow', 'BoundNotMet', 'BondingRestricted']
   },
   /**
-   * Lookup483: sp_core::crypto::KeyTypeId
+   * Lookup486: sp_core::crypto::KeyTypeId
    **/
   SpCoreCryptoKeyTypeId: '[u8;4]',
   /**
-   * Lookup484: pallet_session::pallet::Error<T>
+   * Lookup487: pallet_session::pallet::Error<T>
    **/
   PalletSessionError: {
     _enum: ['InvalidProof', 'NoAssociatedValidatorId', 'DuplicatedKey', 'NoKeys', 'NoAccount']
   },
   /**
-   * Lookup486: pallet_grandpa::StoredState<N>
+   * Lookup489: pallet_grandpa::StoredState<N>
    **/
   PalletGrandpaStoredState: {
     _enum: {
@@ -3910,7 +3953,7 @@ export default {
     }
   },
   /**
-   * Lookup487: pallet_grandpa::StoredPendingChange<N, Limit>
+   * Lookup490: pallet_grandpa::StoredPendingChange<N, Limit>
    **/
   PalletGrandpaStoredPendingChange: {
     scheduledAt: 'u32',
@@ -3919,33 +3962,33 @@ export default {
     forced: 'Option<u32>'
   },
   /**
-   * Lookup489: pallet_grandpa::pallet::Error<T>
+   * Lookup492: pallet_grandpa::pallet::Error<T>
    **/
   PalletGrandpaError: {
     _enum: ['PauseFailed', 'ResumeFailed', 'ChangePending', 'TooSoon', 'InvalidKeyOwnershipProof', 'InvalidEquivocationProof', 'DuplicateOffenceReport']
   },
   /**
-   * Lookup495: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
+   * Lookup498: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
    **/
   PalletImOnlineBoundedOpaqueNetworkState: {
     peerId: 'Bytes',
     externalAddresses: 'Vec<Bytes>'
   },
   /**
-   * Lookup499: pallet_im_online::pallet::Error<T>
+   * Lookup502: pallet_im_online::pallet::Error<T>
    **/
   PalletImOnlineError: {
     _enum: ['InvalidKey', 'DuplicatedHeartbeat']
   },
   /**
-   * Lookup500: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
+   * Lookup503: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
    **/
   SpStakingOffenceOffenceDetails: {
     offender: '(AccountId32,PalletStakingExposure)',
     reporters: 'Vec<AccountId32>'
   },
   /**
-   * Lookup503: pallet_bags_list::list::Node<T, I>
+   * Lookup506: pallet_bags_list::list::Node<T, I>
    **/
   PalletBagsListListNode: {
     id: 'AccountId32',
@@ -3955,14 +3998,14 @@ export default {
     score: 'u64'
   },
   /**
-   * Lookup504: pallet_bags_list::list::Bag<T, I>
+   * Lookup507: pallet_bags_list::list::Bag<T, I>
    **/
   PalletBagsListListBag: {
     head: 'Option<AccountId32>',
     tail: 'Option<AccountId32>'
   },
   /**
-   * Lookup505: pallet_bags_list::pallet::Error<T, I>
+   * Lookup508: pallet_bags_list::pallet::Error<T, I>
    **/
   PalletBagsListError: {
     _enum: {
@@ -3970,25 +4013,25 @@ export default {
     }
   },
   /**
-   * Lookup506: pallet_bags_list::list::ListError
+   * Lookup509: pallet_bags_list::list::ListError
    **/
   PalletBagsListListListError: {
     _enum: ['Duplicate', 'NotHeavier', 'NotInSameBag', 'NodeNotFound']
   },
   /**
-   * Lookup509: pallet_vesting::Releases
+   * Lookup512: pallet_vesting::Releases
    **/
   PalletVestingReleases: {
     _enum: ['V0', 'V1']
   },
   /**
-   * Lookup510: pallet_vesting::pallet::Error<T>
+   * Lookup513: pallet_vesting::pallet::Error<T>
    **/
   PalletVestingError: {
     _enum: ['NotVesting', 'AtMaxVestingSchedules', 'AmountLow', 'ScheduleIndexOutOfBounds', 'InvalidScheduleParams']
   },
   /**
-   * Lookup512: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
+   * Lookup515: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
    **/
   PalletMultisigMultisig: {
     when: 'PalletMultisigTimepoint',
@@ -3997,20 +4040,20 @@ export default {
     approvals: 'Vec<AccountId32>'
   },
   /**
-   * Lookup514: pallet_multisig::pallet::Error<T>
+   * Lookup517: pallet_multisig::pallet::Error<T>
    **/
   PalletMultisigError: {
     _enum: ['MinimumThreshold', 'AlreadyApproved', 'NoApprovalsNeeded', 'TooFewSignatories', 'TooManySignatories', 'SignatoriesOutOfOrder', 'SenderInSignatories', 'NotFound', 'NotOwner', 'NoTimepoint', 'WrongTimepoint', 'UnexpectedTimepoint', 'MaxWeightTooLow', 'AlreadyStored']
   },
   /**
-   * Lookup515: pallet_council::CouncilStageUpdate<BlockNumber>
+   * Lookup518: pallet_council::CouncilStageUpdate<BlockNumber>
    **/
   PalletCouncilCouncilStageUpdate: {
     stage: 'PalletCouncilCouncilStage',
     changedAt: 'u32'
   },
   /**
-   * Lookup516: pallet_council::CouncilStage<BlockNumber>
+   * Lookup519: pallet_council::CouncilStage<BlockNumber>
    **/
   PalletCouncilCouncilStage: {
     _enum: {
@@ -4020,26 +4063,26 @@ export default {
     }
   },
   /**
-   * Lookup517: pallet_council::CouncilStageAnnouncing<BlockNumber>
+   * Lookup520: pallet_council::CouncilStageAnnouncing<BlockNumber>
    **/
   PalletCouncilCouncilStageAnnouncing: {
     candidatesCount: 'u32',
     endsAt: 'u32'
   },
   /**
-   * Lookup518: pallet_council::CouncilStageElection
+   * Lookup521: pallet_council::CouncilStageElection
    **/
   PalletCouncilCouncilStageElection: {
     candidatesCount: 'u32'
   },
   /**
-   * Lookup519: pallet_council::CouncilStageIdle<BlockNumber>
+   * Lookup522: pallet_council::CouncilStageIdle<BlockNumber>
    **/
   PalletCouncilCouncilStageIdle: {
     endsAt: 'u32'
   },
   /**
-   * Lookup521: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
+   * Lookup524: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
    **/
   PalletCouncilCouncilMember: {
     stakingAccountId: 'AccountId32',
@@ -4050,7 +4093,7 @@ export default {
     unpaidReward: 'u128'
   },
   /**
-   * Lookup523: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
+   * Lookup526: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
    **/
   PalletCouncilCandidate: {
     stakingAccountId: 'AccountId32',
@@ -4061,13 +4104,13 @@ export default {
     noteHash: 'Option<H256>'
   },
   /**
-   * Lookup524: pallet_council::Error<T>
+   * Lookup527: pallet_council::Error<T>
    **/
   PalletCouncilError: {
-    _enum: ['ArithmeticError', 'BadOrigin', 'CantCandidateNow', 'CantReleaseStakeNow', 'CandidacyStakeTooLow', 'CantCandidateTwice', 'ConflictingStake', 'StakeStillNeeded', 'NoStake', 'InsufficientBalanceForStaking', 'CantVoteForYourself', 'MemberIdNotMatchAccount', 'InvalidAccountToStakeReuse', 'NotCandidatingNow', 'CantWithdrawCandidacyNow', 'NotCouncilor', 'InsufficientFundsForFundingRequest', 'ZeroBalanceFundRequest', 'RepeatedFundRequestAccount', 'EmptyFundingRequests', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'CandidateDoesNotExist', 'InsufficientBalanceForTransfer']
+    _enum: ['ArithmeticError', 'BadOrigin', 'CantCandidateNow', 'CantReleaseStakeNow', 'CandidacyStakeTooLow', 'CantCandidateTwice', 'ConflictingStake', 'StakeStillNeeded', 'NoStake', 'InsufficientBalanceForStaking', 'CantVoteForYourself', 'MemberIdNotMatchAccount', 'InvalidAccountToStakeReuse', 'NotCandidatingNow', 'CantWithdrawCandidacyNow', 'NotCouncilor', 'InsufficientFundsForFundingRequest', 'ZeroBalanceFundRequest', 'RepeatedFundRequestAccount', 'EmptyFundingRequests', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'CandidateDoesNotExist', 'InsufficientBalanceForTransfer', 'ReductionAmountTooLarge']
   },
   /**
-   * Lookup525: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+   * Lookup528: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
    **/
   PalletReferendumReferendumStage: {
     _enum: {
@@ -4077,7 +4120,7 @@ export default {
     }
   },
   /**
-   * Lookup527: pallet_referendum::ReferendumStageVoting<BlockNumber>
+   * Lookup530: pallet_referendum::ReferendumStageVoting<BlockNumber>
    **/
   PalletReferendumReferendumStageVoting: {
     started: 'u32',
@@ -4086,7 +4129,7 @@ export default {
     endsAt: 'u32'
   },
   /**
-   * Lookup528: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+   * Lookup531: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
    **/
   PalletReferendumReferendumStageRevealing: {
     started: 'u32',
@@ -4096,7 +4139,7 @@ export default {
     endsAt: 'u32'
   },
   /**
-   * Lookup529: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
+   * Lookup532: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
    **/
   PalletReferendumCastVote: {
     commitment: 'H256',
@@ -4105,13 +4148,13 @@ export default {
     voteFor: 'Option<u64>'
   },
   /**
-   * Lookup530: pallet_referendum::Error<T, I>
+   * Lookup533: pallet_referendum::Error<T, I>
    **/
   PalletReferendumError: {
     _enum: ['BadOrigin', 'ReferendumNotRunning', 'RevealingNotInProgress', 'ConflictStakesOnAccount', 'InsufficientBalanceToStake', 'InsufficientStake', 'InvalidReveal', 'InvalidVote', 'VoteNotExisting', 'AlreadyVotedThisCycle', 'UnstakingVoteInSameCycle', 'SaltTooLong', 'UnstakingForbidden', 'AccountAlreadyOptedOutOfVoting']
   },
   /**
-   * Lookup531: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
+   * Lookup534: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
    **/
   PalletMembershipMembershipObject: {
     handleHash: 'H256',
@@ -4121,20 +4164,20 @@ export default {
     invites: 'u32'
   },
   /**
-   * Lookup532: pallet_membership::StakingAccountMemberBinding<MemberId>
+   * Lookup535: pallet_membership::StakingAccountMemberBinding<MemberId>
    **/
   PalletMembershipStakingAccountMemberBinding: {
     memberId: 'u64',
     confirmed: 'bool'
   },
   /**
-   * Lookup533: pallet_membership::Error<T>
+   * Lookup536: pallet_membership::Error<T>
    **/
   PalletMembershipError: {
     _enum: ['NotEnoughBalanceToBuyMembership', 'ControllerAccountRequired', 'RootAccountRequired', 'UnsignedOrigin', 'MemberProfileNotFound', 'HandleAlreadyRegistered', 'HandleMustBeProvidedDuringRegistration', 'ReferrerIsNotMember', 'CannotTransferInvitesForNotMember', 'NotEnoughInvites', 'WorkingGroupLeaderNotSet', 'StakingAccountIsAlreadyRegistered', 'StakingAccountDoesntExist', 'StakingAccountAlreadyConfirmed', 'WorkingGroupBudgetIsNotSufficientForInviting', 'ConflictingLock', 'CannotExceedReferralCutPercentLimit', 'ConflictStakesOnAccount', 'InsufficientBalanceToCoverStake', 'GifLockExceedsCredit', 'InsufficientBalanceToGift', 'InsufficientBalanceToCoverPayment']
   },
   /**
-   * Lookup534: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup537: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletForumCategory: {
     titleHash: 'H256',
@@ -4147,7 +4190,7 @@ export default {
     stickyThreadIds: 'BTreeSet<u64>'
   },
   /**
-   * Lookup536: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+   * Lookup539: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletForumThread: {
     categoryId: 'u64',
@@ -4156,7 +4199,7 @@ export default {
     numberOfEditablePosts: 'u64'
   },
   /**
-   * Lookup537: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+   * Lookup540: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletForumPost: {
     threadId: 'u64',
@@ -4166,19 +4209,19 @@ export default {
     lastEdited: 'u32'
   },
   /**
-   * Lookup538: pallet_forum::Error<T>
+   * Lookup541: pallet_forum::Error<T>
    **/
   PalletForumError: {
     _enum: ['ArithmeticError', 'OriginNotForumLead', 'ForumUserIdNotMatchAccount', 'ModeratorIdNotMatchAccount', 'AccountDoesNotMatchThreadAuthor', 'ThreadDoesNotExist', 'ModeratorModerateOriginCategory', 'ModeratorModerateDestinationCategory', 'ThreadMoveInvalid', 'ThreadNotBeingUpdated', 'InsufficientBalanceForThreadCreation', 'CannotDeleteThreadWithOutstandingPosts', 'PostDoesNotExist', 'AccountDoesNotMatchPostAuthor', 'InsufficientBalanceForPost', 'CategoryNotBeingUpdated', 'AncestorCategoryImmutable', 'MaxValidCategoryDepthExceeded', 'CategoryDoesNotExist', 'CategoryModeratorDoesNotExist', 'CategoryNotEmptyThreads', 'CategoryNotEmptyCategories', 'ModeratorCantDeleteCategory', 'ModeratorCantUpdateCategory', 'MapSizeLimit', 'PathLengthShouldBeGreaterThanZero', 'MaxNumberOfStickiedThreadsExceeded']
   },
   /**
-   * Lookup539: pallet_constitution::ConstitutionInfo<primitive_types::H256>
+   * Lookup542: pallet_constitution::ConstitutionInfo<primitive_types::H256>
    **/
   PalletConstitutionConstitutionInfo: {
     textHash: 'H256'
   },
   /**
-   * Lookup540: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup543: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletBountyBountyRecord: {
     creationParams: 'PalletBountyBountyParametersBoundedBTreeSet',
@@ -4188,7 +4231,7 @@ export default {
     hasUnpaidOracleReward: 'bool'
   },
   /**
-   * Lookup542: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup545: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletBountyBountyParametersBoundedBTreeSet: {
     oracle: 'PalletBountyBountyActor',
@@ -4200,7 +4243,7 @@ export default {
     fundingType: 'PalletBountyFundingType'
   },
   /**
-   * Lookup543: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup546: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletBountyAssuranceContractTypeBoundedBTreeSet: {
     _enum: {
@@ -4209,7 +4252,7 @@ export default {
     }
   },
   /**
-   * Lookup544: pallet_bounty::BountyMilestone<BlockNumber>
+   * Lookup547: pallet_bounty::BountyMilestone<BlockNumber>
    **/
   PalletBountyBountyMilestone: {
     _enum: {
@@ -4226,14 +4269,14 @@ export default {
     }
   },
   /**
-   * Lookup546: pallet_bounty::Contribution<T>
+   * Lookup549: pallet_bounty::Contribution<T>
    **/
   PalletBountyContribution: {
     amount: 'u128',
     funderStateBloatBondAmount: 'u128'
   },
   /**
-   * Lookup547: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
+   * Lookup550: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
    **/
   PalletBountyEntryRecord: {
     memberId: 'u64',
@@ -4242,19 +4285,19 @@ export default {
     workSubmitted: 'bool'
   },
   /**
-   * Lookup548: pallet_bounty::Error<T>
+   * Lookup551: pallet_bounty::Error<T>
    **/
   PalletBountyError: {
     _enum: ['ArithmeticError', 'MinFundingAmountCannotBeGreaterThanMaxAmount', 'BountyDoesntExist', 'SwitchOracleOriginIsRoot', 'InvalidStageUnexpectedFunding', 'InvalidStageUnexpectedNoFundingContributed', 'InvalidStageUnexpectedCancelled', 'InvalidStageUnexpectedWorkSubmission', 'InvalidStageUnexpectedJudgment', 'InvalidStageUnexpectedSuccessfulBountyWithdrawal', 'InvalidStageUnexpectedFailedBountyWithdrawal', 'InsufficientBalanceForBounty', 'NoBountyContributionFound', 'InsufficientBalanceForStake', 'ConflictingStakes', 'WorkEntryDoesntExist', 'CherryLessThenMinimumAllowed', 'CannotSubmitWorkToClosedContractBounty', 'ClosedContractMemberListIsEmpty', 'ClosedContractMemberListIsTooLarge', 'ClosedContractMemberNotFound', 'InvalidOracleMemberId', 'InvalidStakingAccountForMember', 'ZeroWinnerReward', 'TotalRewardShouldBeEqualToTotalFunding', 'EntrantStakeIsLessThanMininum', 'FundingAmountCannotBeZero', 'FundingPeriodCannotBeZero', 'WinnerShouldHasWorkSubmission', 'InvalidContributorActorSpecified', 'InvalidOracleActorSpecified', 'InvalidEntrantWorkerSpecified', 'InvalidCreatorActorSpecified', 'WorkEntryDoesntBelongToWorker', 'OracleRewardAlreadyWithdrawn']
   },
   /**
-   * Lookup549: pallet_joystream_utility::Error<T>
+   * Lookup552: pallet_joystream_utility::Error<T>
    **/
   PalletJoystreamUtilityError: {
     _enum: ['InsufficientFundsForBudgetUpdate', 'ZeroTokensBurn', 'InsufficientFundsForBurn']
   },
   /**
-   * Lookup550: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+   * Lookup553: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletContentVideoRecord: {
     inChannel: 'u64',
@@ -4263,7 +4306,7 @@ export default {
     videoStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
   },
   /**
-   * Lookup551: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
+   * Lookup554: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
    **/
   PalletContentNftTypesOwnedNft: {
     owner: 'PalletContentNftTypesNftOwner',
@@ -4272,7 +4315,7 @@ export default {
     openAuctionsNonce: 'u64'
   },
   /**
-   * Lookup552: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
+   * Lookup555: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
    **/
   PalletContentNftTypesTransactionalStatusRecord: {
     _enum: {
@@ -4284,7 +4327,7 @@ export default {
     }
   },
   /**
-   * Lookup553: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup556: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletContentNftTypesEnglishAuctionRecord: {
     startingPrice: 'u128',
@@ -4297,14 +4340,14 @@ export default {
     topBid: 'Option<PalletContentNftTypesEnglishAuctionBid>'
   },
   /**
-   * Lookup556: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
+   * Lookup559: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
    **/
   PalletContentNftTypesEnglishAuctionBid: {
     amount: 'u128',
     bidderId: 'u64'
   },
   /**
-   * Lookup557: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup560: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletContentNftTypesOpenAuctionRecord: {
     startingPrice: 'u128',
@@ -4315,7 +4358,7 @@ export default {
     start: 'u32'
   },
   /**
-   * Lookup558: pallet_content::nft::types::NftOwner<MemberId>
+   * Lookup561: pallet_content::nft::types::NftOwner<MemberId>
    **/
   PalletContentNftTypesNftOwner: {
     _enum: {
@@ -4324,7 +4367,7 @@ export default {
     }
   },
   /**
-   * Lookup561: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
+   * Lookup564: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
    **/
   PalletContentPermissionsCuratorGroupCuratorGroupRecord: {
     curators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -4332,7 +4375,7 @@ export default {
     permissionsByLevel: 'BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>'
   },
   /**
-   * Lookup568: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
+   * Lookup571: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
    **/
   PalletContentNftTypesOpenAuctionBidRecord: {
     amount: 'u128',
@@ -4340,13 +4383,13 @@ export default {
     auctionId: 'u64'
   },
   /**
-   * Lookup569: pallet_content::errors::Error<T>
+   * Lookup572: pallet_content::errors::Error<T>
    **/
   PalletContentErrorsError: {
     _enum: ['ChannelStateBloatBondChanged', 'VideoStateBloatBondChanged', 'MinCashoutValueTooLow', 'MaxCashoutValueTooHigh', 'MaxNumberOfChannelCollaboratorsExceeded', 'MaxNumberOfChannelAssetsExceeded', 'MaxNumberOfVideoAssetsExceeded', 'MaxNumberOfChannelAgentPermissionsExceeded', 'MaxNumberOfPausedFeaturesPerChannelExceeded', 'InvalidChannelBagWitnessProvided', 'InvalidStorageBucketsNumWitnessProvided', 'MissingStorageBucketsNumWitness', 'ChannelOwnerMemberDoesNotExist', 'ChannelOwnerCuratorGroupDoesNotExist', 'ChannelStateBloatBondBelowExistentialDeposit', 'NumberOfAssetsToRemoveIsZero', 'CuratorIsNotAMemberOfGivenCuratorGroup', 'CuratorIsAlreadyAMemberOfGivenCuratorGroup', 'CuratorGroupDoesNotExist', 'CuratorsPerGroupLimitReached', 'CuratorGroupIsNotActive', 'CuratorIdInvalid', 'LeadAuthFailed', 'MemberAuthFailed', 'CuratorAuthFailed', 'BadOrigin', 'ActorNotAuthorized', 'CategoryDoesNotExist', 'ChannelDoesNotExist', 'VideoDoesNotExist', 'VideoInSeason', 'ActorCannotBeLead', 'ActorCannotOwnChannel', 'NftAlreadyOwnedByChannel', 'NftAlreadyExists', 'NftDoesNotExist', 'OverflowOrUnderflowHappened', 'DoesNotOwnNft', 'RoyaltyUpperBoundExceeded', 'RoyaltyLowerBoundExceeded', 'AuctionDurationUpperBoundExceeded', 'AuctionDurationLowerBoundExceeded', 'ExtensionPeriodUpperBoundExceeded', 'ExtensionPeriodLowerBoundExceeded', 'BidLockDurationUpperBoundExceeded', 'BidLockDurationLowerBoundExceeded', 'StartingPriceUpperBoundExceeded', 'StartingPriceLowerBoundExceeded', 'AuctionBidStepUpperBoundExceeded', 'AuctionBidStepLowerBoundExceeded', 'InsufficientBalance', 'BidStepConstraintViolated', 'InvalidBidAmountSpecified', 'StartingPriceConstraintViolated', 'ActionHasBidsAlready', 'NftIsNotIdle', 'PendingOfferDoesNotExist', 'RewardAccountIsNotSet', 'ActorIsNotBidder', 'AuctionCannotBeCompleted', 'BidDoesNotExist', 'BidIsForPastAuction', 'StartsAtLowerBoundExceeded', 'StartsAtUpperBoundExceeded', 'AuctionDidNotStart', 'NotInAuctionState', 'MemberIsNotAllowedToParticipate', 'MemberProfileNotFound', 'NftNotInBuyNowState', 'InvalidBuyNowWitnessPriceProvided', 'IsNotOpenAuctionType', 'IsNotEnglishAuctionType', 'BidLockDurationIsNotExpired', 'NftAuctionIsAlreadyExpired', 'BuyNowMustBeGreaterThanStartingPrice', 'TargetMemberDoesNotExist', 'InvalidNftOfferWitnessPriceProvided', 'MaxAuctionWhiteListLengthUpperBoundExceeded', 'WhitelistHasOnlyOneMember', 'WhitelistedMemberDoesNotExist', 'NftNonChannelOwnerDoesNotExist', 'ExtensionPeriodIsGreaterThenAuctionDuration', 'NoAssetsSpecified', 'InvalidAssetsProvided', 'ChannelContainsVideos', 'ChannelContainsAssets', 'InvalidBagSizeSpecified', 'MigrationNotFinished', 'ReplyDoesNotExist', 'UnsufficientBalance', 'InsufficientTreasuryBalance', 'InvalidMemberProvided', 'ActorNotAMember', 'PaymentProofVerificationFailed', 'CashoutAmountExceedsMaximumAmount', 'CashoutAmountBelowMinimumAmount', 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance', 'WithdrawFromChannelAmountIsZero', 'ChannelCashoutsDisabled', 'MinCashoutAllowedExceedsMaxCashoutAllowed', 'CuratorModerationActionNotAllowed', 'MaxCuratorPermissionsPerLevelExceeded', 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded', 'ChannelFeaturePaused', 'ChannelBagMissing', 'AssetsToRemoveBeyondEntityAssetsSet', 'InvalidVideoDataObjectsCountProvided', 'InvalidChannelTransferStatus', 'InvalidChannelTransferAcceptor', 'InvalidChannelTransferCommitmentParams', 'ChannelAgentInsufficientPermissions', 'InvalidChannelOwner', 'ZeroReward', 'InsufficientBalanceForTransfer', 'InsufficientBalanceForChannelCreation', 'InsufficientBalanceForVideoCreation', 'InsufficientCouncilBudget', 'GlobalNftDailyLimitExceeded', 'GlobalNftWeeklyLimitExceeded', 'ChannelNftDailyLimitExceeded', 'ChannelNftWeeklyLimitExceeded', 'CreatorTokenAlreadyIssued', 'CreatorTokenNotIssued', 'MemberIdCouldNotBeDerivedFromActor', 'CannotWithdrawFromChannelWithCreatorTokenIssued', 'PatronageCanOnlyBeClaimedForMemberOwnedChannels', 'ChannelTransfersBlockedDuringRevenueSplits', 'ChannelTransfersBlockedDuringTokenSales', 'ChannelTransfersBlockedDuringActiveAmm']
   },
   /**
-   * Lookup570: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
+   * Lookup573: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
    **/
   PalletStorageBagRecord: {
     storedBy: 'BTreeSet<u64>',
@@ -4355,7 +4398,7 @@ export default {
     objectsNumber: 'u64'
   },
   /**
-   * Lookup573: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
+   * Lookup576: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
    **/
   PalletStorageStorageBucketRecord: {
     operatorStatus: 'PalletStorageStorageBucketOperatorStatus',
@@ -4364,7 +4407,7 @@ export default {
     assignedBags: 'u64'
   },
   /**
-   * Lookup574: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
+   * Lookup577: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
    **/
   PalletStorageStorageBucketOperatorStatus: {
     _enum: {
@@ -4374,14 +4417,14 @@ export default {
     }
   },
   /**
-   * Lookup576: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
+   * Lookup579: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
    **/
   PalletStorageDynamicBagCreationPolicy: {
     numberOfStorageBuckets: 'u32',
     families: 'BTreeMap<u64, u32>'
   },
   /**
-   * Lookup579: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+   * Lookup582: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletStorageDataObject: {
     _alias: {
@@ -4393,13 +4436,13 @@ export default {
     ipfsContentId: 'Bytes'
   },
   /**
-   * Lookup580: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
+   * Lookup583: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
    **/
   PalletStorageDistributionBucketFamilyRecord: {
     nextDistributionBucketIndex: 'u64'
   },
   /**
-   * Lookup581: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup584: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletStorageDistributionBucketRecord: {
     acceptingNewBags: 'bool',
@@ -4409,13 +4452,13 @@ export default {
     assignedBags: 'u64'
   },
   /**
-   * Lookup584: pallet_storage::Error<T>
+   * Lookup587: pallet_storage::Error<T>
    **/
   PalletStorageError: {
     _enum: ['ArithmeticError', 'InvalidCidLength', 'NoObjectsOnUpload', 'StorageBucketDoesntExist', 'StorageBucketIsNotBoundToBag', 'StorageBucketIsBoundToBag', 'NoStorageBucketInvitation', 'StorageProviderAlreadySet', 'StorageProviderMustBeSet', 'DifferentStorageProviderInvited', 'InvitedStorageProvider', 'StorageBucketIdCollectionsAreEmpty', 'StorageBucketsNumberViolatesDynamicBagCreationPolicy', 'DistributionBucketsViolatesDynamicBagCreationPolicy', 'EmptyContentId', 'ZeroObjectSize', 'InvalidStateBloatBondSourceAccount', 'InvalidStorageProvider', 'InsufficientBalance', 'DataObjectDoesntExist', 'UploadingBlocked', 'DataObjectIdCollectionIsEmpty', 'SourceAndDestinationBagsAreEqual', 'DataObjectBlacklisted', 'BlacklistSizeLimitExceeded', 'VoucherMaxObjectSizeLimitExceeded', 'VoucherMaxObjectNumberLimitExceeded', 'StorageBucketObjectNumberLimitReached', 'StorageBucketObjectSizeLimitReached', 'InsufficientTreasuryBalance', 'CannotDeleteNonEmptyStorageBucket', 'DataObjectIdParamsAreEmpty', 'StorageBucketsPerBagLimitTooLow', 'StorageBucketsPerBagLimitTooHigh', 'StorageBucketPerBagLimitExceeded', 'StorageBucketDoesntAcceptNewBags', 'DynamicBagExists', 'DynamicBagDoesntExist', 'StorageProviderOperatorDoesntExist', 'DataSizeFeeChanged', 'DataObjectStateBloatBondChanged', 'CannotDeleteNonEmptyDynamicBag', 'MaxDistributionBucketFamilyNumberLimitExceeded', 'DistributionBucketFamilyDoesntExist', 'DistributionBucketDoesntExist', 'DistributionBucketIdCollectionsAreEmpty', 'DistributionBucketDoesntAcceptNewBags', 'MaxDistributionBucketNumberPerBagLimitExceeded', 'DistributionBucketIsNotBoundToBag', 'DistributionBucketIsBoundToBag', 'DistributionBucketsPerBagLimitTooLow', 'DistributionBucketsPerBagLimitTooHigh', 'DistributionProviderOperatorDoesntExist', 'DistributionProviderOperatorAlreadyInvited', 'DistributionProviderOperatorSet', 'NoDistributionBucketInvitation', 'MustBeDistributionProviderOperatorForBucket', 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached', 'MaxNumberOfOperatorsPerDistributionBucketReached', 'DistributionFamilyBoundToBagCreationPolicy', 'MaxDataObjectSizeExceeded', 'InvalidTransactorAccount', 'NumberOfStorageBucketsOutsideOfAllowedContraints', 'NumberOfDistributionBucketsOutsideOfAllowedContraints', 'CallDisabled']
   },
   /**
-   * Lookup585: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
+   * Lookup588: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
    **/
   PalletProjectTokenAccountData: {
     vestingSchedules: 'BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>',
@@ -4426,14 +4469,14 @@ export default {
     lastSaleTotalPurchasedAmount: 'Option<(u32,u128)>'
   },
   /**
-   * Lookup586: pallet_project_token::types::StakingStatus<Balance>
+   * Lookup589: pallet_project_token::types::StakingStatus<Balance>
    **/
   PalletProjectTokenStakingStatus: {
     splitId: 'u32',
     amount: 'u128'
   },
   /**
-   * Lookup588: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
+   * Lookup591: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
    **/
   PalletProjectTokenVestingSchedule: {
     linearVestingStartBlock: 'u32',
@@ -4443,7 +4486,7 @@ export default {
     burnedAmount: 'u128'
   },
   /**
-   * Lookup595: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
+   * Lookup598: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
    **/
   PalletProjectTokenTokenData: {
     totalSupply: 'u128',
@@ -4459,7 +4502,7 @@ export default {
     ammCurve: 'Option<PalletProjectTokenAmmCurve>'
   },
   /**
-   * Lookup596: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
+   * Lookup599: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
    **/
   PalletProjectTokenRevenueSplitState: {
     _enum: {
@@ -4468,7 +4511,7 @@ export default {
     }
   },
   /**
-   * Lookup597: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
+   * Lookup600: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
    **/
   PalletProjectTokenRevenueSplitInfo: {
     allocation: 'u128',
@@ -4476,14 +4519,14 @@ export default {
     dividendsClaimed: 'u128'
   },
   /**
-   * Lookup598: pallet_project_token::types::Timeline<BlockNumber>
+   * Lookup601: pallet_project_token::types::Timeline<BlockNumber>
    **/
   PalletProjectTokenTimeline: {
     start: 'u32',
     duration: 'u32'
   },
   /**
-   * Lookup600: pallet_project_token::types::PatronageData<Balance, BlockNumber>
+   * Lookup603: pallet_project_token::types::PatronageData<Balance, BlockNumber>
    **/
   PalletProjectTokenPatronageData: {
     rate: 'Permill',
@@ -4491,13 +4534,13 @@ export default {
     lastUnclaimedPatronageTallyBlock: 'u32'
   },
   /**
-   * Lookup602: pallet_project_token::errors::Error<T>
+   * Lookup605: pallet_project_token::errors::Error<T>
    **/
   PalletProjectTokenErrorsError: {
     _enum: ['ArithmeticError', 'InsufficientTransferrableBalance', 'TokenDoesNotExist', 'AccountInformationDoesNotExist', 'TransferDestinationMemberDoesNotExist', 'MerkleProofVerificationFailure', 'TokenSymbolAlreadyInUse', 'InitialAllocationToNonExistingMember', 'AccountAlreadyExists', 'TooManyTransferOutputs', 'TokenIssuanceNotInIdleState', 'InsufficientJoyBalance', 'JoyTransferSubjectToDusting', 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode', 'AttemptToRemoveNonEmptyAccount', 'CannotJoinWhitelistInPermissionlessMode', 'CannotDeissueTokenWithOutstandingAccounts', 'NoUpcomingSale', 'NoActiveSale', 'InsufficientBalanceForTokenPurchase', 'NotEnoughTokensOnSale', 'SaleStartingBlockInThePast', 'SaleAccessProofRequired', 'SaleAccessProofParticipantIsNotSender', 'SalePurchaseCapExceeded', 'MaxVestingSchedulesPerAccountPerTokenReached', 'PreviousSaleNotFinalized', 'NoTokensToRecover', 'SaleDurationTooShort', 'SaleDurationIsZero', 'SaleUpperBoundQuantityIsZero', 'SaleCapPerMemberIsZero', 'SaleUnitPriceIsZero', 'SalePurchaseAmountIsZero', 'CannotInitSaleIfAmmIsActive', 'RevenueSplitTimeToStartTooShort', 'RevenueSplitDurationTooShort', 'RevenueSplitAlreadyActiveForToken', 'RevenueSplitNotActiveForToken', 'RevenueSplitDidNotEnd', 'RevenueSplitNotOngoing', 'UserAlreadyParticipating', 'InsufficientBalanceForSplitParticipation', 'UserNotParticipantingInAnySplit', 'CannotParticipateInSplitWithZeroAmount', 'CannotIssueSplitWithZeroAllocationAmount', 'CannotModifySupplyWhenRevenueSplitsAreActive', 'RevenueSplitRateIsZero', 'BurnAmountIsZero', 'BurnAmountGreaterThanAccountTokensAmount', 'NotInAmmState', 'InvalidCurveParameters', 'DeadlineExpired', 'SlippageToleranceExceeded', 'InsufficientTokenBalance', 'OutstandingAmmProvidedSupplyTooLarge', 'CurveSlopeParametersTooLow', 'NotEnoughTokenMintedByAmmForThisSale', 'TargetPatronageRateIsHigherThanCurrentRate', 'YearlyPatronageRateLimitExceeded', 'PalletFrozen']
   },
   /**
-   * Lookup603: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
+   * Lookup606: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
    **/
   PalletProposalsEngineProposal: {
     parameters: 'PalletProposalsEngineProposalParameters',
@@ -4510,7 +4553,7 @@ export default {
     stakingAccountId: 'Option<AccountId32>'
   },
   /**
-   * Lookup604: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
+   * Lookup607: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
    **/
   PalletProposalsEngineProposalParameters: {
     votingPeriod: 'u32',
@@ -4523,7 +4566,7 @@ export default {
     constitutionality: 'u32'
   },
   /**
-   * Lookup605: pallet_proposals_engine::types::VotingResults
+   * Lookup608: pallet_proposals_engine::types::VotingResults
    **/
   PalletProposalsEngineVotingResults: {
     abstentions: 'u32',
@@ -4532,13 +4575,13 @@ export default {
     slashes: 'u32'
   },
   /**
-   * Lookup608: pallet_proposals_engine::Error<T>
+   * Lookup611: pallet_proposals_engine::Error<T>
    **/
   PalletProposalsEngineError: {
     _enum: ['ArithmeticError', 'EmptyTitleProvided', 'EmptyDescriptionProvided', 'TitleIsTooLong', 'DescriptionIsTooLong', 'ProposalNotFound', 'ProposalFinalized', 'AlreadyVoted', 'NotAuthor', 'MaxActiveProposalNumberExceeded', 'EmptyStake', 'StakeShouldBeEmpty', 'StakeDiffersFromRequired', 'InvalidParameterApprovalThreshold', 'InvalidParameterSlashingThreshold', 'RequireRootOrigin', 'ProposalHasVotes', 'ZeroExactExecutionBlock', 'InvalidExactExecutionBlock', 'InsufficientBalanceForStake', 'ConflictingStakes', 'InvalidStakingAccountForMember', 'MaxDispatchableCallCodeSizeExceeded']
   },
   /**
-   * Lookup609: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup612: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletProposalsDiscussionDiscussionThread: {
     activatedAt: 'u32',
@@ -4546,7 +4589,7 @@ export default {
     mode: 'PalletProposalsDiscussionThreadModeBoundedBTreeSet'
   },
   /**
-   * Lookup611: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+   * Lookup614: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
    **/
   PalletProposalsDiscussionThreadModeBoundedBTreeSet: {
     _enum: {
@@ -4555,7 +4598,7 @@ export default {
     }
   },
   /**
-   * Lookup612: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+   * Lookup615: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
    **/
   PalletProposalsDiscussionDiscussionPost: {
     authorId: 'u64',
@@ -4563,19 +4606,19 @@ export default {
     lastEdited: 'u32'
   },
   /**
-   * Lookup613: pallet_proposals_discussion::Error<T>
+   * Lookup616: pallet_proposals_discussion::Error<T>
    **/
   PalletProposalsDiscussionError: {
     _enum: ['ArithmeticError', 'ThreadDoesntExist', 'PostDoesntExist', 'RequireRootOrigin', 'CannotPostOnClosedThread', 'NotAuthorOrCouncilor', 'MaxWhiteListSizeExceeded', 'WhitelistedMemberDoesNotExist', 'InsufficientBalanceForPost', 'CannotDeletePost']
   },
   /**
-   * Lookup614: pallet_proposals_codex::Error<T>
+   * Lookup617: pallet_proposals_codex::Error<T>
    **/
   PalletProposalsCodexError: {
-    _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError']
+    _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError', 'ReductionAmountZero']
   },
   /**
-   * Lookup615: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
+   * Lookup618: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
    **/
   PalletWorkingGroupOpening: {
     openingType: 'PalletWorkingGroupOpeningType',
@@ -4586,7 +4629,7 @@ export default {
     creationStake: 'u128'
   },
   /**
-   * Lookup616: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
+   * Lookup619: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
    **/
   PalletWorkingGroupJobApplication: {
     roleAccountId: 'AccountId32',
@@ -4597,7 +4640,7 @@ export default {
     openingId: 'u64'
   },
   /**
-   * Lookup617: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
+   * Lookup620: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
    **/
   PalletWorkingGroupGroupWorker: {
     memberId: 'u64',
@@ -4611,13 +4654,13 @@ export default {
     createdAt: 'u32'
   },
   /**
-   * Lookup618: pallet_working_group::errors::Error<T, I>
+   * Lookup621: pallet_working_group::errors::Error<T, I>
    **/
   PalletWorkingGroupErrorsError: {
     _enum: ['ArithmeticError', 'StakeBalanceCannotBeZero', 'OpeningDoesNotExist', 'CannotHireMultipleLeaders', 'WorkerApplicationDoesNotExist', 'MaxActiveWorkerNumberExceeded', 'SuccessfulWorkerApplicationDoesNotExist', 'CannotHireLeaderWhenLeaderExists', 'IsNotLeadAccount', 'CurrentLeadNotSet', 'WorkerDoesNotExist', 'InvalidMemberOrigin', 'SignerIsNotWorkerRoleAccount', 'BelowMinimumStakes', 'InsufficientBalanceToCoverStake', 'ApplicationStakeDoesntMatchOpening', 'OriginIsNotApplicant', 'WorkerIsLeaving', 'CannotRewardWithZero', 'InvalidStakingAccountForMember', 'ConflictStakesOnAccount', 'WorkerHasNoReward', 'UnstakingPeriodLessThanMinimum', 'CannotSpendZero', 'InsufficientBudgetForSpending', 'NoApplicationsProvided', 'CannotDecreaseStakeDeltaGreaterThanStake', 'ApplicationsNotForOpening', 'WorkerStorageValueTooLong', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'InsufficientBalanceForTransfer']
   },
   /**
-   * Lookup628: sp_runtime::MultiSignature
+   * Lookup631: sp_runtime::MultiSignature
    **/
   SpRuntimeMultiSignature: {
     _enum: {
@@ -4627,39 +4670,39 @@ export default {
     }
   },
   /**
-   * Lookup629: sp_core::ecdsa::Signature
+   * Lookup632: sp_core::ecdsa::Signature
    **/
   SpCoreEcdsaSignature: '[u8;65]',
   /**
-   * Lookup632: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
+   * Lookup635: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
    **/
   FrameSystemExtensionsCheckNonZeroSender: 'Null',
   /**
-   * Lookup633: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
+   * Lookup636: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
    **/
   FrameSystemExtensionsCheckSpecVersion: 'Null',
   /**
-   * Lookup634: frame_system::extensions::check_tx_version::CheckTxVersion<T>
+   * Lookup637: frame_system::extensions::check_tx_version::CheckTxVersion<T>
    **/
   FrameSystemExtensionsCheckTxVersion: 'Null',
   /**
-   * Lookup635: frame_system::extensions::check_genesis::CheckGenesis<T>
+   * Lookup638: frame_system::extensions::check_genesis::CheckGenesis<T>
    **/
   FrameSystemExtensionsCheckGenesis: 'Null',
   /**
-   * Lookup638: frame_system::extensions::check_nonce::CheckNonce<T>
+   * Lookup641: frame_system::extensions::check_nonce::CheckNonce<T>
    **/
   FrameSystemExtensionsCheckNonce: 'Compact<u32>',
   /**
-   * Lookup639: frame_system::extensions::check_weight::CheckWeight<T>
+   * Lookup642: frame_system::extensions::check_weight::CheckWeight<T>
    **/
   FrameSystemExtensionsCheckWeight: 'Null',
   /**
-   * Lookup640: pallet_transaction_payment::ChargeTransactionPayment<T>
+   * Lookup643: pallet_transaction_payment::ChargeTransactionPayment<T>
    **/
   PalletTransactionPaymentChargeTransactionPayment: 'Compact<u128>',
   /**
-   * Lookup641: joystream_node_runtime::Runtime
+   * Lookup644: joystream_node_runtime::Runtime
    **/
   JoystreamNodeRuntimeRuntime: 'Null'
 };
diff --git a/src/augment/registry.ts b/src/augment/registry.ts
index 3326ba6ab09ff1d3d9ab77a4b871e47a0c1d5ea9..c26f97946c4ee8e537d6267f0b68a62f48ecb905 100644
--- a/src/augment/registry.ts
+++ b/src/augment/registry.ts
@@ -5,7 +5,7 @@
 // this is required to allow for ambient/previous definitions
 import '@polkadot/types/types/registry';
 
-import type { FinalityGrandpaEquivocationPrecommit, FinalityGrandpaEquivocationPrevote, FinalityGrandpaPrecommit, FinalityGrandpaPrevote, FrameSupportDispatchDispatchClass, FrameSupportDispatchDispatchInfo, FrameSupportDispatchPays, FrameSupportDispatchPerDispatchClassU32, FrameSupportDispatchPerDispatchClassWeight, FrameSupportDispatchPerDispatchClassWeightsPerClass, FrameSupportDispatchRawOrigin, FrameSupportTokensMiscBalanceStatus, FrameSystemAccountInfo, FrameSystemCall, FrameSystemError, FrameSystemEvent, FrameSystemEventRecord, FrameSystemExtensionsCheckGenesis, FrameSystemExtensionsCheckNonZeroSender, FrameSystemExtensionsCheckNonce, FrameSystemExtensionsCheckSpecVersion, FrameSystemExtensionsCheckTxVersion, FrameSystemExtensionsCheckWeight, FrameSystemLastRuntimeUpgradeInfo, FrameSystemLimitsBlockLength, FrameSystemLimitsBlockWeights, FrameSystemLimitsWeightsPerClass, FrameSystemPhase, JoystreamNodeRuntimeNposSolution16, JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeRuntime, JoystreamNodeRuntimeSessionKeys, PalletBabeCall, PalletBabeError, PalletBagsListCall, PalletBagsListError, PalletBagsListEvent, PalletBagsListListBag, PalletBagsListListListError, PalletBagsListListNode, PalletBalancesAccountData, PalletBalancesBalanceLock, PalletBalancesCall, PalletBalancesError, PalletBalancesEvent, PalletBalancesReasons, PalletBalancesReserveData, PalletBountyAssuranceContractTypeBTreeSet, PalletBountyAssuranceContractTypeBoundedBTreeSet, PalletBountyBountyActor, PalletBountyBountyMilestone, PalletBountyBountyParametersBTreeSet, PalletBountyBountyParametersBoundedBTreeSet, PalletBountyBountyRecord, PalletBountyCall, PalletBountyContribution, PalletBountyEntryRecord, PalletBountyError, PalletBountyFundingType, PalletBountyOracleWorkEntryJudgment, PalletBountyRawEvent, PalletCommonBalanceKind, PalletCommonBloatBondRepayableBloatBond, PalletCommonFreezablePallet, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonMerkleTreeSide, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletConstitutionCall, PalletConstitutionConstitutionInfo, PalletConstitutionRawEvent, PalletContentCall, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelOwner, PalletContentChannelPayoutsPayloadParametersRecord, PalletContentChannelRecord, PalletContentChannelTransferStatus, PalletContentChannelUpdateParametersRecord, PalletContentErrorsError, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentLimitPerPeriod, PalletContentNftCounter, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionBid, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesEnglishAuctionRecord, PalletContentNftTypesInitTransactionalStatusRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesNftOwner, PalletContentNftTypesOpenAuctionBidRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentNftTypesOpenAuctionRecord, PalletContentNftTypesOwnedNft, PalletContentNftTypesTransactionalStatusRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupCuratorGroupRecord, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentRawEvent, PalletContentStorageAssetsRecord, PalletContentTransferCommitmentParametersBTreeMap, PalletContentTransferCommitmentParametersBoundedBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoRecord, PalletContentVideoUpdateParametersRecord, PalletCouncilCall, PalletCouncilCandidate, PalletCouncilCouncilMember, PalletCouncilCouncilStage, PalletCouncilCouncilStageAnnouncing, PalletCouncilCouncilStageElection, PalletCouncilCouncilStageIdle, PalletCouncilCouncilStageUpdate, PalletCouncilError, PalletCouncilRawEvent, PalletElectionProviderMultiPhaseCall, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhaseError, PalletElectionProviderMultiPhaseEvent, PalletElectionProviderMultiPhasePhase, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseReadySolution, PalletElectionProviderMultiPhaseRoundSnapshot, PalletElectionProviderMultiPhaseSignedSignedSubmission, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumCall, PalletForumCategory, PalletForumError, PalletForumExtendedPostIdObject, PalletForumPost, PalletForumPrivilegedActor, PalletForumRawEvent, PalletForumThread, PalletGrandpaCall, PalletGrandpaError, PalletGrandpaEvent, PalletGrandpaStoredPendingChange, PalletGrandpaStoredState, PalletImOnlineBoundedOpaqueNetworkState, PalletImOnlineCall, PalletImOnlineError, PalletImOnlineEvent, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Public, PalletImOnlineSr25519AppSr25519Signature, PalletJoystreamUtilityCall, PalletJoystreamUtilityError, PalletJoystreamUtilityRawEvent, PalletMembershipBuyMembershipParameters, PalletMembershipCall, PalletMembershipCreateMemberParameters, PalletMembershipError, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMembershipMembershipObject, PalletMembershipRawEvent, PalletMembershipStakingAccountMemberBinding, PalletMultisigCall, PalletMultisigError, PalletMultisigEvent, PalletMultisigMultisig, PalletMultisigTimepoint, PalletOffencesEvent, PalletProjectTokenAccountData, PalletProjectTokenAmmCurve, PalletProjectTokenAmmParams, PalletProjectTokenCall, PalletProjectTokenErrorsError, PalletProjectTokenEventsRawEvent, PalletProjectTokenMerkleProof, PalletProjectTokenMerkleSide, PalletProjectTokenPatronageData, PalletProjectTokenPaymentWithVesting, PalletProjectTokenRevenueSplitInfo, PalletProjectTokenRevenueSplitState, PalletProjectTokenSingleDataObjectUploadParams, PalletProjectTokenStakingStatus, PalletProjectTokenTimeline, PalletProjectTokenTokenAllocation, PalletProjectTokenTokenData, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTokenSaleParams, PalletProjectTokenTransferPolicy, PalletProjectTokenTransferPolicyParams, PalletProjectTokenTransfers, PalletProjectTokenValidated, PalletProjectTokenValidatedPayment, PalletProjectTokenVestingSchedule, PalletProjectTokenVestingScheduleParams, PalletProjectTokenVestingSource, PalletProjectTokenWhitelistParams, PalletProposalsCodexCall, PalletProposalsCodexCreateOpeningParameters, PalletProposalsCodexError, PalletProposalsCodexFillOpeningParameters, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsCodexRawEvent, PalletProposalsCodexTerminateRoleParameters, PalletProposalsDiscussionCall, PalletProposalsDiscussionDiscussionPost, PalletProposalsDiscussionDiscussionThread, PalletProposalsDiscussionError, PalletProposalsDiscussionRawEvent, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsDiscussionThreadModeBoundedBTreeSet, PalletProposalsEngineCall, PalletProposalsEngineError, PalletProposalsEngineProposal, PalletProposalsEngineProposalParameters, PalletProposalsEngineProposalStatusesApprovedProposalDecision, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineRawEvent, PalletProposalsEngineVoteKind, PalletProposalsEngineVotingResults, PalletReferendumCall, PalletReferendumCastVote, PalletReferendumError, PalletReferendumInstance1, PalletReferendumOptionResult, PalletReferendumRawEvent, PalletReferendumReferendumStage, PalletReferendumReferendumStageRevealing, PalletReferendumReferendumStageVoting, PalletSessionCall, PalletSessionError, PalletSessionEvent, PalletStakingActiveEraInfo, PalletStakingEraRewardPoints, PalletStakingExposure, PalletStakingForcing, PalletStakingIndividualExposure, PalletStakingNominations, PalletStakingPalletCall, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingPalletError, PalletStakingPalletEvent, PalletStakingRewardDestination, PalletStakingSlashingSlashingSpans, PalletStakingSlashingSpanRecord, PalletStakingStakingLedger, PalletStakingUnappliedSlash, PalletStakingUnlockChunk, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageBagRecord, PalletStorageCall, PalletStorageDataObject, PalletStorageDataObjectCreationParameters, PalletStorageDistributionBucketFamilyRecord, PalletStorageDistributionBucketIdRecord, PalletStorageDistributionBucketRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagCreationPolicy, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageError, PalletStorageRawEvent, PalletStorageStaticBagId, PalletStorageStorageBucketOperatorStatus, PalletStorageStorageBucketRecord, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletTimestampCall, PalletTransactionPaymentChargeTransactionPayment, PalletTransactionPaymentEvent, PalletTransactionPaymentReleases, PalletUtilityCall, PalletUtilityError, PalletUtilityEvent, PalletVestingCall, PalletVestingError, PalletVestingEvent, PalletVestingReleases, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupCall, PalletWorkingGroupErrorsError, PalletWorkingGroupGroupWorker, PalletWorkingGroupInstance1, PalletWorkingGroupInstance2, PalletWorkingGroupInstance3, PalletWorkingGroupInstance4, PalletWorkingGroupInstance5, PalletWorkingGroupInstance6, PalletWorkingGroupInstance7, PalletWorkingGroupInstance8, PalletWorkingGroupInstance9, PalletWorkingGroupJobApplication, PalletWorkingGroupOpening, PalletWorkingGroupOpeningType, PalletWorkingGroupRawEventInstance1, PalletWorkingGroupRawEventInstance2, PalletWorkingGroupRawEventInstance3, PalletWorkingGroupRawEventInstance4, PalletWorkingGroupRawEventInstance5, PalletWorkingGroupRawEventInstance6, PalletWorkingGroupRawEventInstance7, PalletWorkingGroupRawEventInstance8, PalletWorkingGroupRawEventInstance9, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakeParameters, PalletWorkingGroupStakePolicy, SpArithmeticArithmeticError, SpAuthorityDiscoveryAppPublic, SpConsensusBabeAllowedSlots, SpConsensusBabeAppPublic, SpConsensusBabeBabeEpochConfiguration, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusBabeDigestsPreDigest, SpConsensusBabeDigestsPrimaryPreDigest, SpConsensusBabeDigestsSecondaryPlainPreDigest, SpConsensusBabeDigestsSecondaryVRFPreDigest, SpConsensusGrandpaAppPublic, SpConsensusGrandpaAppSignature, SpConsensusGrandpaEquivocation, SpConsensusGrandpaEquivocationProof, SpConsensusSlotsEquivocationProof, SpCoreCryptoKeyTypeId, SpCoreEcdsaSignature, SpCoreEd25519Public, SpCoreEd25519Signature, SpCoreOffchainOpaqueNetworkState, SpCoreSr25519Public, SpCoreSr25519Signature, SpCoreVoid, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeBlakeTwo256, SpRuntimeDigest, SpRuntimeDigestDigestItem, SpRuntimeDispatchError, SpRuntimeHeader, SpRuntimeModuleError, SpRuntimeMultiSignature, SpRuntimeTokenError, SpRuntimeTransactionalError, SpSessionMembershipProof, SpStakingOffenceOffenceDetails, SpVersionRuntimeVersion, SpWeightsRuntimeDbWeight, SpWeightsWeightV2Weight } from '@polkadot/types/lookup';
+import type { FinalityGrandpaEquivocationPrecommit, FinalityGrandpaEquivocationPrevote, FinalityGrandpaPrecommit, FinalityGrandpaPrevote, FrameSupportDispatchDispatchClass, FrameSupportDispatchDispatchInfo, FrameSupportDispatchPays, FrameSupportDispatchPerDispatchClassU32, FrameSupportDispatchPerDispatchClassWeight, FrameSupportDispatchPerDispatchClassWeightsPerClass, FrameSupportDispatchRawOrigin, FrameSupportTokensMiscBalanceStatus, FrameSystemAccountInfo, FrameSystemCall, FrameSystemError, FrameSystemEvent, FrameSystemEventRecord, FrameSystemExtensionsCheckGenesis, FrameSystemExtensionsCheckNonZeroSender, FrameSystemExtensionsCheckNonce, FrameSystemExtensionsCheckSpecVersion, FrameSystemExtensionsCheckTxVersion, FrameSystemExtensionsCheckWeight, FrameSystemLastRuntimeUpgradeInfo, FrameSystemLimitsBlockLength, FrameSystemLimitsBlockWeights, FrameSystemLimitsWeightsPerClass, FrameSystemPhase, JoystreamNodeRuntimeNposSolution16, JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeRuntime, JoystreamNodeRuntimeSessionKeys, PalletBabeCall, PalletBabeError, PalletBagsListCall, PalletBagsListError, PalletBagsListEvent, PalletBagsListListBag, PalletBagsListListListError, PalletBagsListListNode, PalletBalancesAccountData, PalletBalancesBalanceLock, PalletBalancesCall, PalletBalancesError, PalletBalancesEvent, PalletBalancesReasons, PalletBalancesReserveData, PalletBountyAssuranceContractTypeBTreeSet, PalletBountyAssuranceContractTypeBoundedBTreeSet, PalletBountyBountyActor, PalletBountyBountyMilestone, PalletBountyBountyParametersBTreeSet, PalletBountyBountyParametersBoundedBTreeSet, PalletBountyBountyRecord, PalletBountyCall, PalletBountyContribution, PalletBountyEntryRecord, PalletBountyError, PalletBountyFundingType, PalletBountyOracleWorkEntryJudgment, PalletBountyRawEvent, PalletCommonBalanceKind, PalletCommonBloatBondRepayableBloatBond, PalletCommonFreezablePallet, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonMerkleTreeSide, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletConstitutionCall, PalletConstitutionConstitutionInfo, PalletConstitutionRawEvent, PalletContentCall, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelOwner, PalletContentChannelPayoutsPayloadParametersRecord, PalletContentChannelRecord, PalletContentChannelTransferStatus, PalletContentChannelUpdateParametersRecord, PalletContentErrorsError, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentLimitPerPeriod, PalletContentNftCounter, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionBid, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesEnglishAuctionRecord, PalletContentNftTypesInitTransactionalStatusRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesNftOwner, PalletContentNftTypesOpenAuctionBidRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentNftTypesOpenAuctionRecord, PalletContentNftTypesOwnedNft, PalletContentNftTypesTransactionalStatusRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupCuratorGroupRecord, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentRawEvent, PalletContentStorageAssetsRecord, PalletContentTransferCommitmentParametersBTreeMap, PalletContentTransferCommitmentParametersBoundedBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoRecord, PalletContentVideoUpdateParametersRecord, PalletCouncilCall, PalletCouncilCandidate, PalletCouncilCouncilMember, PalletCouncilCouncilStage, PalletCouncilCouncilStageAnnouncing, PalletCouncilCouncilStageElection, PalletCouncilCouncilStageIdle, PalletCouncilCouncilStageUpdate, PalletCouncilError, PalletCouncilRawEvent, PalletElectionProviderMultiPhaseCall, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhaseError, PalletElectionProviderMultiPhaseEvent, PalletElectionProviderMultiPhasePhase, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseReadySolution, PalletElectionProviderMultiPhaseRoundSnapshot, PalletElectionProviderMultiPhaseSignedSignedSubmission, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumCall, PalletForumCategory, PalletForumError, PalletForumExtendedPostIdObject, PalletForumPost, PalletForumPrivilegedActor, PalletForumRawEvent, PalletForumThread, PalletGrandpaCall, PalletGrandpaError, PalletGrandpaEvent, PalletGrandpaStoredPendingChange, PalletGrandpaStoredState, PalletImOnlineBoundedOpaqueNetworkState, PalletImOnlineCall, PalletImOnlineError, PalletImOnlineEvent, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Public, PalletImOnlineSr25519AppSr25519Signature, PalletJoystreamUtilityCall, PalletJoystreamUtilityError, PalletJoystreamUtilityRawEvent, PalletMembershipBuyMembershipParameters, PalletMembershipCall, PalletMembershipCreateMemberParameters, PalletMembershipError, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMembershipMembershipObject, PalletMembershipRawEvent, PalletMembershipStakingAccountMemberBinding, PalletMultisigCall, PalletMultisigError, PalletMultisigEvent, PalletMultisigMultisig, PalletMultisigTimepoint, PalletOffencesEvent, PalletProjectTokenAccountData, PalletProjectTokenAmmCurve, PalletProjectTokenAmmParams, PalletProjectTokenCall, PalletProjectTokenErrorsError, PalletProjectTokenEventsRawEvent, PalletProjectTokenMerkleProof, PalletProjectTokenMerkleSide, PalletProjectTokenPatronageData, PalletProjectTokenPaymentWithVesting, PalletProjectTokenRevenueSplitInfo, PalletProjectTokenRevenueSplitState, PalletProjectTokenSingleDataObjectUploadParams, PalletProjectTokenStakingStatus, PalletProjectTokenTimeline, PalletProjectTokenTokenAllocation, PalletProjectTokenTokenConstraints, PalletProjectTokenTokenData, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTokenSaleParams, PalletProjectTokenTransferPolicy, PalletProjectTokenTransferPolicyParams, PalletProjectTokenTransfers, PalletProjectTokenValidated, PalletProjectTokenValidatedPayment, PalletProjectTokenVestingSchedule, PalletProjectTokenVestingScheduleParams, PalletProjectTokenVestingSource, PalletProjectTokenWhitelistParams, PalletProposalsCodexCall, PalletProposalsCodexCreateOpeningParameters, PalletProposalsCodexError, PalletProposalsCodexFillOpeningParameters, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsCodexRawEvent, PalletProposalsCodexTerminateRoleParameters, PalletProposalsDiscussionCall, PalletProposalsDiscussionDiscussionPost, PalletProposalsDiscussionDiscussionThread, PalletProposalsDiscussionError, PalletProposalsDiscussionRawEvent, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsDiscussionThreadModeBoundedBTreeSet, PalletProposalsEngineCall, PalletProposalsEngineError, PalletProposalsEngineProposal, PalletProposalsEngineProposalParameters, PalletProposalsEngineProposalStatusesApprovedProposalDecision, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineRawEvent, PalletProposalsEngineVoteKind, PalletProposalsEngineVotingResults, PalletReferendumCall, PalletReferendumCastVote, PalletReferendumError, PalletReferendumInstance1, PalletReferendumOptionResult, PalletReferendumRawEvent, PalletReferendumReferendumStage, PalletReferendumReferendumStageRevealing, PalletReferendumReferendumStageVoting, PalletSessionCall, PalletSessionError, PalletSessionEvent, PalletStakingActiveEraInfo, PalletStakingEraRewardPoints, PalletStakingExposure, PalletStakingForcing, PalletStakingIndividualExposure, PalletStakingNominations, PalletStakingPalletCall, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingPalletError, PalletStakingPalletEvent, PalletStakingRewardDestination, PalletStakingSlashingSlashingSpans, PalletStakingSlashingSpanRecord, PalletStakingStakingLedger, PalletStakingUnappliedSlash, PalletStakingUnlockChunk, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageBagRecord, PalletStorageCall, PalletStorageDataObject, PalletStorageDataObjectCreationParameters, PalletStorageDistributionBucketFamilyRecord, PalletStorageDistributionBucketIdRecord, PalletStorageDistributionBucketRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagCreationPolicy, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageError, PalletStorageRawEvent, PalletStorageStaticBagId, PalletStorageStorageBucketOperatorStatus, PalletStorageStorageBucketRecord, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletTimestampCall, PalletTransactionPaymentChargeTransactionPayment, PalletTransactionPaymentEvent, PalletTransactionPaymentReleases, PalletUtilityCall, PalletUtilityError, PalletUtilityEvent, PalletVestingCall, PalletVestingError, PalletVestingEvent, PalletVestingReleases, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupCall, PalletWorkingGroupErrorsError, PalletWorkingGroupGroupWorker, PalletWorkingGroupInstance1, PalletWorkingGroupInstance2, PalletWorkingGroupInstance3, PalletWorkingGroupInstance4, PalletWorkingGroupInstance5, PalletWorkingGroupInstance6, PalletWorkingGroupInstance7, PalletWorkingGroupInstance8, PalletWorkingGroupInstance9, PalletWorkingGroupJobApplication, PalletWorkingGroupOpening, PalletWorkingGroupOpeningType, PalletWorkingGroupRawEventInstance1, PalletWorkingGroupRawEventInstance2, PalletWorkingGroupRawEventInstance3, PalletWorkingGroupRawEventInstance4, PalletWorkingGroupRawEventInstance5, PalletWorkingGroupRawEventInstance6, PalletWorkingGroupRawEventInstance7, PalletWorkingGroupRawEventInstance8, PalletWorkingGroupRawEventInstance9, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakeParameters, PalletWorkingGroupStakePolicy, SpArithmeticArithmeticError, SpAuthorityDiscoveryAppPublic, SpConsensusBabeAllowedSlots, SpConsensusBabeAppPublic, SpConsensusBabeBabeEpochConfiguration, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusBabeDigestsPreDigest, SpConsensusBabeDigestsPrimaryPreDigest, SpConsensusBabeDigestsSecondaryPlainPreDigest, SpConsensusBabeDigestsSecondaryVRFPreDigest, SpConsensusGrandpaAppPublic, SpConsensusGrandpaAppSignature, SpConsensusGrandpaEquivocation, SpConsensusGrandpaEquivocationProof, SpConsensusSlotsEquivocationProof, SpCoreCryptoKeyTypeId, SpCoreEcdsaSignature, SpCoreEd25519Public, SpCoreEd25519Signature, SpCoreOffchainOpaqueNetworkState, SpCoreSr25519Public, SpCoreSr25519Signature, SpCoreVoid, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeBlakeTwo256, SpRuntimeDigest, SpRuntimeDigestDigestItem, SpRuntimeDispatchError, SpRuntimeHeader, SpRuntimeModuleError, SpRuntimeMultiSignature, SpRuntimeTokenError, SpRuntimeTransactionalError, SpSessionMembershipProof, SpStakingOffenceOffenceDetails, SpVersionRuntimeVersion, SpWeightsRuntimeDbWeight, SpWeightsWeightV2Weight } from '@polkadot/types/lookup';
 
 declare module '@polkadot/types/types/registry' {
   interface InterfaceTypes {
@@ -194,6 +194,7 @@ declare module '@polkadot/types/types/registry' {
     PalletProjectTokenStakingStatus: PalletProjectTokenStakingStatus;
     PalletProjectTokenTimeline: PalletProjectTokenTimeline;
     PalletProjectTokenTokenAllocation: PalletProjectTokenTokenAllocation;
+    PalletProjectTokenTokenConstraints: PalletProjectTokenTokenConstraints;
     PalletProjectTokenTokenData: PalletProjectTokenTokenData;
     PalletProjectTokenTokenIssuanceParameters: PalletProjectTokenTokenIssuanceParameters;
     PalletProjectTokenTokenSale: PalletProjectTokenTokenSale;
diff --git a/src/augment/types-lookup.ts b/src/augment/types-lookup.ts
index a531a38dfed759679fe57c67a40242b9a7a5e5eb..b7976b26c0d8366b29a0130bd2363a893cfe1427 100644
--- a/src/augment/types-lookup.ts
+++ b/src/augment/types-lookup.ts
@@ -587,6 +587,8 @@ declare module '@polkadot/types/lookup' {
     readonly asBudgetIncrementUpdated: u128;
     readonly isCouncilorRewardUpdated: boolean;
     readonly asCouncilorRewardUpdated: u128;
+    readonly isCouncilBudgetDecreased: boolean;
+    readonly asCouncilBudgetDecreased: u128;
     readonly isRequestFunded: boolean;
     readonly asRequestFunded: ITuple<[AccountId32, u128]>;
     readonly isCouncilBudgetFunded: boolean;
@@ -595,10 +597,12 @@ declare module '@polkadot/types/lookup' {
     readonly asCouncilorRemarked: ITuple<[u64, Bytes]>;
     readonly isCandidateRemarked: boolean;
     readonly asCandidateRemarked: ITuple<[u64, Bytes]>;
-    readonly type: 'AnnouncingPeriodStarted' | 'NotEnoughCandidates' | 'VotingPeriodStarted' | 'NewCandidate' | 'NewCouncilElected' | 'NewCouncilNotElected' | 'CandidacyStakeRelease' | 'CandidacyWithdraw' | 'CandidacyNoteSet' | 'RewardPayment' | 'BudgetBalanceSet' | 'BudgetRefill' | 'BudgetRefillPlanned' | 'BudgetIncrementUpdated' | 'CouncilorRewardUpdated' | 'RequestFunded' | 'CouncilBudgetFunded' | 'CouncilorRemarked' | 'CandidateRemarked';
+    readonly isEraPayoutDampingFactorSet: boolean;
+    readonly asEraPayoutDampingFactorSet: Percent;
+    readonly type: 'AnnouncingPeriodStarted' | 'NotEnoughCandidates' | 'VotingPeriodStarted' | 'NewCandidate' | 'NewCouncilElected' | 'NewCouncilNotElected' | 'CandidacyStakeRelease' | 'CandidacyWithdraw' | 'CandidacyNoteSet' | 'RewardPayment' | 'BudgetBalanceSet' | 'BudgetRefill' | 'BudgetRefillPlanned' | 'BudgetIncrementUpdated' | 'CouncilorRewardUpdated' | 'CouncilBudgetDecreased' | 'RequestFunded' | 'CouncilBudgetFunded' | 'CouncilorRemarked' | 'CandidateRemarked' | 'EraPayoutDampingFactorSet';
   }
 
-  /** @name PalletReferendumRawEvent (70) */
+  /** @name PalletReferendumRawEvent (71) */
   interface PalletReferendumRawEvent extends Enum {
     readonly isReferendumStarted: boolean;
     readonly asReferendumStarted: ITuple<[u32, u32]>;
@@ -619,16 +623,16 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ReferendumStarted' | 'ReferendumStartedForcefully' | 'RevealingStageStarted' | 'ReferendumFinished' | 'VoteCast' | 'VoteRevealed' | 'StakeReleased' | 'AccountOptedOutOfVoting';
   }
 
-  /** @name PalletReferendumInstance1 (71) */
+  /** @name PalletReferendumInstance1 (72) */
   type PalletReferendumInstance1 = Null;
 
-  /** @name PalletReferendumOptionResult (73) */
+  /** @name PalletReferendumOptionResult (74) */
   interface PalletReferendumOptionResult extends Struct {
     readonly optionId: u64;
     readonly votePower: u128;
   }
 
-  /** @name PalletMembershipRawEvent (74) */
+  /** @name PalletMembershipRawEvent (75) */
   interface PalletMembershipRawEvent extends Enum {
     readonly isMemberInvited: boolean;
     readonly asMemberInvited: ITuple<[u64, PalletMembershipInviteMembershipParameters, u128]>;
@@ -667,7 +671,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'MemberInvited' | 'MembershipGifted' | 'MembershipBought' | 'MemberProfileUpdated' | 'MemberAccountsUpdated' | 'MemberVerificationStatusUpdated' | 'ReferralCutUpdated' | 'InvitesTransferred' | 'MembershipPriceUpdated' | 'InitialInvitationBalanceUpdated' | 'LeaderInvitationQuotaUpdated' | 'InitialInvitationCountUpdated' | 'StakingAccountAdded' | 'StakingAccountRemoved' | 'StakingAccountConfirmed' | 'MemberRemarked' | 'MemberCreated';
   }
 
-  /** @name PalletMembershipBuyMembershipParameters (75) */
+  /** @name PalletMembershipBuyMembershipParameters (76) */
   interface PalletMembershipBuyMembershipParameters extends Struct {
     readonly rootAccount: AccountId32;
     readonly controllerAccount: AccountId32;
@@ -676,7 +680,7 @@ declare module '@polkadot/types/lookup' {
     readonly referrerId: Option<u64>;
   }
 
-  /** @name PalletMembershipInviteMembershipParameters (78) */
+  /** @name PalletMembershipInviteMembershipParameters (79) */
   interface PalletMembershipInviteMembershipParameters extends Struct {
     readonly invitingMemberId: u64;
     readonly rootAccount: AccountId32;
@@ -685,7 +689,7 @@ declare module '@polkadot/types/lookup' {
     readonly metadata: Bytes;
   }
 
-  /** @name PalletMembershipCreateMemberParameters (79) */
+  /** @name PalletMembershipCreateMemberParameters (80) */
   interface PalletMembershipCreateMemberParameters extends Struct {
     readonly rootAccount: AccountId32;
     readonly controllerAccount: AccountId32;
@@ -694,7 +698,7 @@ declare module '@polkadot/types/lookup' {
     readonly isFoundingMember: bool;
   }
 
-  /** @name PalletMembershipGiftMembershipParameters (80) */
+  /** @name PalletMembershipGiftMembershipParameters (81) */
   interface PalletMembershipGiftMembershipParameters extends Struct {
     readonly rootAccount: AccountId32;
     readonly controllerAccount: AccountId32;
@@ -706,7 +710,7 @@ declare module '@polkadot/types/lookup' {
     readonly applyRootAccountInvitationLock: Option<u128>;
   }
 
-  /** @name PalletForumRawEvent (84) */
+  /** @name PalletForumRawEvent (85) */
   interface PalletForumRawEvent extends Enum {
     readonly isCategoryCreated: boolean;
     readonly asCategoryCreated: ITuple<[u64, Option<u64>, Bytes, Bytes]>;
@@ -745,7 +749,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'CategoryCreated' | 'CategoryArchivalStatusUpdated' | 'CategoryTitleUpdated' | 'CategoryDescriptionUpdated' | 'CategoryDeleted' | 'ThreadCreated' | 'ThreadModerated' | 'ThreadUpdated' | 'ThreadMetadataUpdated' | 'ThreadDeleted' | 'ThreadMoved' | 'PostAdded' | 'PostModerated' | 'PostDeleted' | 'PostTextUpdated' | 'CategoryStickyThreadUpdate' | 'CategoryMembershipOfModeratorUpdated';
   }
 
-  /** @name PalletForumPrivilegedActor (85) */
+  /** @name PalletForumPrivilegedActor (86) */
   interface PalletForumPrivilegedActor extends Enum {
     readonly isLead: boolean;
     readonly isModerator: boolean;
@@ -753,21 +757,21 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Lead' | 'Moderator';
   }
 
-  /** @name PalletForumExtendedPostIdObject (86) */
+  /** @name PalletForumExtendedPostIdObject (87) */
   interface PalletForumExtendedPostIdObject extends Struct {
     readonly categoryId: u64;
     readonly threadId: u64;
     readonly postId: u64;
   }
 
-  /** @name PalletConstitutionRawEvent (91) */
+  /** @name PalletConstitutionRawEvent (92) */
   interface PalletConstitutionRawEvent extends Enum {
     readonly isConstutionAmended: boolean;
     readonly asConstutionAmended: ITuple<[H256, Bytes]>;
     readonly type: 'ConstutionAmended';
   }
 
-  /** @name PalletBountyRawEvent (92) */
+  /** @name PalletBountyRawEvent (93) */
   interface PalletBountyRawEvent extends Enum {
     readonly isBountyCreated: boolean;
     readonly asBountyCreated: ITuple<[u64, PalletBountyBountyParametersBTreeSet, Bytes]>;
@@ -818,7 +822,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'BountyCreated' | 'BountyOracleSwitched' | 'BountyTerminated' | 'BountyFunded' | 'BountyMaxFundingReached' | 'BountyFundingWithdrawal' | 'BountyCreatorCherryWithdrawal' | 'BountyCreatorOracleRewardWithdrawal' | 'BountyOracleRewardWithdrawal' | 'BountyRemoved' | 'WorkEntryAnnounced' | 'WorkSubmitted' | 'OracleJudgmentSubmitted' | 'WorkEntrantFundsWithdrawn' | 'BountyContributorRemarked' | 'BountyOracleRemarked' | 'BountyEntrantRemarked' | 'BountyCreatorRemarked' | 'WorkSubmissionPeriodEnded' | 'WorkEntrantStakeUnlocked' | 'WorkEntrantStakeSlashed' | 'FunderStateBloatBondWithdrawn' | 'CreatorStateBloatBondWithdrawn';
   }
 
-  /** @name PalletBountyBountyParametersBTreeSet (93) */
+  /** @name PalletBountyBountyParametersBTreeSet (94) */
   interface PalletBountyBountyParametersBTreeSet extends Struct {
     readonly oracle: PalletBountyBountyActor;
     readonly contractType: PalletBountyAssuranceContractTypeBTreeSet;
@@ -829,7 +833,7 @@ declare module '@polkadot/types/lookup' {
     readonly fundingType: PalletBountyFundingType;
   }
 
-  /** @name PalletBountyBountyActor (94) */
+  /** @name PalletBountyBountyActor (95) */
   interface PalletBountyBountyActor extends Enum {
     readonly isCouncil: boolean;
     readonly isMember: boolean;
@@ -837,7 +841,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Council' | 'Member';
   }
 
-  /** @name PalletBountyAssuranceContractTypeBTreeSet (95) */
+  /** @name PalletBountyAssuranceContractTypeBTreeSet (96) */
   interface PalletBountyAssuranceContractTypeBTreeSet extends Enum {
     readonly isOpen: boolean;
     readonly isClosed: boolean;
@@ -845,7 +849,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Open' | 'Closed';
   }
 
-  /** @name PalletBountyFundingType (96) */
+  /** @name PalletBountyFundingType (97) */
   interface PalletBountyFundingType extends Enum {
     readonly isPerpetual: boolean;
     readonly asPerpetual: {
@@ -859,7 +863,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Perpetual' | 'Limited';
   }
 
-  /** @name PalletBountyOracleWorkEntryJudgment (98) */
+  /** @name PalletBountyOracleWorkEntryJudgment (99) */
   interface PalletBountyOracleWorkEntryJudgment extends Enum {
     readonly isWinner: boolean;
     readonly asWinner: {
@@ -873,7 +877,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Winner' | 'Rejected';
   }
 
-  /** @name PalletJoystreamUtilityRawEvent (101) */
+  /** @name PalletJoystreamUtilityRawEvent (102) */
   interface PalletJoystreamUtilityRawEvent extends Enum {
     readonly isSignaled: boolean;
     readonly asSignaled: Bytes;
@@ -886,7 +890,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Signaled' | 'RuntimeUpgraded' | 'UpdatedWorkingGroupBudget' | 'TokensBurned';
   }
 
-  /** @name PalletCommonWorkingGroupIterableEnumsWorkingGroup (102) */
+  /** @name PalletCommonWorkingGroupIterableEnumsWorkingGroup (103) */
   interface PalletCommonWorkingGroupIterableEnumsWorkingGroup extends Enum {
     readonly isForum: boolean;
     readonly isStorage: boolean;
@@ -900,14 +904,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Forum' | 'Storage' | 'Content' | 'OperationsAlpha' | 'App' | 'Distribution' | 'OperationsBeta' | 'OperationsGamma' | 'Membership';
   }
 
-  /** @name PalletCommonBalanceKind (103) */
+  /** @name PalletCommonBalanceKind (104) */
   interface PalletCommonBalanceKind extends Enum {
     readonly isPositive: boolean;
     readonly isNegative: boolean;
     readonly type: 'Positive' | 'Negative';
   }
 
-  /** @name PalletContentRawEvent (104) */
+  /** @name PalletContentRawEvent (105) */
   interface PalletContentRawEvent extends Enum {
     readonly isCuratorGroupCreated: boolean;
     readonly asCuratorGroupCreated: u64;
@@ -1018,7 +1022,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'CuratorGroupCreated' | 'CuratorGroupPermissionsUpdated' | 'CuratorGroupStatusSet' | 'CuratorAdded' | 'CuratorRemoved' | 'ChannelCreated' | 'ChannelUpdated' | 'ChannelPrivilegeLevelUpdated' | 'ChannelStateBloatBondValueUpdated' | 'VideoStateBloatBondValueUpdated' | 'ChannelAssetsRemoved' | 'ChannelDeleted' | 'ChannelVisibilitySetByModerator' | 'ChannelPausedFeaturesUpdatedByModerator' | 'ChannelAssetsDeletedByModerator' | 'ChannelFundsWithdrawn' | 'ChannelRewardClaimedAndWithdrawn' | 'VideoCreated' | 'VideoUpdated' | 'VideoDeleted' | 'VideoVisibilitySetByModerator' | 'VideoAssetsDeletedByModerator' | 'ChannelPayoutsUpdated' | 'ChannelRewardUpdated' | 'EnglishAuctionStarted' | 'OpenAuctionStarted' | 'NftIssued' | 'NftDestroyed' | 'AuctionBidMade' | 'AuctionBidCanceled' | 'AuctionCanceled' | 'EnglishAuctionSettled' | 'BidMadeCompletingAuction' | 'OpenAuctionBidAccepted' | 'OfferStarted' | 'OfferAccepted' | 'OfferCanceled' | 'NftSellOrderMade' | 'NftBought' | 'BuyNowCanceled' | 'BuyNowPriceUpdated' | 'NftSlingedBackToTheOriginalArtist' | 'ChannelOwnerRemarked' | 'ChannelAgentRemarked' | 'NftOwnerRemarked' | 'InitializedChannelTransfer' | 'CancelChannelTransfer' | 'ChannelTransferAccepted' | 'GlobalNftLimitUpdated' | 'ChannelNftLimitUpdated' | 'ToggledNftLimits' | 'CreatorTokenIssued' | 'CreatorTokenIssuerRemarked';
   }
 
-  /** @name PalletContentPermissionsContentActor (105) */
+  /** @name PalletContentPermissionsContentActor (106) */
   interface PalletContentPermissionsContentActor extends Enum {
     readonly isCurator: boolean;
     readonly asCurator: ITuple<[u64, u64]>;
@@ -1028,7 +1032,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Curator' | 'Member' | 'Lead';
   }
 
-  /** @name PalletContentChannelRecord (106) */
+  /** @name PalletContentChannelRecord (107) */
   interface PalletContentChannelRecord extends Struct {
     readonly owner: PalletContentChannelOwner;
     readonly numVideos: u64;
@@ -1046,7 +1050,7 @@ declare module '@polkadot/types/lookup' {
     readonly channelStateBloatBond: PalletCommonBloatBondRepayableBloatBond;
   }
 
-  /** @name PalletContentIterableEnumsChannelActionPermission (110) */
+  /** @name PalletContentIterableEnumsChannelActionPermission (111) */
   interface PalletContentIterableEnumsChannelActionPermission extends Enum {
     readonly isUpdateChannelMetadata: boolean;
     readonly isManageNonVideoChannelAssets: boolean;
@@ -1073,7 +1077,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'UpdateChannelMetadata' | 'ManageNonVideoChannelAssets' | 'ManageChannelCollaborators' | 'UpdateVideoMetadata' | 'AddVideo' | 'ManageVideoAssets' | 'DeleteChannel' | 'DeleteVideo' | 'ManageVideoNfts' | 'AgentRemark' | 'TransferChannel' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'IssueCreatorToken' | 'ClaimCreatorTokenPatronage' | 'InitAndManageCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRate' | 'ManageRevenueSplits' | 'DeissueCreatorToken' | 'AmmControl';
   }
 
-  /** @name PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature (117) */
+  /** @name PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature (118) */
   interface PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature extends Enum {
     readonly isChannelFundsTransfer: boolean;
     readonly isCreatorCashout: boolean;
@@ -1085,13 +1089,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ChannelFundsTransfer' | 'CreatorCashout' | 'VideoNftIssuance' | 'VideoCreation' | 'VideoUpdate' | 'ChannelUpdate' | 'CreatorTokenIssuance';
   }
 
-  /** @name PalletCommonBloatBondRepayableBloatBond (120) */
+  /** @name PalletCommonBloatBondRepayableBloatBond (121) */
   interface PalletCommonBloatBondRepayableBloatBond extends Struct {
     readonly repaymentRestrictedTo: Option<AccountId32>;
     readonly amount: u128;
   }
 
-  /** @name PalletContentChannelOwner (121) */
+  /** @name PalletContentChannelOwner (122) */
   interface PalletContentChannelOwner extends Enum {
     readonly isMember: boolean;
     readonly asMember: u64;
@@ -1100,7 +1104,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Member' | 'CuratorGroup';
   }
 
-  /** @name PalletContentChannelTransferStatus (122) */
+  /** @name PalletContentChannelTransferStatus (123) */
   interface PalletContentChannelTransferStatus extends Enum {
     readonly isNoActiveTransfer: boolean;
     readonly isPendingTransfer: boolean;
@@ -1108,32 +1112,32 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'NoActiveTransfer' | 'PendingTransfer';
   }
 
-  /** @name PalletContentPendingTransfer (123) */
+  /** @name PalletContentPendingTransfer (124) */
   interface PalletContentPendingTransfer extends Struct {
     readonly newOwner: PalletContentChannelOwner;
     readonly transferParams: PalletContentTransferCommitmentParametersBoundedBTreeMap;
   }
 
-  /** @name PalletContentTransferCommitmentParametersBoundedBTreeMap (124) */
+  /** @name PalletContentTransferCommitmentParametersBoundedBTreeMap (125) */
   interface PalletContentTransferCommitmentParametersBoundedBTreeMap extends Struct {
     readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
     readonly price: u128;
     readonly transferId: u64;
   }
 
-  /** @name PalletContentLimitPerPeriod (125) */
+  /** @name PalletContentLimitPerPeriod (126) */
   interface PalletContentLimitPerPeriod extends Struct {
     readonly limit: u64;
     readonly blockNumberPeriod: u32;
   }
 
-  /** @name PalletContentNftCounter (126) */
+  /** @name PalletContentNftCounter (127) */
   interface PalletContentNftCounter extends Struct {
     readonly counter: u64;
     readonly lastUpdated: u32;
   }
 
-  /** @name PalletContentNftTypesEnglishAuctionParamsRecord (127) */
+  /** @name PalletContentNftTypesEnglishAuctionParamsRecord (128) */
   interface PalletContentNftTypesEnglishAuctionParamsRecord extends Struct {
     readonly startingPrice: u128;
     readonly buyNowPrice: Option<u128>;
@@ -1144,7 +1148,7 @@ declare module '@polkadot/types/lookup' {
     readonly minBidStep: u128;
   }
 
-  /** @name PalletContentNftTypesOpenAuctionParamsRecord (129) */
+  /** @name PalletContentNftTypesOpenAuctionParamsRecord (130) */
   interface PalletContentNftTypesOpenAuctionParamsRecord extends Struct {
     readonly startingPrice: u128;
     readonly buyNowPrice: Option<u128>;
@@ -1153,7 +1157,7 @@ declare module '@polkadot/types/lookup' {
     readonly bidLockDuration: u32;
   }
 
-  /** @name PalletContentNftTypesNftIssuanceParametersRecord (130) */
+  /** @name PalletContentNftTypesNftIssuanceParametersRecord (131) */
   interface PalletContentNftTypesNftIssuanceParametersRecord extends Struct {
     readonly royalty: Option<Perbill>;
     readonly nftMetadata: Bytes;
@@ -1161,7 +1165,7 @@ declare module '@polkadot/types/lookup' {
     readonly initTransactionalStatus: PalletContentNftTypesInitTransactionalStatusRecord;
   }
 
-  /** @name PalletContentNftTypesInitTransactionalStatusRecord (131) */
+  /** @name PalletContentNftTypesInitTransactionalStatusRecord (132) */
   interface PalletContentNftTypesInitTransactionalStatusRecord extends Enum {
     readonly isIdle: boolean;
     readonly isBuyNow: boolean;
@@ -1175,7 +1179,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Idle' | 'BuyNow' | 'InitiatedOfferToMember' | 'EnglishAuction' | 'OpenAuction';
   }
 
-  /** @name PalletContentChannelCreationParametersRecord (133) */
+  /** @name PalletContentChannelCreationParametersRecord (134) */
   interface PalletContentChannelCreationParametersRecord extends Struct {
     readonly assets: Option<PalletContentStorageAssetsRecord>;
     readonly meta: Option<Bytes>;
@@ -1186,25 +1190,25 @@ declare module '@polkadot/types/lookup' {
     readonly expectedDataObjectStateBloatBond: u128;
   }
 
-  /** @name PalletContentStorageAssetsRecord (134) */
+  /** @name PalletContentStorageAssetsRecord (135) */
   interface PalletContentStorageAssetsRecord extends Struct {
     readonly objectCreationList: Vec<PalletStorageDataObjectCreationParameters>;
     readonly expectedDataSizeFee: u128;
   }
 
-  /** @name PalletStorageDataObjectCreationParameters (136) */
+  /** @name PalletStorageDataObjectCreationParameters (137) */
   interface PalletStorageDataObjectCreationParameters extends Struct {
     readonly size_: u64;
     readonly ipfsContentId: Bytes;
   }
 
-  /** @name PalletStorageDistributionBucketIdRecord (137) */
+  /** @name PalletStorageDistributionBucketIdRecord (138) */
   interface PalletStorageDistributionBucketIdRecord extends Struct {
     readonly distributionBucketFamilyId: u64;
     readonly distributionBucketIndex: u64;
   }
 
-  /** @name PalletContentChannelUpdateParametersRecord (144) */
+  /** @name PalletContentChannelUpdateParametersRecord (145) */
   interface PalletContentChannelUpdateParametersRecord extends Struct {
     readonly assetsToUpload: Option<PalletContentStorageAssetsRecord>;
     readonly newMeta: Option<Bytes>;
@@ -1214,7 +1218,7 @@ declare module '@polkadot/types/lookup' {
     readonly storageBucketsNumWitness: Option<u32>;
   }
 
-  /** @name PalletContentVideoCreationParametersRecord (146) */
+  /** @name PalletContentVideoCreationParametersRecord (147) */
   interface PalletContentVideoCreationParametersRecord extends Struct {
     readonly assets: Option<PalletContentStorageAssetsRecord>;
     readonly meta: Option<Bytes>;
@@ -1224,7 +1228,7 @@ declare module '@polkadot/types/lookup' {
     readonly storageBucketsNumWitness: u32;
   }
 
-  /** @name PalletContentVideoUpdateParametersRecord (148) */
+  /** @name PalletContentVideoUpdateParametersRecord (149) */
   interface PalletContentVideoUpdateParametersRecord extends Struct {
     readonly assetsToUpload: Option<PalletContentStorageAssetsRecord>;
     readonly newMeta: Option<Bytes>;
@@ -1234,7 +1238,7 @@ declare module '@polkadot/types/lookup' {
     readonly storageBucketsNumWitness: Option<u32>;
   }
 
-  /** @name PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction (151) */
+  /** @name PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction (152) */
   interface PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction extends Enum {
     readonly isHideVideo: boolean;
     readonly isHideChannel: boolean;
@@ -1247,14 +1251,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'HideVideo' | 'HideChannel' | 'ChangeChannelFeatureStatus' | 'DeleteVideoAssets' | 'DeleteNonVideoChannelAssets' | 'UpdateChannelNftLimits';
   }
 
-  /** @name PalletContentTransferCommitmentParametersBTreeMap (155) */
+  /** @name PalletContentTransferCommitmentParametersBTreeMap (156) */
   interface PalletContentTransferCommitmentParametersBTreeMap extends Struct {
     readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
     readonly price: u128;
     readonly transferId: u64;
   }
 
-  /** @name PalletContentUpdateChannelPayoutsParametersRecord (156) */
+  /** @name PalletContentUpdateChannelPayoutsParametersRecord (157) */
   interface PalletContentUpdateChannelPayoutsParametersRecord extends Struct {
     readonly commitment: Option<H256>;
     readonly payload: Option<PalletContentChannelPayoutsPayloadParametersRecord>;
@@ -1263,14 +1267,14 @@ declare module '@polkadot/types/lookup' {
     readonly channelCashoutsEnabled: Option<bool>;
   }
 
-  /** @name PalletContentChannelPayoutsPayloadParametersRecord (157) */
+  /** @name PalletContentChannelPayoutsPayloadParametersRecord (158) */
   interface PalletContentChannelPayoutsPayloadParametersRecord extends Struct {
     readonly objectCreationParams: PalletStorageDataObjectCreationParameters;
     readonly expectedDataSizeFee: u128;
     readonly expectedDataObjectStateBloatBond: u128;
   }
 
-  /** @name PalletContentChannelFundsDestination (161) */
+  /** @name PalletContentChannelFundsDestination (162) */
   interface PalletContentChannelFundsDestination extends Enum {
     readonly isAccountId: boolean;
     readonly asAccountId: AccountId32;
@@ -1278,14 +1282,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'AccountId' | 'CouncilBudget';
   }
 
-  /** @name PalletContentNftLimitPeriod (162) */
+  /** @name PalletContentNftLimitPeriod (163) */
   interface PalletContentNftLimitPeriod extends Enum {
     readonly isDaily: boolean;
     readonly isWeekly: boolean;
     readonly type: 'Daily' | 'Weekly';
   }
 
-  /** @name PalletStorageRawEvent (163) */
+  /** @name PalletStorageRawEvent (164) */
   interface PalletStorageRawEvent extends Enum {
     readonly isStorageBucketCreated: boolean;
     readonly asStorageBucketCreated: ITuple<[u64, Option<u64>, bool, u64, u64]>;
@@ -1374,7 +1378,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'StorageBucketCreated' | 'StorageBucketInvitationAccepted' | 'StorageBucketsUpdatedForBag' | 'DataObjectsUploaded' | 'StorageOperatorMetadataSet' | 'StorageBucketVoucherLimitsSet' | 'PendingDataObjectsAccepted' | 'StorageBucketInvitationCancelled' | 'StorageBucketOperatorInvited' | 'StorageBucketOperatorRemoved' | 'UploadingBlockStatusUpdated' | 'DataObjectPerMegabyteFeeUpdated' | 'StorageBucketsPerBagLimitUpdated' | 'StorageBucketsVoucherMaxLimitsUpdated' | 'DataObjectsMoved' | 'DataObjectsDeleted' | 'StorageBucketStatusUpdated' | 'UpdateBlacklist' | 'DynamicBagDeleted' | 'DynamicBagCreated' | 'VoucherChanged' | 'StorageBucketDeleted' | 'NumberOfStorageBucketsInDynamicBagCreationPolicyUpdated' | 'DistributionBucketFamilyCreated' | 'DistributionBucketFamilyDeleted' | 'DistributionBucketCreated' | 'DistributionBucketStatusUpdated' | 'DistributionBucketDeleted' | 'DistributionBucketsUpdatedForBag' | 'DistributionBucketsPerBagLimitUpdated' | 'DistributionBucketModeUpdated' | 'FamiliesInDynamicBagCreationPolicyUpdated' | 'DistributionBucketOperatorInvited' | 'DistributionBucketInvitationCancelled' | 'DistributionBucketInvitationAccepted' | 'DistributionBucketMetadataSet' | 'DistributionBucketOperatorRemoved' | 'DistributionBucketFamilyMetadataSet' | 'DataObjectStateBloatBondValueUpdated' | 'DataObjectsUpdated' | 'StorageOperatorRemarked' | 'DistributionOperatorRemarked';
   }
 
-  /** @name PalletStorageUploadParametersRecord (164) */
+  /** @name PalletStorageUploadParametersRecord (165) */
   interface PalletStorageUploadParametersRecord extends Struct {
     readonly bagId: PalletStorageBagIdType;
     readonly objectCreationList: Vec<PalletStorageDataObjectCreationParameters>;
@@ -1383,7 +1387,7 @@ declare module '@polkadot/types/lookup' {
     readonly expectedDataObjectStateBloatBond: u128;
   }
 
-  /** @name PalletStorageBagIdType (165) */
+  /** @name PalletStorageBagIdType (166) */
   interface PalletStorageBagIdType extends Enum {
     readonly isStatic: boolean;
     readonly asStatic: PalletStorageStaticBagId;
@@ -1392,7 +1396,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Static' | 'Dynamic';
   }
 
-  /** @name PalletStorageStaticBagId (166) */
+  /** @name PalletStorageStaticBagId (167) */
   interface PalletStorageStaticBagId extends Enum {
     readonly isCouncil: boolean;
     readonly isWorkingGroup: boolean;
@@ -1400,7 +1404,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Council' | 'WorkingGroup';
   }
 
-  /** @name PalletStorageDynamicBagIdType (167) */
+  /** @name PalletStorageDynamicBagIdType (168) */
   interface PalletStorageDynamicBagIdType extends Enum {
     readonly isMember: boolean;
     readonly asMember: u64;
@@ -1409,7 +1413,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Member' | 'Channel';
   }
 
-  /** @name PalletStorageDynBagCreationParametersRecord (168) */
+  /** @name PalletStorageDynBagCreationParametersRecord (169) */
   interface PalletStorageDynBagCreationParametersRecord extends Struct {
     readonly bagId: PalletStorageDynamicBagIdType;
     readonly objectCreationList: Vec<PalletStorageDataObjectCreationParameters>;
@@ -1420,7 +1424,7 @@ declare module '@polkadot/types/lookup' {
     readonly distributionBuckets: BTreeSet<PalletStorageDistributionBucketIdRecord>;
   }
 
-  /** @name PalletStorageVoucher (171) */
+  /** @name PalletStorageVoucher (172) */
   interface PalletStorageVoucher extends Struct {
     readonly sizeLimit: u64;
     readonly objectsLimit: u64;
@@ -1428,14 +1432,14 @@ declare module '@polkadot/types/lookup' {
     readonly objectsUsed: u64;
   }
 
-  /** @name PalletStorageDynamicBagType (172) */
+  /** @name PalletStorageDynamicBagType (173) */
   interface PalletStorageDynamicBagType extends Enum {
     readonly isMember: boolean;
     readonly isChannel: boolean;
     readonly type: 'Member' | 'Channel';
   }
 
-  /** @name PalletProjectTokenEventsRawEvent (176) */
+  /** @name PalletProjectTokenEventsRawEvent (177) */
   interface PalletProjectTokenEventsRawEvent extends Enum {
     readonly isTokenAmountTransferred: boolean;
     readonly asTokenAmountTransferred: ITuple<[u64, u64, PalletProjectTokenTransfers, Bytes]>;
@@ -1483,10 +1487,12 @@ declare module '@polkadot/types/lookup' {
     readonly asAmmDeactivated: ITuple<[u64, u64, u128]>;
     readonly isFrozenStatusUpdated: boolean;
     readonly asFrozenStatusUpdated: bool;
-    readonly type: 'TokenAmountTransferred' | 'TokenAmountTransferredByIssuer' | 'PatronageRateDecreasedTo' | 'PatronageCreditClaimed' | 'RevenueSplitIssued' | 'RevenueSplitFinalized' | 'UserParticipatedInSplit' | 'RevenueSplitLeft' | 'MemberJoinedWhitelist' | 'AccountDustedBy' | 'TokenDeissued' | 'TokenIssued' | 'TokenSaleInitialized' | 'UpcomingTokenSaleUpdated' | 'TokensPurchasedOnSale' | 'TokenSaleFinalized' | 'TransferPolicyChangedToPermissionless' | 'TokensBurned' | 'AmmActivated' | 'TokensBoughtOnAmm' | 'TokensSoldOnAmm' | 'AmmDeactivated' | 'FrozenStatusUpdated';
+    readonly isTokenConstraintsUpdated: boolean;
+    readonly asTokenConstraintsUpdated: PalletProjectTokenTokenConstraints;
+    readonly type: 'TokenAmountTransferred' | 'TokenAmountTransferredByIssuer' | 'PatronageRateDecreasedTo' | 'PatronageCreditClaimed' | 'RevenueSplitIssued' | 'RevenueSplitFinalized' | 'UserParticipatedInSplit' | 'RevenueSplitLeft' | 'MemberJoinedWhitelist' | 'AccountDustedBy' | 'TokenDeissued' | 'TokenIssued' | 'TokenSaleInitialized' | 'UpcomingTokenSaleUpdated' | 'TokensPurchasedOnSale' | 'TokenSaleFinalized' | 'TransferPolicyChangedToPermissionless' | 'TokensBurned' | 'AmmActivated' | 'TokensBoughtOnAmm' | 'TokensSoldOnAmm' | 'AmmDeactivated' | 'FrozenStatusUpdated' | 'TokenConstraintsUpdated';
   }
 
-  /** @name PalletProjectTokenTransferPolicy (177) */
+  /** @name PalletProjectTokenTransferPolicy (178) */
   interface PalletProjectTokenTransferPolicy extends Enum {
     readonly isPermissionless: boolean;
     readonly isPermissioned: boolean;
@@ -1494,7 +1500,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Permissionless' | 'Permissioned';
   }
 
-  /** @name PalletProjectTokenTokenIssuanceParameters (178) */
+  /** @name PalletProjectTokenTokenIssuanceParameters (179) */
   interface PalletProjectTokenTokenIssuanceParameters extends Struct {
     readonly initialAllocation: BTreeMap<u64, PalletProjectTokenTokenAllocation>;
     readonly transferPolicy: PalletProjectTokenTransferPolicyParams;
@@ -1503,20 +1509,20 @@ declare module '@polkadot/types/lookup' {
     readonly metadata: Bytes;
   }
 
-  /** @name PalletProjectTokenTokenAllocation (179) */
+  /** @name PalletProjectTokenTokenAllocation (180) */
   interface PalletProjectTokenTokenAllocation extends Struct {
     readonly amount: u128;
     readonly vestingScheduleParams: Option<PalletProjectTokenVestingScheduleParams>;
   }
 
-  /** @name PalletProjectTokenVestingScheduleParams (180) */
+  /** @name PalletProjectTokenVestingScheduleParams (181) */
   interface PalletProjectTokenVestingScheduleParams extends Struct {
     readonly linearVestingDuration: u32;
     readonly blocksBeforeCliff: u32;
     readonly cliffAmountPercentage: Permill;
   }
 
-  /** @name PalletProjectTokenTransferPolicyParams (183) */
+  /** @name PalletProjectTokenTransferPolicyParams (184) */
   interface PalletProjectTokenTransferPolicyParams extends Enum {
     readonly isPermissionless: boolean;
     readonly isPermissioned: boolean;
@@ -1524,23 +1530,23 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Permissionless' | 'Permissioned';
   }
 
-  /** @name PalletProjectTokenWhitelistParams (184) */
+  /** @name PalletProjectTokenWhitelistParams (185) */
   interface PalletProjectTokenWhitelistParams extends Struct {
     readonly commitment: H256;
     readonly payload: Option<PalletProjectTokenSingleDataObjectUploadParams>;
   }
 
-  /** @name PalletProjectTokenSingleDataObjectUploadParams (185) */
+  /** @name PalletProjectTokenSingleDataObjectUploadParams (186) */
   interface PalletProjectTokenSingleDataObjectUploadParams extends Struct {
     readonly objectCreationParams: PalletStorageDataObjectCreationParameters;
     readonly expectedDataSizeFee: u128;
     readonly expectedDataObjectStateBloatBond: u128;
   }
 
-  /** @name PalletProjectTokenTransfers (191) */
+  /** @name PalletProjectTokenTransfers (192) */
   interface PalletProjectTokenTransfers extends BTreeMap<PalletProjectTokenValidated, PalletProjectTokenValidatedPayment> {}
 
-  /** @name PalletProjectTokenValidated (192) */
+  /** @name PalletProjectTokenValidated (193) */
   interface PalletProjectTokenValidated extends Enum {
     readonly isExisting: boolean;
     readonly asExisting: u64;
@@ -1549,19 +1555,19 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Existing' | 'NonExisting';
   }
 
-  /** @name PalletProjectTokenValidatedPayment (193) */
+  /** @name PalletProjectTokenValidatedPayment (194) */
   interface PalletProjectTokenValidatedPayment extends Struct {
     readonly payment: PalletProjectTokenPaymentWithVesting;
     readonly vestingCleanupCandidate: Option<PalletProjectTokenVestingSource>;
   }
 
-  /** @name PalletProjectTokenPaymentWithVesting (194) */
+  /** @name PalletProjectTokenPaymentWithVesting (195) */
   interface PalletProjectTokenPaymentWithVesting extends Struct {
     readonly amount: u128;
     readonly vestingSchedule: Option<PalletProjectTokenVestingScheduleParams>;
   }
 
-  /** @name PalletProjectTokenVestingSource (196) */
+  /** @name PalletProjectTokenVestingSource (197) */
   interface PalletProjectTokenVestingSource extends Enum {
     readonly isInitialIssuance: boolean;
     readonly isSale: boolean;
@@ -1571,7 +1577,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'InitialIssuance' | 'Sale' | 'IssuerTransfer';
   }
 
-  /** @name PalletProjectTokenTokenSale (200) */
+  /** @name PalletProjectTokenTokenSale (201) */
   interface PalletProjectTokenTokenSale extends Struct {
     readonly unitPrice: u128;
     readonly quantityLeft: u128;
@@ -1585,14 +1591,27 @@ declare module '@polkadot/types/lookup' {
     readonly autoFinalize: bool;
   }
 
-  /** @name PalletProjectTokenAmmCurve (201) */
+  /** @name PalletProjectTokenAmmCurve (202) */
   interface PalletProjectTokenAmmCurve extends Struct {
     readonly slope: u128;
     readonly intercept: u128;
     readonly providedSupply: u128;
   }
 
-  /** @name PalletProposalsEngineRawEvent (202) */
+  /** @name PalletProjectTokenTokenConstraints (203) */
+  interface PalletProjectTokenTokenConstraints extends Struct {
+    readonly maxYearlyRate: Option<Permill>;
+    readonly minAmmSlope: Option<u128>;
+    readonly minSaleDuration: Option<u32>;
+    readonly minRevenueSplitDuration: Option<u32>;
+    readonly minRevenueSplitTimeToStart: Option<u32>;
+    readonly salePlatformFee: Option<Permill>;
+    readonly ammBuyTxFees: Option<Permill>;
+    readonly ammSellTxFees: Option<Permill>;
+    readonly bloatBond: Option<u128>;
+  }
+
+  /** @name PalletProposalsEngineRawEvent (206) */
   interface PalletProposalsEngineRawEvent extends Enum {
     readonly isProposalStatusUpdated: boolean;
     readonly asProposalStatusUpdated: ITuple<[u32, PalletProposalsEngineProposalStatusesProposalStatus]>;
@@ -1609,7 +1628,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ProposalStatusUpdated' | 'ProposalDecisionMade' | 'ProposalExecuted' | 'Voted' | 'ProposalCancelled' | 'ProposerRemarked';
   }
 
-  /** @name PalletProposalsEngineProposalStatusesProposalStatus (203) */
+  /** @name PalletProposalsEngineProposalStatusesProposalStatus (207) */
   interface PalletProposalsEngineProposalStatusesProposalStatus extends Enum {
     readonly isActive: boolean;
     readonly isPendingExecution: boolean;
@@ -1618,7 +1637,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Active' | 'PendingExecution' | 'PendingConstitutionality';
   }
 
-  /** @name PalletProposalsEngineProposalStatusesProposalDecision (204) */
+  /** @name PalletProposalsEngineProposalStatusesProposalDecision (208) */
   interface PalletProposalsEngineProposalStatusesProposalDecision extends Enum {
     readonly isCanceled: boolean;
     readonly isCanceledByRuntime: boolean;
@@ -1631,14 +1650,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Canceled' | 'CanceledByRuntime' | 'Vetoed' | 'Rejected' | 'Slashed' | 'Expired' | 'Approved';
   }
 
-  /** @name PalletProposalsEngineProposalStatusesApprovedProposalDecision (205) */
+  /** @name PalletProposalsEngineProposalStatusesApprovedProposalDecision (209) */
   interface PalletProposalsEngineProposalStatusesApprovedProposalDecision extends Enum {
     readonly isPendingExecution: boolean;
     readonly isPendingConstitutionality: boolean;
     readonly type: 'PendingExecution' | 'PendingConstitutionality';
   }
 
-  /** @name PalletProposalsEngineProposalStatusesExecutionStatus (206) */
+  /** @name PalletProposalsEngineProposalStatusesExecutionStatus (210) */
   interface PalletProposalsEngineProposalStatusesExecutionStatus extends Enum {
     readonly isExecuted: boolean;
     readonly isExecutionFailed: boolean;
@@ -1648,7 +1667,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Executed' | 'ExecutionFailed';
   }
 
-  /** @name PalletProposalsEngineVoteKind (207) */
+  /** @name PalletProposalsEngineVoteKind (211) */
   interface PalletProposalsEngineVoteKind extends Enum {
     readonly isApprove: boolean;
     readonly isReject: boolean;
@@ -1657,7 +1676,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Approve' | 'Reject' | 'Slash' | 'Abstain';
   }
 
-  /** @name PalletProposalsDiscussionRawEvent (208) */
+  /** @name PalletProposalsDiscussionRawEvent (212) */
   interface PalletProposalsDiscussionRawEvent extends Enum {
     readonly isThreadCreated: boolean;
     readonly asThreadCreated: ITuple<[u64, u64]>;
@@ -1672,7 +1691,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ThreadCreated' | 'PostCreated' | 'PostUpdated' | 'ThreadModeChanged' | 'PostDeleted';
   }
 
-  /** @name PalletProposalsDiscussionThreadModeBTreeSet (209) */
+  /** @name PalletProposalsDiscussionThreadModeBTreeSet (213) */
   interface PalletProposalsDiscussionThreadModeBTreeSet extends Enum {
     readonly isOpen: boolean;
     readonly isClosed: boolean;
@@ -1680,14 +1699,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Open' | 'Closed';
   }
 
-  /** @name PalletProposalsCodexRawEvent (210) */
+  /** @name PalletProposalsCodexRawEvent (214) */
   interface PalletProposalsCodexRawEvent extends Enum {
     readonly isProposalCreated: boolean;
     readonly asProposalCreated: ITuple<[u32, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, u64]>;
     readonly type: 'ProposalCreated';
   }
 
-  /** @name PalletProposalsCodexGeneralProposalParams (211) */
+  /** @name PalletProposalsCodexGeneralProposalParams (215) */
   interface PalletProposalsCodexGeneralProposalParams extends Struct {
     readonly memberId: u64;
     readonly title: Bytes;
@@ -1696,7 +1715,7 @@ declare module '@polkadot/types/lookup' {
     readonly exactExecutionBlock: Option<u32>;
   }
 
-  /** @name PalletProposalsCodexProposalDetails (212) */
+  /** @name PalletProposalsCodexProposalDetails (216) */
   interface PalletProposalsCodexProposalDetails extends Enum {
     readonly isSignal: boolean;
     readonly asSignal: Bytes;
@@ -1746,16 +1765,22 @@ declare module '@polkadot/types/lookup' {
     readonly asUpdateChannelPayouts: PalletContentUpdateChannelPayoutsParametersRecord;
     readonly isSetPalletFozenStatus: boolean;
     readonly asSetPalletFozenStatus: ITuple<[bool, PalletCommonFreezablePallet]>;
-    readonly type: 'Signal' | 'RuntimeUpgrade' | 'FundingRequest' | 'SetMaxValidatorCount' | 'CreateWorkingGroupLeadOpening' | 'FillWorkingGroupLeadOpening' | 'UpdateWorkingGroupBudget' | 'DecreaseWorkingGroupLeadStake' | 'SlashWorkingGroupLead' | 'SetWorkingGroupLeadReward' | 'TerminateWorkingGroupLead' | 'AmendConstitution' | 'CancelWorkingGroupLeadOpening' | 'SetMembershipPrice' | 'SetCouncilBudgetIncrement' | 'SetCouncilorReward' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'SetMembershipLeadInvitationQuota' | 'SetReferralCut' | 'VetoProposal' | 'UpdateGlobalNftLimit' | 'UpdateChannelPayouts' | 'SetPalletFozenStatus';
+    readonly isUpdateTokenPalletTokenConstraints: boolean;
+    readonly asUpdateTokenPalletTokenConstraints: PalletProjectTokenTokenConstraints;
+    readonly isSetEraPayoutDampingFactor: boolean;
+    readonly asSetEraPayoutDampingFactor: Percent;
+    readonly isDecreaseCouncilBudget: boolean;
+    readonly asDecreaseCouncilBudget: u128;
+    readonly type: 'Signal' | 'RuntimeUpgrade' | 'FundingRequest' | 'SetMaxValidatorCount' | 'CreateWorkingGroupLeadOpening' | 'FillWorkingGroupLeadOpening' | 'UpdateWorkingGroupBudget' | 'DecreaseWorkingGroupLeadStake' | 'SlashWorkingGroupLead' | 'SetWorkingGroupLeadReward' | 'TerminateWorkingGroupLead' | 'AmendConstitution' | 'CancelWorkingGroupLeadOpening' | 'SetMembershipPrice' | 'SetCouncilBudgetIncrement' | 'SetCouncilorReward' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'SetMembershipLeadInvitationQuota' | 'SetReferralCut' | 'VetoProposal' | 'UpdateGlobalNftLimit' | 'UpdateChannelPayouts' | 'SetPalletFozenStatus' | 'UpdateTokenPalletTokenConstraints' | 'SetEraPayoutDampingFactor' | 'DecreaseCouncilBudget';
   }
 
-  /** @name PalletCommonFundingRequestParameters (214) */
+  /** @name PalletCommonFundingRequestParameters (218) */
   interface PalletCommonFundingRequestParameters extends Struct {
     readonly account: AccountId32;
     readonly amount: u128;
   }
 
-  /** @name PalletProposalsCodexCreateOpeningParameters (215) */
+  /** @name PalletProposalsCodexCreateOpeningParameters (219) */
   interface PalletProposalsCodexCreateOpeningParameters extends Struct {
     readonly description: Bytes;
     readonly stakePolicy: PalletWorkingGroupStakePolicy;
@@ -1763,33 +1788,33 @@ declare module '@polkadot/types/lookup' {
     readonly group: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
   }
 
-  /** @name PalletWorkingGroupStakePolicy (216) */
+  /** @name PalletWorkingGroupStakePolicy (220) */
   interface PalletWorkingGroupStakePolicy extends Struct {
     readonly stakeAmount: u128;
     readonly leavingUnstakingPeriod: u32;
   }
 
-  /** @name PalletProposalsCodexFillOpeningParameters (217) */
+  /** @name PalletProposalsCodexFillOpeningParameters (221) */
   interface PalletProposalsCodexFillOpeningParameters extends Struct {
     readonly openingId: u64;
     readonly applicationId: u64;
     readonly workingGroup: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
   }
 
-  /** @name PalletProposalsCodexTerminateRoleParameters (218) */
+  /** @name PalletProposalsCodexTerminateRoleParameters (222) */
   interface PalletProposalsCodexTerminateRoleParameters extends Struct {
     readonly workerId: u64;
     readonly slashingAmount: Option<u128>;
     readonly group: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
   }
 
-  /** @name PalletCommonFreezablePallet (219) */
+  /** @name PalletCommonFreezablePallet (223) */
   interface PalletCommonFreezablePallet extends Enum {
     readonly isProjectToken: boolean;
     readonly type: 'ProjectToken';
   }
 
-  /** @name PalletWorkingGroupRawEventInstance1 (220) */
+  /** @name PalletWorkingGroupRawEventInstance1 (224) */
   interface PalletWorkingGroupRawEventInstance1 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1828,6 +1853,8 @@ declare module '@polkadot/types/lookup' {
     readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
     readonly isStatusTextChanged: boolean;
     readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+    readonly isVestedBudgetSpending: boolean;
+    readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
     readonly isBudgetSpending: boolean;
     readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
     readonly isRewardPaid: boolean;
@@ -1840,17 +1867,17 @@ declare module '@polkadot/types/lookup' {
     readonly asLeadRemarked: Bytes;
     readonly isWorkerRemarked: boolean;
     readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupOpeningType (224) */
+  /** @name PalletWorkingGroupOpeningType (228) */
   interface PalletWorkingGroupOpeningType extends Enum {
     readonly isLeader: boolean;
     readonly isRegular: boolean;
     readonly type: 'Leader' | 'Regular';
   }
 
-  /** @name PalletWorkingGroupApplyOnOpeningParams (225) */
+  /** @name PalletWorkingGroupApplyOnOpeningParams (229) */
   interface PalletWorkingGroupApplyOnOpeningParams extends Struct {
     readonly memberId: u64;
     readonly openingId: u64;
@@ -1860,23 +1887,30 @@ declare module '@polkadot/types/lookup' {
     readonly stakeParameters: PalletWorkingGroupStakeParameters;
   }
 
-  /** @name PalletWorkingGroupStakeParameters (226) */
+  /** @name PalletWorkingGroupStakeParameters (230) */
   interface PalletWorkingGroupStakeParameters extends Struct {
     readonly stake: u128;
     readonly stakingAccountId: AccountId32;
   }
 
-  /** @name PalletWorkingGroupInstance1 (227) */
+  /** @name PalletVestingVestingInfo (231) */
+  interface PalletVestingVestingInfo extends Struct {
+    readonly locked: u128;
+    readonly perBlock: u128;
+    readonly startingBlock: u32;
+  }
+
+  /** @name PalletWorkingGroupInstance1 (232) */
   type PalletWorkingGroupInstance1 = Null;
 
-  /** @name PalletWorkingGroupRewardPaymentType (228) */
+  /** @name PalletWorkingGroupRewardPaymentType (233) */
   interface PalletWorkingGroupRewardPaymentType extends Enum {
     readonly isMissedReward: boolean;
     readonly isRegularReward: boolean;
     readonly type: 'MissedReward' | 'RegularReward';
   }
 
-  /** @name PalletWorkingGroupRawEventInstance2 (229) */
+  /** @name PalletWorkingGroupRawEventInstance2 (234) */
   interface PalletWorkingGroupRawEventInstance2 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1915,6 +1949,8 @@ declare module '@polkadot/types/lookup' {
     readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
     readonly isStatusTextChanged: boolean;
     readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+    readonly isVestedBudgetSpending: boolean;
+    readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
     readonly isBudgetSpending: boolean;
     readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
     readonly isRewardPaid: boolean;
@@ -1927,13 +1963,13 @@ declare module '@polkadot/types/lookup' {
     readonly asLeadRemarked: Bytes;
     readonly isWorkerRemarked: boolean;
     readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance2 (230) */
+  /** @name PalletWorkingGroupInstance2 (235) */
   type PalletWorkingGroupInstance2 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance3 (231) */
+  /** @name PalletWorkingGroupRawEventInstance3 (236) */
   interface PalletWorkingGroupRawEventInstance3 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1972,6 +2008,8 @@ declare module '@polkadot/types/lookup' {
     readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
     readonly isStatusTextChanged: boolean;
     readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+    readonly isVestedBudgetSpending: boolean;
+    readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
     readonly isBudgetSpending: boolean;
     readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
     readonly isRewardPaid: boolean;
@@ -1984,13 +2022,13 @@ declare module '@polkadot/types/lookup' {
     readonly asLeadRemarked: Bytes;
     readonly isWorkerRemarked: boolean;
     readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance3 (232) */
+  /** @name PalletWorkingGroupInstance3 (237) */
   type PalletWorkingGroupInstance3 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance4 (233) */
+  /** @name PalletWorkingGroupRawEventInstance4 (238) */
   interface PalletWorkingGroupRawEventInstance4 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2029,6 +2067,8 @@ declare module '@polkadot/types/lookup' {
     readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
     readonly isStatusTextChanged: boolean;
     readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+    readonly isVestedBudgetSpending: boolean;
+    readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
     readonly isBudgetSpending: boolean;
     readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
     readonly isRewardPaid: boolean;
@@ -2041,13 +2081,13 @@ declare module '@polkadot/types/lookup' {
     readonly asLeadRemarked: Bytes;
     readonly isWorkerRemarked: boolean;
     readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance4 (234) */
+  /** @name PalletWorkingGroupInstance4 (239) */
   type PalletWorkingGroupInstance4 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance5 (235) */
+  /** @name PalletWorkingGroupRawEventInstance5 (240) */
   interface PalletWorkingGroupRawEventInstance5 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2086,6 +2126,8 @@ declare module '@polkadot/types/lookup' {
     readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
     readonly isStatusTextChanged: boolean;
     readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+    readonly isVestedBudgetSpending: boolean;
+    readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
     readonly isBudgetSpending: boolean;
     readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
     readonly isRewardPaid: boolean;
@@ -2098,13 +2140,13 @@ declare module '@polkadot/types/lookup' {
     readonly asLeadRemarked: Bytes;
     readonly isWorkerRemarked: boolean;
     readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance5 (236) */
+  /** @name PalletWorkingGroupInstance5 (241) */
   type PalletWorkingGroupInstance5 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance6 (237) */
+  /** @name PalletWorkingGroupRawEventInstance6 (242) */
   interface PalletWorkingGroupRawEventInstance6 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2143,6 +2185,8 @@ declare module '@polkadot/types/lookup' {
     readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
     readonly isStatusTextChanged: boolean;
     readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+    readonly isVestedBudgetSpending: boolean;
+    readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
     readonly isBudgetSpending: boolean;
     readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
     readonly isRewardPaid: boolean;
@@ -2155,13 +2199,13 @@ declare module '@polkadot/types/lookup' {
     readonly asLeadRemarked: Bytes;
     readonly isWorkerRemarked: boolean;
     readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance6 (238) */
+  /** @name PalletWorkingGroupInstance6 (243) */
   type PalletWorkingGroupInstance6 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance7 (239) */
+  /** @name PalletWorkingGroupRawEventInstance7 (244) */
   interface PalletWorkingGroupRawEventInstance7 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2200,6 +2244,8 @@ declare module '@polkadot/types/lookup' {
     readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
     readonly isStatusTextChanged: boolean;
     readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+    readonly isVestedBudgetSpending: boolean;
+    readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
     readonly isBudgetSpending: boolean;
     readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
     readonly isRewardPaid: boolean;
@@ -2212,13 +2258,13 @@ declare module '@polkadot/types/lookup' {
     readonly asLeadRemarked: Bytes;
     readonly isWorkerRemarked: boolean;
     readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance7 (240) */
+  /** @name PalletWorkingGroupInstance7 (245) */
   type PalletWorkingGroupInstance7 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance8 (241) */
+  /** @name PalletWorkingGroupRawEventInstance8 (246) */
   interface PalletWorkingGroupRawEventInstance8 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2257,6 +2303,8 @@ declare module '@polkadot/types/lookup' {
     readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
     readonly isStatusTextChanged: boolean;
     readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+    readonly isVestedBudgetSpending: boolean;
+    readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
     readonly isBudgetSpending: boolean;
     readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
     readonly isRewardPaid: boolean;
@@ -2269,13 +2317,13 @@ declare module '@polkadot/types/lookup' {
     readonly asLeadRemarked: Bytes;
     readonly isWorkerRemarked: boolean;
     readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance8 (242) */
+  /** @name PalletWorkingGroupInstance8 (247) */
   type PalletWorkingGroupInstance8 = Null;
 
-  /** @name PalletWorkingGroupRawEventInstance9 (243) */
+  /** @name PalletWorkingGroupRawEventInstance9 (248) */
   interface PalletWorkingGroupRawEventInstance9 extends Enum {
     readonly isOpeningAdded: boolean;
     readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2314,6 +2362,8 @@ declare module '@polkadot/types/lookup' {
     readonly asWorkerRewardAmountUpdated: ITuple<[u64, Option<u128>]>;
     readonly isStatusTextChanged: boolean;
     readonly asStatusTextChanged: ITuple<[H256, Option<Bytes>]>;
+    readonly isVestedBudgetSpending: boolean;
+    readonly asVestedBudgetSpending: ITuple<[AccountId32, PalletVestingVestingInfo, Option<Bytes>]>;
     readonly isBudgetSpending: boolean;
     readonly asBudgetSpending: ITuple<[AccountId32, u128, Option<Bytes>]>;
     readonly isRewardPaid: boolean;
@@ -2326,13 +2376,13 @@ declare module '@polkadot/types/lookup' {
     readonly asLeadRemarked: Bytes;
     readonly isWorkerRemarked: boolean;
     readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
-    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
+    readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
   }
 
-  /** @name PalletWorkingGroupInstance9 (244) */
+  /** @name PalletWorkingGroupInstance9 (249) */
   type PalletWorkingGroupInstance9 = Null;
 
-  /** @name FrameSystemPhase (245) */
+  /** @name FrameSystemPhase (250) */
   interface FrameSystemPhase extends Enum {
     readonly isApplyExtrinsic: boolean;
     readonly asApplyExtrinsic: u32;
@@ -2341,13 +2391,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ApplyExtrinsic' | 'Finalization' | 'Initialization';
   }
 
-  /** @name FrameSystemLastRuntimeUpgradeInfo (249) */
+  /** @name FrameSystemLastRuntimeUpgradeInfo (254) */
   interface FrameSystemLastRuntimeUpgradeInfo extends Struct {
     readonly specVersion: Compact<u32>;
     readonly specName: Text;
   }
 
-  /** @name FrameSystemCall (252) */
+  /** @name FrameSystemCall (257) */
   interface FrameSystemCall extends Enum {
     readonly isRemark: boolean;
     readonly asRemark: {
@@ -2385,21 +2435,21 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Remark' | 'SetHeapPages' | 'SetCode' | 'SetCodeWithoutChecks' | 'SetStorage' | 'KillStorage' | 'KillPrefix' | 'RemarkWithEvent';
   }
 
-  /** @name FrameSystemLimitsBlockWeights (255) */
+  /** @name FrameSystemLimitsBlockWeights (260) */
   interface FrameSystemLimitsBlockWeights extends Struct {
     readonly baseBlock: SpWeightsWeightV2Weight;
     readonly maxBlock: SpWeightsWeightV2Weight;
     readonly perClass: FrameSupportDispatchPerDispatchClassWeightsPerClass;
   }
 
-  /** @name FrameSupportDispatchPerDispatchClassWeightsPerClass (256) */
+  /** @name FrameSupportDispatchPerDispatchClassWeightsPerClass (261) */
   interface FrameSupportDispatchPerDispatchClassWeightsPerClass extends Struct {
     readonly normal: FrameSystemLimitsWeightsPerClass;
     readonly operational: FrameSystemLimitsWeightsPerClass;
     readonly mandatory: FrameSystemLimitsWeightsPerClass;
   }
 
-  /** @name FrameSystemLimitsWeightsPerClass (257) */
+  /** @name FrameSystemLimitsWeightsPerClass (262) */
   interface FrameSystemLimitsWeightsPerClass extends Struct {
     readonly baseExtrinsic: SpWeightsWeightV2Weight;
     readonly maxExtrinsic: Option<SpWeightsWeightV2Weight>;
@@ -2407,25 +2457,25 @@ declare module '@polkadot/types/lookup' {
     readonly reserved: Option<SpWeightsWeightV2Weight>;
   }
 
-  /** @name FrameSystemLimitsBlockLength (259) */
+  /** @name FrameSystemLimitsBlockLength (264) */
   interface FrameSystemLimitsBlockLength extends Struct {
     readonly max: FrameSupportDispatchPerDispatchClassU32;
   }
 
-  /** @name FrameSupportDispatchPerDispatchClassU32 (260) */
+  /** @name FrameSupportDispatchPerDispatchClassU32 (265) */
   interface FrameSupportDispatchPerDispatchClassU32 extends Struct {
     readonly normal: u32;
     readonly operational: u32;
     readonly mandatory: u32;
   }
 
-  /** @name SpWeightsRuntimeDbWeight (261) */
+  /** @name SpWeightsRuntimeDbWeight (266) */
   interface SpWeightsRuntimeDbWeight extends Struct {
     readonly read: u64;
     readonly write: u64;
   }
 
-  /** @name SpVersionRuntimeVersion (262) */
+  /** @name SpVersionRuntimeVersion (267) */
   interface SpVersionRuntimeVersion extends Struct {
     readonly specName: Text;
     readonly implName: Text;
@@ -2437,7 +2487,7 @@ declare module '@polkadot/types/lookup' {
     readonly stateVersion: u8;
   }
 
-  /** @name FrameSystemError (268) */
+  /** @name FrameSystemError (273) */
   interface FrameSystemError extends Enum {
     readonly isInvalidSpecName: boolean;
     readonly isSpecVersionNeedsToIncrease: boolean;
@@ -2448,7 +2498,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'InvalidSpecName' | 'SpecVersionNeedsToIncrease' | 'FailedToExtractRuntimeVersion' | 'NonDefaultComposite' | 'NonZeroRefCount' | 'CallFiltered';
   }
 
-  /** @name PalletUtilityCall (269) */
+  /** @name PalletUtilityCall (274) */
   interface PalletUtilityCall extends Enum {
     readonly isBatch: boolean;
     readonly asBatch: {
@@ -2480,7 +2530,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Batch' | 'AsDerivative' | 'BatchAll' | 'DispatchAs' | 'ForceBatch' | 'WithWeight';
   }
 
-  /** @name PalletBabeCall (272) */
+  /** @name PalletBabeCall (277) */
   interface PalletBabeCall extends Enum {
     readonly isReportEquivocation: boolean;
     readonly asReportEquivocation: {
@@ -2499,7 +2549,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ReportEquivocation' | 'ReportEquivocationUnsigned' | 'PlanConfigChange';
   }
 
-  /** @name SpConsensusSlotsEquivocationProof (273) */
+  /** @name SpConsensusSlotsEquivocationProof (278) */
   interface SpConsensusSlotsEquivocationProof extends Struct {
     readonly offender: SpConsensusBabeAppPublic;
     readonly slot: u64;
@@ -2507,7 +2557,7 @@ declare module '@polkadot/types/lookup' {
     readonly secondHeader: SpRuntimeHeader;
   }
 
-  /** @name SpRuntimeHeader (274) */
+  /** @name SpRuntimeHeader (279) */
   interface SpRuntimeHeader extends Struct {
     readonly parentHash: H256;
     readonly number: Compact<u32>;
@@ -2516,20 +2566,20 @@ declare module '@polkadot/types/lookup' {
     readonly digest: SpRuntimeDigest;
   }
 
-  /** @name SpRuntimeBlakeTwo256 (275) */
+  /** @name SpRuntimeBlakeTwo256 (280) */
   type SpRuntimeBlakeTwo256 = Null;
 
-  /** @name SpConsensusBabeAppPublic (276) */
+  /** @name SpConsensusBabeAppPublic (281) */
   interface SpConsensusBabeAppPublic extends SpCoreSr25519Public {}
 
-  /** @name SpSessionMembershipProof (278) */
+  /** @name SpSessionMembershipProof (283) */
   interface SpSessionMembershipProof extends Struct {
     readonly session: u32;
     readonly trieNodes: Vec<Bytes>;
     readonly validatorCount: u32;
   }
 
-  /** @name SpConsensusBabeDigestsNextConfigDescriptor (279) */
+  /** @name SpConsensusBabeDigestsNextConfigDescriptor (284) */
   interface SpConsensusBabeDigestsNextConfigDescriptor extends Enum {
     readonly isV1: boolean;
     readonly asV1: {
@@ -2539,7 +2589,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'V1';
   }
 
-  /** @name SpConsensusBabeAllowedSlots (280) */
+  /** @name SpConsensusBabeAllowedSlots (285) */
   interface SpConsensusBabeAllowedSlots extends Enum {
     readonly isPrimarySlots: boolean;
     readonly isPrimaryAndSecondaryPlainSlots: boolean;
@@ -2547,7 +2597,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'PrimarySlots' | 'PrimaryAndSecondaryPlainSlots' | 'PrimaryAndSecondaryVRFSlots';
   }
 
-  /** @name PalletTimestampCall (281) */
+  /** @name PalletTimestampCall (286) */
   interface PalletTimestampCall extends Enum {
     readonly isSet: boolean;
     readonly asSet: {
@@ -2556,7 +2606,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Set';
   }
 
-  /** @name PalletBalancesCall (282) */
+  /** @name PalletBalancesCall (287) */
   interface PalletBalancesCall extends Enum {
     readonly isTransfer: boolean;
     readonly asTransfer: {
@@ -2593,7 +2643,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Transfer' | 'SetBalance' | 'ForceTransfer' | 'TransferKeepAlive' | 'TransferAll' | 'ForceUnreserve';
   }
 
-  /** @name PalletElectionProviderMultiPhaseCall (283) */
+  /** @name PalletElectionProviderMultiPhaseCall (288) */
   interface PalletElectionProviderMultiPhaseCall extends Enum {
     readonly isSubmitUnsigned: boolean;
     readonly asSubmitUnsigned: {
@@ -2620,14 +2670,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'SubmitUnsigned' | 'SetMinimumUntrustedScore' | 'SetEmergencyElectionResult' | 'Submit' | 'GovernanceFallback';
   }
 
-  /** @name PalletElectionProviderMultiPhaseRawSolution (284) */
+  /** @name PalletElectionProviderMultiPhaseRawSolution (289) */
   interface PalletElectionProviderMultiPhaseRawSolution extends Struct {
     readonly solution: JoystreamNodeRuntimeNposSolution16;
     readonly score: SpNposElectionsElectionScore;
     readonly round: u32;
   }
 
-  /** @name JoystreamNodeRuntimeNposSolution16 (285) */
+  /** @name JoystreamNodeRuntimeNposSolution16 (290) */
   interface JoystreamNodeRuntimeNposSolution16 extends Struct {
     readonly votes1: Vec<ITuple<[Compact<u32>, Compact<u16>]>>;
     readonly votes2: Vec<ITuple<[Compact<u32>, ITuple<[Compact<u16>, Compact<PerU16>]>, Compact<u16>]>>;
@@ -2647,19 +2697,19 @@ declare module '@polkadot/types/lookup' {
     readonly votes16: Vec<ITuple<[Compact<u32>, Vec<ITuple<[Compact<u16>, Compact<PerU16>]>>, Compact<u16>]>>;
   }
 
-  /** @name PalletElectionProviderMultiPhaseSolutionOrSnapshotSize (336) */
+  /** @name PalletElectionProviderMultiPhaseSolutionOrSnapshotSize (341) */
   interface PalletElectionProviderMultiPhaseSolutionOrSnapshotSize extends Struct {
     readonly voters: Compact<u32>;
     readonly targets: Compact<u32>;
   }
 
-  /** @name SpNposElectionsSupport (340) */
+  /** @name SpNposElectionsSupport (345) */
   interface SpNposElectionsSupport extends Struct {
     readonly total: u128;
     readonly voters: Vec<ITuple<[AccountId32, u128]>>;
   }
 
-  /** @name PalletStakingPalletCall (342) */
+  /** @name PalletStakingPalletCall (347) */
   interface PalletStakingPalletCall extends Enum {
     readonly isBond: boolean;
     readonly asBond: {
@@ -2767,7 +2817,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Bond' | 'BondExtra' | 'Unbond' | 'WithdrawUnbonded' | 'Validate' | 'Nominate' | 'Chill' | 'SetPayee' | 'SetController' | 'SetValidatorCount' | 'IncreaseValidatorCount' | 'ScaleValidatorCount' | 'ForceNoEras' | 'ForceNewEra' | 'SetInvulnerables' | 'ForceUnstake' | 'ForceNewEraAlways' | 'CancelDeferredSlash' | 'PayoutStakers' | 'Rebond' | 'ReapStash' | 'Kick' | 'SetStakingConfigs' | 'ChillOther' | 'ForceApplyMinCommission' | 'SetMinCommission';
   }
 
-  /** @name PalletStakingRewardDestination (343) */
+  /** @name PalletStakingRewardDestination (348) */
   interface PalletStakingRewardDestination extends Enum {
     readonly isStaked: boolean;
     readonly isStash: boolean;
@@ -2778,7 +2828,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Staked' | 'Stash' | 'Controller' | 'Account' | 'None';
   }
 
-  /** @name PalletStakingPalletConfigOpU128 (347) */
+  /** @name PalletStakingPalletConfigOpU128 (351) */
   interface PalletStakingPalletConfigOpU128 extends Enum {
     readonly isNoop: boolean;
     readonly isSet: boolean;
@@ -2787,7 +2837,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Noop' | 'Set' | 'Remove';
   }
 
-  /** @name PalletStakingPalletConfigOpU32 (348) */
+  /** @name PalletStakingPalletConfigOpU32 (352) */
   interface PalletStakingPalletConfigOpU32 extends Enum {
     readonly isNoop: boolean;
     readonly isSet: boolean;
@@ -2796,7 +2846,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Noop' | 'Set' | 'Remove';
   }
 
-  /** @name PalletStakingPalletConfigOpPercent (349) */
+  /** @name PalletStakingPalletConfigOpPercent (353) */
   interface PalletStakingPalletConfigOpPercent extends Enum {
     readonly isNoop: boolean;
     readonly isSet: boolean;
@@ -2805,7 +2855,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Noop' | 'Set' | 'Remove';
   }
 
-  /** @name PalletStakingPalletConfigOpPerbill (350) */
+  /** @name PalletStakingPalletConfigOpPerbill (354) */
   interface PalletStakingPalletConfigOpPerbill extends Enum {
     readonly isNoop: boolean;
     readonly isSet: boolean;
@@ -2814,7 +2864,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Noop' | 'Set' | 'Remove';
   }
 
-  /** @name PalletSessionCall (351) */
+  /** @name PalletSessionCall (355) */
   interface PalletSessionCall extends Enum {
     readonly isSetKeys: boolean;
     readonly asSetKeys: {
@@ -2825,7 +2875,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'SetKeys' | 'PurgeKeys';
   }
 
-  /** @name JoystreamNodeRuntimeSessionKeys (352) */
+  /** @name JoystreamNodeRuntimeSessionKeys (356) */
   interface JoystreamNodeRuntimeSessionKeys extends Struct {
     readonly grandpa: SpConsensusGrandpaAppPublic;
     readonly babe: SpConsensusBabeAppPublic;
@@ -2833,10 +2883,10 @@ declare module '@polkadot/types/lookup' {
     readonly authorityDiscovery: SpAuthorityDiscoveryAppPublic;
   }
 
-  /** @name SpAuthorityDiscoveryAppPublic (353) */
+  /** @name SpAuthorityDiscoveryAppPublic (357) */
   interface SpAuthorityDiscoveryAppPublic extends SpCoreSr25519Public {}
 
-  /** @name PalletGrandpaCall (354) */
+  /** @name PalletGrandpaCall (358) */
   interface PalletGrandpaCall extends Enum {
     readonly isReportEquivocation: boolean;
     readonly asReportEquivocation: {
@@ -2856,13 +2906,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ReportEquivocation' | 'ReportEquivocationUnsigned' | 'NoteStalled';
   }
 
-  /** @name SpConsensusGrandpaEquivocationProof (355) */
+  /** @name SpConsensusGrandpaEquivocationProof (359) */
   interface SpConsensusGrandpaEquivocationProof extends Struct {
     readonly setId: u64;
     readonly equivocation: SpConsensusGrandpaEquivocation;
   }
 
-  /** @name SpConsensusGrandpaEquivocation (356) */
+  /** @name SpConsensusGrandpaEquivocation (360) */
   interface SpConsensusGrandpaEquivocation extends Enum {
     readonly isPrevote: boolean;
     readonly asPrevote: FinalityGrandpaEquivocationPrevote;
@@ -2871,7 +2921,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Prevote' | 'Precommit';
   }
 
-  /** @name FinalityGrandpaEquivocationPrevote (357) */
+  /** @name FinalityGrandpaEquivocationPrevote (361) */
   interface FinalityGrandpaEquivocationPrevote extends Struct {
     readonly roundNumber: u64;
     readonly identity: SpConsensusGrandpaAppPublic;
@@ -2879,19 +2929,19 @@ declare module '@polkadot/types/lookup' {
     readonly second: ITuple<[FinalityGrandpaPrevote, SpConsensusGrandpaAppSignature]>;
   }
 
-  /** @name FinalityGrandpaPrevote (358) */
+  /** @name FinalityGrandpaPrevote (362) */
   interface FinalityGrandpaPrevote extends Struct {
     readonly targetHash: H256;
     readonly targetNumber: u32;
   }
 
-  /** @name SpConsensusGrandpaAppSignature (359) */
+  /** @name SpConsensusGrandpaAppSignature (363) */
   interface SpConsensusGrandpaAppSignature extends SpCoreEd25519Signature {}
 
-  /** @name SpCoreEd25519Signature (360) */
+  /** @name SpCoreEd25519Signature (364) */
   interface SpCoreEd25519Signature extends U8aFixed {}
 
-  /** @name FinalityGrandpaEquivocationPrecommit (363) */
+  /** @name FinalityGrandpaEquivocationPrecommit (367) */
   interface FinalityGrandpaEquivocationPrecommit extends Struct {
     readonly roundNumber: u64;
     readonly identity: SpConsensusGrandpaAppPublic;
@@ -2899,13 +2949,13 @@ declare module '@polkadot/types/lookup' {
     readonly second: ITuple<[FinalityGrandpaPrecommit, SpConsensusGrandpaAppSignature]>;
   }
 
-  /** @name FinalityGrandpaPrecommit (364) */
+  /** @name FinalityGrandpaPrecommit (368) */
   interface FinalityGrandpaPrecommit extends Struct {
     readonly targetHash: H256;
     readonly targetNumber: u32;
   }
 
-  /** @name PalletImOnlineCall (366) */
+  /** @name PalletImOnlineCall (370) */
   interface PalletImOnlineCall extends Enum {
     readonly isHeartbeat: boolean;
     readonly asHeartbeat: {
@@ -2915,7 +2965,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Heartbeat';
   }
 
-  /** @name PalletImOnlineHeartbeat (367) */
+  /** @name PalletImOnlineHeartbeat (371) */
   interface PalletImOnlineHeartbeat extends Struct {
     readonly blockNumber: u32;
     readonly networkState: SpCoreOffchainOpaqueNetworkState;
@@ -2924,19 +2974,19 @@ declare module '@polkadot/types/lookup' {
     readonly validatorsLen: u32;
   }
 
-  /** @name SpCoreOffchainOpaqueNetworkState (368) */
+  /** @name SpCoreOffchainOpaqueNetworkState (372) */
   interface SpCoreOffchainOpaqueNetworkState extends Struct {
     readonly peerId: OpaquePeerId;
     readonly externalAddresses: Vec<OpaqueMultiaddr>;
   }
 
-  /** @name PalletImOnlineSr25519AppSr25519Signature (372) */
+  /** @name PalletImOnlineSr25519AppSr25519Signature (376) */
   interface PalletImOnlineSr25519AppSr25519Signature extends SpCoreSr25519Signature {}
 
-  /** @name SpCoreSr25519Signature (373) */
+  /** @name SpCoreSr25519Signature (377) */
   interface SpCoreSr25519Signature extends U8aFixed {}
 
-  /** @name PalletBagsListCall (374) */
+  /** @name PalletBagsListCall (378) */
   interface PalletBagsListCall extends Enum {
     readonly isRebag: boolean;
     readonly asRebag: {
@@ -2949,7 +2999,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Rebag' | 'PutInFrontOf';
   }
 
-  /** @name PalletVestingCall (375) */
+  /** @name PalletVestingCall (379) */
   interface PalletVestingCall extends Enum {
     readonly isVest: boolean;
     readonly isVestOther: boolean;
@@ -2975,14 +3025,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Vest' | 'VestOther' | 'VestedTransfer' | 'ForceVestedTransfer' | 'MergeSchedules';
   }
 
-  /** @name PalletVestingVestingInfo (376) */
-  interface PalletVestingVestingInfo extends Struct {
-    readonly locked: u128;
-    readonly perBlock: u128;
-    readonly startingBlock: u32;
-  }
-
-  /** @name PalletMultisigCall (377) */
+  /** @name PalletMultisigCall (380) */
   interface PalletMultisigCall extends Enum {
     readonly isAsMultiThreshold1: boolean;
     readonly asAsMultiThreshold1: {
@@ -3015,7 +3058,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'AsMultiThreshold1' | 'AsMulti' | 'ApproveAsMulti' | 'CancelAsMulti';
   }
 
-  /** @name PalletCouncilCall (379) */
+  /** @name PalletCouncilCall (382) */
   interface PalletCouncilCall extends Enum {
     readonly isAnnounceCandidacy: boolean;
     readonly asAnnounceCandidacy: {
@@ -3053,6 +3096,14 @@ declare module '@polkadot/types/lookup' {
     readonly asSetCouncilorReward: {
       readonly councilorReward: u128;
     } & Struct;
+    readonly isSetEraPayoutDampingFactor: boolean;
+    readonly asSetEraPayoutDampingFactor: {
+      readonly newParameter: Percent;
+    } & Struct;
+    readonly isDecreaseCouncilBudget: boolean;
+    readonly asDecreaseCouncilBudget: {
+      readonly reductionAmount: u128;
+    } & Struct;
     readonly isFundingRequest: boolean;
     readonly asFundingRequest: {
       readonly fundingRequests: Vec<PalletCommonFundingRequestParameters>;
@@ -3073,10 +3124,10 @@ declare module '@polkadot/types/lookup' {
       readonly candidateId: u64;
       readonly msg: Bytes;
     } & Struct;
-    readonly type: 'AnnounceCandidacy' | 'ReleaseCandidacyStake' | 'WithdrawCandidacy' | 'SetCandidacyNote' | 'SetBudget' | 'PlanBudgetRefill' | 'SetBudgetIncrement' | 'SetCouncilorReward' | 'FundingRequest' | 'FundCouncilBudget' | 'CouncilorRemark' | 'CandidateRemark';
+    readonly type: 'AnnounceCandidacy' | 'ReleaseCandidacyStake' | 'WithdrawCandidacy' | 'SetCandidacyNote' | 'SetBudget' | 'PlanBudgetRefill' | 'SetBudgetIncrement' | 'SetCouncilorReward' | 'SetEraPayoutDampingFactor' | 'DecreaseCouncilBudget' | 'FundingRequest' | 'FundCouncilBudget' | 'CouncilorRemark' | 'CandidateRemark';
   }
 
-  /** @name PalletReferendumCall (380) */
+  /** @name PalletReferendumCall (383) */
   interface PalletReferendumCall extends Enum {
     readonly isVote: boolean;
     readonly asVote: {
@@ -3093,7 +3144,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Vote' | 'RevealVote' | 'ReleaseVoteStake' | 'OptOutOfVoting';
   }
 
-  /** @name PalletMembershipCall (381) */
+  /** @name PalletMembershipCall (384) */
   interface PalletMembershipCall extends Enum {
     readonly isBuyMembership: boolean;
     readonly asBuyMembership: {
@@ -3177,7 +3228,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'BuyMembership' | 'UpdateProfile' | 'UpdateAccounts' | 'UpdateProfileVerification' | 'SetReferralCut' | 'TransferInvites' | 'InviteMember' | 'GiftMembership' | 'SetMembershipPrice' | 'SetLeaderInvitationQuota' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'AddStakingAccountCandidate' | 'RemoveStakingAccount' | 'ConfirmStakingAccount' | 'MemberRemark' | 'CreateMember';
   }
 
-  /** @name PalletForumCall (382) */
+  /** @name PalletForumCall (385) */
   interface PalletForumCall extends Enum {
     readonly isUpdateCategoryMembershipOfModerator: boolean;
     readonly asUpdateCategoryMembershipOfModerator: {
@@ -3288,7 +3339,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'UpdateCategoryMembershipOfModerator' | 'CreateCategory' | 'UpdateCategoryArchivalStatus' | 'UpdateCategoryTitle' | 'UpdateCategoryDescription' | 'DeleteCategory' | 'CreateThread' | 'EditThreadMetadata' | 'DeleteThread' | 'MoveThreadToCategory' | 'ModerateThread' | 'AddPost' | 'EditPostText' | 'ModeratePost' | 'DeletePosts' | 'SetStickiedThreads';
   }
 
-  /** @name PalletConstitutionCall (383) */
+  /** @name PalletConstitutionCall (386) */
   interface PalletConstitutionCall extends Enum {
     readonly isAmendConstitution: boolean;
     readonly asAmendConstitution: {
@@ -3297,7 +3348,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'AmendConstitution';
   }
 
-  /** @name PalletBountyCall (384) */
+  /** @name PalletBountyCall (387) */
   interface PalletBountyCall extends Enum {
     readonly isCreateBounty: boolean;
     readonly asCreateBounty: {
@@ -3386,7 +3437,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'CreateBounty' | 'FundBounty' | 'TerminateBounty' | 'SwitchOracle' | 'WithdrawFunding' | 'AnnounceWorkEntry' | 'SubmitWork' | 'EndWorkingPeriod' | 'SubmitOracleJudgment' | 'WithdrawEntrantStake' | 'WithdrawOracleReward' | 'ContributorRemark' | 'OracleRemark' | 'EntrantRemark' | 'CreatorRemark';
   }
 
-  /** @name PalletJoystreamUtilityCall (385) */
+  /** @name PalletJoystreamUtilityCall (388) */
   interface PalletJoystreamUtilityCall extends Enum {
     readonly isExecuteSignalProposal: boolean;
     readonly asExecuteSignalProposal: {
@@ -3409,7 +3460,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ExecuteSignalProposal' | 'ExecuteRuntimeUpgradeProposal' | 'UpdateWorkingGroupBudget' | 'BurnAccountTokens';
   }
 
-  /** @name PalletContentCall (386) */
+  /** @name PalletContentCall (389) */
   interface PalletContentCall extends Enum {
     readonly isCreateCuratorGroup: boolean;
     readonly asCreateCuratorGroup: {
@@ -3780,40 +3831,40 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'CreateCuratorGroup' | 'UpdateCuratorGroupPermissions' | 'SetCuratorGroupStatus' | 'AddCuratorToGroup' | 'RemoveCuratorFromGroup' | 'CreateChannel' | 'UpdateChannel' | 'UpdateChannelPrivilegeLevel' | 'SetChannelPausedFeaturesAsModerator' | 'DeleteChannel' | 'DeleteChannelAssetsAsModerator' | 'SetChannelVisibilityAsModerator' | 'CreateVideo' | 'UpdateVideo' | 'DeleteVideo' | 'DeleteVideoAssetsAsModerator' | 'SetVideoVisibilityAsModerator' | 'UpdateChannelPayouts' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'UpdateChannelStateBloatBond' | 'UpdateVideoStateBloatBond' | 'IssueNft' | 'DestroyNft' | 'StartOpenAuction' | 'StartEnglishAuction' | 'CancelEnglishAuction' | 'CancelOpenAuction' | 'CancelOffer' | 'CancelBuyNow' | 'UpdateBuyNowPrice' | 'MakeOpenAuctionBid' | 'MakeEnglishAuctionBid' | 'CancelOpenAuctionBid' | 'SettleEnglishAuction' | 'PickOpenAuctionWinner' | 'OfferNft' | 'SlingNftBack' | 'AcceptIncomingOffer' | 'SellNft' | 'BuyNft' | 'ToggleNftLimits' | 'ChannelOwnerRemark' | 'ChannelAgentRemark' | 'NftOwnerRemark' | 'InitializeChannelTransfer' | 'CancelChannelTransfer' | 'AcceptChannelTransfer' | 'UpdateGlobalNftLimit' | 'UpdateChannelNftLimit' | 'IssueCreatorToken' | 'InitCreatorTokenSale' | 'UpdateUpcomingCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRateTo' | 'ClaimCreatorTokenPatronageCredit' | 'IssueRevenueSplit' | 'FinalizeRevenueSplit' | 'FinalizeCreatorTokenSale' | 'DeissueCreatorToken' | 'ActivateAmm' | 'DeactivateAmm' | 'CreatorTokenIssuerRemark';
   }
 
-  /** @name PalletContentChannelBagWitness (387) */
+  /** @name PalletContentChannelBagWitness (390) */
   interface PalletContentChannelBagWitness extends Struct {
     readonly storageBucketsNum: u32;
     readonly distributionBucketsNum: u32;
   }
 
-  /** @name PalletCommonMerkleTreeProofElementRecord (389) */
+  /** @name PalletCommonMerkleTreeProofElementRecord (392) */
   interface PalletCommonMerkleTreeProofElementRecord extends Struct {
     readonly hash_: H256;
     readonly side: PalletCommonMerkleTreeSide;
   }
 
-  /** @name PalletCommonMerkleTreeSide (390) */
+  /** @name PalletCommonMerkleTreeSide (393) */
   interface PalletCommonMerkleTreeSide extends Enum {
     readonly isLeft: boolean;
     readonly isRight: boolean;
     readonly type: 'Left' | 'Right';
   }
 
-  /** @name PalletContentPullPaymentElement (391) */
+  /** @name PalletContentPullPaymentElement (394) */
   interface PalletContentPullPaymentElement extends Struct {
     readonly channelId: u64;
     readonly cumulativeRewardEarned: u128;
     readonly reason: H256;
   }
 
-  /** @name PalletContentInitTransferParameters (392) */
+  /** @name PalletContentInitTransferParameters (395) */
   interface PalletContentInitTransferParameters extends Struct {
     readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
     readonly price: u128;
     readonly newOwner: PalletContentChannelOwner;
   }
 
-  /** @name PalletProjectTokenTokenSaleParams (393) */
+  /** @name PalletProjectTokenTokenSaleParams (396) */
   interface PalletProjectTokenTokenSaleParams extends Struct {
     readonly unitPrice: u128;
     readonly upperBoundQuantity: u128;
@@ -3824,13 +3875,13 @@ declare module '@polkadot/types/lookup' {
     readonly metadata: Option<Bytes>;
   }
 
-  /** @name PalletProjectTokenAmmParams (397) */
+  /** @name PalletProjectTokenAmmParams (400) */
   interface PalletProjectTokenAmmParams extends Struct {
     readonly slope: u128;
     readonly intercept: u128;
   }
 
-  /** @name PalletStorageCall (398) */
+  /** @name PalletStorageCall (401) */
   interface PalletStorageCall extends Enum {
     readonly isDeleteStorageBucket: boolean;
     readonly asDeleteStorageBucket: {
@@ -4009,8 +4060,12 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'DeleteStorageBucket' | 'UpdateUploadingBlockedStatus' | 'UpdateDataSizeFee' | 'UpdateStorageBucketsPerBagLimit' | 'UpdateStorageBucketsVoucherMaxLimits' | 'UpdateDataObjectStateBloatBond' | 'UpdateNumberOfStorageBucketsInDynamicBagCreationPolicy' | 'UpdateBlacklist' | 'CreateStorageBucket' | 'UpdateStorageBucketsForBag' | 'CancelStorageBucketOperatorInvite' | 'InviteStorageBucketOperator' | 'RemoveStorageBucketOperator' | 'UpdateStorageBucketStatus' | 'SetStorageBucketVoucherLimits' | 'AcceptStorageBucketInvitation' | 'SetStorageOperatorMetadata' | 'AcceptPendingDataObjects' | 'CreateDistributionBucketFamily' | 'DeleteDistributionBucketFamily' | 'CreateDistributionBucket' | 'UpdateDistributionBucketStatus' | 'DeleteDistributionBucket' | 'UpdateDistributionBucketsForBag' | 'UpdateDistributionBucketsPerBagLimit' | 'UpdateDistributionBucketMode' | 'UpdateFamiliesInDynamicBagCreationPolicy' | 'InviteDistributionBucketOperator' | 'CancelDistributionBucketOperatorInvite' | 'RemoveDistributionBucketOperator' | 'SetDistributionBucketFamilyMetadata' | 'AcceptDistributionBucketInvitation' | 'SetDistributionOperatorMetadata' | 'StorageOperatorRemark' | 'DistributionOperatorRemark';
   }
 
-  /** @name PalletProjectTokenCall (399) */
+  /** @name PalletProjectTokenCall (402) */
   interface PalletProjectTokenCall extends Enum {
+    readonly isUpdateTokenConstraints: boolean;
+    readonly asUpdateTokenConstraints: {
+      readonly parameters: PalletProjectTokenTokenConstraints;
+    } & Struct;
     readonly isTransfer: boolean;
     readonly asTransfer: {
       readonly srcMemberId: u64;
@@ -4070,20 +4125,20 @@ declare module '@polkadot/types/lookup' {
     readonly asSetFrozenStatus: {
       readonly freeze: bool;
     } & Struct;
-    readonly type: 'Transfer' | 'Burn' | 'DustAccount' | 'JoinWhitelist' | 'PurchaseTokensOnSale' | 'ParticipateInSplit' | 'ExitRevenueSplit' | 'BuyOnAmm' | 'SellOnAmm' | 'SetFrozenStatus';
+    readonly type: 'UpdateTokenConstraints' | 'Transfer' | 'Burn' | 'DustAccount' | 'JoinWhitelist' | 'PurchaseTokensOnSale' | 'ParticipateInSplit' | 'ExitRevenueSplit' | 'BuyOnAmm' | 'SellOnAmm' | 'SetFrozenStatus';
   }
 
-  /** @name PalletProjectTokenMerkleProof (403) */
+  /** @name PalletProjectTokenMerkleProof (406) */
   interface PalletProjectTokenMerkleProof extends Vec<ITuple<[H256, PalletProjectTokenMerkleSide]>> {}
 
-  /** @name PalletProjectTokenMerkleSide (406) */
+  /** @name PalletProjectTokenMerkleSide (409) */
   interface PalletProjectTokenMerkleSide extends Enum {
     readonly isRight: boolean;
     readonly isLeft: boolean;
     readonly type: 'Right' | 'Left';
   }
 
-  /** @name PalletProposalsEngineCall (409) */
+  /** @name PalletProposalsEngineCall (412) */
   interface PalletProposalsEngineCall extends Enum {
     readonly isVote: boolean;
     readonly asVote: {
@@ -4110,7 +4165,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Vote' | 'CancelProposal' | 'VetoProposal' | 'ProposerRemark';
   }
 
-  /** @name PalletProposalsDiscussionCall (410) */
+  /** @name PalletProposalsDiscussionCall (413) */
   interface PalletProposalsDiscussionCall extends Enum {
     readonly isAddPost: boolean;
     readonly asAddPost: {
@@ -4141,7 +4196,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'AddPost' | 'DeletePost' | 'UpdatePost' | 'ChangeThreadMode';
   }
 
-  /** @name PalletProposalsCodexCall (411) */
+  /** @name PalletProposalsCodexCall (414) */
   interface PalletProposalsCodexCall extends Enum {
     readonly isCreateProposal: boolean;
     readonly asCreateProposal: {
@@ -4151,7 +4206,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'CreateProposal';
   }
 
-  /** @name PalletWorkingGroupCall (412) */
+  /** @name PalletWorkingGroupCall (415) */
   interface PalletWorkingGroupCall extends Enum {
     readonly isAddOpening: boolean;
     readonly asAddOpening: {
@@ -4233,6 +4288,12 @@ declare module '@polkadot/types/lookup' {
       readonly amount: u128;
       readonly rationale: Option<Bytes>;
     } & Struct;
+    readonly isVestedSpendFromBudget: boolean;
+    readonly asVestedSpendFromBudget: {
+      readonly accountId: AccountId32;
+      readonly vestingSchedule: PalletVestingVestingInfo;
+      readonly rationale: Option<Bytes>;
+    } & Struct;
     readonly isFundWorkingGroupBudget: boolean;
     readonly asFundWorkingGroupBudget: {
       readonly memberId: u64;
@@ -4248,10 +4309,10 @@ declare module '@polkadot/types/lookup' {
       readonly workerId: u64;
       readonly msg: Bytes;
     } & Struct;
-    readonly type: 'AddOpening' | 'ApplyOnOpening' | 'FillOpening' | 'UpdateRoleAccount' | 'LeaveRole' | 'TerminateRole' | 'SlashStake' | 'DecreaseStake' | 'IncreaseStake' | 'WithdrawApplication' | 'CancelOpening' | 'SetBudget' | 'UpdateRewardAccount' | 'UpdateRewardAmount' | 'SetStatusText' | 'SpendFromBudget' | 'FundWorkingGroupBudget' | 'LeadRemark' | 'WorkerRemark';
+    readonly type: 'AddOpening' | 'ApplyOnOpening' | 'FillOpening' | 'UpdateRoleAccount' | 'LeaveRole' | 'TerminateRole' | 'SlashStake' | 'DecreaseStake' | 'IncreaseStake' | 'WithdrawApplication' | 'CancelOpening' | 'SetBudget' | 'UpdateRewardAccount' | 'UpdateRewardAmount' | 'SetStatusText' | 'SpendFromBudget' | 'VestedSpendFromBudget' | 'FundWorkingGroupBudget' | 'LeadRemark' | 'WorkerRemark';
   }
 
-  /** @name JoystreamNodeRuntimeOriginCaller (421) */
+  /** @name JoystreamNodeRuntimeOriginCaller (424) */
   interface JoystreamNodeRuntimeOriginCaller extends Enum {
     readonly isSystem: boolean;
     readonly asSystem: FrameSupportDispatchRawOrigin;
@@ -4259,7 +4320,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'System' | 'Void';
   }
 
-  /** @name FrameSupportDispatchRawOrigin (422) */
+  /** @name FrameSupportDispatchRawOrigin (425) */
   interface FrameSupportDispatchRawOrigin extends Enum {
     readonly isRoot: boolean;
     readonly isSigned: boolean;
@@ -4268,16 +4329,16 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Root' | 'Signed' | 'None';
   }
 
-  /** @name SpCoreVoid (423) */
+  /** @name SpCoreVoid (426) */
   type SpCoreVoid = Null;
 
-  /** @name PalletUtilityError (424) */
+  /** @name PalletUtilityError (427) */
   interface PalletUtilityError extends Enum {
     readonly isTooManyCalls: boolean;
     readonly type: 'TooManyCalls';
   }
 
-  /** @name SpConsensusBabeDigestsPreDigest (431) */
+  /** @name SpConsensusBabeDigestsPreDigest (434) */
   interface SpConsensusBabeDigestsPreDigest extends Enum {
     readonly isPrimary: boolean;
     readonly asPrimary: SpConsensusBabeDigestsPrimaryPreDigest;
@@ -4288,7 +4349,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Primary' | 'SecondaryPlain' | 'SecondaryVRF';
   }
 
-  /** @name SpConsensusBabeDigestsPrimaryPreDigest (432) */
+  /** @name SpConsensusBabeDigestsPrimaryPreDigest (435) */
   interface SpConsensusBabeDigestsPrimaryPreDigest extends Struct {
     readonly authorityIndex: u32;
     readonly slot: u64;
@@ -4296,13 +4357,13 @@ declare module '@polkadot/types/lookup' {
     readonly vrfProof: U8aFixed;
   }
 
-  /** @name SpConsensusBabeDigestsSecondaryPlainPreDigest (433) */
+  /** @name SpConsensusBabeDigestsSecondaryPlainPreDigest (436) */
   interface SpConsensusBabeDigestsSecondaryPlainPreDigest extends Struct {
     readonly authorityIndex: u32;
     readonly slot: u64;
   }
 
-  /** @name SpConsensusBabeDigestsSecondaryVRFPreDigest (434) */
+  /** @name SpConsensusBabeDigestsSecondaryVRFPreDigest (437) */
   interface SpConsensusBabeDigestsSecondaryVRFPreDigest extends Struct {
     readonly authorityIndex: u32;
     readonly slot: u64;
@@ -4310,13 +4371,13 @@ declare module '@polkadot/types/lookup' {
     readonly vrfProof: U8aFixed;
   }
 
-  /** @name SpConsensusBabeBabeEpochConfiguration (436) */
+  /** @name SpConsensusBabeBabeEpochConfiguration (439) */
   interface SpConsensusBabeBabeEpochConfiguration extends Struct {
     readonly c: ITuple<[u64, u64]>;
     readonly allowedSlots: SpConsensusBabeAllowedSlots;
   }
 
-  /** @name PalletBabeError (438) */
+  /** @name PalletBabeError (441) */
   interface PalletBabeError extends Enum {
     readonly isInvalidEquivocationProof: boolean;
     readonly isInvalidKeyOwnershipProof: boolean;
@@ -4325,14 +4386,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'InvalidEquivocationProof' | 'InvalidKeyOwnershipProof' | 'DuplicateOffenceReport' | 'InvalidConfiguration';
   }
 
-  /** @name PalletBalancesBalanceLock (440) */
+  /** @name PalletBalancesBalanceLock (443) */
   interface PalletBalancesBalanceLock extends Struct {
     readonly id: U8aFixed;
     readonly amount: u128;
     readonly reasons: PalletBalancesReasons;
   }
 
-  /** @name PalletBalancesReasons (441) */
+  /** @name PalletBalancesReasons (444) */
   interface PalletBalancesReasons extends Enum {
     readonly isFee: boolean;
     readonly isMisc: boolean;
@@ -4340,13 +4401,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Fee' | 'Misc' | 'All';
   }
 
-  /** @name PalletBalancesReserveData (444) */
+  /** @name PalletBalancesReserveData (447) */
   interface PalletBalancesReserveData extends Struct {
     readonly id: U8aFixed;
     readonly amount: u128;
   }
 
-  /** @name PalletBalancesError (446) */
+  /** @name PalletBalancesError (449) */
   interface PalletBalancesError extends Enum {
     readonly isVestingBalance: boolean;
     readonly isLiquidityRestrictions: boolean;
@@ -4359,27 +4420,27 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'VestingBalance' | 'LiquidityRestrictions' | 'InsufficientBalance' | 'ExistentialDeposit' | 'KeepAlive' | 'ExistingVestingSchedule' | 'DeadAccount' | 'TooManyReserves';
   }
 
-  /** @name PalletTransactionPaymentReleases (448) */
+  /** @name PalletTransactionPaymentReleases (451) */
   interface PalletTransactionPaymentReleases extends Enum {
     readonly isV1Ancient: boolean;
     readonly isV2: boolean;
     readonly type: 'V1Ancient' | 'V2';
   }
 
-  /** @name PalletElectionProviderMultiPhaseReadySolution (449) */
+  /** @name PalletElectionProviderMultiPhaseReadySolution (452) */
   interface PalletElectionProviderMultiPhaseReadySolution extends Struct {
     readonly supports: Vec<ITuple<[AccountId32, SpNposElectionsSupport]>>;
     readonly score: SpNposElectionsElectionScore;
     readonly compute: PalletElectionProviderMultiPhaseElectionCompute;
   }
 
-  /** @name PalletElectionProviderMultiPhaseRoundSnapshot (451) */
+  /** @name PalletElectionProviderMultiPhaseRoundSnapshot (454) */
   interface PalletElectionProviderMultiPhaseRoundSnapshot extends Struct {
     readonly voters: Vec<ITuple<[AccountId32, u64, Vec<AccountId32>]>>;
     readonly targets: Vec<AccountId32>;
   }
 
-  /** @name PalletElectionProviderMultiPhaseSignedSignedSubmission (458) */
+  /** @name PalletElectionProviderMultiPhaseSignedSignedSubmission (461) */
   interface PalletElectionProviderMultiPhaseSignedSignedSubmission extends Struct {
     readonly who: AccountId32;
     readonly deposit: u128;
@@ -4387,7 +4448,7 @@ declare module '@polkadot/types/lookup' {
     readonly callFee: u128;
   }
 
-  /** @name PalletElectionProviderMultiPhaseError (459) */
+  /** @name PalletElectionProviderMultiPhaseError (462) */
   interface PalletElectionProviderMultiPhaseError extends Enum {
     readonly isPreDispatchEarlySubmission: boolean;
     readonly isPreDispatchWrongWinnerCount: boolean;
@@ -4406,7 +4467,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'PreDispatchEarlySubmission' | 'PreDispatchWrongWinnerCount' | 'PreDispatchWeakSubmission' | 'SignedQueueFull' | 'SignedCannotPayDeposit' | 'SignedInvalidWitness' | 'SignedTooMuchWeight' | 'OcwCallWrongEra' | 'MissingSnapshotMetadata' | 'InvalidSubmissionIndex' | 'CallNotAllowed' | 'FallbackFailed' | 'BoundNotMet' | 'TooManyWinners';
   }
 
-  /** @name PalletStakingStakingLedger (460) */
+  /** @name PalletStakingStakingLedger (463) */
   interface PalletStakingStakingLedger extends Struct {
     readonly stash: AccountId32;
     readonly total: Compact<u128>;
@@ -4415,32 +4476,32 @@ declare module '@polkadot/types/lookup' {
     readonly claimedRewards: Vec<u32>;
   }
 
-  /** @name PalletStakingUnlockChunk (462) */
+  /** @name PalletStakingUnlockChunk (465) */
   interface PalletStakingUnlockChunk extends Struct {
     readonly value: Compact<u128>;
     readonly era: Compact<u32>;
   }
 
-  /** @name PalletStakingNominations (465) */
+  /** @name PalletStakingNominations (468) */
   interface PalletStakingNominations extends Struct {
     readonly targets: Vec<AccountId32>;
     readonly submittedIn: u32;
     readonly suppressed: bool;
   }
 
-  /** @name PalletStakingActiveEraInfo (466) */
+  /** @name PalletStakingActiveEraInfo (469) */
   interface PalletStakingActiveEraInfo extends Struct {
     readonly index: u32;
     readonly start: Option<u64>;
   }
 
-  /** @name PalletStakingEraRewardPoints (468) */
+  /** @name PalletStakingEraRewardPoints (471) */
   interface PalletStakingEraRewardPoints extends Struct {
     readonly total: u32;
     readonly individual: BTreeMap<AccountId32, u32>;
   }
 
-  /** @name PalletStakingUnappliedSlash (473) */
+  /** @name PalletStakingUnappliedSlash (476) */
   interface PalletStakingUnappliedSlash extends Struct {
     readonly validator: AccountId32;
     readonly own: u128;
@@ -4449,7 +4510,7 @@ declare module '@polkadot/types/lookup' {
     readonly payout: u128;
   }
 
-  /** @name PalletStakingSlashingSlashingSpans (475) */
+  /** @name PalletStakingSlashingSlashingSpans (478) */
   interface PalletStakingSlashingSlashingSpans extends Struct {
     readonly spanIndex: u32;
     readonly lastStart: u32;
@@ -4457,13 +4518,13 @@ declare module '@polkadot/types/lookup' {
     readonly prior: Vec<u32>;
   }
 
-  /** @name PalletStakingSlashingSpanRecord (476) */
+  /** @name PalletStakingSlashingSpanRecord (479) */
   interface PalletStakingSlashingSpanRecord extends Struct {
     readonly slashed: u128;
     readonly paidOut: u128;
   }
 
-  /** @name PalletStakingPalletError (479) */
+  /** @name PalletStakingPalletError (482) */
   interface PalletStakingPalletError extends Enum {
     readonly isNotController: boolean;
     readonly isNotStash: boolean;
@@ -4494,10 +4555,10 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'NotController' | 'NotStash' | 'AlreadyBonded' | 'AlreadyPaired' | 'EmptyTargets' | 'DuplicateIndex' | 'InvalidSlashIndex' | 'InsufficientBond' | 'NoMoreChunks' | 'NoUnlockChunk' | 'FundedTarget' | 'InvalidEraToReward' | 'InvalidNumberOfNominations' | 'NotSortedAndUnique' | 'AlreadyClaimed' | 'IncorrectHistoryDepth' | 'IncorrectSlashingSpans' | 'BadState' | 'TooManyTargets' | 'BadTarget' | 'CannotChillOther' | 'TooManyNominators' | 'TooManyValidators' | 'CommissionTooLow' | 'BoundNotMet' | 'BondingRestricted';
   }
 
-  /** @name SpCoreCryptoKeyTypeId (483) */
+  /** @name SpCoreCryptoKeyTypeId (486) */
   interface SpCoreCryptoKeyTypeId extends U8aFixed {}
 
-  /** @name PalletSessionError (484) */
+  /** @name PalletSessionError (487) */
   interface PalletSessionError extends Enum {
     readonly isInvalidProof: boolean;
     readonly isNoAssociatedValidatorId: boolean;
@@ -4507,7 +4568,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'InvalidProof' | 'NoAssociatedValidatorId' | 'DuplicatedKey' | 'NoKeys' | 'NoAccount';
   }
 
-  /** @name PalletGrandpaStoredState (486) */
+  /** @name PalletGrandpaStoredState (489) */
   interface PalletGrandpaStoredState extends Enum {
     readonly isLive: boolean;
     readonly isPendingPause: boolean;
@@ -4524,7 +4585,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Live' | 'PendingPause' | 'Paused' | 'PendingResume';
   }
 
-  /** @name PalletGrandpaStoredPendingChange (487) */
+  /** @name PalletGrandpaStoredPendingChange (490) */
   interface PalletGrandpaStoredPendingChange extends Struct {
     readonly scheduledAt: u32;
     readonly delay: u32;
@@ -4532,7 +4593,7 @@ declare module '@polkadot/types/lookup' {
     readonly forced: Option<u32>;
   }
 
-  /** @name PalletGrandpaError (489) */
+  /** @name PalletGrandpaError (492) */
   interface PalletGrandpaError extends Enum {
     readonly isPauseFailed: boolean;
     readonly isResumeFailed: boolean;
@@ -4544,26 +4605,26 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'PauseFailed' | 'ResumeFailed' | 'ChangePending' | 'TooSoon' | 'InvalidKeyOwnershipProof' | 'InvalidEquivocationProof' | 'DuplicateOffenceReport';
   }
 
-  /** @name PalletImOnlineBoundedOpaqueNetworkState (495) */
+  /** @name PalletImOnlineBoundedOpaqueNetworkState (498) */
   interface PalletImOnlineBoundedOpaqueNetworkState extends Struct {
     readonly peerId: Bytes;
     readonly externalAddresses: Vec<Bytes>;
   }
 
-  /** @name PalletImOnlineError (499) */
+  /** @name PalletImOnlineError (502) */
   interface PalletImOnlineError extends Enum {
     readonly isInvalidKey: boolean;
     readonly isDuplicatedHeartbeat: boolean;
     readonly type: 'InvalidKey' | 'DuplicatedHeartbeat';
   }
 
-  /** @name SpStakingOffenceOffenceDetails (500) */
+  /** @name SpStakingOffenceOffenceDetails (503) */
   interface SpStakingOffenceOffenceDetails extends Struct {
     readonly offender: ITuple<[AccountId32, PalletStakingExposure]>;
     readonly reporters: Vec<AccountId32>;
   }
 
-  /** @name PalletBagsListListNode (503) */
+  /** @name PalletBagsListListNode (506) */
   interface PalletBagsListListNode extends Struct {
     readonly id: AccountId32;
     readonly prev: Option<AccountId32>;
@@ -4572,20 +4633,20 @@ declare module '@polkadot/types/lookup' {
     readonly score: u64;
   }
 
-  /** @name PalletBagsListListBag (504) */
+  /** @name PalletBagsListListBag (507) */
   interface PalletBagsListListBag extends Struct {
     readonly head: Option<AccountId32>;
     readonly tail: Option<AccountId32>;
   }
 
-  /** @name PalletBagsListError (505) */
+  /** @name PalletBagsListError (508) */
   interface PalletBagsListError extends Enum {
     readonly isList: boolean;
     readonly asList: PalletBagsListListListError;
     readonly type: 'List';
   }
 
-  /** @name PalletBagsListListListError (506) */
+  /** @name PalletBagsListListListError (509) */
   interface PalletBagsListListListError extends Enum {
     readonly isDuplicate: boolean;
     readonly isNotHeavier: boolean;
@@ -4594,14 +4655,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Duplicate' | 'NotHeavier' | 'NotInSameBag' | 'NodeNotFound';
   }
 
-  /** @name PalletVestingReleases (509) */
+  /** @name PalletVestingReleases (512) */
   interface PalletVestingReleases extends Enum {
     readonly isV0: boolean;
     readonly isV1: boolean;
     readonly type: 'V0' | 'V1';
   }
 
-  /** @name PalletVestingError (510) */
+  /** @name PalletVestingError (513) */
   interface PalletVestingError extends Enum {
     readonly isNotVesting: boolean;
     readonly isAtMaxVestingSchedules: boolean;
@@ -4611,7 +4672,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'NotVesting' | 'AtMaxVestingSchedules' | 'AmountLow' | 'ScheduleIndexOutOfBounds' | 'InvalidScheduleParams';
   }
 
-  /** @name PalletMultisigMultisig (512) */
+  /** @name PalletMultisigMultisig (515) */
   interface PalletMultisigMultisig extends Struct {
     readonly when: PalletMultisigTimepoint;
     readonly deposit: u128;
@@ -4619,7 +4680,7 @@ declare module '@polkadot/types/lookup' {
     readonly approvals: Vec<AccountId32>;
   }
 
-  /** @name PalletMultisigError (514) */
+  /** @name PalletMultisigError (517) */
   interface PalletMultisigError extends Enum {
     readonly isMinimumThreshold: boolean;
     readonly isAlreadyApproved: boolean;
@@ -4638,13 +4699,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'MinimumThreshold' | 'AlreadyApproved' | 'NoApprovalsNeeded' | 'TooFewSignatories' | 'TooManySignatories' | 'SignatoriesOutOfOrder' | 'SenderInSignatories' | 'NotFound' | 'NotOwner' | 'NoTimepoint' | 'WrongTimepoint' | 'UnexpectedTimepoint' | 'MaxWeightTooLow' | 'AlreadyStored';
   }
 
-  /** @name PalletCouncilCouncilStageUpdate (515) */
+  /** @name PalletCouncilCouncilStageUpdate (518) */
   interface PalletCouncilCouncilStageUpdate extends Struct {
     readonly stage: PalletCouncilCouncilStage;
     readonly changedAt: u32;
   }
 
-  /** @name PalletCouncilCouncilStage (516) */
+  /** @name PalletCouncilCouncilStage (519) */
   interface PalletCouncilCouncilStage extends Enum {
     readonly isAnnouncing: boolean;
     readonly asAnnouncing: PalletCouncilCouncilStageAnnouncing;
@@ -4655,23 +4716,23 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Announcing' | 'Election' | 'Idle';
   }
 
-  /** @name PalletCouncilCouncilStageAnnouncing (517) */
+  /** @name PalletCouncilCouncilStageAnnouncing (520) */
   interface PalletCouncilCouncilStageAnnouncing extends Struct {
     readonly candidatesCount: u32;
     readonly endsAt: u32;
   }
 
-  /** @name PalletCouncilCouncilStageElection (518) */
+  /** @name PalletCouncilCouncilStageElection (521) */
   interface PalletCouncilCouncilStageElection extends Struct {
     readonly candidatesCount: u32;
   }
 
-  /** @name PalletCouncilCouncilStageIdle (519) */
+  /** @name PalletCouncilCouncilStageIdle (522) */
   interface PalletCouncilCouncilStageIdle extends Struct {
     readonly endsAt: u32;
   }
 
-  /** @name PalletCouncilCouncilMember (521) */
+  /** @name PalletCouncilCouncilMember (524) */
   interface PalletCouncilCouncilMember extends Struct {
     readonly stakingAccountId: AccountId32;
     readonly rewardAccountId: AccountId32;
@@ -4681,7 +4742,7 @@ declare module '@polkadot/types/lookup' {
     readonly unpaidReward: u128;
   }
 
-  /** @name PalletCouncilCandidate (523) */
+  /** @name PalletCouncilCandidate (526) */
   interface PalletCouncilCandidate extends Struct {
     readonly stakingAccountId: AccountId32;
     readonly rewardAccountId: AccountId32;
@@ -4691,7 +4752,7 @@ declare module '@polkadot/types/lookup' {
     readonly noteHash: Option<H256>;
   }
 
-  /** @name PalletCouncilError (524) */
+  /** @name PalletCouncilError (527) */
   interface PalletCouncilError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isBadOrigin: boolean;
@@ -4717,10 +4778,11 @@ declare module '@polkadot/types/lookup' {
     readonly isZeroTokensFunding: boolean;
     readonly isCandidateDoesNotExist: boolean;
     readonly isInsufficientBalanceForTransfer: boolean;
-    readonly type: 'ArithmeticError' | 'BadOrigin' | 'CantCandidateNow' | 'CantReleaseStakeNow' | 'CandidacyStakeTooLow' | 'CantCandidateTwice' | 'ConflictingStake' | 'StakeStillNeeded' | 'NoStake' | 'InsufficientBalanceForStaking' | 'CantVoteForYourself' | 'MemberIdNotMatchAccount' | 'InvalidAccountToStakeReuse' | 'NotCandidatingNow' | 'CantWithdrawCandidacyNow' | 'NotCouncilor' | 'InsufficientFundsForFundingRequest' | 'ZeroBalanceFundRequest' | 'RepeatedFundRequestAccount' | 'EmptyFundingRequests' | 'InsufficientTokensForFunding' | 'ZeroTokensFunding' | 'CandidateDoesNotExist' | 'InsufficientBalanceForTransfer';
+    readonly isReductionAmountTooLarge: boolean;
+    readonly type: 'ArithmeticError' | 'BadOrigin' | 'CantCandidateNow' | 'CantReleaseStakeNow' | 'CandidacyStakeTooLow' | 'CantCandidateTwice' | 'ConflictingStake' | 'StakeStillNeeded' | 'NoStake' | 'InsufficientBalanceForStaking' | 'CantVoteForYourself' | 'MemberIdNotMatchAccount' | 'InvalidAccountToStakeReuse' | 'NotCandidatingNow' | 'CantWithdrawCandidacyNow' | 'NotCouncilor' | 'InsufficientFundsForFundingRequest' | 'ZeroBalanceFundRequest' | 'RepeatedFundRequestAccount' | 'EmptyFundingRequests' | 'InsufficientTokensForFunding' | 'ZeroTokensFunding' | 'CandidateDoesNotExist' | 'InsufficientBalanceForTransfer' | 'ReductionAmountTooLarge';
   }
 
-  /** @name PalletReferendumReferendumStage (525) */
+  /** @name PalletReferendumReferendumStage (528) */
   interface PalletReferendumReferendumStage extends Enum {
     readonly isInactive: boolean;
     readonly isVoting: boolean;
@@ -4730,7 +4792,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Inactive' | 'Voting' | 'Revealing';
   }
 
-  /** @name PalletReferendumReferendumStageVoting (527) */
+  /** @name PalletReferendumReferendumStageVoting (530) */
   interface PalletReferendumReferendumStageVoting extends Struct {
     readonly started: u32;
     readonly winningTargetCount: u32;
@@ -4738,7 +4800,7 @@ declare module '@polkadot/types/lookup' {
     readonly endsAt: u32;
   }
 
-  /** @name PalletReferendumReferendumStageRevealing (528) */
+  /** @name PalletReferendumReferendumStageRevealing (531) */
   interface PalletReferendumReferendumStageRevealing extends Struct {
     readonly started: u32;
     readonly winningTargetCount: u32;
@@ -4747,7 +4809,7 @@ declare module '@polkadot/types/lookup' {
     readonly endsAt: u32;
   }
 
-  /** @name PalletReferendumCastVote (529) */
+  /** @name PalletReferendumCastVote (532) */
   interface PalletReferendumCastVote extends Struct {
     readonly commitment: H256;
     readonly cycleId: u64;
@@ -4755,7 +4817,7 @@ declare module '@polkadot/types/lookup' {
     readonly voteFor: Option<u64>;
   }
 
-  /** @name PalletReferendumError (530) */
+  /** @name PalletReferendumError (533) */
   interface PalletReferendumError extends Enum {
     readonly isBadOrigin: boolean;
     readonly isReferendumNotRunning: boolean;
@@ -4774,7 +4836,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'BadOrigin' | 'ReferendumNotRunning' | 'RevealingNotInProgress' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToStake' | 'InsufficientStake' | 'InvalidReveal' | 'InvalidVote' | 'VoteNotExisting' | 'AlreadyVotedThisCycle' | 'UnstakingVoteInSameCycle' | 'SaltTooLong' | 'UnstakingForbidden' | 'AccountAlreadyOptedOutOfVoting';
   }
 
-  /** @name PalletMembershipMembershipObject (531) */
+  /** @name PalletMembershipMembershipObject (534) */
   interface PalletMembershipMembershipObject extends Struct {
     readonly handleHash: H256;
     readonly rootAccount: AccountId32;
@@ -4783,13 +4845,13 @@ declare module '@polkadot/types/lookup' {
     readonly invites: u32;
   }
 
-  /** @name PalletMembershipStakingAccountMemberBinding (532) */
+  /** @name PalletMembershipStakingAccountMemberBinding (535) */
   interface PalletMembershipStakingAccountMemberBinding extends Struct {
     readonly memberId: u64;
     readonly confirmed: bool;
   }
 
-  /** @name PalletMembershipError (533) */
+  /** @name PalletMembershipError (536) */
   interface PalletMembershipError extends Enum {
     readonly isNotEnoughBalanceToBuyMembership: boolean;
     readonly isControllerAccountRequired: boolean;
@@ -4816,7 +4878,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'NotEnoughBalanceToBuyMembership' | 'ControllerAccountRequired' | 'RootAccountRequired' | 'UnsignedOrigin' | 'MemberProfileNotFound' | 'HandleAlreadyRegistered' | 'HandleMustBeProvidedDuringRegistration' | 'ReferrerIsNotMember' | 'CannotTransferInvitesForNotMember' | 'NotEnoughInvites' | 'WorkingGroupLeaderNotSet' | 'StakingAccountIsAlreadyRegistered' | 'StakingAccountDoesntExist' | 'StakingAccountAlreadyConfirmed' | 'WorkingGroupBudgetIsNotSufficientForInviting' | 'ConflictingLock' | 'CannotExceedReferralCutPercentLimit' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToCoverStake' | 'GifLockExceedsCredit' | 'InsufficientBalanceToGift' | 'InsufficientBalanceToCoverPayment';
   }
 
-  /** @name PalletForumCategory (534) */
+  /** @name PalletForumCategory (537) */
   interface PalletForumCategory extends Struct {
     readonly titleHash: H256;
     readonly descriptionHash: H256;
@@ -4828,7 +4890,7 @@ declare module '@polkadot/types/lookup' {
     readonly stickyThreadIds: BTreeSet<u64>;
   }
 
-  /** @name PalletForumThread (536) */
+  /** @name PalletForumThread (539) */
   interface PalletForumThread extends Struct {
     readonly categoryId: u64;
     readonly authorId: u64;
@@ -4836,7 +4898,7 @@ declare module '@polkadot/types/lookup' {
     readonly numberOfEditablePosts: u64;
   }
 
-  /** @name PalletForumPost (537) */
+  /** @name PalletForumPost (540) */
   interface PalletForumPost extends Struct {
     readonly threadId: u64;
     readonly textHash: H256;
@@ -4845,7 +4907,7 @@ declare module '@polkadot/types/lookup' {
     readonly lastEdited: u32;
   }
 
-  /** @name PalletForumError (538) */
+  /** @name PalletForumError (541) */
   interface PalletForumError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isOriginNotForumLead: boolean;
@@ -4877,12 +4939,12 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'OriginNotForumLead' | 'ForumUserIdNotMatchAccount' | 'ModeratorIdNotMatchAccount' | 'AccountDoesNotMatchThreadAuthor' | 'ThreadDoesNotExist' | 'ModeratorModerateOriginCategory' | 'ModeratorModerateDestinationCategory' | 'ThreadMoveInvalid' | 'ThreadNotBeingUpdated' | 'InsufficientBalanceForThreadCreation' | 'CannotDeleteThreadWithOutstandingPosts' | 'PostDoesNotExist' | 'AccountDoesNotMatchPostAuthor' | 'InsufficientBalanceForPost' | 'CategoryNotBeingUpdated' | 'AncestorCategoryImmutable' | 'MaxValidCategoryDepthExceeded' | 'CategoryDoesNotExist' | 'CategoryModeratorDoesNotExist' | 'CategoryNotEmptyThreads' | 'CategoryNotEmptyCategories' | 'ModeratorCantDeleteCategory' | 'ModeratorCantUpdateCategory' | 'MapSizeLimit' | 'PathLengthShouldBeGreaterThanZero' | 'MaxNumberOfStickiedThreadsExceeded';
   }
 
-  /** @name PalletConstitutionConstitutionInfo (539) */
+  /** @name PalletConstitutionConstitutionInfo (542) */
   interface PalletConstitutionConstitutionInfo extends Struct {
     readonly textHash: H256;
   }
 
-  /** @name PalletBountyBountyRecord (540) */
+  /** @name PalletBountyBountyRecord (543) */
   interface PalletBountyBountyRecord extends Struct {
     readonly creationParams: PalletBountyBountyParametersBoundedBTreeSet;
     readonly totalFunding: u128;
@@ -4891,7 +4953,7 @@ declare module '@polkadot/types/lookup' {
     readonly hasUnpaidOracleReward: bool;
   }
 
-  /** @name PalletBountyBountyParametersBoundedBTreeSet (542) */
+  /** @name PalletBountyBountyParametersBoundedBTreeSet (545) */
   interface PalletBountyBountyParametersBoundedBTreeSet extends Struct {
     readonly oracle: PalletBountyBountyActor;
     readonly contractType: PalletBountyAssuranceContractTypeBoundedBTreeSet;
@@ -4902,7 +4964,7 @@ declare module '@polkadot/types/lookup' {
     readonly fundingType: PalletBountyFundingType;
   }
 
-  /** @name PalletBountyAssuranceContractTypeBoundedBTreeSet (543) */
+  /** @name PalletBountyAssuranceContractTypeBoundedBTreeSet (546) */
   interface PalletBountyAssuranceContractTypeBoundedBTreeSet extends Enum {
     readonly isOpen: boolean;
     readonly isClosed: boolean;
@@ -4910,7 +4972,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Open' | 'Closed';
   }
 
-  /** @name PalletBountyBountyMilestone (544) */
+  /** @name PalletBountyBountyMilestone (547) */
   interface PalletBountyBountyMilestone extends Enum {
     readonly isCreated: boolean;
     readonly asCreated: {
@@ -4927,13 +4989,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Created' | 'BountyMaxFundingReached' | 'WorkSubmitted' | 'Terminated' | 'JudgmentSubmitted';
   }
 
-  /** @name PalletBountyContribution (546) */
+  /** @name PalletBountyContribution (549) */
   interface PalletBountyContribution extends Struct {
     readonly amount: u128;
     readonly funderStateBloatBondAmount: u128;
   }
 
-  /** @name PalletBountyEntryRecord (547) */
+  /** @name PalletBountyEntryRecord (550) */
   interface PalletBountyEntryRecord extends Struct {
     readonly memberId: u64;
     readonly stakingAccountId: AccountId32;
@@ -4941,7 +5003,7 @@ declare module '@polkadot/types/lookup' {
     readonly workSubmitted: bool;
   }
 
-  /** @name PalletBountyError (548) */
+  /** @name PalletBountyError (551) */
   interface PalletBountyError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isMinFundingAmountCannotBeGreaterThanMaxAmount: boolean;
@@ -4981,7 +5043,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'MinFundingAmountCannotBeGreaterThanMaxAmount' | 'BountyDoesntExist' | 'SwitchOracleOriginIsRoot' | 'InvalidStageUnexpectedFunding' | 'InvalidStageUnexpectedNoFundingContributed' | 'InvalidStageUnexpectedCancelled' | 'InvalidStageUnexpectedWorkSubmission' | 'InvalidStageUnexpectedJudgment' | 'InvalidStageUnexpectedSuccessfulBountyWithdrawal' | 'InvalidStageUnexpectedFailedBountyWithdrawal' | 'InsufficientBalanceForBounty' | 'NoBountyContributionFound' | 'InsufficientBalanceForStake' | 'ConflictingStakes' | 'WorkEntryDoesntExist' | 'CherryLessThenMinimumAllowed' | 'CannotSubmitWorkToClosedContractBounty' | 'ClosedContractMemberListIsEmpty' | 'ClosedContractMemberListIsTooLarge' | 'ClosedContractMemberNotFound' | 'InvalidOracleMemberId' | 'InvalidStakingAccountForMember' | 'ZeroWinnerReward' | 'TotalRewardShouldBeEqualToTotalFunding' | 'EntrantStakeIsLessThanMininum' | 'FundingAmountCannotBeZero' | 'FundingPeriodCannotBeZero' | 'WinnerShouldHasWorkSubmission' | 'InvalidContributorActorSpecified' | 'InvalidOracleActorSpecified' | 'InvalidEntrantWorkerSpecified' | 'InvalidCreatorActorSpecified' | 'WorkEntryDoesntBelongToWorker' | 'OracleRewardAlreadyWithdrawn';
   }
 
-  /** @name PalletJoystreamUtilityError (549) */
+  /** @name PalletJoystreamUtilityError (552) */
   interface PalletJoystreamUtilityError extends Enum {
     readonly isInsufficientFundsForBudgetUpdate: boolean;
     readonly isZeroTokensBurn: boolean;
@@ -4989,7 +5051,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'InsufficientFundsForBudgetUpdate' | 'ZeroTokensBurn' | 'InsufficientFundsForBurn';
   }
 
-  /** @name PalletContentVideoRecord (550) */
+  /** @name PalletContentVideoRecord (553) */
   interface PalletContentVideoRecord extends Struct {
     readonly inChannel: u64;
     readonly nftStatus: Option<PalletContentNftTypesOwnedNft>;
@@ -4997,7 +5059,7 @@ declare module '@polkadot/types/lookup' {
     readonly videoStateBloatBond: PalletCommonBloatBondRepayableBloatBond;
   }
 
-  /** @name PalletContentNftTypesOwnedNft (551) */
+  /** @name PalletContentNftTypesOwnedNft (554) */
   interface PalletContentNftTypesOwnedNft extends Struct {
     readonly owner: PalletContentNftTypesNftOwner;
     readonly transactionalStatus: PalletContentNftTypesTransactionalStatusRecord;
@@ -5005,7 +5067,7 @@ declare module '@polkadot/types/lookup' {
     readonly openAuctionsNonce: u64;
   }
 
-  /** @name PalletContentNftTypesTransactionalStatusRecord (552) */
+  /** @name PalletContentNftTypesTransactionalStatusRecord (555) */
   interface PalletContentNftTypesTransactionalStatusRecord extends Enum {
     readonly isIdle: boolean;
     readonly isInitiatedOfferToMember: boolean;
@@ -5019,7 +5081,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Idle' | 'InitiatedOfferToMember' | 'EnglishAuction' | 'OpenAuction' | 'BuyNow';
   }
 
-  /** @name PalletContentNftTypesEnglishAuctionRecord (553) */
+  /** @name PalletContentNftTypesEnglishAuctionRecord (556) */
   interface PalletContentNftTypesEnglishAuctionRecord extends Struct {
     readonly startingPrice: u128;
     readonly buyNowPrice: Option<u128>;
@@ -5031,13 +5093,13 @@ declare module '@polkadot/types/lookup' {
     readonly topBid: Option<PalletContentNftTypesEnglishAuctionBid>;
   }
 
-  /** @name PalletContentNftTypesEnglishAuctionBid (556) */
+  /** @name PalletContentNftTypesEnglishAuctionBid (559) */
   interface PalletContentNftTypesEnglishAuctionBid extends Struct {
     readonly amount: u128;
     readonly bidderId: u64;
   }
 
-  /** @name PalletContentNftTypesOpenAuctionRecord (557) */
+  /** @name PalletContentNftTypesOpenAuctionRecord (560) */
   interface PalletContentNftTypesOpenAuctionRecord extends Struct {
     readonly startingPrice: u128;
     readonly buyNowPrice: Option<u128>;
@@ -5047,7 +5109,7 @@ declare module '@polkadot/types/lookup' {
     readonly start: u32;
   }
 
-  /** @name PalletContentNftTypesNftOwner (558) */
+  /** @name PalletContentNftTypesNftOwner (561) */
   interface PalletContentNftTypesNftOwner extends Enum {
     readonly isChannelOwner: boolean;
     readonly isMember: boolean;
@@ -5055,21 +5117,21 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ChannelOwner' | 'Member';
   }
 
-  /** @name PalletContentPermissionsCuratorGroupCuratorGroupRecord (561) */
+  /** @name PalletContentPermissionsCuratorGroupCuratorGroupRecord (564) */
   interface PalletContentPermissionsCuratorGroupCuratorGroupRecord extends Struct {
     readonly curators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
     readonly active: bool;
     readonly permissionsByLevel: BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>;
   }
 
-  /** @name PalletContentNftTypesOpenAuctionBidRecord (568) */
+  /** @name PalletContentNftTypesOpenAuctionBidRecord (571) */
   interface PalletContentNftTypesOpenAuctionBidRecord extends Struct {
     readonly amount: u128;
     readonly madeAtBlock: u32;
     readonly auctionId: u64;
   }
 
-  /** @name PalletContentErrorsError (569) */
+  /** @name PalletContentErrorsError (572) */
   interface PalletContentErrorsError extends Enum {
     readonly isChannelStateBloatBondChanged: boolean;
     readonly isVideoStateBloatBondChanged: boolean;
@@ -5203,7 +5265,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ChannelStateBloatBondChanged' | 'VideoStateBloatBondChanged' | 'MinCashoutValueTooLow' | 'MaxCashoutValueTooHigh' | 'MaxNumberOfChannelCollaboratorsExceeded' | 'MaxNumberOfChannelAssetsExceeded' | 'MaxNumberOfVideoAssetsExceeded' | 'MaxNumberOfChannelAgentPermissionsExceeded' | 'MaxNumberOfPausedFeaturesPerChannelExceeded' | 'InvalidChannelBagWitnessProvided' | 'InvalidStorageBucketsNumWitnessProvided' | 'MissingStorageBucketsNumWitness' | 'ChannelOwnerMemberDoesNotExist' | 'ChannelOwnerCuratorGroupDoesNotExist' | 'ChannelStateBloatBondBelowExistentialDeposit' | 'NumberOfAssetsToRemoveIsZero' | 'CuratorIsNotAMemberOfGivenCuratorGroup' | 'CuratorIsAlreadyAMemberOfGivenCuratorGroup' | 'CuratorGroupDoesNotExist' | 'CuratorsPerGroupLimitReached' | 'CuratorGroupIsNotActive' | 'CuratorIdInvalid' | 'LeadAuthFailed' | 'MemberAuthFailed' | 'CuratorAuthFailed' | 'BadOrigin' | 'ActorNotAuthorized' | 'CategoryDoesNotExist' | 'ChannelDoesNotExist' | 'VideoDoesNotExist' | 'VideoInSeason' | 'ActorCannotBeLead' | 'ActorCannotOwnChannel' | 'NftAlreadyOwnedByChannel' | 'NftAlreadyExists' | 'NftDoesNotExist' | 'OverflowOrUnderflowHappened' | 'DoesNotOwnNft' | 'RoyaltyUpperBoundExceeded' | 'RoyaltyLowerBoundExceeded' | 'AuctionDurationUpperBoundExceeded' | 'AuctionDurationLowerBoundExceeded' | 'ExtensionPeriodUpperBoundExceeded' | 'ExtensionPeriodLowerBoundExceeded' | 'BidLockDurationUpperBoundExceeded' | 'BidLockDurationLowerBoundExceeded' | 'StartingPriceUpperBoundExceeded' | 'StartingPriceLowerBoundExceeded' | 'AuctionBidStepUpperBoundExceeded' | 'AuctionBidStepLowerBoundExceeded' | 'InsufficientBalance' | 'BidStepConstraintViolated' | 'InvalidBidAmountSpecified' | 'StartingPriceConstraintViolated' | 'ActionHasBidsAlready' | 'NftIsNotIdle' | 'PendingOfferDoesNotExist' | 'RewardAccountIsNotSet' | 'ActorIsNotBidder' | 'AuctionCannotBeCompleted' | 'BidDoesNotExist' | 'BidIsForPastAuction' | 'StartsAtLowerBoundExceeded' | 'StartsAtUpperBoundExceeded' | 'AuctionDidNotStart' | 'NotInAuctionState' | 'MemberIsNotAllowedToParticipate' | 'MemberProfileNotFound' | 'NftNotInBuyNowState' | 'InvalidBuyNowWitnessPriceProvided' | 'IsNotOpenAuctionType' | 'IsNotEnglishAuctionType' | 'BidLockDurationIsNotExpired' | 'NftAuctionIsAlreadyExpired' | 'BuyNowMustBeGreaterThanStartingPrice' | 'TargetMemberDoesNotExist' | 'InvalidNftOfferWitnessPriceProvided' | 'MaxAuctionWhiteListLengthUpperBoundExceeded' | 'WhitelistHasOnlyOneMember' | 'WhitelistedMemberDoesNotExist' | 'NftNonChannelOwnerDoesNotExist' | 'ExtensionPeriodIsGreaterThenAuctionDuration' | 'NoAssetsSpecified' | 'InvalidAssetsProvided' | 'ChannelContainsVideos' | 'ChannelContainsAssets' | 'InvalidBagSizeSpecified' | 'MigrationNotFinished' | 'ReplyDoesNotExist' | 'UnsufficientBalance' | 'InsufficientTreasuryBalance' | 'InvalidMemberProvided' | 'ActorNotAMember' | 'PaymentProofVerificationFailed' | 'CashoutAmountExceedsMaximumAmount' | 'CashoutAmountBelowMinimumAmount' | 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance' | 'WithdrawFromChannelAmountIsZero' | 'ChannelCashoutsDisabled' | 'MinCashoutAllowedExceedsMaxCashoutAllowed' | 'CuratorModerationActionNotAllowed' | 'MaxCuratorPermissionsPerLevelExceeded' | 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded' | 'ChannelFeaturePaused' | 'ChannelBagMissing' | 'AssetsToRemoveBeyondEntityAssetsSet' | 'InvalidVideoDataObjectsCountProvided' | 'InvalidChannelTransferStatus' | 'InvalidChannelTransferAcceptor' | 'InvalidChannelTransferCommitmentParams' | 'ChannelAgentInsufficientPermissions' | 'InvalidChannelOwner' | 'ZeroReward' | 'InsufficientBalanceForTransfer' | 'InsufficientBalanceForChannelCreation' | 'InsufficientBalanceForVideoCreation' | 'InsufficientCouncilBudget' | 'GlobalNftDailyLimitExceeded' | 'GlobalNftWeeklyLimitExceeded' | 'ChannelNftDailyLimitExceeded' | 'ChannelNftWeeklyLimitExceeded' | 'CreatorTokenAlreadyIssued' | 'CreatorTokenNotIssued' | 'MemberIdCouldNotBeDerivedFromActor' | 'CannotWithdrawFromChannelWithCreatorTokenIssued' | 'PatronageCanOnlyBeClaimedForMemberOwnedChannels' | 'ChannelTransfersBlockedDuringRevenueSplits' | 'ChannelTransfersBlockedDuringTokenSales' | 'ChannelTransfersBlockedDuringActiveAmm';
   }
 
-  /** @name PalletStorageBagRecord (570) */
+  /** @name PalletStorageBagRecord (573) */
   interface PalletStorageBagRecord extends Struct {
     readonly storedBy: BTreeSet<u64>;
     readonly distributedBy: BTreeSet<PalletStorageDistributionBucketIdRecord>;
@@ -5211,7 +5273,7 @@ declare module '@polkadot/types/lookup' {
     readonly objectsNumber: u64;
   }
 
-  /** @name PalletStorageStorageBucketRecord (573) */
+  /** @name PalletStorageStorageBucketRecord (576) */
   interface PalletStorageStorageBucketRecord extends Struct {
     readonly operatorStatus: PalletStorageStorageBucketOperatorStatus;
     readonly acceptingNewBags: bool;
@@ -5219,7 +5281,7 @@ declare module '@polkadot/types/lookup' {
     readonly assignedBags: u64;
   }
 
-  /** @name PalletStorageStorageBucketOperatorStatus (574) */
+  /** @name PalletStorageStorageBucketOperatorStatus (577) */
   interface PalletStorageStorageBucketOperatorStatus extends Enum {
     readonly isMissing: boolean;
     readonly isInvitedStorageWorker: boolean;
@@ -5229,13 +5291,13 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Missing' | 'InvitedStorageWorker' | 'StorageWorker';
   }
 
-  /** @name PalletStorageDynamicBagCreationPolicy (576) */
+  /** @name PalletStorageDynamicBagCreationPolicy (579) */
   interface PalletStorageDynamicBagCreationPolicy extends Struct {
     readonly numberOfStorageBuckets: u32;
     readonly families: BTreeMap<u64, u32>;
   }
 
-  /** @name PalletStorageDataObject (579) */
+  /** @name PalletStorageDataObject (582) */
   interface PalletStorageDataObject extends Struct {
     readonly accepted: bool;
     readonly stateBloatBond: PalletCommonBloatBondRepayableBloatBond;
@@ -5243,12 +5305,12 @@ declare module '@polkadot/types/lookup' {
     readonly ipfsContentId: Bytes;
   }
 
-  /** @name PalletStorageDistributionBucketFamilyRecord (580) */
+  /** @name PalletStorageDistributionBucketFamilyRecord (583) */
   interface PalletStorageDistributionBucketFamilyRecord extends Struct {
     readonly nextDistributionBucketIndex: u64;
   }
 
-  /** @name PalletStorageDistributionBucketRecord (581) */
+  /** @name PalletStorageDistributionBucketRecord (584) */
   interface PalletStorageDistributionBucketRecord extends Struct {
     readonly acceptingNewBags: bool;
     readonly distributing: bool;
@@ -5257,7 +5319,7 @@ declare module '@polkadot/types/lookup' {
     readonly assignedBags: u64;
   }
 
-  /** @name PalletStorageError (584) */
+  /** @name PalletStorageError (587) */
   interface PalletStorageError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isInvalidCidLength: boolean;
@@ -5327,7 +5389,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'InvalidCidLength' | 'NoObjectsOnUpload' | 'StorageBucketDoesntExist' | 'StorageBucketIsNotBoundToBag' | 'StorageBucketIsBoundToBag' | 'NoStorageBucketInvitation' | 'StorageProviderAlreadySet' | 'StorageProviderMustBeSet' | 'DifferentStorageProviderInvited' | 'InvitedStorageProvider' | 'StorageBucketIdCollectionsAreEmpty' | 'StorageBucketsNumberViolatesDynamicBagCreationPolicy' | 'DistributionBucketsViolatesDynamicBagCreationPolicy' | 'EmptyContentId' | 'ZeroObjectSize' | 'InvalidStateBloatBondSourceAccount' | 'InvalidStorageProvider' | 'InsufficientBalance' | 'DataObjectDoesntExist' | 'UploadingBlocked' | 'DataObjectIdCollectionIsEmpty' | 'SourceAndDestinationBagsAreEqual' | 'DataObjectBlacklisted' | 'BlacklistSizeLimitExceeded' | 'VoucherMaxObjectSizeLimitExceeded' | 'VoucherMaxObjectNumberLimitExceeded' | 'StorageBucketObjectNumberLimitReached' | 'StorageBucketObjectSizeLimitReached' | 'InsufficientTreasuryBalance' | 'CannotDeleteNonEmptyStorageBucket' | 'DataObjectIdParamsAreEmpty' | 'StorageBucketsPerBagLimitTooLow' | 'StorageBucketsPerBagLimitTooHigh' | 'StorageBucketPerBagLimitExceeded' | 'StorageBucketDoesntAcceptNewBags' | 'DynamicBagExists' | 'DynamicBagDoesntExist' | 'StorageProviderOperatorDoesntExist' | 'DataSizeFeeChanged' | 'DataObjectStateBloatBondChanged' | 'CannotDeleteNonEmptyDynamicBag' | 'MaxDistributionBucketFamilyNumberLimitExceeded' | 'DistributionBucketFamilyDoesntExist' | 'DistributionBucketDoesntExist' | 'DistributionBucketIdCollectionsAreEmpty' | 'DistributionBucketDoesntAcceptNewBags' | 'MaxDistributionBucketNumberPerBagLimitExceeded' | 'DistributionBucketIsNotBoundToBag' | 'DistributionBucketIsBoundToBag' | 'DistributionBucketsPerBagLimitTooLow' | 'DistributionBucketsPerBagLimitTooHigh' | 'DistributionProviderOperatorDoesntExist' | 'DistributionProviderOperatorAlreadyInvited' | 'DistributionProviderOperatorSet' | 'NoDistributionBucketInvitation' | 'MustBeDistributionProviderOperatorForBucket' | 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached' | 'MaxNumberOfOperatorsPerDistributionBucketReached' | 'DistributionFamilyBoundToBagCreationPolicy' | 'MaxDataObjectSizeExceeded' | 'InvalidTransactorAccount' | 'NumberOfStorageBucketsOutsideOfAllowedContraints' | 'NumberOfDistributionBucketsOutsideOfAllowedContraints' | 'CallDisabled';
   }
 
-  /** @name PalletProjectTokenAccountData (585) */
+  /** @name PalletProjectTokenAccountData (588) */
   interface PalletProjectTokenAccountData extends Struct {
     readonly vestingSchedules: BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>;
     readonly amount: u128;
@@ -5337,13 +5399,13 @@ declare module '@polkadot/types/lookup' {
     readonly lastSaleTotalPurchasedAmount: Option<ITuple<[u32, u128]>>;
   }
 
-  /** @name PalletProjectTokenStakingStatus (586) */
+  /** @name PalletProjectTokenStakingStatus (589) */
   interface PalletProjectTokenStakingStatus extends Struct {
     readonly splitId: u32;
     readonly amount: u128;
   }
 
-  /** @name PalletProjectTokenVestingSchedule (588) */
+  /** @name PalletProjectTokenVestingSchedule (591) */
   interface PalletProjectTokenVestingSchedule extends Struct {
     readonly linearVestingStartBlock: u32;
     readonly linearVestingDuration: u32;
@@ -5352,7 +5414,7 @@ declare module '@polkadot/types/lookup' {
     readonly burnedAmount: u128;
   }
 
-  /** @name PalletProjectTokenTokenData (595) */
+  /** @name PalletProjectTokenTokenData (598) */
   interface PalletProjectTokenTokenData extends Struct {
     readonly totalSupply: u128;
     readonly tokensIssued: u128;
@@ -5367,7 +5429,7 @@ declare module '@polkadot/types/lookup' {
     readonly ammCurve: Option<PalletProjectTokenAmmCurve>;
   }
 
-  /** @name PalletProjectTokenRevenueSplitState (596) */
+  /** @name PalletProjectTokenRevenueSplitState (599) */
   interface PalletProjectTokenRevenueSplitState extends Enum {
     readonly isInactive: boolean;
     readonly isActive: boolean;
@@ -5375,27 +5437,27 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Inactive' | 'Active';
   }
 
-  /** @name PalletProjectTokenRevenueSplitInfo (597) */
+  /** @name PalletProjectTokenRevenueSplitInfo (600) */
   interface PalletProjectTokenRevenueSplitInfo extends Struct {
     readonly allocation: u128;
     readonly timeline: PalletProjectTokenTimeline;
     readonly dividendsClaimed: u128;
   }
 
-  /** @name PalletProjectTokenTimeline (598) */
+  /** @name PalletProjectTokenTimeline (601) */
   interface PalletProjectTokenTimeline extends Struct {
     readonly start: u32;
     readonly duration: u32;
   }
 
-  /** @name PalletProjectTokenPatronageData (600) */
+  /** @name PalletProjectTokenPatronageData (603) */
   interface PalletProjectTokenPatronageData extends Struct {
     readonly rate: Permill;
     readonly unclaimedPatronageTallyAmount: u128;
     readonly lastUnclaimedPatronageTallyBlock: u32;
   }
 
-  /** @name PalletProjectTokenErrorsError (602) */
+  /** @name PalletProjectTokenErrorsError (605) */
   interface PalletProjectTokenErrorsError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isInsufficientTransferrableBalance: boolean;
@@ -5461,7 +5523,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'InsufficientTransferrableBalance' | 'TokenDoesNotExist' | 'AccountInformationDoesNotExist' | 'TransferDestinationMemberDoesNotExist' | 'MerkleProofVerificationFailure' | 'TokenSymbolAlreadyInUse' | 'InitialAllocationToNonExistingMember' | 'AccountAlreadyExists' | 'TooManyTransferOutputs' | 'TokenIssuanceNotInIdleState' | 'InsufficientJoyBalance' | 'JoyTransferSubjectToDusting' | 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode' | 'AttemptToRemoveNonEmptyAccount' | 'CannotJoinWhitelistInPermissionlessMode' | 'CannotDeissueTokenWithOutstandingAccounts' | 'NoUpcomingSale' | 'NoActiveSale' | 'InsufficientBalanceForTokenPurchase' | 'NotEnoughTokensOnSale' | 'SaleStartingBlockInThePast' | 'SaleAccessProofRequired' | 'SaleAccessProofParticipantIsNotSender' | 'SalePurchaseCapExceeded' | 'MaxVestingSchedulesPerAccountPerTokenReached' | 'PreviousSaleNotFinalized' | 'NoTokensToRecover' | 'SaleDurationTooShort' | 'SaleDurationIsZero' | 'SaleUpperBoundQuantityIsZero' | 'SaleCapPerMemberIsZero' | 'SaleUnitPriceIsZero' | 'SalePurchaseAmountIsZero' | 'CannotInitSaleIfAmmIsActive' | 'RevenueSplitTimeToStartTooShort' | 'RevenueSplitDurationTooShort' | 'RevenueSplitAlreadyActiveForToken' | 'RevenueSplitNotActiveForToken' | 'RevenueSplitDidNotEnd' | 'RevenueSplitNotOngoing' | 'UserAlreadyParticipating' | 'InsufficientBalanceForSplitParticipation' | 'UserNotParticipantingInAnySplit' | 'CannotParticipateInSplitWithZeroAmount' | 'CannotIssueSplitWithZeroAllocationAmount' | 'CannotModifySupplyWhenRevenueSplitsAreActive' | 'RevenueSplitRateIsZero' | 'BurnAmountIsZero' | 'BurnAmountGreaterThanAccountTokensAmount' | 'NotInAmmState' | 'InvalidCurveParameters' | 'DeadlineExpired' | 'SlippageToleranceExceeded' | 'InsufficientTokenBalance' | 'OutstandingAmmProvidedSupplyTooLarge' | 'CurveSlopeParametersTooLow' | 'NotEnoughTokenMintedByAmmForThisSale' | 'TargetPatronageRateIsHigherThanCurrentRate' | 'YearlyPatronageRateLimitExceeded' | 'PalletFrozen';
   }
 
-  /** @name PalletProposalsEngineProposal (603) */
+  /** @name PalletProposalsEngineProposal (606) */
   interface PalletProposalsEngineProposal extends Struct {
     readonly parameters: PalletProposalsEngineProposalParameters;
     readonly proposerId: u64;
@@ -5473,7 +5535,7 @@ declare module '@polkadot/types/lookup' {
     readonly stakingAccountId: Option<AccountId32>;
   }
 
-  /** @name PalletProposalsEngineProposalParameters (604) */
+  /** @name PalletProposalsEngineProposalParameters (607) */
   interface PalletProposalsEngineProposalParameters extends Struct {
     readonly votingPeriod: u32;
     readonly gracePeriod: u32;
@@ -5485,7 +5547,7 @@ declare module '@polkadot/types/lookup' {
     readonly constitutionality: u32;
   }
 
-  /** @name PalletProposalsEngineVotingResults (605) */
+  /** @name PalletProposalsEngineVotingResults (608) */
   interface PalletProposalsEngineVotingResults extends Struct {
     readonly abstentions: u32;
     readonly approvals: u32;
@@ -5493,7 +5555,7 @@ declare module '@polkadot/types/lookup' {
     readonly slashes: u32;
   }
 
-  /** @name PalletProposalsEngineError (608) */
+  /** @name PalletProposalsEngineError (611) */
   interface PalletProposalsEngineError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isEmptyTitleProvided: boolean;
@@ -5521,14 +5583,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'EmptyTitleProvided' | 'EmptyDescriptionProvided' | 'TitleIsTooLong' | 'DescriptionIsTooLong' | 'ProposalNotFound' | 'ProposalFinalized' | 'AlreadyVoted' | 'NotAuthor' | 'MaxActiveProposalNumberExceeded' | 'EmptyStake' | 'StakeShouldBeEmpty' | 'StakeDiffersFromRequired' | 'InvalidParameterApprovalThreshold' | 'InvalidParameterSlashingThreshold' | 'RequireRootOrigin' | 'ProposalHasVotes' | 'ZeroExactExecutionBlock' | 'InvalidExactExecutionBlock' | 'InsufficientBalanceForStake' | 'ConflictingStakes' | 'InvalidStakingAccountForMember' | 'MaxDispatchableCallCodeSizeExceeded';
   }
 
-  /** @name PalletProposalsDiscussionDiscussionThread (609) */
+  /** @name PalletProposalsDiscussionDiscussionThread (612) */
   interface PalletProposalsDiscussionDiscussionThread extends Struct {
     readonly activatedAt: u32;
     readonly authorId: u64;
     readonly mode: PalletProposalsDiscussionThreadModeBoundedBTreeSet;
   }
 
-  /** @name PalletProposalsDiscussionThreadModeBoundedBTreeSet (611) */
+  /** @name PalletProposalsDiscussionThreadModeBoundedBTreeSet (614) */
   interface PalletProposalsDiscussionThreadModeBoundedBTreeSet extends Enum {
     readonly isOpen: boolean;
     readonly isClosed: boolean;
@@ -5536,14 +5598,14 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Open' | 'Closed';
   }
 
-  /** @name PalletProposalsDiscussionDiscussionPost (612) */
+  /** @name PalletProposalsDiscussionDiscussionPost (615) */
   interface PalletProposalsDiscussionDiscussionPost extends Struct {
     readonly authorId: u64;
     readonly cleanupPayOff: PalletCommonBloatBondRepayableBloatBond;
     readonly lastEdited: u32;
   }
 
-  /** @name PalletProposalsDiscussionError (613) */
+  /** @name PalletProposalsDiscussionError (616) */
   interface PalletProposalsDiscussionError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isThreadDoesntExist: boolean;
@@ -5558,7 +5620,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'ThreadDoesntExist' | 'PostDoesntExist' | 'RequireRootOrigin' | 'CannotPostOnClosedThread' | 'NotAuthorOrCouncilor' | 'MaxWhiteListSizeExceeded' | 'WhitelistedMemberDoesNotExist' | 'InsufficientBalanceForPost' | 'CannotDeletePost';
   }
 
-  /** @name PalletProposalsCodexError (614) */
+  /** @name PalletProposalsCodexError (617) */
   interface PalletProposalsCodexError extends Enum {
     readonly isSignalProposalIsEmpty: boolean;
     readonly isRuntimeProposalIsEmpty: boolean;
@@ -5586,10 +5648,11 @@ declare module '@polkadot/types/lookup' {
     readonly isInvalidLeadApplicationId: boolean;
     readonly isInvalidProposalId: boolean;
     readonly isArithmeticError: boolean;
-    readonly type: 'SignalProposalIsEmpty' | 'RuntimeProposalIsEmpty' | 'InvalidFundingRequestProposalBalance' | 'InvalidValidatorCount' | 'RequireRootOrigin' | 'InvalidCouncilElectionParameterCouncilSize' | 'InvalidCouncilElectionParameterCandidacyLimit' | 'InvalidCouncilElectionParameterMinVotingStake' | 'InvalidCouncilElectionParameterNewTermDuration' | 'InvalidCouncilElectionParameterMinCouncilStake' | 'InvalidCouncilElectionParameterRevealingPeriod' | 'InvalidCouncilElectionParameterVotingPeriod' | 'InvalidCouncilElectionParameterAnnouncingPeriod' | 'InvalidWorkingGroupBudgetCapacity' | 'InvalidSetLeadParameterCannotBeCouncilor' | 'SlashingStakeIsZero' | 'DecreasingStakeIsZero' | 'InsufficientFundsForBudgetUpdate' | 'InvalidFundingRequestProposalNumberOfAccount' | 'InvalidFundingRequestProposalRepeatedAccount' | 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout' | 'InvalidLeadWorkerId' | 'InvalidLeadOpeningId' | 'InvalidLeadApplicationId' | 'InvalidProposalId' | 'ArithmeticError';
+    readonly isReductionAmountZero: boolean;
+    readonly type: 'SignalProposalIsEmpty' | 'RuntimeProposalIsEmpty' | 'InvalidFundingRequestProposalBalance' | 'InvalidValidatorCount' | 'RequireRootOrigin' | 'InvalidCouncilElectionParameterCouncilSize' | 'InvalidCouncilElectionParameterCandidacyLimit' | 'InvalidCouncilElectionParameterMinVotingStake' | 'InvalidCouncilElectionParameterNewTermDuration' | 'InvalidCouncilElectionParameterMinCouncilStake' | 'InvalidCouncilElectionParameterRevealingPeriod' | 'InvalidCouncilElectionParameterVotingPeriod' | 'InvalidCouncilElectionParameterAnnouncingPeriod' | 'InvalidWorkingGroupBudgetCapacity' | 'InvalidSetLeadParameterCannotBeCouncilor' | 'SlashingStakeIsZero' | 'DecreasingStakeIsZero' | 'InsufficientFundsForBudgetUpdate' | 'InvalidFundingRequestProposalNumberOfAccount' | 'InvalidFundingRequestProposalRepeatedAccount' | 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout' | 'InvalidLeadWorkerId' | 'InvalidLeadOpeningId' | 'InvalidLeadApplicationId' | 'InvalidProposalId' | 'ArithmeticError' | 'ReductionAmountZero';
   }
 
-  /** @name PalletWorkingGroupOpening (615) */
+  /** @name PalletWorkingGroupOpening (618) */
   interface PalletWorkingGroupOpening extends Struct {
     readonly openingType: PalletWorkingGroupOpeningType;
     readonly created: u32;
@@ -5599,7 +5662,7 @@ declare module '@polkadot/types/lookup' {
     readonly creationStake: u128;
   }
 
-  /** @name PalletWorkingGroupJobApplication (616) */
+  /** @name PalletWorkingGroupJobApplication (619) */
   interface PalletWorkingGroupJobApplication extends Struct {
     readonly roleAccountId: AccountId32;
     readonly rewardAccountId: AccountId32;
@@ -5609,7 +5672,7 @@ declare module '@polkadot/types/lookup' {
     readonly openingId: u64;
   }
 
-  /** @name PalletWorkingGroupGroupWorker (617) */
+  /** @name PalletWorkingGroupGroupWorker (620) */
   interface PalletWorkingGroupGroupWorker extends Struct {
     readonly memberId: u64;
     readonly roleAccountId: AccountId32;
@@ -5622,7 +5685,7 @@ declare module '@polkadot/types/lookup' {
     readonly createdAt: u32;
   }
 
-  /** @name PalletWorkingGroupErrorsError (618) */
+  /** @name PalletWorkingGroupErrorsError (621) */
   interface PalletWorkingGroupErrorsError extends Enum {
     readonly isArithmeticError: boolean;
     readonly isStakeBalanceCannotBeZero: boolean;
@@ -5659,7 +5722,7 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'ArithmeticError' | 'StakeBalanceCannotBeZero' | 'OpeningDoesNotExist' | 'CannotHireMultipleLeaders' | 'WorkerApplicationDoesNotExist' | 'MaxActiveWorkerNumberExceeded' | 'SuccessfulWorkerApplicationDoesNotExist' | 'CannotHireLeaderWhenLeaderExists' | 'IsNotLeadAccount' | 'CurrentLeadNotSet' | 'WorkerDoesNotExist' | 'InvalidMemberOrigin' | 'SignerIsNotWorkerRoleAccount' | 'BelowMinimumStakes' | 'InsufficientBalanceToCoverStake' | 'ApplicationStakeDoesntMatchOpening' | 'OriginIsNotApplicant' | 'WorkerIsLeaving' | 'CannotRewardWithZero' | 'InvalidStakingAccountForMember' | 'ConflictStakesOnAccount' | 'WorkerHasNoReward' | 'UnstakingPeriodLessThanMinimum' | 'CannotSpendZero' | 'InsufficientBudgetForSpending' | 'NoApplicationsProvided' | 'CannotDecreaseStakeDeltaGreaterThanStake' | 'ApplicationsNotForOpening' | 'WorkerStorageValueTooLong' | 'InsufficientTokensForFunding' | 'ZeroTokensFunding' | 'InsufficientBalanceForTransfer';
   }
 
-  /** @name SpRuntimeMultiSignature (628) */
+  /** @name SpRuntimeMultiSignature (631) */
   interface SpRuntimeMultiSignature extends Enum {
     readonly isEd25519: boolean;
     readonly asEd25519: SpCoreEd25519Signature;
@@ -5670,31 +5733,31 @@ declare module '@polkadot/types/lookup' {
     readonly type: 'Ed25519' | 'Sr25519' | 'Ecdsa';
   }
 
-  /** @name SpCoreEcdsaSignature (629) */
+  /** @name SpCoreEcdsaSignature (632) */
   interface SpCoreEcdsaSignature extends U8aFixed {}
 
-  /** @name FrameSystemExtensionsCheckNonZeroSender (632) */
+  /** @name FrameSystemExtensionsCheckNonZeroSender (635) */
   type FrameSystemExtensionsCheckNonZeroSender = Null;
 
-  /** @name FrameSystemExtensionsCheckSpecVersion (633) */
+  /** @name FrameSystemExtensionsCheckSpecVersion (636) */
   type FrameSystemExtensionsCheckSpecVersion = Null;
 
-  /** @name FrameSystemExtensionsCheckTxVersion (634) */
+  /** @name FrameSystemExtensionsCheckTxVersion (637) */
   type FrameSystemExtensionsCheckTxVersion = Null;
 
-  /** @name FrameSystemExtensionsCheckGenesis (635) */
+  /** @name FrameSystemExtensionsCheckGenesis (638) */
   type FrameSystemExtensionsCheckGenesis = Null;
 
-  /** @name FrameSystemExtensionsCheckNonce (638) */
+  /** @name FrameSystemExtensionsCheckNonce (641) */
   interface FrameSystemExtensionsCheckNonce extends Compact<u32> {}
 
-  /** @name FrameSystemExtensionsCheckWeight (639) */
+  /** @name FrameSystemExtensionsCheckWeight (642) */
   type FrameSystemExtensionsCheckWeight = Null;
 
-  /** @name PalletTransactionPaymentChargeTransactionPayment (640) */
+  /** @name PalletTransactionPaymentChargeTransactionPayment (643) */
   interface PalletTransactionPaymentChargeTransactionPayment extends Compact<u128> {}
 
-  /** @name JoystreamNodeRuntimeRuntime (641) */
+  /** @name JoystreamNodeRuntimeRuntime (644) */
   type JoystreamNodeRuntimeRuntime = Null;
 
 } // declare module
