diff --git a/lib/cjs/content/channelPayouts.js b/lib/cjs/content/channelPayouts.js
index 9cb036611d66ddfffd3dcbf7a001ed6d8bf12bab..1a87bcaf491697288ff0a5dc10e857d9d02c04cd 100644
--- a/lib/cjs/content/channelPayouts.js
+++ b/lib/cjs/content/channelPayouts.js
@@ -250,7 +250,7 @@ function generateSerializedPayload(channelPayoutProofs) {
     const payloadLengthInBytes = long_1.default.fromNumber(serializedPayloadWithEmptyHeaderFields.byteLength);
     for (let i = 0; i < numberOfChannels; i++) {
         const channelPayoutProof = metadata_protobuf_1.ChannelPayoutsMetadata.Body.ChannelPayoutProof.encode(body.channelPayouts[i]).finish();
-        const indexOfChannelPayoutProof = serializedPayloadWithEmptyHeaderFields.indexOf(channelPayoutProof);
+        const indexOfChannelPayoutProof = serializedPayloadWithEmptyHeaderFields.indexOf(channelPayoutProof.toString());
         // set correct byteOffsets
         payload.header.channelPayoutByteOffsets[i].byteOffset = long_1.default.fromNumber(indexOfChannelPayoutProof - lengthOfVarintEncodedMessageSize(Buffer.from(channelPayoutProof).byteLength));
     }
diff --git a/lib/mjs/content/channelPayouts.js b/lib/mjs/content/channelPayouts.js
index a8457f071dc0e94834d44a44588b887a5f38b1f2..b063e1fdff32d227616b2003c701352dbfeb35dc 100644
--- a/lib/mjs/content/channelPayouts.js
+++ b/lib/mjs/content/channelPayouts.js
@@ -228,7 +228,7 @@ export function generateSerializedPayload(channelPayoutProofs) {
     const payloadLengthInBytes = Long.fromNumber(serializedPayloadWithEmptyHeaderFields.byteLength);
     for (let i = 0; i < numberOfChannels; i++) {
         const channelPayoutProof = ChannelPayoutsMetadata.Body.ChannelPayoutProof.encode(body.channelPayouts[i]).finish();
-        const indexOfChannelPayoutProof = serializedPayloadWithEmptyHeaderFields.indexOf(channelPayoutProof);
+        const indexOfChannelPayoutProof = serializedPayloadWithEmptyHeaderFields.indexOf(channelPayoutProof.toString());
         // set correct byteOffsets
         payload.header.channelPayoutByteOffsets[i].byteOffset = Long.fromNumber(indexOfChannelPayoutProof - lengthOfVarintEncodedMessageSize(Buffer.from(channelPayoutProof).byteLength));
     }
diff --git a/src/content/channelPayouts.ts b/src/content/channelPayouts.ts
index d4b057e018138b49c227380be0f36a692e7365a2..9db3a0f5c0072e59c617456128423d6b4b48650b 100644
--- a/src/content/channelPayouts.ts
+++ b/src/content/channelPayouts.ts
@@ -302,7 +302,7 @@ export function generateSerializedPayload(channelPayoutProofs: ChannelPayoutProo
 
   for (let i = 0; i < numberOfChannels; i++) {
     const channelPayoutProof = ChannelPayoutsMetadata.Body.ChannelPayoutProof.encode(body.channelPayouts![i]).finish()
-    const indexOfChannelPayoutProof = serializedPayloadWithEmptyHeaderFields.indexOf(channelPayoutProof)
+    const indexOfChannelPayoutProof = serializedPayloadWithEmptyHeaderFields.indexOf(channelPayoutProof.toString())
     // set correct byteOffsets
     payload.header.channelPayoutByteOffsets![i].byteOffset = Long.fromNumber(
       indexOfChannelPayoutProof - lengthOfVarintEncodedMessageSize(Buffer.from(channelPayoutProof).byteLength)
