diff --git a/lib/augment/augment-api-consts.d.ts b/lib/augment/augment-api-consts.d.ts
index 56431d52d55daf6def7a241dc7927b0618e6d67f..54adc1868bb274d4861a2e4135d2a4a2e7ee3bb5 100644
--- a/lib/augment/augment-api-consts.d.ts
+++ b/lib/augment/augment-api-consts.d.ts
@@ -624,6 +624,10 @@ declare module '@polkadot/api-base/types/consts' {
              * Exports 'Terminate Working Group Lead' proposal parameters.
              **/
             terminateWorkingGroupLeadProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
+            /**
+             * Set Argo Bridge Constraints
+             **/
+            updateArgoBridgeConstraints: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             updateChannelPayoutsProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             updateGlobalNftLimitProposalParameters: PalletProposalsEngineProposalParameters & AugmentedConst<ApiType>;
             /**
diff --git a/lib/augment/augment-api-events.d.ts b/lib/augment/augment-api-events.d.ts
index 070ed1f5e16b254936b15b390e562773352e9ad1..444909136957c5a5f45873ee6f3ccf00f233cc23 100644
--- a/lib/augment/augment-api-events.d.ts
+++ b/lib/augment/augment-api-events.d.ts
@@ -3,7 +3,7 @@ import type { ApiTypes, AugmentedEvent } from '@polkadot/api-base/types';
 import type { BTreeMap, BTreeSet, Bytes, Null, Option, Result, U8aFixed, Vec, bool, u128, u16, u32, u64, u8 } from '@polkadot/types-codec';
 import type { ITuple } from '@polkadot/types-codec/types';
 import type { AccountId32, H256, Perbill, Percent, Permill } from '@polkadot/types/interfaces/runtime';
-import type { FrameSupportDispatchDispatchInfo, FrameSupportTokensMiscBalanceStatus, JoystreamNodeRuntimeProxyType, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelRecord, PalletContentChannelUpdateParametersRecord, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhasePhase, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineSr25519AppSr25519Public, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmCurve, PalletProjectTokenTokenConstraints, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTransferPolicy, PalletProjectTokenTransfers, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineVoteKind, PalletReferendumOptionResult, PalletStakingExposure, PalletStakingForcing, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakePolicy, SpConsensusGrandpaAppPublic, SpNposElectionsElectionScore, SpRuntimeDispatchError } from '@polkadot/types/lookup';
+import type { FrameSupportDispatchDispatchInfo, FrameSupportTokensMiscBalanceStatus, JoystreamNodeRuntimeProxyType, PalletArgoBridgeBridgeConstraints, PalletArgoBridgeRemoteAccount, PalletArgoBridgeRemoteTransfer, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelRecord, PalletContentChannelUpdateParametersRecord, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhasePhase, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineSr25519AppSr25519Public, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmCurve, PalletProjectTokenTokenConstraints, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTransferPolicy, PalletProjectTokenTransfers, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineVoteKind, PalletReferendumOptionResult, PalletStakingExposure, PalletStakingForcing, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakePolicy, SpConsensusGrandpaAppPublic, SpNposElectionsElectionScore, SpRuntimeDispatchError } from '@polkadot/types/lookup';
 export type __AugmentedEvent<ApiType extends ApiTypes> = AugmentedEvent<ApiType>;
 declare module '@polkadot/api-base/types/events' {
     interface AugmentedEvents<ApiType extends ApiTypes> {
@@ -196,6 +196,15 @@ declare module '@polkadot/api-base/types/events' {
              **/
             WorkingGroupBudgetFunded: AugmentedEvent<ApiType, [u64, u128, Bytes]>;
         };
+        argoBridge: {
+            BridgeConfigUpdated: AugmentedEvent<ApiType, [PalletArgoBridgeBridgeConstraints]>;
+            BridgePaused: AugmentedEvent<ApiType, [AccountId32]>;
+            BridgeThawnFinished: AugmentedEvent<ApiType, []>;
+            BridgeThawnStarted: AugmentedEvent<ApiType, [AccountId32, u32]>;
+            InboundTransferFinalized: AugmentedEvent<ApiType, [PalletArgoBridgeRemoteTransfer, AccountId32, u128]>;
+            OutboundTransferRequested: AugmentedEvent<ApiType, [u64, AccountId32, PalletArgoBridgeRemoteAccount, u128, u128]>;
+            OutboundTransferReverted: AugmentedEvent<ApiType, [u64, AccountId32, u128, Bytes]>;
+        };
         balances: {
             /**
              * A balance was set by root.
diff --git a/lib/augment/augment-api-query.d.ts b/lib/augment/augment-api-query.d.ts
index a6e548b8de472dded717fd7044688a16277c3104..3baf951cb3a4377409936bf76686c88a8a15f688 100644
--- a/lib/augment/augment-api-query.d.ts
+++ b/lib/augment/augment-api-query.d.ts
@@ -3,7 +3,7 @@ import type { ApiTypes, AugmentedQuery, QueryableStorageEntry } from '@polkadot/
 import type { Bytes, Null, Option, U8aFixed, Vec, WrapperOpaque, bool, u128, u32, u64, u8 } from '@polkadot/types-codec';
 import type { AnyNumber, ITuple } from '@polkadot/types-codec/types';
 import type { AccountId32, H256, Perbill, Percent, Permill } from '@polkadot/types/interfaces/runtime';
-import type { FrameSupportDispatchPerDispatchClassWeight, FrameSystemAccountInfo, FrameSystemEventRecord, FrameSystemLastRuntimeUpgradeInfo, FrameSystemPhase, JoystreamNodeRuntimeSessionKeys, PalletBagsListListBag, PalletBagsListListNode, PalletBalancesAccountData, PalletBalancesBalanceLock, PalletBalancesReserveData, PalletBountyBountyActor, PalletBountyBountyRecord, PalletBountyContribution, PalletBountyEntryRecord, PalletConstitutionConstitutionInfo, PalletContentChannelRecord, PalletContentLimitPerPeriod, PalletContentNftCounter, PalletContentNftTypesOpenAuctionBidRecord, PalletContentPermissionsCuratorGroupCuratorGroupRecord, PalletContentVideoRecord, PalletCouncilCandidate, PalletCouncilCouncilMember, PalletCouncilCouncilStageUpdate, PalletElectionProviderMultiPhasePhase, PalletElectionProviderMultiPhaseReadySolution, PalletElectionProviderMultiPhaseRoundSnapshot, PalletElectionProviderMultiPhaseSignedSignedSubmission, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumCategory, PalletForumPost, PalletForumThread, PalletGrandpaStoredPendingChange, PalletGrandpaStoredState, PalletImOnlineBoundedOpaqueNetworkState, PalletImOnlineSr25519AppSr25519Public, PalletMembershipMembershipObject, PalletMembershipStakingAccountMemberBinding, PalletMultisigMultisig, PalletProjectTokenAccountData, PalletProjectTokenTokenData, PalletProposalsDiscussionDiscussionPost, PalletProposalsDiscussionDiscussionThread, PalletProposalsEngineProposal, PalletProposalsEngineVoteKind, PalletProxyAnnouncement, PalletProxyProxyDefinition, PalletReferendumCastVote, PalletReferendumReferendumStage, PalletStakingActiveEraInfo, PalletStakingEraRewardPoints, PalletStakingExposure, PalletStakingForcing, PalletStakingNominations, PalletStakingRewardDestination, PalletStakingSlashingSlashingSpans, PalletStakingSlashingSpanRecord, PalletStakingStakingLedger, PalletStakingUnappliedSlash, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageBagRecord, PalletStorageDataObject, PalletStorageDistributionBucketFamilyRecord, PalletStorageDistributionBucketRecord, PalletStorageDynamicBagCreationPolicy, PalletStorageDynamicBagType, PalletStorageStorageBucketRecord, PalletTransactionPaymentReleases, PalletVestingReleases, PalletVestingVestingInfo, PalletWorkingGroupGroupWorker, PalletWorkingGroupJobApplication, PalletWorkingGroupOpening, SpAuthorityDiscoveryAppPublic, SpConsensusBabeAppPublic, SpConsensusBabeBabeEpochConfiguration, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusBabeDigestsPreDigest, SpCoreCryptoKeyTypeId, SpNposElectionsElectionScore, SpRuntimeDigest, SpStakingOffenceOffenceDetails } from '@polkadot/types/lookup';
+import type { FrameSupportDispatchPerDispatchClassWeight, FrameSystemAccountInfo, FrameSystemEventRecord, FrameSystemLastRuntimeUpgradeInfo, FrameSystemPhase, JoystreamNodeRuntimeSessionKeys, PalletArgoBridgeBridgeStatus, PalletBagsListListBag, PalletBagsListListNode, PalletBalancesAccountData, PalletBalancesBalanceLock, PalletBalancesReserveData, PalletBountyBountyActor, PalletBountyBountyRecord, PalletBountyContribution, PalletBountyEntryRecord, PalletConstitutionConstitutionInfo, PalletContentChannelRecord, PalletContentLimitPerPeriod, PalletContentNftCounter, PalletContentNftTypesOpenAuctionBidRecord, PalletContentPermissionsCuratorGroupCuratorGroupRecord, PalletContentVideoRecord, PalletCouncilCandidate, PalletCouncilCouncilMember, PalletCouncilCouncilStageUpdate, PalletElectionProviderMultiPhasePhase, PalletElectionProviderMultiPhaseReadySolution, PalletElectionProviderMultiPhaseRoundSnapshot, PalletElectionProviderMultiPhaseSignedSignedSubmission, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumCategory, PalletForumPost, PalletForumThread, PalletGrandpaStoredPendingChange, PalletGrandpaStoredState, PalletImOnlineBoundedOpaqueNetworkState, PalletImOnlineSr25519AppSr25519Public, PalletMembershipMembershipObject, PalletMembershipStakingAccountMemberBinding, PalletMultisigMultisig, PalletProjectTokenAccountData, PalletProjectTokenTokenData, PalletProposalsDiscussionDiscussionPost, PalletProposalsDiscussionDiscussionThread, PalletProposalsEngineProposal, PalletProposalsEngineVoteKind, PalletProxyAnnouncement, PalletProxyProxyDefinition, PalletReferendumCastVote, PalletReferendumReferendumStage, PalletStakingActiveEraInfo, PalletStakingEraRewardPoints, PalletStakingExposure, PalletStakingForcing, PalletStakingNominations, PalletStakingRewardDestination, PalletStakingSlashingSlashingSpans, PalletStakingSlashingSpanRecord, PalletStakingStakingLedger, PalletStakingUnappliedSlash, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageBagRecord, PalletStorageDataObject, PalletStorageDistributionBucketFamilyRecord, PalletStorageDistributionBucketRecord, PalletStorageDynamicBagCreationPolicy, PalletStorageDynamicBagType, PalletStorageStorageBucketRecord, PalletTransactionPaymentReleases, PalletVestingReleases, PalletVestingVestingInfo, PalletWorkingGroupGroupWorker, PalletWorkingGroupJobApplication, PalletWorkingGroupOpening, SpAuthorityDiscoveryAppPublic, SpConsensusBabeAppPublic, SpConsensusBabeBabeEpochConfiguration, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusBabeDigestsPreDigest, SpCoreCryptoKeyTypeId, SpNposElectionsElectionScore, SpRuntimeDigest, SpStakingOffenceOffenceDetails } from '@polkadot/types/lookup';
 import type { Observable } from '@polkadot/types/types';
 export type __AugmentedQuery<ApiType extends ApiTypes> = AugmentedQuery<ApiType, () => unknown>;
 export type __QueryableStorageEntry<ApiType extends ApiTypes> = QueryableStorageEntry<ApiType>;
@@ -51,6 +51,31 @@ declare module '@polkadot/api-base/types/storage' {
              **/
             workerById: AugmentedQuery<ApiType, (arg: u64 | AnyNumber | Uint8Array) => Observable<Option<PalletWorkingGroupGroupWorker>>, [u64]>;
         };
+        argoBridge: {
+            /**
+             * Amount of JOY burned as a fee for each transfer
+             **/
+            bridgingFee: AugmentedQuery<ApiType, () => Observable<u128>, []>;
+            /**
+             * Number of tokens that the bridge pallet is able to mint
+             **/
+            mintAllowance: AugmentedQuery<ApiType, () => Observable<u128>, []>;
+            nextTransferId: AugmentedQuery<ApiType, () => Observable<u64>, []>;
+            /**
+             * Account ID that operates the bridge
+             **/
+            operatorAccount: AugmentedQuery<ApiType, () => Observable<Option<AccountId32>>, []>;
+            /**
+             * List of account IDs with permission to pause the bridge operations
+             **/
+            pauserAccounts: AugmentedQuery<ApiType, () => Observable<Vec<AccountId32>>, []>;
+            remoteChains: AugmentedQuery<ApiType, () => Observable<Vec<u32>>, []>;
+            status: AugmentedQuery<ApiType, () => Observable<PalletArgoBridgeBridgeStatus>, []>;
+            /**
+             * Number of blocks needed before bridge unpause can be finalised
+             **/
+            thawnDuration: AugmentedQuery<ApiType, () => Observable<u32>, []>;
+        };
         authorityDiscovery: {
             /**
              * Keys of the current authority set.
diff --git a/lib/augment/augment-api-tx.d.ts b/lib/augment/augment-api-tx.d.ts
index 90d8d06a6c3d053de97a8a34e14064806a87b68b..b0edfaf91deb8fe0d55177838034ad8286e5ae37 100644
--- a/lib/augment/augment-api-tx.d.ts
+++ b/lib/augment/augment-api-tx.d.ts
@@ -3,7 +3,7 @@ import type { ApiTypes, AugmentedSubmittable, SubmittableExtrinsic, SubmittableE
 import type { BTreeMap, BTreeSet, Bytes, Compact, Option, U8aFixed, Vec, bool, u128, u16, u32, u64, u8 } from '@polkadot/types-codec';
 import type { AnyNumber, IMethod, ITuple } from '@polkadot/types-codec/types';
 import type { AccountId32, Call, H256, Perbill, Percent, Permill } from '@polkadot/types/interfaces/runtime';
-import type { JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeProxyType, JoystreamNodeRuntimeSessionKeys, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelOwner, PalletContentChannelUpdateParametersRecord, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmParams, PalletProjectTokenMerkleProof, PalletProjectTokenPaymentWithVesting, PalletProjectTokenTokenConstraints, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSaleParams, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineVoteKind, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingRewardDestination, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynamicBagType, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusGrandpaEquivocationProof, SpConsensusSlotsEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpSessionMembershipProof, SpWeightsWeightV2Weight } from '@polkadot/types/lookup';
+import type { JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeProxyType, JoystreamNodeRuntimeSessionKeys, PalletArgoBridgeBridgeConstraints, PalletArgoBridgeRemoteAccount, PalletArgoBridgeRemoteTransfer, PalletBountyBountyActor, PalletBountyBountyParametersBTreeSet, PalletBountyOracleWorkEntryJudgment, PalletCommonBalanceKind, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelOwner, PalletContentChannelUpdateParametersRecord, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentTransferCommitmentParametersBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoUpdateParametersRecord, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumExtendedPostIdObject, PalletForumPrivilegedActor, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Signature, PalletMembershipBuyMembershipParameters, PalletMembershipCreateMemberParameters, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMultisigTimepoint, PalletProjectTokenAmmParams, PalletProjectTokenMerkleProof, PalletProjectTokenPaymentWithVesting, PalletProjectTokenTokenConstraints, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSaleParams, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsEngineVoteKind, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingRewardDestination, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageDistributionBucketIdRecord, PalletStorageDynamicBagType, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusGrandpaEquivocationProof, SpConsensusSlotsEquivocationProof, SpNposElectionsElectionScore, SpNposElectionsSupport, SpSessionMembershipProof, SpWeightsWeightV2Weight } from '@polkadot/types/lookup';
 export type __AugmentedSubmittable = AugmentedSubmittable<() => unknown>;
 export type __SubmittableExtrinsic<ApiType extends ApiTypes> = SubmittableExtrinsic<ApiType>;
 export type __SubmittableExtrinsicFunction<ApiType extends ApiTypes> = SubmittableExtrinsicFunction<ApiType>;
@@ -273,6 +273,39 @@ declare module '@polkadot/api-base/types/submittable' {
              **/
             workerRemark: AugmentedSubmittable<(workerId: u64 | AnyNumber | Uint8Array, msg: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, Bytes]>;
         };
+        argoBridge: {
+            finalizeInboundTransfer: AugmentedSubmittable<(remoteTransfer: PalletArgoBridgeRemoteTransfer | {
+                id?: any;
+                chainId?: any;
+            } | string | Uint8Array, destAccount: AccountId32 | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletArgoBridgeRemoteTransfer, AccountId32, u128]>;
+            finishUnpauseBridge: AugmentedSubmittable<() => SubmittableExtrinsic<ApiType>, []>;
+            initUnpauseBridge: AugmentedSubmittable<() => SubmittableExtrinsic<ApiType>, []>;
+            pauseBridge: AugmentedSubmittable<() => SubmittableExtrinsic<ApiType>, []>;
+            requestOutboundTransfer: AugmentedSubmittable<(destAccount: PalletArgoBridgeRemoteAccount | {
+                account?: any;
+                chainId?: any;
+            } | string | Uint8Array, amount: u128 | AnyNumber | Uint8Array, expectedFee: u128 | AnyNumber | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletArgoBridgeRemoteAccount, u128, u128]>;
+            revertOutboundTransfer: AugmentedSubmittable<(transferId: u64 | AnyNumber | Uint8Array, revertAccount: AccountId32 | string | Uint8Array, revertAmount: u128 | AnyNumber | Uint8Array, rationale: Bytes | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [u64, AccountId32, u128, Bytes]>;
+            /**
+             * Allow Governance to Set constraints
+             * Preconditions:
+             * - origin is signed by `root`
+             * PostConditions:
+             * - governance parameters storage value set to the provided values
+             * <weight>
+             *
+             * ## Weight
+             * `O (1)`
+             * # </weight>
+             **/
+            updateBridgeConstrains: AugmentedSubmittable<(parameters: PalletArgoBridgeBridgeConstraints | {
+                operatorAccount?: any;
+                pauserAccounts?: any;
+                bridgingFee?: any;
+                thawnDuration?: any;
+                remoteChains?: any;
+            } | string | Uint8Array) => SubmittableExtrinsic<ApiType>, [PalletArgoBridgeBridgeConstraints]>;
+        };
         babe: {
             /**
              * Plan an epoch config change. The epoch config change is recorded and will be enacted on
@@ -4971,6 +5004,8 @@ declare module '@polkadot/api-base/types/submittable' {
                 SetPalletFozenStatus: any;
             } | {
                 UpdateTokenPalletTokenConstraints: any;
+            } | {
+                UpdateArgoBridgeConstraints: any;
             } | {
                 SetEraPayoutDampingFactor: any;
             } | {
diff --git a/lib/augment/lookup.d.ts b/lib/augment/lookup.d.ts
index 7c4506b8b1c4a8df2dda043685d7cac3d0f0638a..a1e73bab5caac9fb8f2350bdc813606723cc7ee0 100644
--- a/lib/augment/lookup.d.ts
+++ b/lib/augment/lookup.d.ts
@@ -1479,7 +1479,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup214: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>, ProposalId, ThreadId>
+     * Lookup214: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>, pallet_argo_bridge::types::BridgeConstraints<sp_core::crypto::AccountId32, Balance, BlockNumber>>, ProposalId, ThreadId>
      **/
     PalletProposalsCodexRawEvent: {
         _enum: {
@@ -1497,7 +1497,7 @@ declare const _default: {
         exactExecutionBlock: string;
     };
     /**
-     * Lookup216: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>
+     * Lookup216: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>, pallet_argo_bridge::types::BridgeConstraints<sp_core::crypto::AccountId32, Balance, BlockNumber>>
      **/
     PalletProposalsCodexProposalDetails: {
         _enum: {
@@ -1526,19 +1526,30 @@ declare const _default: {
             UpdateChannelPayouts: string;
             SetPalletFozenStatus: string;
             UpdateTokenPalletTokenConstraints: string;
+            UpdateArgoBridgeConstraints: string;
             SetEraPayoutDampingFactor: string;
             DecreaseCouncilBudget: string;
         };
     };
     /**
-     * Lookup218: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
+     * Lookup217: pallet_argo_bridge::types::BridgeConstraints<sp_core::crypto::AccountId32, Balance, BlockNumber>
+     **/
+    PalletArgoBridgeBridgeConstraints: {
+        operatorAccount: string;
+        pauserAccounts: string;
+        bridgingFee: string;
+        thawnDuration: string;
+        remoteChains: string;
+    };
+    /**
+     * Lookup224: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
      **/
     PalletCommonFundingRequestParameters: {
         account: string;
         amount: string;
     };
     /**
-     * Lookup219: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
+     * Lookup225: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
      **/
     PalletProposalsCodexCreateOpeningParameters: {
         description: string;
@@ -1547,14 +1558,14 @@ declare const _default: {
         group: string;
     };
     /**
-     * Lookup220: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
+     * Lookup226: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
      **/
     PalletWorkingGroupStakePolicy: {
         stakeAmount: string;
         leavingUnstakingPeriod: string;
     };
     /**
-     * Lookup221: pallet_proposals_codex::types::FillOpeningParameters
+     * Lookup227: pallet_proposals_codex::types::FillOpeningParameters
      **/
     PalletProposalsCodexFillOpeningParameters: {
         openingId: string;
@@ -1562,7 +1573,7 @@ declare const _default: {
         workingGroup: string;
     };
     /**
-     * Lookup222: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
+     * Lookup228: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
      **/
     PalletProposalsCodexTerminateRoleParameters: {
         workerId: string;
@@ -1570,13 +1581,13 @@ declare const _default: {
         group: string;
     };
     /**
-     * Lookup223: pallet_common::FreezablePallet
+     * Lookup229: pallet_common::FreezablePallet
      **/
     PalletCommonFreezablePallet: {
         _enum: string[];
     };
     /**
-     * Lookup224: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance1>
+     * Lookup230: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance1>
      **/
     PalletWorkingGroupRawEventInstance1: {
         _enum: {
@@ -1609,13 +1620,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup228: pallet_working_group::types::OpeningType
+     * Lookup234: pallet_working_group::types::OpeningType
      **/
     PalletWorkingGroupOpeningType: {
         _enum: string[];
     };
     /**
-     * Lookup229: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
+     * Lookup235: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupApplyOnOpeningParams: {
         memberId: string;
@@ -1626,14 +1637,14 @@ declare const _default: {
         stakeParameters: string;
     };
     /**
-     * Lookup230: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup236: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupStakeParameters: {
         stake: string;
         stakingAccountId: string;
     };
     /**
-     * Lookup231: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
+     * Lookup237: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
      **/
     PalletVestingVestingInfo: {
         locked: string;
@@ -1641,17 +1652,17 @@ declare const _default: {
         startingBlock: string;
     };
     /**
-     * Lookup232: pallet_working_group::Instance1
+     * Lookup238: pallet_working_group::Instance1
      **/
     PalletWorkingGroupInstance1: string;
     /**
-     * Lookup233: pallet_working_group::types::RewardPaymentType
+     * Lookup239: pallet_working_group::types::RewardPaymentType
      **/
     PalletWorkingGroupRewardPaymentType: {
         _enum: string[];
     };
     /**
-     * Lookup234: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance2>
+     * Lookup240: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance2>
      **/
     PalletWorkingGroupRawEventInstance2: {
         _enum: {
@@ -1684,11 +1695,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup235: pallet_working_group::Instance2
+     * Lookup241: pallet_working_group::Instance2
      **/
     PalletWorkingGroupInstance2: string;
     /**
-     * Lookup236: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance3>
+     * Lookup242: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance3>
      **/
     PalletWorkingGroupRawEventInstance3: {
         _enum: {
@@ -1721,11 +1732,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup237: pallet_working_group::Instance3
+     * Lookup243: pallet_working_group::Instance3
      **/
     PalletWorkingGroupInstance3: string;
     /**
-     * Lookup238: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance4>
+     * Lookup244: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance4>
      **/
     PalletWorkingGroupRawEventInstance4: {
         _enum: {
@@ -1758,11 +1769,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup239: pallet_working_group::Instance4
+     * Lookup245: pallet_working_group::Instance4
      **/
     PalletWorkingGroupInstance4: string;
     /**
-     * Lookup240: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance5>
+     * Lookup246: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance5>
      **/
     PalletWorkingGroupRawEventInstance5: {
         _enum: {
@@ -1795,11 +1806,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup241: pallet_working_group::Instance5
+     * Lookup247: pallet_working_group::Instance5
      **/
     PalletWorkingGroupInstance5: string;
     /**
-     * Lookup242: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance6>
+     * Lookup248: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance6>
      **/
     PalletWorkingGroupRawEventInstance6: {
         _enum: {
@@ -1832,11 +1843,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup243: pallet_working_group::Instance6
+     * Lookup249: pallet_working_group::Instance6
      **/
     PalletWorkingGroupInstance6: string;
     /**
-     * Lookup244: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance7>
+     * Lookup250: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance7>
      **/
     PalletWorkingGroupRawEventInstance7: {
         _enum: {
@@ -1869,11 +1880,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup245: pallet_working_group::Instance7
+     * Lookup251: pallet_working_group::Instance7
      **/
     PalletWorkingGroupInstance7: string;
     /**
-     * Lookup246: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance8>
+     * Lookup252: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance8>
      **/
     PalletWorkingGroupRawEventInstance8: {
         _enum: {
@@ -1906,11 +1917,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup247: pallet_working_group::Instance8
+     * Lookup253: pallet_working_group::Instance8
      **/
     PalletWorkingGroupInstance8: string;
     /**
-     * Lookup248: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance9>
+     * Lookup254: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance9>
      **/
     PalletWorkingGroupRawEventInstance9: {
         _enum: {
@@ -1943,11 +1954,11 @@ declare const _default: {
         };
     };
     /**
-     * Lookup249: pallet_working_group::Instance9
+     * Lookup255: pallet_working_group::Instance9
      **/
     PalletWorkingGroupInstance9: string;
     /**
-     * Lookup250: pallet_proxy::pallet::Event<T>
+     * Lookup256: pallet_proxy::pallet::Event<T>
      **/
     PalletProxyEvent: {
         _enum: {
@@ -1980,13 +1991,41 @@ declare const _default: {
         };
     };
     /**
-     * Lookup251: joystream_node_runtime::ProxyType
+     * Lookup257: joystream_node_runtime::ProxyType
      **/
     JoystreamNodeRuntimeProxyType: {
         _enum: string[];
     };
     /**
-     * Lookup253: frame_system::Phase
+     * Lookup259: pallet_argo_bridge::events::RawEvent<sp_core::crypto::AccountId32, Balance, pallet_argo_bridge::types::BridgeConstraints<sp_core::crypto::AccountId32, Balance, BlockNumber>, BlockNumber>
+     **/
+    PalletArgoBridgeEventsRawEvent: {
+        _enum: {
+            OutboundTransferRequested: string;
+            InboundTransferFinalized: string;
+            OutboundTransferReverted: string;
+            BridgePaused: string;
+            BridgeThawnStarted: string;
+            BridgeThawnFinished: string;
+            BridgeConfigUpdated: string;
+        };
+    };
+    /**
+     * Lookup260: pallet_argo_bridge::types::RemoteAccount
+     **/
+    PalletArgoBridgeRemoteAccount: {
+        account: string;
+        chainId: string;
+    };
+    /**
+     * Lookup261: pallet_argo_bridge::types::RemoteTransfer
+     **/
+    PalletArgoBridgeRemoteTransfer: {
+        id: string;
+        chainId: string;
+    };
+    /**
+     * Lookup263: frame_system::Phase
      **/
     FrameSystemPhase: {
         _enum: {
@@ -1996,14 +2035,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup257: frame_system::LastRuntimeUpgradeInfo
+     * Lookup267: frame_system::LastRuntimeUpgradeInfo
      **/
     FrameSystemLastRuntimeUpgradeInfo: {
         specVersion: string;
         specName: string;
     };
     /**
-     * Lookup260: frame_system::pallet::Call<T>
+     * Lookup270: frame_system::pallet::Call<T>
      **/
     FrameSystemCall: {
         _enum: {
@@ -2038,7 +2077,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup263: frame_system::limits::BlockWeights
+     * Lookup273: frame_system::limits::BlockWeights
      **/
     FrameSystemLimitsBlockWeights: {
         baseBlock: string;
@@ -2046,7 +2085,7 @@ declare const _default: {
         perClass: string;
     };
     /**
-     * Lookup264: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
+     * Lookup274: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
      **/
     FrameSupportDispatchPerDispatchClassWeightsPerClass: {
         normal: string;
@@ -2054,7 +2093,7 @@ declare const _default: {
         mandatory: string;
     };
     /**
-     * Lookup265: frame_system::limits::WeightsPerClass
+     * Lookup275: frame_system::limits::WeightsPerClass
      **/
     FrameSystemLimitsWeightsPerClass: {
         baseExtrinsic: string;
@@ -2063,13 +2102,13 @@ declare const _default: {
         reserved: string;
     };
     /**
-     * Lookup267: frame_system::limits::BlockLength
+     * Lookup277: frame_system::limits::BlockLength
      **/
     FrameSystemLimitsBlockLength: {
         max: string;
     };
     /**
-     * Lookup268: frame_support::dispatch::PerDispatchClass<T>
+     * Lookup278: frame_support::dispatch::PerDispatchClass<T>
      **/
     FrameSupportDispatchPerDispatchClassU32: {
         normal: string;
@@ -2077,14 +2116,14 @@ declare const _default: {
         mandatory: string;
     };
     /**
-     * Lookup269: sp_weights::RuntimeDbWeight
+     * Lookup279: sp_weights::RuntimeDbWeight
      **/
     SpWeightsRuntimeDbWeight: {
         read: string;
         write: string;
     };
     /**
-     * Lookup270: sp_version::RuntimeVersion
+     * Lookup280: sp_version::RuntimeVersion
      **/
     SpVersionRuntimeVersion: {
         specName: string;
@@ -2097,13 +2136,13 @@ declare const _default: {
         stateVersion: string;
     };
     /**
-     * Lookup275: frame_system::pallet::Error<T>
+     * Lookup285: frame_system::pallet::Error<T>
      **/
     FrameSystemError: {
         _enum: string[];
     };
     /**
-     * Lookup276: pallet_utility::pallet::Call<T>
+     * Lookup286: pallet_utility::pallet::Call<T>
      **/
     PalletUtilityCall: {
         _enum: {
@@ -2131,7 +2170,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup279: pallet_babe::pallet::Call<T>
+     * Lookup289: pallet_babe::pallet::Call<T>
      **/
     PalletBabeCall: {
         _enum: {
@@ -2149,7 +2188,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup280: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
+     * Lookup290: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
      **/
     SpConsensusSlotsEquivocationProof: {
         offender: string;
@@ -2158,7 +2197,7 @@ declare const _default: {
         secondHeader: string;
     };
     /**
-     * Lookup281: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
+     * Lookup291: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
      **/
     SpRuntimeHeader: {
         parentHash: string;
@@ -2168,15 +2207,15 @@ declare const _default: {
         digest: string;
     };
     /**
-     * Lookup282: sp_runtime::traits::BlakeTwo256
+     * Lookup292: sp_runtime::traits::BlakeTwo256
      **/
     SpRuntimeBlakeTwo256: string;
     /**
-     * Lookup283: sp_consensus_babe::app::Public
+     * Lookup293: sp_consensus_babe::app::Public
      **/
     SpConsensusBabeAppPublic: string;
     /**
-     * Lookup285: sp_session::MembershipProof
+     * Lookup295: sp_session::MembershipProof
      **/
     SpSessionMembershipProof: {
         session: string;
@@ -2184,7 +2223,7 @@ declare const _default: {
         validatorCount: string;
     };
     /**
-     * Lookup286: sp_consensus_babe::digests::NextConfigDescriptor
+     * Lookup296: sp_consensus_babe::digests::NextConfigDescriptor
      **/
     SpConsensusBabeDigestsNextConfigDescriptor: {
         _enum: {
@@ -2196,13 +2235,13 @@ declare const _default: {
         };
     };
     /**
-     * Lookup287: sp_consensus_babe::AllowedSlots
+     * Lookup297: sp_consensus_babe::AllowedSlots
      **/
     SpConsensusBabeAllowedSlots: {
         _enum: string[];
     };
     /**
-     * Lookup288: pallet_timestamp::pallet::Call<T>
+     * Lookup298: pallet_timestamp::pallet::Call<T>
      **/
     PalletTimestampCall: {
         _enum: {
@@ -2212,7 +2251,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup289: pallet_balances::pallet::Call<T, I>
+     * Lookup299: pallet_balances::pallet::Call<T, I>
      **/
     PalletBalancesCall: {
         _enum: {
@@ -2245,7 +2284,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup290: pallet_election_provider_multi_phase::pallet::Call<T>
+     * Lookup300: pallet_election_provider_multi_phase::pallet::Call<T>
      **/
     PalletElectionProviderMultiPhaseCall: {
         _enum: {
@@ -2269,7 +2308,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup291: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
+     * Lookup301: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseRawSolution: {
         solution: string;
@@ -2277,7 +2316,7 @@ declare const _default: {
         round: string;
     };
     /**
-     * Lookup292: joystream_node_runtime::NposSolution16
+     * Lookup302: joystream_node_runtime::NposSolution16
      **/
     JoystreamNodeRuntimeNposSolution16: {
         votes1: string;
@@ -2298,21 +2337,21 @@ declare const _default: {
         votes16: string;
     };
     /**
-     * Lookup343: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
+     * Lookup353: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
      **/
     PalletElectionProviderMultiPhaseSolutionOrSnapshotSize: {
         voters: string;
         targets: string;
     };
     /**
-     * Lookup347: sp_npos_elections::Support<sp_core::crypto::AccountId32>
+     * Lookup357: sp_npos_elections::Support<sp_core::crypto::AccountId32>
      **/
     SpNposElectionsSupport: {
         total: string;
         voters: string;
     };
     /**
-     * Lookup349: pallet_staking::pallet::pallet::Call<T>
+     * Lookup359: pallet_staking::pallet::pallet::Call<T>
      **/
     PalletStakingPalletCall: {
         _enum: {
@@ -2406,7 +2445,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup350: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
+     * Lookup360: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
      **/
     PalletStakingRewardDestination: {
         _enum: {
@@ -2418,7 +2457,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup353: pallet_staking::pallet::pallet::ConfigOp<T>
+     * Lookup361: pallet_staking::pallet::pallet::ConfigOp<T>
      **/
     PalletStakingPalletConfigOpU128: {
         _enum: {
@@ -2428,7 +2467,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup354: pallet_staking::pallet::pallet::ConfigOp<T>
+     * Lookup362: pallet_staking::pallet::pallet::ConfigOp<T>
      **/
     PalletStakingPalletConfigOpU32: {
         _enum: {
@@ -2438,7 +2477,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup355: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
+     * Lookup363: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
      **/
     PalletStakingPalletConfigOpPercent: {
         _enum: {
@@ -2448,7 +2487,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup356: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
+     * Lookup364: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
      **/
     PalletStakingPalletConfigOpPerbill: {
         _enum: {
@@ -2458,7 +2497,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup357: pallet_session::pallet::Call<T>
+     * Lookup365: pallet_session::pallet::Call<T>
      **/
     PalletSessionCall: {
         _enum: {
@@ -2473,7 +2512,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup358: joystream_node_runtime::SessionKeys
+     * Lookup366: joystream_node_runtime::SessionKeys
      **/
     JoystreamNodeRuntimeSessionKeys: {
         grandpa: string;
@@ -2482,11 +2521,11 @@ declare const _default: {
         authorityDiscovery: string;
     };
     /**
-     * Lookup359: sp_authority_discovery::app::Public
+     * Lookup367: sp_authority_discovery::app::Public
      **/
     SpAuthorityDiscoveryAppPublic: string;
     /**
-     * Lookup360: pallet_grandpa::pallet::Call<T>
+     * Lookup368: pallet_grandpa::pallet::Call<T>
      **/
     PalletGrandpaCall: {
         _enum: {
@@ -2505,14 +2544,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup361: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
+     * Lookup369: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
      **/
     SpConsensusGrandpaEquivocationProof: {
         setId: string;
         equivocation: string;
     };
     /**
-     * Lookup362: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
+     * Lookup370: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
      **/
     SpConsensusGrandpaEquivocation: {
         _enum: {
@@ -2521,7 +2560,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup363: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+     * Lookup371: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
      **/
     FinalityGrandpaEquivocationPrevote: {
         roundNumber: string;
@@ -2530,22 +2569,22 @@ declare const _default: {
         second: string;
     };
     /**
-     * Lookup364: finality_grandpa::Prevote<primitive_types::H256, N>
+     * Lookup372: finality_grandpa::Prevote<primitive_types::H256, N>
      **/
     FinalityGrandpaPrevote: {
         targetHash: string;
         targetNumber: string;
     };
     /**
-     * Lookup365: sp_consensus_grandpa::app::Signature
+     * Lookup373: sp_consensus_grandpa::app::Signature
      **/
     SpConsensusGrandpaAppSignature: string;
     /**
-     * Lookup366: sp_core::ed25519::Signature
+     * Lookup374: sp_core::ed25519::Signature
      **/
     SpCoreEd25519Signature: string;
     /**
-     * Lookup369: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+     * Lookup377: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
      **/
     FinalityGrandpaEquivocationPrecommit: {
         roundNumber: string;
@@ -2554,14 +2593,14 @@ declare const _default: {
         second: string;
     };
     /**
-     * Lookup370: finality_grandpa::Precommit<primitive_types::H256, N>
+     * Lookup378: finality_grandpa::Precommit<primitive_types::H256, N>
      **/
     FinalityGrandpaPrecommit: {
         targetHash: string;
         targetNumber: string;
     };
     /**
-     * Lookup372: pallet_im_online::pallet::Call<T>
+     * Lookup380: pallet_im_online::pallet::Call<T>
      **/
     PalletImOnlineCall: {
         _enum: {
@@ -2572,7 +2611,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup373: pallet_im_online::Heartbeat<BlockNumber>
+     * Lookup381: pallet_im_online::Heartbeat<BlockNumber>
      **/
     PalletImOnlineHeartbeat: {
         blockNumber: string;
@@ -2582,22 +2621,22 @@ declare const _default: {
         validatorsLen: string;
     };
     /**
-     * Lookup374: sp_core::offchain::OpaqueNetworkState
+     * Lookup382: sp_core::offchain::OpaqueNetworkState
      **/
     SpCoreOffchainOpaqueNetworkState: {
         peerId: string;
         externalAddresses: string;
     };
     /**
-     * Lookup378: pallet_im_online::sr25519::app_sr25519::Signature
+     * Lookup386: pallet_im_online::sr25519::app_sr25519::Signature
      **/
     PalletImOnlineSr25519AppSr25519Signature: string;
     /**
-     * Lookup379: sp_core::sr25519::Signature
+     * Lookup387: sp_core::sr25519::Signature
      **/
     SpCoreSr25519Signature: string;
     /**
-     * Lookup380: pallet_bags_list::pallet::Call<T, I>
+     * Lookup388: pallet_bags_list::pallet::Call<T, I>
      **/
     PalletBagsListCall: {
         _enum: {
@@ -2610,7 +2649,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup381: pallet_vesting::pallet::Call<T>
+     * Lookup389: pallet_vesting::pallet::Call<T>
      **/
     PalletVestingCall: {
         _enum: {
@@ -2634,7 +2673,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup382: pallet_multisig::pallet::Call<T>
+     * Lookup390: pallet_multisig::pallet::Call<T>
      **/
     PalletMultisigCall: {
         _enum: {
@@ -2665,7 +2704,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup384: pallet_council::Call<T>
+     * Lookup392: pallet_council::Call<T>
      **/
     PalletCouncilCall: {
         _enum: {
@@ -2722,7 +2761,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup385: pallet_referendum::Call<T, I>
+     * Lookup393: pallet_referendum::Call<T, I>
      **/
     PalletReferendumCall: {
         _enum: {
@@ -2739,7 +2778,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup386: pallet_membership::Call<T>
+     * Lookup394: pallet_membership::Call<T>
      **/
     PalletMembershipCall: {
         _enum: {
@@ -2808,7 +2847,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup387: pallet_forum::Call<T>
+     * Lookup395: pallet_forum::Call<T>
      **/
     PalletForumCall: {
         _enum: {
@@ -2905,7 +2944,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup388: pallet_constitution::Call<T>
+     * Lookup396: pallet_constitution::Call<T>
      **/
     PalletConstitutionCall: {
         _enum: {
@@ -2915,7 +2954,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup389: pallet_bounty::Call<T>
+     * Lookup397: pallet_bounty::Call<T>
      **/
     PalletBountyCall: {
         _enum: {
@@ -2991,7 +3030,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup390: pallet_joystream_utility::Call<T>
+     * Lookup398: pallet_joystream_utility::Call<T>
      **/
     PalletJoystreamUtilityCall: {
         _enum: {
@@ -3012,7 +3051,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup391: pallet_content::Call<T>
+     * Lookup399: pallet_content::Call<T>
      **/
     PalletContentCall: {
         _enum: {
@@ -3321,14 +3360,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup392: pallet_content::types::ChannelBagWitness
+     * Lookup400: pallet_content::types::ChannelBagWitness
      **/
     PalletContentChannelBagWitness: {
         storageBucketsNum: string;
         distributionBucketsNum: string;
     };
     /**
-     * Lookup394: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
+     * Lookup402: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
      **/
     PalletCommonMerkleTreeProofElementRecord: {
         _alias: {
@@ -3338,13 +3377,13 @@ declare const _default: {
         side: string;
     };
     /**
-     * Lookup395: pallet_common::merkle_tree::Side
+     * Lookup403: pallet_common::merkle_tree::Side
      **/
     PalletCommonMerkleTreeSide: {
         _enum: string[];
     };
     /**
-     * Lookup396: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
+     * Lookup404: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
      **/
     PalletContentPullPaymentElement: {
         channelId: string;
@@ -3352,7 +3391,7 @@ declare const _default: {
         reason: string;
     };
     /**
-     * Lookup397: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
+     * Lookup405: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
      **/
     PalletContentInitTransferParameters: {
         newCollaborators: string;
@@ -3360,7 +3399,7 @@ declare const _default: {
         newOwner: string;
     };
     /**
-     * Lookup398: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup406: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenSaleParams: {
         unitPrice: string;
@@ -3372,14 +3411,14 @@ declare const _default: {
         metadata: string;
     };
     /**
-     * Lookup402: pallet_project_token::types::AmmParams<Balance>
+     * Lookup410: pallet_project_token::types::AmmParams<Balance>
      **/
     PalletProjectTokenAmmParams: {
         slope: string;
         intercept: string;
     };
     /**
-     * Lookup403: pallet_storage::Call<T>
+     * Lookup411: pallet_storage::Call<T>
      **/
     PalletStorageCall: {
         _enum: {
@@ -3526,7 +3565,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup404: pallet_project_token::Call<T>
+     * Lookup412: pallet_project_token::Call<T>
      **/
     PalletProjectTokenCall: {
         _enum: {
@@ -3585,17 +3624,17 @@ declare const _default: {
         };
     };
     /**
-     * Lookup408: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
+     * Lookup416: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
      **/
     PalletProjectTokenMerkleProof: string;
     /**
-     * Lookup411: pallet_project_token::types::MerkleSide
+     * Lookup419: pallet_project_token::types::MerkleSide
      **/
     PalletProjectTokenMerkleSide: {
         _enum: string[];
     };
     /**
-     * Lookup414: pallet_proposals_engine::Call<T>
+     * Lookup422: pallet_proposals_engine::Call<T>
      **/
     PalletProposalsEngineCall: {
         _enum: {
@@ -3620,7 +3659,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup415: pallet_proposals_discussion::Call<T>
+     * Lookup423: pallet_proposals_discussion::Call<T>
      **/
     PalletProposalsDiscussionCall: {
         _enum: {
@@ -3649,7 +3688,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup416: pallet_proposals_codex::Call<T>
+     * Lookup424: pallet_proposals_codex::Call<T>
      **/
     PalletProposalsCodexCall: {
         _enum: {
@@ -3660,7 +3699,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup417: pallet_working_group::Call<T, I>
+     * Lookup425: pallet_working_group::Call<T, I>
      **/
     PalletWorkingGroupCall: {
         _enum: {
@@ -3748,7 +3787,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup426: pallet_proxy::pallet::Call<T>
+     * Lookup434: pallet_proxy::pallet::Call<T>
      **/
     PalletProxyCall: {
         _enum: {
@@ -3801,7 +3840,36 @@ declare const _default: {
         };
     };
     /**
-     * Lookup428: joystream_node_runtime::OriginCaller
+     * Lookup436: pallet_argo_bridge::Call<T>
+     **/
+    PalletArgoBridgeCall: {
+        _enum: {
+            request_outbound_transfer: {
+                destAccount: string;
+                amount: string;
+                expectedFee: string;
+            };
+            finalize_inbound_transfer: {
+                remoteTransfer: string;
+                destAccount: string;
+                amount: string;
+            };
+            revert_outbound_transfer: {
+                transferId: string;
+                revertAccount: string;
+                revertAmount: string;
+                rationale: string;
+            };
+            pause_bridge: string;
+            init_unpause_bridge: string;
+            finish_unpause_bridge: string;
+            update_bridge_constrains: {
+                parameters: string;
+            };
+        };
+    };
+    /**
+     * Lookup437: joystream_node_runtime::OriginCaller
      **/
     JoystreamNodeRuntimeOriginCaller: {
         _enum: {
@@ -3810,7 +3878,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup429: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
+     * Lookup438: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
      **/
     FrameSupportDispatchRawOrigin: {
         _enum: {
@@ -3820,17 +3888,17 @@ declare const _default: {
         };
     };
     /**
-     * Lookup430: sp_core::Void
+     * Lookup439: sp_core::Void
      **/
     SpCoreVoid: string;
     /**
-     * Lookup431: pallet_utility::pallet::Error<T>
+     * Lookup440: pallet_utility::pallet::Error<T>
      **/
     PalletUtilityError: {
         _enum: string[];
     };
     /**
-     * Lookup438: sp_consensus_babe::digests::PreDigest
+     * Lookup447: sp_consensus_babe::digests::PreDigest
      **/
     SpConsensusBabeDigestsPreDigest: {
         _enum: {
@@ -3841,7 +3909,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup439: sp_consensus_babe::digests::PrimaryPreDigest
+     * Lookup448: sp_consensus_babe::digests::PrimaryPreDigest
      **/
     SpConsensusBabeDigestsPrimaryPreDigest: {
         authorityIndex: string;
@@ -3850,14 +3918,14 @@ declare const _default: {
         vrfProof: string;
     };
     /**
-     * Lookup440: sp_consensus_babe::digests::SecondaryPlainPreDigest
+     * Lookup449: sp_consensus_babe::digests::SecondaryPlainPreDigest
      **/
     SpConsensusBabeDigestsSecondaryPlainPreDigest: {
         authorityIndex: string;
         slot: string;
     };
     /**
-     * Lookup441: sp_consensus_babe::digests::SecondaryVRFPreDigest
+     * Lookup450: sp_consensus_babe::digests::SecondaryVRFPreDigest
      **/
     SpConsensusBabeDigestsSecondaryVRFPreDigest: {
         authorityIndex: string;
@@ -3866,20 +3934,20 @@ declare const _default: {
         vrfProof: string;
     };
     /**
-     * Lookup443: sp_consensus_babe::BabeEpochConfiguration
+     * Lookup452: sp_consensus_babe::BabeEpochConfiguration
      **/
     SpConsensusBabeBabeEpochConfiguration: {
         c: string;
         allowedSlots: string;
     };
     /**
-     * Lookup445: pallet_babe::pallet::Error<T>
+     * Lookup454: pallet_babe::pallet::Error<T>
      **/
     PalletBabeError: {
         _enum: string[];
     };
     /**
-     * Lookup447: pallet_balances::BalanceLock<Balance>
+     * Lookup456: pallet_balances::BalanceLock<Balance>
      **/
     PalletBalancesBalanceLock: {
         id: string;
@@ -3887,32 +3955,32 @@ declare const _default: {
         reasons: string;
     };
     /**
-     * Lookup448: pallet_balances::Reasons
+     * Lookup457: pallet_balances::Reasons
      **/
     PalletBalancesReasons: {
         _enum: string[];
     };
     /**
-     * Lookup451: pallet_balances::ReserveData<ReserveIdentifier, Balance>
+     * Lookup460: pallet_balances::ReserveData<ReserveIdentifier, Balance>
      **/
     PalletBalancesReserveData: {
         id: string;
         amount: string;
     };
     /**
-     * Lookup453: pallet_balances::pallet::Error<T, I>
+     * Lookup462: pallet_balances::pallet::Error<T, I>
      **/
     PalletBalancesError: {
         _enum: string[];
     };
     /**
-     * Lookup455: pallet_transaction_payment::Releases
+     * Lookup464: pallet_transaction_payment::Releases
      **/
     PalletTransactionPaymentReleases: {
         _enum: string[];
     };
     /**
-     * Lookup456: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
+     * Lookup465: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
      **/
     PalletElectionProviderMultiPhaseReadySolution: {
         supports: string;
@@ -3920,14 +3988,14 @@ declare const _default: {
         compute: string;
     };
     /**
-     * Lookup458: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
+     * Lookup467: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
      **/
     PalletElectionProviderMultiPhaseRoundSnapshot: {
         voters: string;
         targets: string;
     };
     /**
-     * Lookup465: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
+     * Lookup474: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseSignedSignedSubmission: {
         who: string;
@@ -3936,13 +4004,13 @@ declare const _default: {
         callFee: string;
     };
     /**
-     * Lookup466: pallet_election_provider_multi_phase::pallet::Error<T>
+     * Lookup475: pallet_election_provider_multi_phase::pallet::Error<T>
      **/
     PalletElectionProviderMultiPhaseError: {
         _enum: string[];
     };
     /**
-     * Lookup467: pallet_staking::StakingLedger<T>
+     * Lookup476: pallet_staking::StakingLedger<T>
      **/
     PalletStakingStakingLedger: {
         stash: string;
@@ -3952,14 +4020,14 @@ declare const _default: {
         claimedRewards: string;
     };
     /**
-     * Lookup469: pallet_staking::UnlockChunk<Balance>
+     * Lookup478: pallet_staking::UnlockChunk<Balance>
      **/
     PalletStakingUnlockChunk: {
         value: string;
         era: string;
     };
     /**
-     * Lookup472: pallet_staking::Nominations<T>
+     * Lookup481: pallet_staking::Nominations<T>
      **/
     PalletStakingNominations: {
         targets: string;
@@ -3967,21 +4035,21 @@ declare const _default: {
         suppressed: string;
     };
     /**
-     * Lookup473: pallet_staking::ActiveEraInfo
+     * Lookup482: pallet_staking::ActiveEraInfo
      **/
     PalletStakingActiveEraInfo: {
         index: string;
         start: string;
     };
     /**
-     * Lookup475: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
+     * Lookup484: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
      **/
     PalletStakingEraRewardPoints: {
         total: string;
         individual: string;
     };
     /**
-     * Lookup480: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
+     * Lookup489: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
      **/
     PalletStakingUnappliedSlash: {
         validator: string;
@@ -3991,7 +4059,7 @@ declare const _default: {
         payout: string;
     };
     /**
-     * Lookup482: pallet_staking::slashing::SlashingSpans
+     * Lookup491: pallet_staking::slashing::SlashingSpans
      **/
     PalletStakingSlashingSlashingSpans: {
         spanIndex: string;
@@ -4000,30 +4068,30 @@ declare const _default: {
         prior: string;
     };
     /**
-     * Lookup483: pallet_staking::slashing::SpanRecord<Balance>
+     * Lookup492: pallet_staking::slashing::SpanRecord<Balance>
      **/
     PalletStakingSlashingSpanRecord: {
         slashed: string;
         paidOut: string;
     };
     /**
-     * Lookup486: pallet_staking::pallet::pallet::Error<T>
+     * Lookup495: pallet_staking::pallet::pallet::Error<T>
      **/
     PalletStakingPalletError: {
         _enum: string[];
     };
     /**
-     * Lookup490: sp_core::crypto::KeyTypeId
+     * Lookup499: sp_core::crypto::KeyTypeId
      **/
     SpCoreCryptoKeyTypeId: string;
     /**
-     * Lookup491: pallet_session::pallet::Error<T>
+     * Lookup500: pallet_session::pallet::Error<T>
      **/
     PalletSessionError: {
         _enum: string[];
     };
     /**
-     * Lookup493: pallet_grandpa::StoredState<N>
+     * Lookup502: pallet_grandpa::StoredState<N>
      **/
     PalletGrandpaStoredState: {
         _enum: {
@@ -4040,7 +4108,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup494: pallet_grandpa::StoredPendingChange<N, Limit>
+     * Lookup503: pallet_grandpa::StoredPendingChange<N, Limit>
      **/
     PalletGrandpaStoredPendingChange: {
         scheduledAt: string;
@@ -4049,33 +4117,33 @@ declare const _default: {
         forced: string;
     };
     /**
-     * Lookup496: pallet_grandpa::pallet::Error<T>
+     * Lookup505: pallet_grandpa::pallet::Error<T>
      **/
     PalletGrandpaError: {
         _enum: string[];
     };
     /**
-     * Lookup502: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
+     * Lookup511: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
      **/
     PalletImOnlineBoundedOpaqueNetworkState: {
         peerId: string;
         externalAddresses: string;
     };
     /**
-     * Lookup506: pallet_im_online::pallet::Error<T>
+     * Lookup515: pallet_im_online::pallet::Error<T>
      **/
     PalletImOnlineError: {
         _enum: string[];
     };
     /**
-     * Lookup507: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
+     * Lookup516: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
      **/
     SpStakingOffenceOffenceDetails: {
         offender: string;
         reporters: string;
     };
     /**
-     * Lookup510: pallet_bags_list::list::Node<T, I>
+     * Lookup519: pallet_bags_list::list::Node<T, I>
      **/
     PalletBagsListListNode: {
         id: string;
@@ -4085,14 +4153,14 @@ declare const _default: {
         score: string;
     };
     /**
-     * Lookup511: pallet_bags_list::list::Bag<T, I>
+     * Lookup520: pallet_bags_list::list::Bag<T, I>
      **/
     PalletBagsListListBag: {
         head: string;
         tail: string;
     };
     /**
-     * Lookup512: pallet_bags_list::pallet::Error<T, I>
+     * Lookup521: pallet_bags_list::pallet::Error<T, I>
      **/
     PalletBagsListError: {
         _enum: {
@@ -4100,25 +4168,25 @@ declare const _default: {
         };
     };
     /**
-     * Lookup513: pallet_bags_list::list::ListError
+     * Lookup522: pallet_bags_list::list::ListError
      **/
     PalletBagsListListListError: {
         _enum: string[];
     };
     /**
-     * Lookup516: pallet_vesting::Releases
+     * Lookup525: pallet_vesting::Releases
      **/
     PalletVestingReleases: {
         _enum: string[];
     };
     /**
-     * Lookup517: pallet_vesting::pallet::Error<T>
+     * Lookup526: pallet_vesting::pallet::Error<T>
      **/
     PalletVestingError: {
         _enum: string[];
     };
     /**
-     * Lookup519: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
+     * Lookup528: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
      **/
     PalletMultisigMultisig: {
         when: string;
@@ -4127,20 +4195,20 @@ declare const _default: {
         approvals: string;
     };
     /**
-     * Lookup521: pallet_multisig::pallet::Error<T>
+     * Lookup530: pallet_multisig::pallet::Error<T>
      **/
     PalletMultisigError: {
         _enum: string[];
     };
     /**
-     * Lookup522: pallet_council::CouncilStageUpdate<BlockNumber>
+     * Lookup531: pallet_council::CouncilStageUpdate<BlockNumber>
      **/
     PalletCouncilCouncilStageUpdate: {
         stage: string;
         changedAt: string;
     };
     /**
-     * Lookup523: pallet_council::CouncilStage<BlockNumber>
+     * Lookup532: pallet_council::CouncilStage<BlockNumber>
      **/
     PalletCouncilCouncilStage: {
         _enum: {
@@ -4150,26 +4218,26 @@ declare const _default: {
         };
     };
     /**
-     * Lookup524: pallet_council::CouncilStageAnnouncing<BlockNumber>
+     * Lookup533: pallet_council::CouncilStageAnnouncing<BlockNumber>
      **/
     PalletCouncilCouncilStageAnnouncing: {
         candidatesCount: string;
         endsAt: string;
     };
     /**
-     * Lookup525: pallet_council::CouncilStageElection
+     * Lookup534: pallet_council::CouncilStageElection
      **/
     PalletCouncilCouncilStageElection: {
         candidatesCount: string;
     };
     /**
-     * Lookup526: pallet_council::CouncilStageIdle<BlockNumber>
+     * Lookup535: pallet_council::CouncilStageIdle<BlockNumber>
      **/
     PalletCouncilCouncilStageIdle: {
         endsAt: string;
     };
     /**
-     * Lookup528: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
+     * Lookup537: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
      **/
     PalletCouncilCouncilMember: {
         stakingAccountId: string;
@@ -4180,7 +4248,7 @@ declare const _default: {
         unpaidReward: string;
     };
     /**
-     * Lookup530: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
+     * Lookup539: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
      **/
     PalletCouncilCandidate: {
         stakingAccountId: string;
@@ -4191,13 +4259,13 @@ declare const _default: {
         noteHash: string;
     };
     /**
-     * Lookup531: pallet_council::Error<T>
+     * Lookup540: pallet_council::Error<T>
      **/
     PalletCouncilError: {
         _enum: string[];
     };
     /**
-     * Lookup532: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup541: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStage: {
         _enum: {
@@ -4207,7 +4275,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup534: pallet_referendum::ReferendumStageVoting<BlockNumber>
+     * Lookup543: pallet_referendum::ReferendumStageVoting<BlockNumber>
      **/
     PalletReferendumReferendumStageVoting: {
         started: string;
@@ -4216,7 +4284,7 @@ declare const _default: {
         endsAt: string;
     };
     /**
-     * Lookup535: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup544: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStageRevealing: {
         started: string;
@@ -4226,7 +4294,7 @@ declare const _default: {
         endsAt: string;
     };
     /**
-     * Lookup536: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
+     * Lookup545: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
      **/
     PalletReferendumCastVote: {
         commitment: string;
@@ -4235,13 +4303,13 @@ declare const _default: {
         voteFor: string;
     };
     /**
-     * Lookup537: pallet_referendum::Error<T, I>
+     * Lookup546: pallet_referendum::Error<T, I>
      **/
     PalletReferendumError: {
         _enum: string[];
     };
     /**
-     * Lookup538: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
+     * Lookup547: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
      **/
     PalletMembershipMembershipObject: {
         handleHash: string;
@@ -4251,20 +4319,20 @@ declare const _default: {
         invites: string;
     };
     /**
-     * Lookup539: pallet_membership::StakingAccountMemberBinding<MemberId>
+     * Lookup548: pallet_membership::StakingAccountMemberBinding<MemberId>
      **/
     PalletMembershipStakingAccountMemberBinding: {
         memberId: string;
         confirmed: string;
     };
     /**
-     * Lookup540: pallet_membership::Error<T>
+     * Lookup549: pallet_membership::Error<T>
      **/
     PalletMembershipError: {
         _enum: string[];
     };
     /**
-     * Lookup541: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup550: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletForumCategory: {
         titleHash: string;
@@ -4277,7 +4345,7 @@ declare const _default: {
         stickyThreadIds: string;
     };
     /**
-     * Lookup543: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup552: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumThread: {
         categoryId: string;
@@ -4286,7 +4354,7 @@ declare const _default: {
         numberOfEditablePosts: string;
     };
     /**
-     * Lookup544: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup553: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumPost: {
         threadId: string;
@@ -4296,19 +4364,19 @@ declare const _default: {
         lastEdited: string;
     };
     /**
-     * Lookup545: pallet_forum::Error<T>
+     * Lookup554: pallet_forum::Error<T>
      **/
     PalletForumError: {
         _enum: string[];
     };
     /**
-     * Lookup546: pallet_constitution::ConstitutionInfo<primitive_types::H256>
+     * Lookup555: pallet_constitution::ConstitutionInfo<primitive_types::H256>
      **/
     PalletConstitutionConstitutionInfo: {
         textHash: string;
     };
     /**
-     * Lookup547: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup556: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyRecord: {
         creationParams: string;
@@ -4318,7 +4386,7 @@ declare const _default: {
         hasUnpaidOracleReward: string;
     };
     /**
-     * Lookup549: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup558: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyParametersBoundedBTreeSet: {
         oracle: string;
@@ -4330,7 +4398,7 @@ declare const _default: {
         fundingType: string;
     };
     /**
-     * Lookup550: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup559: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyAssuranceContractTypeBoundedBTreeSet: {
         _enum: {
@@ -4339,7 +4407,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup551: pallet_bounty::BountyMilestone<BlockNumber>
+     * Lookup560: pallet_bounty::BountyMilestone<BlockNumber>
      **/
     PalletBountyBountyMilestone: {
         _enum: {
@@ -4356,14 +4424,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup553: pallet_bounty::Contribution<T>
+     * Lookup562: pallet_bounty::Contribution<T>
      **/
     PalletBountyContribution: {
         amount: string;
         funderStateBloatBondAmount: string;
     };
     /**
-     * Lookup554: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
+     * Lookup563: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
      **/
     PalletBountyEntryRecord: {
         memberId: string;
@@ -4372,19 +4440,19 @@ declare const _default: {
         workSubmitted: string;
     };
     /**
-     * Lookup555: pallet_bounty::Error<T>
+     * Lookup564: pallet_bounty::Error<T>
      **/
     PalletBountyError: {
         _enum: string[];
     };
     /**
-     * Lookup556: pallet_joystream_utility::Error<T>
+     * Lookup565: pallet_joystream_utility::Error<T>
      **/
     PalletJoystreamUtilityError: {
         _enum: string[];
     };
     /**
-     * Lookup557: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup566: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentVideoRecord: {
         inChannel: string;
@@ -4393,7 +4461,7 @@ declare const _default: {
         videoStateBloatBond: string;
     };
     /**
-     * Lookup558: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
+     * Lookup567: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
      **/
     PalletContentNftTypesOwnedNft: {
         owner: string;
@@ -4402,7 +4470,7 @@ declare const _default: {
         openAuctionsNonce: string;
     };
     /**
-     * Lookup559: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
+     * Lookup568: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
      **/
     PalletContentNftTypesTransactionalStatusRecord: {
         _enum: {
@@ -4414,7 +4482,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup560: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup569: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesEnglishAuctionRecord: {
         startingPrice: string;
@@ -4427,14 +4495,14 @@ declare const _default: {
         topBid: string;
     };
     /**
-     * Lookup563: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
+     * Lookup572: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionBid: {
         amount: string;
         bidderId: string;
     };
     /**
-     * Lookup564: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup573: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesOpenAuctionRecord: {
         startingPrice: string;
@@ -4445,7 +4513,7 @@ declare const _default: {
         start: string;
     };
     /**
-     * Lookup565: pallet_content::nft::types::NftOwner<MemberId>
+     * Lookup574: pallet_content::nft::types::NftOwner<MemberId>
      **/
     PalletContentNftTypesNftOwner: {
         _enum: {
@@ -4454,7 +4522,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup568: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
+     * Lookup577: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
      **/
     PalletContentPermissionsCuratorGroupCuratorGroupRecord: {
         curators: string;
@@ -4462,7 +4530,7 @@ declare const _default: {
         permissionsByLevel: string;
     };
     /**
-     * Lookup575: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
+     * Lookup584: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
      **/
     PalletContentNftTypesOpenAuctionBidRecord: {
         amount: string;
@@ -4470,13 +4538,13 @@ declare const _default: {
         auctionId: string;
     };
     /**
-     * Lookup576: pallet_content::errors::Error<T>
+     * Lookup585: pallet_content::errors::Error<T>
      **/
     PalletContentErrorsError: {
         _enum: string[];
     };
     /**
-     * Lookup577: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
+     * Lookup586: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
      **/
     PalletStorageBagRecord: {
         storedBy: string;
@@ -4485,7 +4553,7 @@ declare const _default: {
         objectsNumber: string;
     };
     /**
-     * Lookup580: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup589: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketRecord: {
         operatorStatus: string;
@@ -4494,7 +4562,7 @@ declare const _default: {
         assignedBags: string;
     };
     /**
-     * Lookup581: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup590: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketOperatorStatus: {
         _enum: {
@@ -4504,14 +4572,14 @@ declare const _default: {
         };
     };
     /**
-     * Lookup583: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
+     * Lookup592: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
      **/
     PalletStorageDynamicBagCreationPolicy: {
         numberOfStorageBuckets: string;
         families: string;
     };
     /**
-     * Lookup586: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup595: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletStorageDataObject: {
         _alias: {
@@ -4523,13 +4591,13 @@ declare const _default: {
         ipfsContentId: string;
     };
     /**
-     * Lookup587: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
+     * Lookup596: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketFamilyRecord: {
         nextDistributionBucketIndex: string;
     };
     /**
-     * Lookup588: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup597: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletStorageDistributionBucketRecord: {
         acceptingNewBags: string;
@@ -4539,13 +4607,13 @@ declare const _default: {
         assignedBags: string;
     };
     /**
-     * Lookup591: pallet_storage::Error<T>
+     * Lookup600: pallet_storage::Error<T>
      **/
     PalletStorageError: {
         _enum: string[];
     };
     /**
-     * Lookup592: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
+     * Lookup601: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
      **/
     PalletProjectTokenAccountData: {
         vestingSchedules: string;
@@ -4556,14 +4624,14 @@ declare const _default: {
         lastSaleTotalPurchasedAmount: string;
     };
     /**
-     * Lookup593: pallet_project_token::types::StakingStatus<Balance>
+     * Lookup602: pallet_project_token::types::StakingStatus<Balance>
      **/
     PalletProjectTokenStakingStatus: {
         splitId: string;
         amount: string;
     };
     /**
-     * Lookup595: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
+     * Lookup604: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
      **/
     PalletProjectTokenVestingSchedule: {
         linearVestingStartBlock: string;
@@ -4573,7 +4641,7 @@ declare const _default: {
         burnedAmount: string;
     };
     /**
-     * Lookup602: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
+     * Lookup611: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
      **/
     PalletProjectTokenTokenData: {
         totalSupply: string;
@@ -4589,7 +4657,7 @@ declare const _default: {
         ammCurve: string;
     };
     /**
-     * Lookup603: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
+     * Lookup612: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitState: {
         _enum: {
@@ -4598,7 +4666,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup604: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
+     * Lookup613: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitInfo: {
         allocation: string;
@@ -4606,14 +4674,14 @@ declare const _default: {
         dividendsClaimed: string;
     };
     /**
-     * Lookup605: pallet_project_token::types::Timeline<BlockNumber>
+     * Lookup614: pallet_project_token::types::Timeline<BlockNumber>
      **/
     PalletProjectTokenTimeline: {
         start: string;
         duration: string;
     };
     /**
-     * Lookup607: pallet_project_token::types::PatronageData<Balance, BlockNumber>
+     * Lookup616: pallet_project_token::types::PatronageData<Balance, BlockNumber>
      **/
     PalletProjectTokenPatronageData: {
         rate: string;
@@ -4621,13 +4689,13 @@ declare const _default: {
         lastUnclaimedPatronageTallyBlock: string;
     };
     /**
-     * Lookup609: pallet_project_token::errors::Error<T>
+     * Lookup618: pallet_project_token::errors::Error<T>
      **/
     PalletProjectTokenErrorsError: {
         _enum: string[];
     };
     /**
-     * Lookup610: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
+     * Lookup619: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
      **/
     PalletProposalsEngineProposal: {
         parameters: string;
@@ -4640,7 +4708,7 @@ declare const _default: {
         stakingAccountId: string;
     };
     /**
-     * Lookup611: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
+     * Lookup620: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
      **/
     PalletProposalsEngineProposalParameters: {
         votingPeriod: string;
@@ -4653,7 +4721,7 @@ declare const _default: {
         constitutionality: string;
     };
     /**
-     * Lookup612: pallet_proposals_engine::types::VotingResults
+     * Lookup621: pallet_proposals_engine::types::VotingResults
      **/
     PalletProposalsEngineVotingResults: {
         abstentions: string;
@@ -4662,13 +4730,13 @@ declare const _default: {
         slashes: string;
     };
     /**
-     * Lookup615: pallet_proposals_engine::Error<T>
+     * Lookup624: pallet_proposals_engine::Error<T>
      **/
     PalletProposalsEngineError: {
         _enum: string[];
     };
     /**
-     * Lookup616: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup625: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionDiscussionThread: {
         activatedAt: string;
@@ -4676,7 +4744,7 @@ declare const _default: {
         mode: string;
     };
     /**
-     * Lookup618: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup627: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionThreadModeBoundedBTreeSet: {
         _enum: {
@@ -4685,7 +4753,7 @@ declare const _default: {
         };
     };
     /**
-     * Lookup619: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup628: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletProposalsDiscussionDiscussionPost: {
         authorId: string;
@@ -4693,19 +4761,19 @@ declare const _default: {
         lastEdited: string;
     };
     /**
-     * Lookup620: pallet_proposals_discussion::Error<T>
+     * Lookup629: pallet_proposals_discussion::Error<T>
      **/
     PalletProposalsDiscussionError: {
         _enum: string[];
     };
     /**
-     * Lookup621: pallet_proposals_codex::Error<T>
+     * Lookup630: pallet_proposals_codex::Error<T>
      **/
     PalletProposalsCodexError: {
         _enum: string[];
     };
     /**
-     * Lookup622: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
+     * Lookup631: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
      **/
     PalletWorkingGroupOpening: {
         openingType: string;
@@ -4716,7 +4784,7 @@ declare const _default: {
         creationStake: string;
     };
     /**
-     * Lookup623: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
+     * Lookup632: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
      **/
     PalletWorkingGroupJobApplication: {
         roleAccountId: string;
@@ -4727,7 +4795,7 @@ declare const _default: {
         openingId: string;
     };
     /**
-     * Lookup624: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
+     * Lookup633: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
      **/
     PalletWorkingGroupGroupWorker: {
         memberId: string;
@@ -4741,13 +4809,13 @@ declare const _default: {
         createdAt: string;
     };
     /**
-     * Lookup625: pallet_working_group::errors::Error<T, I>
+     * Lookup634: pallet_working_group::errors::Error<T, I>
      **/
     PalletWorkingGroupErrorsError: {
         _enum: string[];
     };
     /**
-     * Lookup636: pallet_proxy::ProxyDefinition<sp_core::crypto::AccountId32, joystream_node_runtime::ProxyType, BlockNumber>
+     * Lookup645: pallet_proxy::ProxyDefinition<sp_core::crypto::AccountId32, joystream_node_runtime::ProxyType, BlockNumber>
      **/
     PalletProxyProxyDefinition: {
         delegate: string;
@@ -4755,7 +4823,7 @@ declare const _default: {
         delay: string;
     };
     /**
-     * Lookup640: pallet_proxy::Announcement<sp_core::crypto::AccountId32, primitive_types::H256, BlockNumber>
+     * Lookup649: pallet_proxy::Announcement<sp_core::crypto::AccountId32, primitive_types::H256, BlockNumber>
      **/
     PalletProxyAnnouncement: {
         real: string;
@@ -4763,13 +4831,25 @@ declare const _default: {
         height: string;
     };
     /**
-     * Lookup642: pallet_proxy::pallet::Error<T>
+     * Lookup651: pallet_proxy::pallet::Error<T>
      **/
     PalletProxyError: {
         _enum: string[];
     };
     /**
-     * Lookup644: sp_runtime::MultiSignature
+     * Lookup652: pallet_argo_bridge::types::BridgeStatus<BlockNumber>
+     **/
+    PalletArgoBridgeBridgeStatus: {
+        _enum: {
+            Active: string;
+            Paused: string;
+            Thawn: {
+                thawnEndsAt: string;
+            };
+        };
+    };
+    /**
+     * Lookup655: sp_runtime::MultiSignature
      **/
     SpRuntimeMultiSignature: {
         _enum: {
@@ -4779,39 +4859,39 @@ declare const _default: {
         };
     };
     /**
-     * Lookup645: sp_core::ecdsa::Signature
+     * Lookup656: sp_core::ecdsa::Signature
      **/
     SpCoreEcdsaSignature: string;
     /**
-     * Lookup648: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
+     * Lookup659: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
      **/
     FrameSystemExtensionsCheckNonZeroSender: string;
     /**
-     * Lookup649: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
+     * Lookup660: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
      **/
     FrameSystemExtensionsCheckSpecVersion: string;
     /**
-     * Lookup650: frame_system::extensions::check_tx_version::CheckTxVersion<T>
+     * Lookup661: frame_system::extensions::check_tx_version::CheckTxVersion<T>
      **/
     FrameSystemExtensionsCheckTxVersion: string;
     /**
-     * Lookup651: frame_system::extensions::check_genesis::CheckGenesis<T>
+     * Lookup662: frame_system::extensions::check_genesis::CheckGenesis<T>
      **/
     FrameSystemExtensionsCheckGenesis: string;
     /**
-     * Lookup654: frame_system::extensions::check_nonce::CheckNonce<T>
+     * Lookup665: frame_system::extensions::check_nonce::CheckNonce<T>
      **/
     FrameSystemExtensionsCheckNonce: string;
     /**
-     * Lookup655: frame_system::extensions::check_weight::CheckWeight<T>
+     * Lookup666: frame_system::extensions::check_weight::CheckWeight<T>
      **/
     FrameSystemExtensionsCheckWeight: string;
     /**
-     * Lookup656: pallet_transaction_payment::ChargeTransactionPayment<T>
+     * Lookup667: pallet_transaction_payment::ChargeTransactionPayment<T>
      **/
     PalletTransactionPaymentChargeTransactionPayment: string;
     /**
-     * Lookup657: joystream_node_runtime::Runtime
+     * Lookup668: joystream_node_runtime::Runtime
      **/
     JoystreamNodeRuntimeRuntime: string;
 };
diff --git a/lib/augment/registry.d.ts b/lib/augment/registry.d.ts
index 445550c4f8c4a5fae779f4f0397336fd17496ce1..59acf707a28425a8a83e0c1fb828d5f3e148dc31 100644
--- a/lib/augment/registry.d.ts
+++ b/lib/augment/registry.d.ts
@@ -1,5 +1,5 @@
 import '@polkadot/types/types/registry';
-import type { FinalityGrandpaEquivocationPrecommit, FinalityGrandpaEquivocationPrevote, FinalityGrandpaPrecommit, FinalityGrandpaPrevote, FrameSupportDispatchDispatchClass, FrameSupportDispatchDispatchInfo, FrameSupportDispatchPays, FrameSupportDispatchPerDispatchClassU32, FrameSupportDispatchPerDispatchClassWeight, FrameSupportDispatchPerDispatchClassWeightsPerClass, FrameSupportDispatchRawOrigin, FrameSupportTokensMiscBalanceStatus, FrameSystemAccountInfo, FrameSystemCall, FrameSystemError, FrameSystemEvent, FrameSystemEventRecord, FrameSystemExtensionsCheckGenesis, FrameSystemExtensionsCheckNonZeroSender, FrameSystemExtensionsCheckNonce, FrameSystemExtensionsCheckSpecVersion, FrameSystemExtensionsCheckTxVersion, FrameSystemExtensionsCheckWeight, FrameSystemLastRuntimeUpgradeInfo, FrameSystemLimitsBlockLength, FrameSystemLimitsBlockWeights, FrameSystemLimitsWeightsPerClass, FrameSystemPhase, JoystreamNodeRuntimeNposSolution16, JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeProxyType, JoystreamNodeRuntimeRuntime, JoystreamNodeRuntimeSessionKeys, PalletBabeCall, PalletBabeError, PalletBagsListCall, PalletBagsListError, PalletBagsListEvent, PalletBagsListListBag, PalletBagsListListListError, PalletBagsListListNode, PalletBalancesAccountData, PalletBalancesBalanceLock, PalletBalancesCall, PalletBalancesError, PalletBalancesEvent, PalletBalancesReasons, PalletBalancesReserveData, PalletBountyAssuranceContractTypeBTreeSet, PalletBountyAssuranceContractTypeBoundedBTreeSet, PalletBountyBountyActor, PalletBountyBountyMilestone, PalletBountyBountyParametersBTreeSet, PalletBountyBountyParametersBoundedBTreeSet, PalletBountyBountyRecord, PalletBountyCall, PalletBountyContribution, PalletBountyEntryRecord, PalletBountyError, PalletBountyFundingType, PalletBountyOracleWorkEntryJudgment, PalletBountyRawEvent, PalletCommonBalanceKind, PalletCommonBloatBondRepayableBloatBond, PalletCommonFreezablePallet, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonMerkleTreeSide, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletConstitutionCall, PalletConstitutionConstitutionInfo, PalletConstitutionRawEvent, PalletContentCall, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelOwner, PalletContentChannelPayoutsPayloadParametersRecord, PalletContentChannelRecord, PalletContentChannelTransferStatus, PalletContentChannelUpdateParametersRecord, PalletContentErrorsError, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentLimitPerPeriod, PalletContentNftCounter, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionBid, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesEnglishAuctionRecord, PalletContentNftTypesInitTransactionalStatusRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesNftOwner, PalletContentNftTypesOpenAuctionBidRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentNftTypesOpenAuctionRecord, PalletContentNftTypesOwnedNft, PalletContentNftTypesTransactionalStatusRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupCuratorGroupRecord, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentRawEvent, PalletContentStorageAssetsRecord, PalletContentTransferCommitmentParametersBTreeMap, PalletContentTransferCommitmentParametersBoundedBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoRecord, PalletContentVideoUpdateParametersRecord, PalletCouncilCall, PalletCouncilCandidate, PalletCouncilCouncilMember, PalletCouncilCouncilStage, PalletCouncilCouncilStageAnnouncing, PalletCouncilCouncilStageElection, PalletCouncilCouncilStageIdle, PalletCouncilCouncilStageUpdate, PalletCouncilError, PalletCouncilRawEvent, PalletElectionProviderMultiPhaseCall, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhaseError, PalletElectionProviderMultiPhaseEvent, PalletElectionProviderMultiPhasePhase, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseReadySolution, PalletElectionProviderMultiPhaseRoundSnapshot, PalletElectionProviderMultiPhaseSignedSignedSubmission, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumCall, PalletForumCategory, PalletForumError, PalletForumExtendedPostIdObject, PalletForumPost, PalletForumPrivilegedActor, PalletForumRawEvent, PalletForumThread, PalletGrandpaCall, PalletGrandpaError, PalletGrandpaEvent, PalletGrandpaStoredPendingChange, PalletGrandpaStoredState, PalletImOnlineBoundedOpaqueNetworkState, PalletImOnlineCall, PalletImOnlineError, PalletImOnlineEvent, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Public, PalletImOnlineSr25519AppSr25519Signature, PalletJoystreamUtilityCall, PalletJoystreamUtilityError, PalletJoystreamUtilityRawEvent, PalletMembershipBuyMembershipParameters, PalletMembershipCall, PalletMembershipCreateMemberParameters, PalletMembershipError, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMembershipMembershipObject, PalletMembershipRawEvent, PalletMembershipStakingAccountMemberBinding, PalletMultisigCall, PalletMultisigError, PalletMultisigEvent, PalletMultisigMultisig, PalletMultisigTimepoint, PalletOffencesEvent, PalletProjectTokenAccountData, PalletProjectTokenAmmCurve, PalletProjectTokenAmmParams, PalletProjectTokenCall, PalletProjectTokenErrorsError, PalletProjectTokenEventsRawEvent, PalletProjectTokenMerkleProof, PalletProjectTokenMerkleSide, PalletProjectTokenPatronageData, PalletProjectTokenPaymentWithVesting, PalletProjectTokenRevenueSplitInfo, PalletProjectTokenRevenueSplitState, PalletProjectTokenSingleDataObjectUploadParams, PalletProjectTokenStakingStatus, PalletProjectTokenTimeline, PalletProjectTokenTokenAllocation, PalletProjectTokenTokenConstraints, PalletProjectTokenTokenData, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTokenSaleParams, PalletProjectTokenTransferPolicy, PalletProjectTokenTransferPolicyParams, PalletProjectTokenTransfers, PalletProjectTokenValidated, PalletProjectTokenValidatedPayment, PalletProjectTokenVestingSchedule, PalletProjectTokenVestingScheduleParams, PalletProjectTokenVestingSource, PalletProjectTokenWhitelistParams, PalletProposalsCodexCall, PalletProposalsCodexCreateOpeningParameters, PalletProposalsCodexError, PalletProposalsCodexFillOpeningParameters, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsCodexRawEvent, PalletProposalsCodexTerminateRoleParameters, PalletProposalsDiscussionCall, PalletProposalsDiscussionDiscussionPost, PalletProposalsDiscussionDiscussionThread, PalletProposalsDiscussionError, PalletProposalsDiscussionRawEvent, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsDiscussionThreadModeBoundedBTreeSet, PalletProposalsEngineCall, PalletProposalsEngineError, PalletProposalsEngineProposal, PalletProposalsEngineProposalParameters, PalletProposalsEngineProposalStatusesApprovedProposalDecision, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineRawEvent, PalletProposalsEngineVoteKind, PalletProposalsEngineVotingResults, PalletProxyAnnouncement, PalletProxyCall, PalletProxyError, PalletProxyEvent, PalletProxyProxyDefinition, PalletReferendumCall, PalletReferendumCastVote, PalletReferendumError, PalletReferendumInstance1, PalletReferendumOptionResult, PalletReferendumRawEvent, PalletReferendumReferendumStage, PalletReferendumReferendumStageRevealing, PalletReferendumReferendumStageVoting, PalletSessionCall, PalletSessionError, PalletSessionEvent, PalletStakingActiveEraInfo, PalletStakingEraRewardPoints, PalletStakingExposure, PalletStakingForcing, PalletStakingIndividualExposure, PalletStakingNominations, PalletStakingPalletCall, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingPalletError, PalletStakingPalletEvent, PalletStakingRewardDestination, PalletStakingSlashingSlashingSpans, PalletStakingSlashingSpanRecord, PalletStakingStakingLedger, PalletStakingUnappliedSlash, PalletStakingUnlockChunk, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageBagRecord, PalletStorageCall, PalletStorageDataObject, PalletStorageDataObjectCreationParameters, PalletStorageDistributionBucketFamilyRecord, PalletStorageDistributionBucketIdRecord, PalletStorageDistributionBucketRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagCreationPolicy, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageError, PalletStorageRawEvent, PalletStorageStaticBagId, PalletStorageStorageBucketOperatorStatus, PalletStorageStorageBucketRecord, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletTimestampCall, PalletTransactionPaymentChargeTransactionPayment, PalletTransactionPaymentEvent, PalletTransactionPaymentReleases, PalletUtilityCall, PalletUtilityError, PalletUtilityEvent, PalletVestingCall, PalletVestingError, PalletVestingEvent, PalletVestingReleases, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupCall, PalletWorkingGroupErrorsError, PalletWorkingGroupGroupWorker, PalletWorkingGroupInstance1, PalletWorkingGroupInstance2, PalletWorkingGroupInstance3, PalletWorkingGroupInstance4, PalletWorkingGroupInstance5, PalletWorkingGroupInstance6, PalletWorkingGroupInstance7, PalletWorkingGroupInstance8, PalletWorkingGroupInstance9, PalletWorkingGroupJobApplication, PalletWorkingGroupOpening, PalletWorkingGroupOpeningType, PalletWorkingGroupRawEventInstance1, PalletWorkingGroupRawEventInstance2, PalletWorkingGroupRawEventInstance3, PalletWorkingGroupRawEventInstance4, PalletWorkingGroupRawEventInstance5, PalletWorkingGroupRawEventInstance6, PalletWorkingGroupRawEventInstance7, PalletWorkingGroupRawEventInstance8, PalletWorkingGroupRawEventInstance9, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakeParameters, PalletWorkingGroupStakePolicy, SpArithmeticArithmeticError, SpAuthorityDiscoveryAppPublic, SpConsensusBabeAllowedSlots, SpConsensusBabeAppPublic, SpConsensusBabeBabeEpochConfiguration, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusBabeDigestsPreDigest, SpConsensusBabeDigestsPrimaryPreDigest, SpConsensusBabeDigestsSecondaryPlainPreDigest, SpConsensusBabeDigestsSecondaryVRFPreDigest, SpConsensusGrandpaAppPublic, SpConsensusGrandpaAppSignature, SpConsensusGrandpaEquivocation, SpConsensusGrandpaEquivocationProof, SpConsensusSlotsEquivocationProof, SpCoreCryptoKeyTypeId, SpCoreEcdsaSignature, SpCoreEd25519Public, SpCoreEd25519Signature, SpCoreOffchainOpaqueNetworkState, SpCoreSr25519Public, SpCoreSr25519Signature, SpCoreVoid, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeBlakeTwo256, SpRuntimeDigest, SpRuntimeDigestDigestItem, SpRuntimeDispatchError, SpRuntimeHeader, SpRuntimeModuleError, SpRuntimeMultiSignature, SpRuntimeTokenError, SpRuntimeTransactionalError, SpSessionMembershipProof, SpStakingOffenceOffenceDetails, SpVersionRuntimeVersion, SpWeightsRuntimeDbWeight, SpWeightsWeightV2Weight } from '@polkadot/types/lookup';
+import type { FinalityGrandpaEquivocationPrecommit, FinalityGrandpaEquivocationPrevote, FinalityGrandpaPrecommit, FinalityGrandpaPrevote, FrameSupportDispatchDispatchClass, FrameSupportDispatchDispatchInfo, FrameSupportDispatchPays, FrameSupportDispatchPerDispatchClassU32, FrameSupportDispatchPerDispatchClassWeight, FrameSupportDispatchPerDispatchClassWeightsPerClass, FrameSupportDispatchRawOrigin, FrameSupportTokensMiscBalanceStatus, FrameSystemAccountInfo, FrameSystemCall, FrameSystemError, FrameSystemEvent, FrameSystemEventRecord, FrameSystemExtensionsCheckGenesis, FrameSystemExtensionsCheckNonZeroSender, FrameSystemExtensionsCheckNonce, FrameSystemExtensionsCheckSpecVersion, FrameSystemExtensionsCheckTxVersion, FrameSystemExtensionsCheckWeight, FrameSystemLastRuntimeUpgradeInfo, FrameSystemLimitsBlockLength, FrameSystemLimitsBlockWeights, FrameSystemLimitsWeightsPerClass, FrameSystemPhase, JoystreamNodeRuntimeNposSolution16, JoystreamNodeRuntimeOriginCaller, JoystreamNodeRuntimeProxyType, JoystreamNodeRuntimeRuntime, JoystreamNodeRuntimeSessionKeys, PalletArgoBridgeBridgeConstraints, PalletArgoBridgeBridgeStatus, PalletArgoBridgeCall, PalletArgoBridgeEventsRawEvent, PalletArgoBridgeRemoteAccount, PalletArgoBridgeRemoteTransfer, PalletBabeCall, PalletBabeError, PalletBagsListCall, PalletBagsListError, PalletBagsListEvent, PalletBagsListListBag, PalletBagsListListListError, PalletBagsListListNode, PalletBalancesAccountData, PalletBalancesBalanceLock, PalletBalancesCall, PalletBalancesError, PalletBalancesEvent, PalletBalancesReasons, PalletBalancesReserveData, PalletBountyAssuranceContractTypeBTreeSet, PalletBountyAssuranceContractTypeBoundedBTreeSet, PalletBountyBountyActor, PalletBountyBountyMilestone, PalletBountyBountyParametersBTreeSet, PalletBountyBountyParametersBoundedBTreeSet, PalletBountyBountyRecord, PalletBountyCall, PalletBountyContribution, PalletBountyEntryRecord, PalletBountyError, PalletBountyFundingType, PalletBountyOracleWorkEntryJudgment, PalletBountyRawEvent, PalletCommonBalanceKind, PalletCommonBloatBondRepayableBloatBond, PalletCommonFreezablePallet, PalletCommonFundingRequestParameters, PalletCommonMerkleTreeProofElementRecord, PalletCommonMerkleTreeSide, PalletCommonWorkingGroupIterableEnumsWorkingGroup, PalletConstitutionCall, PalletConstitutionConstitutionInfo, PalletConstitutionRawEvent, PalletContentCall, PalletContentChannelBagWitness, PalletContentChannelCreationParametersRecord, PalletContentChannelFundsDestination, PalletContentChannelOwner, PalletContentChannelPayoutsPayloadParametersRecord, PalletContentChannelRecord, PalletContentChannelTransferStatus, PalletContentChannelUpdateParametersRecord, PalletContentErrorsError, PalletContentInitTransferParameters, PalletContentIterableEnumsChannelActionPermission, PalletContentLimitPerPeriod, PalletContentNftCounter, PalletContentNftLimitPeriod, PalletContentNftTypesEnglishAuctionBid, PalletContentNftTypesEnglishAuctionParamsRecord, PalletContentNftTypesEnglishAuctionRecord, PalletContentNftTypesInitTransactionalStatusRecord, PalletContentNftTypesNftIssuanceParametersRecord, PalletContentNftTypesNftOwner, PalletContentNftTypesOpenAuctionBidRecord, PalletContentNftTypesOpenAuctionParamsRecord, PalletContentNftTypesOpenAuctionRecord, PalletContentNftTypesOwnedNft, PalletContentNftTypesTransactionalStatusRecord, PalletContentPendingTransfer, PalletContentPermissionsContentActor, PalletContentPermissionsCuratorGroupCuratorGroupRecord, PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction, PalletContentPermissionsCuratorGroupIterableEnumsPausableChannelFeature, PalletContentPullPaymentElement, PalletContentRawEvent, PalletContentStorageAssetsRecord, PalletContentTransferCommitmentParametersBTreeMap, PalletContentTransferCommitmentParametersBoundedBTreeMap, PalletContentUpdateChannelPayoutsParametersRecord, PalletContentVideoCreationParametersRecord, PalletContentVideoRecord, PalletContentVideoUpdateParametersRecord, PalletCouncilCall, PalletCouncilCandidate, PalletCouncilCouncilMember, PalletCouncilCouncilStage, PalletCouncilCouncilStageAnnouncing, PalletCouncilCouncilStageElection, PalletCouncilCouncilStageIdle, PalletCouncilCouncilStageUpdate, PalletCouncilError, PalletCouncilRawEvent, PalletElectionProviderMultiPhaseCall, PalletElectionProviderMultiPhaseElectionCompute, PalletElectionProviderMultiPhaseError, PalletElectionProviderMultiPhaseEvent, PalletElectionProviderMultiPhasePhase, PalletElectionProviderMultiPhaseRawSolution, PalletElectionProviderMultiPhaseReadySolution, PalletElectionProviderMultiPhaseRoundSnapshot, PalletElectionProviderMultiPhaseSignedSignedSubmission, PalletElectionProviderMultiPhaseSolutionOrSnapshotSize, PalletForumCall, PalletForumCategory, PalletForumError, PalletForumExtendedPostIdObject, PalletForumPost, PalletForumPrivilegedActor, PalletForumRawEvent, PalletForumThread, PalletGrandpaCall, PalletGrandpaError, PalletGrandpaEvent, PalletGrandpaStoredPendingChange, PalletGrandpaStoredState, PalletImOnlineBoundedOpaqueNetworkState, PalletImOnlineCall, PalletImOnlineError, PalletImOnlineEvent, PalletImOnlineHeartbeat, PalletImOnlineSr25519AppSr25519Public, PalletImOnlineSr25519AppSr25519Signature, PalletJoystreamUtilityCall, PalletJoystreamUtilityError, PalletJoystreamUtilityRawEvent, PalletMembershipBuyMembershipParameters, PalletMembershipCall, PalletMembershipCreateMemberParameters, PalletMembershipError, PalletMembershipGiftMembershipParameters, PalletMembershipInviteMembershipParameters, PalletMembershipMembershipObject, PalletMembershipRawEvent, PalletMembershipStakingAccountMemberBinding, PalletMultisigCall, PalletMultisigError, PalletMultisigEvent, PalletMultisigMultisig, PalletMultisigTimepoint, PalletOffencesEvent, PalletProjectTokenAccountData, PalletProjectTokenAmmCurve, PalletProjectTokenAmmParams, PalletProjectTokenCall, PalletProjectTokenErrorsError, PalletProjectTokenEventsRawEvent, PalletProjectTokenMerkleProof, PalletProjectTokenMerkleSide, PalletProjectTokenPatronageData, PalletProjectTokenPaymentWithVesting, PalletProjectTokenRevenueSplitInfo, PalletProjectTokenRevenueSplitState, PalletProjectTokenSingleDataObjectUploadParams, PalletProjectTokenStakingStatus, PalletProjectTokenTimeline, PalletProjectTokenTokenAllocation, PalletProjectTokenTokenConstraints, PalletProjectTokenTokenData, PalletProjectTokenTokenIssuanceParameters, PalletProjectTokenTokenSale, PalletProjectTokenTokenSaleParams, PalletProjectTokenTransferPolicy, PalletProjectTokenTransferPolicyParams, PalletProjectTokenTransfers, PalletProjectTokenValidated, PalletProjectTokenValidatedPayment, PalletProjectTokenVestingSchedule, PalletProjectTokenVestingScheduleParams, PalletProjectTokenVestingSource, PalletProjectTokenWhitelistParams, PalletProposalsCodexCall, PalletProposalsCodexCreateOpeningParameters, PalletProposalsCodexError, PalletProposalsCodexFillOpeningParameters, PalletProposalsCodexGeneralProposalParams, PalletProposalsCodexProposalDetails, PalletProposalsCodexRawEvent, PalletProposalsCodexTerminateRoleParameters, PalletProposalsDiscussionCall, PalletProposalsDiscussionDiscussionPost, PalletProposalsDiscussionDiscussionThread, PalletProposalsDiscussionError, PalletProposalsDiscussionRawEvent, PalletProposalsDiscussionThreadModeBTreeSet, PalletProposalsDiscussionThreadModeBoundedBTreeSet, PalletProposalsEngineCall, PalletProposalsEngineError, PalletProposalsEngineProposal, PalletProposalsEngineProposalParameters, PalletProposalsEngineProposalStatusesApprovedProposalDecision, PalletProposalsEngineProposalStatusesExecutionStatus, PalletProposalsEngineProposalStatusesProposalDecision, PalletProposalsEngineProposalStatusesProposalStatus, PalletProposalsEngineRawEvent, PalletProposalsEngineVoteKind, PalletProposalsEngineVotingResults, PalletProxyAnnouncement, PalletProxyCall, PalletProxyError, PalletProxyEvent, PalletProxyProxyDefinition, PalletReferendumCall, PalletReferendumCastVote, PalletReferendumError, PalletReferendumInstance1, PalletReferendumOptionResult, PalletReferendumRawEvent, PalletReferendumReferendumStage, PalletReferendumReferendumStageRevealing, PalletReferendumReferendumStageVoting, PalletSessionCall, PalletSessionError, PalletSessionEvent, PalletStakingActiveEraInfo, PalletStakingEraRewardPoints, PalletStakingExposure, PalletStakingForcing, PalletStakingIndividualExposure, PalletStakingNominations, PalletStakingPalletCall, PalletStakingPalletConfigOpPerbill, PalletStakingPalletConfigOpPercent, PalletStakingPalletConfigOpU128, PalletStakingPalletConfigOpU32, PalletStakingPalletError, PalletStakingPalletEvent, PalletStakingRewardDestination, PalletStakingSlashingSlashingSpans, PalletStakingSlashingSpanRecord, PalletStakingStakingLedger, PalletStakingUnappliedSlash, PalletStakingUnlockChunk, PalletStakingValidatorPrefs, PalletStorageBagIdType, PalletStorageBagRecord, PalletStorageCall, PalletStorageDataObject, PalletStorageDataObjectCreationParameters, PalletStorageDistributionBucketFamilyRecord, PalletStorageDistributionBucketIdRecord, PalletStorageDistributionBucketRecord, PalletStorageDynBagCreationParametersRecord, PalletStorageDynamicBagCreationPolicy, PalletStorageDynamicBagIdType, PalletStorageDynamicBagType, PalletStorageError, PalletStorageRawEvent, PalletStorageStaticBagId, PalletStorageStorageBucketOperatorStatus, PalletStorageStorageBucketRecord, PalletStorageUploadParametersRecord, PalletStorageVoucher, PalletTimestampCall, PalletTransactionPaymentChargeTransactionPayment, PalletTransactionPaymentEvent, PalletTransactionPaymentReleases, PalletUtilityCall, PalletUtilityError, PalletUtilityEvent, PalletVestingCall, PalletVestingError, PalletVestingEvent, PalletVestingReleases, PalletVestingVestingInfo, PalletWorkingGroupApplyOnOpeningParams, PalletWorkingGroupCall, PalletWorkingGroupErrorsError, PalletWorkingGroupGroupWorker, PalletWorkingGroupInstance1, PalletWorkingGroupInstance2, PalletWorkingGroupInstance3, PalletWorkingGroupInstance4, PalletWorkingGroupInstance5, PalletWorkingGroupInstance6, PalletWorkingGroupInstance7, PalletWorkingGroupInstance8, PalletWorkingGroupInstance9, PalletWorkingGroupJobApplication, PalletWorkingGroupOpening, PalletWorkingGroupOpeningType, PalletWorkingGroupRawEventInstance1, PalletWorkingGroupRawEventInstance2, PalletWorkingGroupRawEventInstance3, PalletWorkingGroupRawEventInstance4, PalletWorkingGroupRawEventInstance5, PalletWorkingGroupRawEventInstance6, PalletWorkingGroupRawEventInstance7, PalletWorkingGroupRawEventInstance8, PalletWorkingGroupRawEventInstance9, PalletWorkingGroupRewardPaymentType, PalletWorkingGroupStakeParameters, PalletWorkingGroupStakePolicy, SpArithmeticArithmeticError, SpAuthorityDiscoveryAppPublic, SpConsensusBabeAllowedSlots, SpConsensusBabeAppPublic, SpConsensusBabeBabeEpochConfiguration, SpConsensusBabeDigestsNextConfigDescriptor, SpConsensusBabeDigestsPreDigest, SpConsensusBabeDigestsPrimaryPreDigest, SpConsensusBabeDigestsSecondaryPlainPreDigest, SpConsensusBabeDigestsSecondaryVRFPreDigest, SpConsensusGrandpaAppPublic, SpConsensusGrandpaAppSignature, SpConsensusGrandpaEquivocation, SpConsensusGrandpaEquivocationProof, SpConsensusSlotsEquivocationProof, SpCoreCryptoKeyTypeId, SpCoreEcdsaSignature, SpCoreEd25519Public, SpCoreEd25519Signature, SpCoreOffchainOpaqueNetworkState, SpCoreSr25519Public, SpCoreSr25519Signature, SpCoreVoid, SpNposElectionsElectionScore, SpNposElectionsSupport, SpRuntimeBlakeTwo256, SpRuntimeDigest, SpRuntimeDigestDigestItem, SpRuntimeDispatchError, SpRuntimeHeader, SpRuntimeModuleError, SpRuntimeMultiSignature, SpRuntimeTokenError, SpRuntimeTransactionalError, SpSessionMembershipProof, SpStakingOffenceOffenceDetails, SpVersionRuntimeVersion, SpWeightsRuntimeDbWeight, SpWeightsWeightV2Weight } from '@polkadot/types/lookup';
 declare module '@polkadot/types/types/registry' {
     interface InterfaceTypes {
         FinalityGrandpaEquivocationPrecommit: FinalityGrandpaEquivocationPrecommit;
@@ -35,6 +35,12 @@ declare module '@polkadot/types/types/registry' {
         JoystreamNodeRuntimeProxyType: JoystreamNodeRuntimeProxyType;
         JoystreamNodeRuntimeRuntime: JoystreamNodeRuntimeRuntime;
         JoystreamNodeRuntimeSessionKeys: JoystreamNodeRuntimeSessionKeys;
+        PalletArgoBridgeBridgeConstraints: PalletArgoBridgeBridgeConstraints;
+        PalletArgoBridgeBridgeStatus: PalletArgoBridgeBridgeStatus;
+        PalletArgoBridgeCall: PalletArgoBridgeCall;
+        PalletArgoBridgeEventsRawEvent: PalletArgoBridgeEventsRawEvent;
+        PalletArgoBridgeRemoteAccount: PalletArgoBridgeRemoteAccount;
+        PalletArgoBridgeRemoteTransfer: PalletArgoBridgeRemoteTransfer;
         PalletBabeCall: PalletBabeCall;
         PalletBabeError: PalletBabeError;
         PalletBagsListCall: PalletBagsListCall;
diff --git a/lib/augment/types-lookup.d.ts b/lib/augment/types-lookup.d.ts
index 39449c0ac17e23b90c91537de3552cdc7c702e7a..a35bc997fc5c4c10509dd2f7c5f1c0926161713e 100644
--- a/lib/augment/types-lookup.d.ts
+++ b/lib/augment/types-lookup.d.ts
@@ -1639,47 +1639,57 @@ declare module '@polkadot/types/lookup' {
         readonly asSetPalletFozenStatus: ITuple<[bool, PalletCommonFreezablePallet]>;
         readonly isUpdateTokenPalletTokenConstraints: boolean;
         readonly asUpdateTokenPalletTokenConstraints: PalletProjectTokenTokenConstraints;
+        readonly isUpdateArgoBridgeConstraints: boolean;
+        readonly asUpdateArgoBridgeConstraints: PalletArgoBridgeBridgeConstraints;
         readonly isSetEraPayoutDampingFactor: boolean;
         readonly asSetEraPayoutDampingFactor: Percent;
         readonly isDecreaseCouncilBudget: boolean;
         readonly asDecreaseCouncilBudget: u128;
-        readonly type: 'Signal' | 'RuntimeUpgrade' | 'FundingRequest' | 'SetMaxValidatorCount' | 'CreateWorkingGroupLeadOpening' | 'FillWorkingGroupLeadOpening' | 'UpdateWorkingGroupBudget' | 'DecreaseWorkingGroupLeadStake' | 'SlashWorkingGroupLead' | 'SetWorkingGroupLeadReward' | 'TerminateWorkingGroupLead' | 'AmendConstitution' | 'CancelWorkingGroupLeadOpening' | 'SetMembershipPrice' | 'SetCouncilBudgetIncrement' | 'SetCouncilorReward' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'SetMembershipLeadInvitationQuota' | 'SetReferralCut' | 'VetoProposal' | 'UpdateGlobalNftLimit' | 'UpdateChannelPayouts' | 'SetPalletFozenStatus' | 'UpdateTokenPalletTokenConstraints' | 'SetEraPayoutDampingFactor' | 'DecreaseCouncilBudget';
+        readonly type: 'Signal' | 'RuntimeUpgrade' | 'FundingRequest' | 'SetMaxValidatorCount' | 'CreateWorkingGroupLeadOpening' | 'FillWorkingGroupLeadOpening' | 'UpdateWorkingGroupBudget' | 'DecreaseWorkingGroupLeadStake' | 'SlashWorkingGroupLead' | 'SetWorkingGroupLeadReward' | 'TerminateWorkingGroupLead' | 'AmendConstitution' | 'CancelWorkingGroupLeadOpening' | 'SetMembershipPrice' | 'SetCouncilBudgetIncrement' | 'SetCouncilorReward' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'SetMembershipLeadInvitationQuota' | 'SetReferralCut' | 'VetoProposal' | 'UpdateGlobalNftLimit' | 'UpdateChannelPayouts' | 'SetPalletFozenStatus' | 'UpdateTokenPalletTokenConstraints' | 'UpdateArgoBridgeConstraints' | 'SetEraPayoutDampingFactor' | 'DecreaseCouncilBudget';
     }
-    /** @name PalletCommonFundingRequestParameters (218) */
+    /** @name PalletArgoBridgeBridgeConstraints (217) */
+    interface PalletArgoBridgeBridgeConstraints extends Struct {
+        readonly operatorAccount: Option<AccountId32>;
+        readonly pauserAccounts: Option<Vec<AccountId32>>;
+        readonly bridgingFee: Option<u128>;
+        readonly thawnDuration: Option<u32>;
+        readonly remoteChains: Option<Vec<u32>>;
+    }
+    /** @name PalletCommonFundingRequestParameters (224) */
     interface PalletCommonFundingRequestParameters extends Struct {
         readonly account: AccountId32;
         readonly amount: u128;
     }
-    /** @name PalletProposalsCodexCreateOpeningParameters (219) */
+    /** @name PalletProposalsCodexCreateOpeningParameters (225) */
     interface PalletProposalsCodexCreateOpeningParameters extends Struct {
         readonly description: Bytes;
         readonly stakePolicy: PalletWorkingGroupStakePolicy;
         readonly rewardPerBlock: Option<u128>;
         readonly group: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
     }
-    /** @name PalletWorkingGroupStakePolicy (220) */
+    /** @name PalletWorkingGroupStakePolicy (226) */
     interface PalletWorkingGroupStakePolicy extends Struct {
         readonly stakeAmount: u128;
         readonly leavingUnstakingPeriod: u32;
     }
-    /** @name PalletProposalsCodexFillOpeningParameters (221) */
+    /** @name PalletProposalsCodexFillOpeningParameters (227) */
     interface PalletProposalsCodexFillOpeningParameters extends Struct {
         readonly openingId: u64;
         readonly applicationId: u64;
         readonly workingGroup: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
     }
-    /** @name PalletProposalsCodexTerminateRoleParameters (222) */
+    /** @name PalletProposalsCodexTerminateRoleParameters (228) */
     interface PalletProposalsCodexTerminateRoleParameters extends Struct {
         readonly workerId: u64;
         readonly slashingAmount: Option<u128>;
         readonly group: PalletCommonWorkingGroupIterableEnumsWorkingGroup;
     }
-    /** @name PalletCommonFreezablePallet (223) */
+    /** @name PalletCommonFreezablePallet (229) */
     interface PalletCommonFreezablePallet extends Enum {
         readonly isProjectToken: boolean;
         readonly type: 'ProjectToken';
     }
-    /** @name PalletWorkingGroupRawEventInstance1 (224) */
+    /** @name PalletWorkingGroupRawEventInstance1 (230) */
     interface PalletWorkingGroupRawEventInstance1 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1734,13 +1744,13 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupOpeningType (228) */
+    /** @name PalletWorkingGroupOpeningType (234) */
     interface PalletWorkingGroupOpeningType extends Enum {
         readonly isLeader: boolean;
         readonly isRegular: boolean;
         readonly type: 'Leader' | 'Regular';
     }
-    /** @name PalletWorkingGroupApplyOnOpeningParams (229) */
+    /** @name PalletWorkingGroupApplyOnOpeningParams (235) */
     interface PalletWorkingGroupApplyOnOpeningParams extends Struct {
         readonly memberId: u64;
         readonly openingId: u64;
@@ -1749,26 +1759,26 @@ declare module '@polkadot/types/lookup' {
         readonly description: Bytes;
         readonly stakeParameters: PalletWorkingGroupStakeParameters;
     }
-    /** @name PalletWorkingGroupStakeParameters (230) */
+    /** @name PalletWorkingGroupStakeParameters (236) */
     interface PalletWorkingGroupStakeParameters extends Struct {
         readonly stake: u128;
         readonly stakingAccountId: AccountId32;
     }
-    /** @name PalletVestingVestingInfo (231) */
+    /** @name PalletVestingVestingInfo (237) */
     interface PalletVestingVestingInfo extends Struct {
         readonly locked: u128;
         readonly perBlock: u128;
         readonly startingBlock: u32;
     }
-    /** @name PalletWorkingGroupInstance1 (232) */
+    /** @name PalletWorkingGroupInstance1 (238) */
     type PalletWorkingGroupInstance1 = Null;
-    /** @name PalletWorkingGroupRewardPaymentType (233) */
+    /** @name PalletWorkingGroupRewardPaymentType (239) */
     interface PalletWorkingGroupRewardPaymentType extends Enum {
         readonly isMissedReward: boolean;
         readonly isRegularReward: boolean;
         readonly type: 'MissedReward' | 'RegularReward';
     }
-    /** @name PalletWorkingGroupRawEventInstance2 (234) */
+    /** @name PalletWorkingGroupRawEventInstance2 (240) */
     interface PalletWorkingGroupRawEventInstance2 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1823,9 +1833,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance2 (235) */
+    /** @name PalletWorkingGroupInstance2 (241) */
     type PalletWorkingGroupInstance2 = Null;
-    /** @name PalletWorkingGroupRawEventInstance3 (236) */
+    /** @name PalletWorkingGroupRawEventInstance3 (242) */
     interface PalletWorkingGroupRawEventInstance3 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1880,9 +1890,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance3 (237) */
+    /** @name PalletWorkingGroupInstance3 (243) */
     type PalletWorkingGroupInstance3 = Null;
-    /** @name PalletWorkingGroupRawEventInstance4 (238) */
+    /** @name PalletWorkingGroupRawEventInstance4 (244) */
     interface PalletWorkingGroupRawEventInstance4 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1937,9 +1947,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance4 (239) */
+    /** @name PalletWorkingGroupInstance4 (245) */
     type PalletWorkingGroupInstance4 = Null;
-    /** @name PalletWorkingGroupRawEventInstance5 (240) */
+    /** @name PalletWorkingGroupRawEventInstance5 (246) */
     interface PalletWorkingGroupRawEventInstance5 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -1994,9 +2004,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance5 (241) */
+    /** @name PalletWorkingGroupInstance5 (247) */
     type PalletWorkingGroupInstance5 = Null;
-    /** @name PalletWorkingGroupRawEventInstance6 (242) */
+    /** @name PalletWorkingGroupRawEventInstance6 (248) */
     interface PalletWorkingGroupRawEventInstance6 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2051,9 +2061,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance6 (243) */
+    /** @name PalletWorkingGroupInstance6 (249) */
     type PalletWorkingGroupInstance6 = Null;
-    /** @name PalletWorkingGroupRawEventInstance7 (244) */
+    /** @name PalletWorkingGroupRawEventInstance7 (250) */
     interface PalletWorkingGroupRawEventInstance7 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2108,9 +2118,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance7 (245) */
+    /** @name PalletWorkingGroupInstance7 (251) */
     type PalletWorkingGroupInstance7 = Null;
-    /** @name PalletWorkingGroupRawEventInstance8 (246) */
+    /** @name PalletWorkingGroupRawEventInstance8 (252) */
     interface PalletWorkingGroupRawEventInstance8 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2165,9 +2175,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance8 (247) */
+    /** @name PalletWorkingGroupInstance8 (253) */
     type PalletWorkingGroupInstance8 = Null;
-    /** @name PalletWorkingGroupRawEventInstance9 (248) */
+    /** @name PalletWorkingGroupRawEventInstance9 (254) */
     interface PalletWorkingGroupRawEventInstance9 extends Enum {
         readonly isOpeningAdded: boolean;
         readonly asOpeningAdded: ITuple<[u64, Bytes, PalletWorkingGroupOpeningType, PalletWorkingGroupStakePolicy, Option<u128>]>;
@@ -2222,9 +2232,9 @@ declare module '@polkadot/types/lookup' {
         readonly asWorkerRemarked: ITuple<[u64, Bytes]>;
         readonly type: 'OpeningAdded' | 'AppliedOnOpening' | 'OpeningFilled' | 'LeaderSet' | 'WorkerRoleAccountUpdated' | 'LeaderUnset' | 'WorkerExited' | 'WorkerStartedLeaving' | 'TerminatedWorker' | 'TerminatedLeader' | 'StakeSlashed' | 'StakeDecreased' | 'StakeIncreased' | 'ApplicationWithdrawn' | 'OpeningCanceled' | 'BudgetSet' | 'WorkerRewardAccountUpdated' | 'WorkerRewardAmountUpdated' | 'StatusTextChanged' | 'VestedBudgetSpending' | 'BudgetSpending' | 'RewardPaid' | 'NewMissedRewardLevelReached' | 'WorkingGroupBudgetFunded' | 'LeadRemarked' | 'WorkerRemarked';
     }
-    /** @name PalletWorkingGroupInstance9 (249) */
+    /** @name PalletWorkingGroupInstance9 (255) */
     type PalletWorkingGroupInstance9 = Null;
-    /** @name PalletProxyEvent (250) */
+    /** @name PalletProxyEvent (256) */
     interface PalletProxyEvent extends Enum {
         readonly isProxyExecuted: boolean;
         readonly asProxyExecuted: {
@@ -2259,7 +2269,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'ProxyExecuted' | 'PureCreated' | 'Announced' | 'ProxyAdded' | 'ProxyRemoved';
     }
-    /** @name JoystreamNodeRuntimeProxyType (251) */
+    /** @name JoystreamNodeRuntimeProxyType (257) */
     interface JoystreamNodeRuntimeProxyType extends Enum {
         readonly isAny: boolean;
         readonly isNonTransfer: boolean;
@@ -2269,7 +2279,34 @@ declare module '@polkadot/types/lookup' {
         readonly isStorageTransactor: boolean;
         readonly type: 'Any' | 'NonTransfer' | 'Governance' | 'Referendum' | 'Staking' | 'StorageTransactor';
     }
-    /** @name FrameSystemPhase (253) */
+    /** @name PalletArgoBridgeEventsRawEvent (259) */
+    interface PalletArgoBridgeEventsRawEvent extends Enum {
+        readonly isOutboundTransferRequested: boolean;
+        readonly asOutboundTransferRequested: ITuple<[u64, AccountId32, PalletArgoBridgeRemoteAccount, u128, u128]>;
+        readonly isInboundTransferFinalized: boolean;
+        readonly asInboundTransferFinalized: ITuple<[PalletArgoBridgeRemoteTransfer, AccountId32, u128]>;
+        readonly isOutboundTransferReverted: boolean;
+        readonly asOutboundTransferReverted: ITuple<[u64, AccountId32, u128, Bytes]>;
+        readonly isBridgePaused: boolean;
+        readonly asBridgePaused: AccountId32;
+        readonly isBridgeThawnStarted: boolean;
+        readonly asBridgeThawnStarted: ITuple<[AccountId32, u32]>;
+        readonly isBridgeThawnFinished: boolean;
+        readonly isBridgeConfigUpdated: boolean;
+        readonly asBridgeConfigUpdated: PalletArgoBridgeBridgeConstraints;
+        readonly type: 'OutboundTransferRequested' | 'InboundTransferFinalized' | 'OutboundTransferReverted' | 'BridgePaused' | 'BridgeThawnStarted' | 'BridgeThawnFinished' | 'BridgeConfigUpdated';
+    }
+    /** @name PalletArgoBridgeRemoteAccount (260) */
+    interface PalletArgoBridgeRemoteAccount extends Struct {
+        readonly account: U8aFixed;
+        readonly chainId: u32;
+    }
+    /** @name PalletArgoBridgeRemoteTransfer (261) */
+    interface PalletArgoBridgeRemoteTransfer extends Struct {
+        readonly id: u64;
+        readonly chainId: u32;
+    }
+    /** @name FrameSystemPhase (263) */
     interface FrameSystemPhase extends Enum {
         readonly isApplyExtrinsic: boolean;
         readonly asApplyExtrinsic: u32;
@@ -2277,12 +2314,12 @@ declare module '@polkadot/types/lookup' {
         readonly isInitialization: boolean;
         readonly type: 'ApplyExtrinsic' | 'Finalization' | 'Initialization';
     }
-    /** @name FrameSystemLastRuntimeUpgradeInfo (257) */
+    /** @name FrameSystemLastRuntimeUpgradeInfo (267) */
     interface FrameSystemLastRuntimeUpgradeInfo extends Struct {
         readonly specVersion: Compact<u32>;
         readonly specName: Text;
     }
-    /** @name FrameSystemCall (260) */
+    /** @name FrameSystemCall (270) */
     interface FrameSystemCall extends Enum {
         readonly isRemark: boolean;
         readonly asRemark: {
@@ -2319,41 +2356,41 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Remark' | 'SetHeapPages' | 'SetCode' | 'SetCodeWithoutChecks' | 'SetStorage' | 'KillStorage' | 'KillPrefix' | 'RemarkWithEvent';
     }
-    /** @name FrameSystemLimitsBlockWeights (263) */
+    /** @name FrameSystemLimitsBlockWeights (273) */
     interface FrameSystemLimitsBlockWeights extends Struct {
         readonly baseBlock: SpWeightsWeightV2Weight;
         readonly maxBlock: SpWeightsWeightV2Weight;
         readonly perClass: FrameSupportDispatchPerDispatchClassWeightsPerClass;
     }
-    /** @name FrameSupportDispatchPerDispatchClassWeightsPerClass (264) */
+    /** @name FrameSupportDispatchPerDispatchClassWeightsPerClass (274) */
     interface FrameSupportDispatchPerDispatchClassWeightsPerClass extends Struct {
         readonly normal: FrameSystemLimitsWeightsPerClass;
         readonly operational: FrameSystemLimitsWeightsPerClass;
         readonly mandatory: FrameSystemLimitsWeightsPerClass;
     }
-    /** @name FrameSystemLimitsWeightsPerClass (265) */
+    /** @name FrameSystemLimitsWeightsPerClass (275) */
     interface FrameSystemLimitsWeightsPerClass extends Struct {
         readonly baseExtrinsic: SpWeightsWeightV2Weight;
         readonly maxExtrinsic: Option<SpWeightsWeightV2Weight>;
         readonly maxTotal: Option<SpWeightsWeightV2Weight>;
         readonly reserved: Option<SpWeightsWeightV2Weight>;
     }
-    /** @name FrameSystemLimitsBlockLength (267) */
+    /** @name FrameSystemLimitsBlockLength (277) */
     interface FrameSystemLimitsBlockLength extends Struct {
         readonly max: FrameSupportDispatchPerDispatchClassU32;
     }
-    /** @name FrameSupportDispatchPerDispatchClassU32 (268) */
+    /** @name FrameSupportDispatchPerDispatchClassU32 (278) */
     interface FrameSupportDispatchPerDispatchClassU32 extends Struct {
         readonly normal: u32;
         readonly operational: u32;
         readonly mandatory: u32;
     }
-    /** @name SpWeightsRuntimeDbWeight (269) */
+    /** @name SpWeightsRuntimeDbWeight (279) */
     interface SpWeightsRuntimeDbWeight extends Struct {
         readonly read: u64;
         readonly write: u64;
     }
-    /** @name SpVersionRuntimeVersion (270) */
+    /** @name SpVersionRuntimeVersion (280) */
     interface SpVersionRuntimeVersion extends Struct {
         readonly specName: Text;
         readonly implName: Text;
@@ -2364,7 +2401,7 @@ declare module '@polkadot/types/lookup' {
         readonly transactionVersion: u32;
         readonly stateVersion: u8;
     }
-    /** @name FrameSystemError (275) */
+    /** @name FrameSystemError (285) */
     interface FrameSystemError extends Enum {
         readonly isInvalidSpecName: boolean;
         readonly isSpecVersionNeedsToIncrease: boolean;
@@ -2374,7 +2411,7 @@ declare module '@polkadot/types/lookup' {
         readonly isCallFiltered: boolean;
         readonly type: 'InvalidSpecName' | 'SpecVersionNeedsToIncrease' | 'FailedToExtractRuntimeVersion' | 'NonDefaultComposite' | 'NonZeroRefCount' | 'CallFiltered';
     }
-    /** @name PalletUtilityCall (276) */
+    /** @name PalletUtilityCall (286) */
     interface PalletUtilityCall extends Enum {
         readonly isBatch: boolean;
         readonly asBatch: {
@@ -2405,7 +2442,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Batch' | 'AsDerivative' | 'BatchAll' | 'DispatchAs' | 'ForceBatch' | 'WithWeight';
     }
-    /** @name PalletBabeCall (279) */
+    /** @name PalletBabeCall (289) */
     interface PalletBabeCall extends Enum {
         readonly isReportEquivocation: boolean;
         readonly asReportEquivocation: {
@@ -2423,14 +2460,14 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'ReportEquivocation' | 'ReportEquivocationUnsigned' | 'PlanConfigChange';
     }
-    /** @name SpConsensusSlotsEquivocationProof (280) */
+    /** @name SpConsensusSlotsEquivocationProof (290) */
     interface SpConsensusSlotsEquivocationProof extends Struct {
         readonly offender: SpConsensusBabeAppPublic;
         readonly slot: u64;
         readonly firstHeader: SpRuntimeHeader;
         readonly secondHeader: SpRuntimeHeader;
     }
-    /** @name SpRuntimeHeader (281) */
+    /** @name SpRuntimeHeader (291) */
     interface SpRuntimeHeader extends Struct {
         readonly parentHash: H256;
         readonly number: Compact<u32>;
@@ -2438,18 +2475,18 @@ declare module '@polkadot/types/lookup' {
         readonly extrinsicsRoot: H256;
         readonly digest: SpRuntimeDigest;
     }
-    /** @name SpRuntimeBlakeTwo256 (282) */
+    /** @name SpRuntimeBlakeTwo256 (292) */
     type SpRuntimeBlakeTwo256 = Null;
-    /** @name SpConsensusBabeAppPublic (283) */
+    /** @name SpConsensusBabeAppPublic (293) */
     interface SpConsensusBabeAppPublic extends SpCoreSr25519Public {
     }
-    /** @name SpSessionMembershipProof (285) */
+    /** @name SpSessionMembershipProof (295) */
     interface SpSessionMembershipProof extends Struct {
         readonly session: u32;
         readonly trieNodes: Vec<Bytes>;
         readonly validatorCount: u32;
     }
-    /** @name SpConsensusBabeDigestsNextConfigDescriptor (286) */
+    /** @name SpConsensusBabeDigestsNextConfigDescriptor (296) */
     interface SpConsensusBabeDigestsNextConfigDescriptor extends Enum {
         readonly isV1: boolean;
         readonly asV1: {
@@ -2458,14 +2495,14 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'V1';
     }
-    /** @name SpConsensusBabeAllowedSlots (287) */
+    /** @name SpConsensusBabeAllowedSlots (297) */
     interface SpConsensusBabeAllowedSlots extends Enum {
         readonly isPrimarySlots: boolean;
         readonly isPrimaryAndSecondaryPlainSlots: boolean;
         readonly isPrimaryAndSecondaryVRFSlots: boolean;
         readonly type: 'PrimarySlots' | 'PrimaryAndSecondaryPlainSlots' | 'PrimaryAndSecondaryVRFSlots';
     }
-    /** @name PalletTimestampCall (288) */
+    /** @name PalletTimestampCall (298) */
     interface PalletTimestampCall extends Enum {
         readonly isSet: boolean;
         readonly asSet: {
@@ -2473,7 +2510,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Set';
     }
-    /** @name PalletBalancesCall (289) */
+    /** @name PalletBalancesCall (299) */
     interface PalletBalancesCall extends Enum {
         readonly isTransfer: boolean;
         readonly asTransfer: {
@@ -2509,7 +2546,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Transfer' | 'SetBalance' | 'ForceTransfer' | 'TransferKeepAlive' | 'TransferAll' | 'ForceUnreserve';
     }
-    /** @name PalletElectionProviderMultiPhaseCall (290) */
+    /** @name PalletElectionProviderMultiPhaseCall (300) */
     interface PalletElectionProviderMultiPhaseCall extends Enum {
         readonly isSubmitUnsigned: boolean;
         readonly asSubmitUnsigned: {
@@ -2535,13 +2572,13 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'SubmitUnsigned' | 'SetMinimumUntrustedScore' | 'SetEmergencyElectionResult' | 'Submit' | 'GovernanceFallback';
     }
-    /** @name PalletElectionProviderMultiPhaseRawSolution (291) */
+    /** @name PalletElectionProviderMultiPhaseRawSolution (301) */
     interface PalletElectionProviderMultiPhaseRawSolution extends Struct {
         readonly solution: JoystreamNodeRuntimeNposSolution16;
         readonly score: SpNposElectionsElectionScore;
         readonly round: u32;
     }
-    /** @name JoystreamNodeRuntimeNposSolution16 (292) */
+    /** @name JoystreamNodeRuntimeNposSolution16 (302) */
     interface JoystreamNodeRuntimeNposSolution16 extends Struct {
         readonly votes1: Vec<ITuple<[Compact<u32>, Compact<u16>]>>;
         readonly votes2: Vec<ITuple<[Compact<u32>, ITuple<[Compact<u16>, Compact<PerU16>]>, Compact<u16>]>>;
@@ -2560,17 +2597,17 @@ declare module '@polkadot/types/lookup' {
         readonly votes15: Vec<ITuple<[Compact<u32>, Vec<ITuple<[Compact<u16>, Compact<PerU16>]>>, Compact<u16>]>>;
         readonly votes16: Vec<ITuple<[Compact<u32>, Vec<ITuple<[Compact<u16>, Compact<PerU16>]>>, Compact<u16>]>>;
     }
-    /** @name PalletElectionProviderMultiPhaseSolutionOrSnapshotSize (343) */
+    /** @name PalletElectionProviderMultiPhaseSolutionOrSnapshotSize (353) */
     interface PalletElectionProviderMultiPhaseSolutionOrSnapshotSize extends Struct {
         readonly voters: Compact<u32>;
         readonly targets: Compact<u32>;
     }
-    /** @name SpNposElectionsSupport (347) */
+    /** @name SpNposElectionsSupport (357) */
     interface SpNposElectionsSupport extends Struct {
         readonly total: u128;
         readonly voters: Vec<ITuple<[AccountId32, u128]>>;
     }
-    /** @name PalletStakingPalletCall (349) */
+    /** @name PalletStakingPalletCall (359) */
     interface PalletStakingPalletCall extends Enum {
         readonly isBond: boolean;
         readonly asBond: {
@@ -2677,7 +2714,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Bond' | 'BondExtra' | 'Unbond' | 'WithdrawUnbonded' | 'Validate' | 'Nominate' | 'Chill' | 'SetPayee' | 'SetController' | 'SetValidatorCount' | 'IncreaseValidatorCount' | 'ScaleValidatorCount' | 'ForceNoEras' | 'ForceNewEra' | 'SetInvulnerables' | 'ForceUnstake' | 'ForceNewEraAlways' | 'CancelDeferredSlash' | 'PayoutStakers' | 'Rebond' | 'ReapStash' | 'Kick' | 'SetStakingConfigs' | 'ChillOther' | 'ForceApplyMinCommission' | 'SetMinCommission';
     }
-    /** @name PalletStakingRewardDestination (350) */
+    /** @name PalletStakingRewardDestination (360) */
     interface PalletStakingRewardDestination extends Enum {
         readonly isStaked: boolean;
         readonly isStash: boolean;
@@ -2687,7 +2724,7 @@ declare module '@polkadot/types/lookup' {
         readonly isNone: boolean;
         readonly type: 'Staked' | 'Stash' | 'Controller' | 'Account' | 'None';
     }
-    /** @name PalletStakingPalletConfigOpU128 (353) */
+    /** @name PalletStakingPalletConfigOpU128 (361) */
     interface PalletStakingPalletConfigOpU128 extends Enum {
         readonly isNoop: boolean;
         readonly isSet: boolean;
@@ -2695,7 +2732,7 @@ declare module '@polkadot/types/lookup' {
         readonly isRemove: boolean;
         readonly type: 'Noop' | 'Set' | 'Remove';
     }
-    /** @name PalletStakingPalletConfigOpU32 (354) */
+    /** @name PalletStakingPalletConfigOpU32 (362) */
     interface PalletStakingPalletConfigOpU32 extends Enum {
         readonly isNoop: boolean;
         readonly isSet: boolean;
@@ -2703,7 +2740,7 @@ declare module '@polkadot/types/lookup' {
         readonly isRemove: boolean;
         readonly type: 'Noop' | 'Set' | 'Remove';
     }
-    /** @name PalletStakingPalletConfigOpPercent (355) */
+    /** @name PalletStakingPalletConfigOpPercent (363) */
     interface PalletStakingPalletConfigOpPercent extends Enum {
         readonly isNoop: boolean;
         readonly isSet: boolean;
@@ -2711,7 +2748,7 @@ declare module '@polkadot/types/lookup' {
         readonly isRemove: boolean;
         readonly type: 'Noop' | 'Set' | 'Remove';
     }
-    /** @name PalletStakingPalletConfigOpPerbill (356) */
+    /** @name PalletStakingPalletConfigOpPerbill (364) */
     interface PalletStakingPalletConfigOpPerbill extends Enum {
         readonly isNoop: boolean;
         readonly isSet: boolean;
@@ -2719,7 +2756,7 @@ declare module '@polkadot/types/lookup' {
         readonly isRemove: boolean;
         readonly type: 'Noop' | 'Set' | 'Remove';
     }
-    /** @name PalletSessionCall (357) */
+    /** @name PalletSessionCall (365) */
     interface PalletSessionCall extends Enum {
         readonly isSetKeys: boolean;
         readonly asSetKeys: {
@@ -2729,17 +2766,17 @@ declare module '@polkadot/types/lookup' {
         readonly isPurgeKeys: boolean;
         readonly type: 'SetKeys' | 'PurgeKeys';
     }
-    /** @name JoystreamNodeRuntimeSessionKeys (358) */
+    /** @name JoystreamNodeRuntimeSessionKeys (366) */
     interface JoystreamNodeRuntimeSessionKeys extends Struct {
         readonly grandpa: SpConsensusGrandpaAppPublic;
         readonly babe: SpConsensusBabeAppPublic;
         readonly imOnline: PalletImOnlineSr25519AppSr25519Public;
         readonly authorityDiscovery: SpAuthorityDiscoveryAppPublic;
     }
-    /** @name SpAuthorityDiscoveryAppPublic (359) */
+    /** @name SpAuthorityDiscoveryAppPublic (367) */
     interface SpAuthorityDiscoveryAppPublic extends SpCoreSr25519Public {
     }
-    /** @name PalletGrandpaCall (360) */
+    /** @name PalletGrandpaCall (368) */
     interface PalletGrandpaCall extends Enum {
         readonly isReportEquivocation: boolean;
         readonly asReportEquivocation: {
@@ -2758,12 +2795,12 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'ReportEquivocation' | 'ReportEquivocationUnsigned' | 'NoteStalled';
     }
-    /** @name SpConsensusGrandpaEquivocationProof (361) */
+    /** @name SpConsensusGrandpaEquivocationProof (369) */
     interface SpConsensusGrandpaEquivocationProof extends Struct {
         readonly setId: u64;
         readonly equivocation: SpConsensusGrandpaEquivocation;
     }
-    /** @name SpConsensusGrandpaEquivocation (362) */
+    /** @name SpConsensusGrandpaEquivocation (370) */
     interface SpConsensusGrandpaEquivocation extends Enum {
         readonly isPrevote: boolean;
         readonly asPrevote: FinalityGrandpaEquivocationPrevote;
@@ -2771,37 +2808,37 @@ declare module '@polkadot/types/lookup' {
         readonly asPrecommit: FinalityGrandpaEquivocationPrecommit;
         readonly type: 'Prevote' | 'Precommit';
     }
-    /** @name FinalityGrandpaEquivocationPrevote (363) */
+    /** @name FinalityGrandpaEquivocationPrevote (371) */
     interface FinalityGrandpaEquivocationPrevote extends Struct {
         readonly roundNumber: u64;
         readonly identity: SpConsensusGrandpaAppPublic;
         readonly first: ITuple<[FinalityGrandpaPrevote, SpConsensusGrandpaAppSignature]>;
         readonly second: ITuple<[FinalityGrandpaPrevote, SpConsensusGrandpaAppSignature]>;
     }
-    /** @name FinalityGrandpaPrevote (364) */
+    /** @name FinalityGrandpaPrevote (372) */
     interface FinalityGrandpaPrevote extends Struct {
         readonly targetHash: H256;
         readonly targetNumber: u32;
     }
-    /** @name SpConsensusGrandpaAppSignature (365) */
+    /** @name SpConsensusGrandpaAppSignature (373) */
     interface SpConsensusGrandpaAppSignature extends SpCoreEd25519Signature {
     }
-    /** @name SpCoreEd25519Signature (366) */
+    /** @name SpCoreEd25519Signature (374) */
     interface SpCoreEd25519Signature extends U8aFixed {
     }
-    /** @name FinalityGrandpaEquivocationPrecommit (369) */
+    /** @name FinalityGrandpaEquivocationPrecommit (377) */
     interface FinalityGrandpaEquivocationPrecommit extends Struct {
         readonly roundNumber: u64;
         readonly identity: SpConsensusGrandpaAppPublic;
         readonly first: ITuple<[FinalityGrandpaPrecommit, SpConsensusGrandpaAppSignature]>;
         readonly second: ITuple<[FinalityGrandpaPrecommit, SpConsensusGrandpaAppSignature]>;
     }
-    /** @name FinalityGrandpaPrecommit (370) */
+    /** @name FinalityGrandpaPrecommit (378) */
     interface FinalityGrandpaPrecommit extends Struct {
         readonly targetHash: H256;
         readonly targetNumber: u32;
     }
-    /** @name PalletImOnlineCall (372) */
+    /** @name PalletImOnlineCall (380) */
     interface PalletImOnlineCall extends Enum {
         readonly isHeartbeat: boolean;
         readonly asHeartbeat: {
@@ -2810,7 +2847,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Heartbeat';
     }
-    /** @name PalletImOnlineHeartbeat (373) */
+    /** @name PalletImOnlineHeartbeat (381) */
     interface PalletImOnlineHeartbeat extends Struct {
         readonly blockNumber: u32;
         readonly networkState: SpCoreOffchainOpaqueNetworkState;
@@ -2818,18 +2855,18 @@ declare module '@polkadot/types/lookup' {
         readonly authorityIndex: u32;
         readonly validatorsLen: u32;
     }
-    /** @name SpCoreOffchainOpaqueNetworkState (374) */
+    /** @name SpCoreOffchainOpaqueNetworkState (382) */
     interface SpCoreOffchainOpaqueNetworkState extends Struct {
         readonly peerId: OpaquePeerId;
         readonly externalAddresses: Vec<OpaqueMultiaddr>;
     }
-    /** @name PalletImOnlineSr25519AppSr25519Signature (378) */
+    /** @name PalletImOnlineSr25519AppSr25519Signature (386) */
     interface PalletImOnlineSr25519AppSr25519Signature extends SpCoreSr25519Signature {
     }
-    /** @name SpCoreSr25519Signature (379) */
+    /** @name SpCoreSr25519Signature (387) */
     interface SpCoreSr25519Signature extends U8aFixed {
     }
-    /** @name PalletBagsListCall (380) */
+    /** @name PalletBagsListCall (388) */
     interface PalletBagsListCall extends Enum {
         readonly isRebag: boolean;
         readonly asRebag: {
@@ -2841,7 +2878,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Rebag' | 'PutInFrontOf';
     }
-    /** @name PalletVestingCall (381) */
+    /** @name PalletVestingCall (389) */
     interface PalletVestingCall extends Enum {
         readonly isVest: boolean;
         readonly isVestOther: boolean;
@@ -2866,7 +2903,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Vest' | 'VestOther' | 'VestedTransfer' | 'ForceVestedTransfer' | 'MergeSchedules';
     }
-    /** @name PalletMultisigCall (382) */
+    /** @name PalletMultisigCall (390) */
     interface PalletMultisigCall extends Enum {
         readonly isAsMultiThreshold1: boolean;
         readonly asAsMultiThreshold1: {
@@ -2898,7 +2935,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AsMultiThreshold1' | 'AsMulti' | 'ApproveAsMulti' | 'CancelAsMulti';
     }
-    /** @name PalletCouncilCall (384) */
+    /** @name PalletCouncilCall (392) */
     interface PalletCouncilCall extends Enum {
         readonly isAnnounceCandidacy: boolean;
         readonly asAnnounceCandidacy: {
@@ -2966,7 +3003,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AnnounceCandidacy' | 'ReleaseCandidacyStake' | 'WithdrawCandidacy' | 'SetCandidacyNote' | 'SetBudget' | 'PlanBudgetRefill' | 'SetBudgetIncrement' | 'SetCouncilorReward' | 'FundingRequest' | 'FundCouncilBudget' | 'CouncilorRemark' | 'CandidateRemark' | 'SetEraPayoutDampingFactor' | 'DecreaseCouncilBudget';
     }
-    /** @name PalletReferendumCall (385) */
+    /** @name PalletReferendumCall (393) */
     interface PalletReferendumCall extends Enum {
         readonly isVote: boolean;
         readonly asVote: {
@@ -2982,7 +3019,7 @@ declare module '@polkadot/types/lookup' {
         readonly isOptOutOfVoting: boolean;
         readonly type: 'Vote' | 'RevealVote' | 'ReleaseVoteStake' | 'OptOutOfVoting';
     }
-    /** @name PalletMembershipCall (386) */
+    /** @name PalletMembershipCall (394) */
     interface PalletMembershipCall extends Enum {
         readonly isBuyMembership: boolean;
         readonly asBuyMembership: {
@@ -3065,7 +3102,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'BuyMembership' | 'UpdateProfile' | 'UpdateAccounts' | 'UpdateProfileVerification' | 'SetReferralCut' | 'TransferInvites' | 'InviteMember' | 'GiftMembership' | 'SetMembershipPrice' | 'SetLeaderInvitationQuota' | 'SetInitialInvitationBalance' | 'SetInitialInvitationCount' | 'AddStakingAccountCandidate' | 'RemoveStakingAccount' | 'ConfirmStakingAccount' | 'MemberRemark' | 'CreateMember';
     }
-    /** @name PalletForumCall (387) */
+    /** @name PalletForumCall (395) */
     interface PalletForumCall extends Enum {
         readonly isUpdateCategoryMembershipOfModerator: boolean;
         readonly asUpdateCategoryMembershipOfModerator: {
@@ -3175,7 +3212,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'UpdateCategoryMembershipOfModerator' | 'CreateCategory' | 'UpdateCategoryArchivalStatus' | 'UpdateCategoryTitle' | 'UpdateCategoryDescription' | 'DeleteCategory' | 'CreateThread' | 'EditThreadMetadata' | 'DeleteThread' | 'MoveThreadToCategory' | 'ModerateThread' | 'AddPost' | 'EditPostText' | 'ModeratePost' | 'DeletePosts' | 'SetStickiedThreads';
     }
-    /** @name PalletConstitutionCall (388) */
+    /** @name PalletConstitutionCall (396) */
     interface PalletConstitutionCall extends Enum {
         readonly isAmendConstitution: boolean;
         readonly asAmendConstitution: {
@@ -3183,7 +3220,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AmendConstitution';
     }
-    /** @name PalletBountyCall (389) */
+    /** @name PalletBountyCall (397) */
     interface PalletBountyCall extends Enum {
         readonly isCreateBounty: boolean;
         readonly asCreateBounty: {
@@ -3271,7 +3308,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'CreateBounty' | 'FundBounty' | 'TerminateBounty' | 'SwitchOracle' | 'WithdrawFunding' | 'AnnounceWorkEntry' | 'SubmitWork' | 'EndWorkingPeriod' | 'SubmitOracleJudgment' | 'WithdrawEntrantStake' | 'WithdrawOracleReward' | 'ContributorRemark' | 'OracleRemark' | 'EntrantRemark' | 'CreatorRemark';
     }
-    /** @name PalletJoystreamUtilityCall (390) */
+    /** @name PalletJoystreamUtilityCall (398) */
     interface PalletJoystreamUtilityCall extends Enum {
         readonly isExecuteSignalProposal: boolean;
         readonly asExecuteSignalProposal: {
@@ -3293,7 +3330,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'ExecuteSignalProposal' | 'ExecuteRuntimeUpgradeProposal' | 'UpdateWorkingGroupBudget' | 'BurnAccountTokens';
     }
-    /** @name PalletContentCall (391) */
+    /** @name PalletContentCall (399) */
     interface PalletContentCall extends Enum {
         readonly isCreateCuratorGroup: boolean;
         readonly asCreateCuratorGroup: {
@@ -3663,35 +3700,35 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'CreateCuratorGroup' | 'UpdateCuratorGroupPermissions' | 'SetCuratorGroupStatus' | 'AddCuratorToGroup' | 'RemoveCuratorFromGroup' | 'CreateChannel' | 'UpdateChannel' | 'UpdateChannelPrivilegeLevel' | 'SetChannelPausedFeaturesAsModerator' | 'DeleteChannel' | 'DeleteChannelAssetsAsModerator' | 'SetChannelVisibilityAsModerator' | 'CreateVideo' | 'UpdateVideo' | 'DeleteVideo' | 'DeleteVideoAssetsAsModerator' | 'SetVideoVisibilityAsModerator' | 'UpdateChannelPayouts' | 'ClaimChannelReward' | 'WithdrawFromChannelBalance' | 'UpdateChannelStateBloatBond' | 'UpdateVideoStateBloatBond' | 'IssueNft' | 'DestroyNft' | 'StartOpenAuction' | 'StartEnglishAuction' | 'CancelEnglishAuction' | 'CancelOpenAuction' | 'CancelOffer' | 'CancelBuyNow' | 'UpdateBuyNowPrice' | 'MakeOpenAuctionBid' | 'MakeEnglishAuctionBid' | 'CancelOpenAuctionBid' | 'SettleEnglishAuction' | 'PickOpenAuctionWinner' | 'OfferNft' | 'SlingNftBack' | 'AcceptIncomingOffer' | 'SellNft' | 'BuyNft' | 'ToggleNftLimits' | 'ChannelOwnerRemark' | 'ChannelAgentRemark' | 'NftOwnerRemark' | 'InitializeChannelTransfer' | 'CancelChannelTransfer' | 'AcceptChannelTransfer' | 'UpdateGlobalNftLimit' | 'UpdateChannelNftLimit' | 'IssueCreatorToken' | 'InitCreatorTokenSale' | 'UpdateUpcomingCreatorTokenSale' | 'CreatorTokenIssuerTransfer' | 'MakeCreatorTokenPermissionless' | 'ReduceCreatorTokenPatronageRateTo' | 'ClaimCreatorTokenPatronageCredit' | 'IssueRevenueSplit' | 'FinalizeRevenueSplit' | 'FinalizeCreatorTokenSale' | 'DeissueCreatorToken' | 'ActivateAmm' | 'DeactivateAmm' | 'CreatorTokenIssuerRemark';
     }
-    /** @name PalletContentChannelBagWitness (392) */
+    /** @name PalletContentChannelBagWitness (400) */
     interface PalletContentChannelBagWitness extends Struct {
         readonly storageBucketsNum: u32;
         readonly distributionBucketsNum: u32;
     }
-    /** @name PalletCommonMerkleTreeProofElementRecord (394) */
+    /** @name PalletCommonMerkleTreeProofElementRecord (402) */
     interface PalletCommonMerkleTreeProofElementRecord extends Struct {
         readonly hash_: H256;
         readonly side: PalletCommonMerkleTreeSide;
     }
-    /** @name PalletCommonMerkleTreeSide (395) */
+    /** @name PalletCommonMerkleTreeSide (403) */
     interface PalletCommonMerkleTreeSide extends Enum {
         readonly isLeft: boolean;
         readonly isRight: boolean;
         readonly type: 'Left' | 'Right';
     }
-    /** @name PalletContentPullPaymentElement (396) */
+    /** @name PalletContentPullPaymentElement (404) */
     interface PalletContentPullPaymentElement extends Struct {
         readonly channelId: u64;
         readonly cumulativeRewardEarned: u128;
         readonly reason: H256;
     }
-    /** @name PalletContentInitTransferParameters (397) */
+    /** @name PalletContentInitTransferParameters (405) */
     interface PalletContentInitTransferParameters extends Struct {
         readonly newCollaborators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
         readonly price: u128;
         readonly newOwner: PalletContentChannelOwner;
     }
-    /** @name PalletProjectTokenTokenSaleParams (398) */
+    /** @name PalletProjectTokenTokenSaleParams (406) */
     interface PalletProjectTokenTokenSaleParams extends Struct {
         readonly unitPrice: u128;
         readonly upperBoundQuantity: u128;
@@ -3701,12 +3738,12 @@ declare module '@polkadot/types/lookup' {
         readonly capPerMember: Option<u128>;
         readonly metadata: Option<Bytes>;
     }
-    /** @name PalletProjectTokenAmmParams (402) */
+    /** @name PalletProjectTokenAmmParams (410) */
     interface PalletProjectTokenAmmParams extends Struct {
         readonly slope: u128;
         readonly intercept: u128;
     }
-    /** @name PalletStorageCall (403) */
+    /** @name PalletStorageCall (411) */
     interface PalletStorageCall extends Enum {
         readonly isDeleteStorageBucket: boolean;
         readonly asDeleteStorageBucket: {
@@ -3884,7 +3921,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'DeleteStorageBucket' | 'UpdateUploadingBlockedStatus' | 'UpdateDataSizeFee' | 'UpdateStorageBucketsPerBagLimit' | 'UpdateStorageBucketsVoucherMaxLimits' | 'UpdateDataObjectStateBloatBond' | 'UpdateNumberOfStorageBucketsInDynamicBagCreationPolicy' | 'UpdateBlacklist' | 'CreateStorageBucket' | 'UpdateStorageBucketsForBag' | 'CancelStorageBucketOperatorInvite' | 'InviteStorageBucketOperator' | 'RemoveStorageBucketOperator' | 'UpdateStorageBucketStatus' | 'SetStorageBucketVoucherLimits' | 'AcceptStorageBucketInvitation' | 'SetStorageOperatorMetadata' | 'AcceptPendingDataObjects' | 'CreateDistributionBucketFamily' | 'DeleteDistributionBucketFamily' | 'CreateDistributionBucket' | 'UpdateDistributionBucketStatus' | 'DeleteDistributionBucket' | 'UpdateDistributionBucketsForBag' | 'UpdateDistributionBucketsPerBagLimit' | 'UpdateDistributionBucketMode' | 'UpdateFamiliesInDynamicBagCreationPolicy' | 'InviteDistributionBucketOperator' | 'CancelDistributionBucketOperatorInvite' | 'RemoveDistributionBucketOperator' | 'SetDistributionBucketFamilyMetadata' | 'AcceptDistributionBucketInvitation' | 'SetDistributionOperatorMetadata' | 'StorageOperatorRemark' | 'DistributionOperatorRemark';
     }
-    /** @name PalletProjectTokenCall (404) */
+    /** @name PalletProjectTokenCall (412) */
     interface PalletProjectTokenCall extends Enum {
         readonly isTransfer: boolean;
         readonly asTransfer: {
@@ -3951,16 +3988,16 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Transfer' | 'Burn' | 'DustAccount' | 'JoinWhitelist' | 'PurchaseTokensOnSale' | 'ParticipateInSplit' | 'ExitRevenueSplit' | 'BuyOnAmm' | 'SellOnAmm' | 'SetFrozenStatus' | 'UpdateTokenConstraints';
     }
-    /** @name PalletProjectTokenMerkleProof (408) */
+    /** @name PalletProjectTokenMerkleProof (416) */
     interface PalletProjectTokenMerkleProof extends Vec<ITuple<[H256, PalletProjectTokenMerkleSide]>> {
     }
-    /** @name PalletProjectTokenMerkleSide (411) */
+    /** @name PalletProjectTokenMerkleSide (419) */
     interface PalletProjectTokenMerkleSide extends Enum {
         readonly isRight: boolean;
         readonly isLeft: boolean;
         readonly type: 'Right' | 'Left';
     }
-    /** @name PalletProposalsEngineCall (414) */
+    /** @name PalletProposalsEngineCall (422) */
     interface PalletProposalsEngineCall extends Enum {
         readonly isVote: boolean;
         readonly asVote: {
@@ -3986,7 +4023,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Vote' | 'CancelProposal' | 'VetoProposal' | 'ProposerRemark';
     }
-    /** @name PalletProposalsDiscussionCall (415) */
+    /** @name PalletProposalsDiscussionCall (423) */
     interface PalletProposalsDiscussionCall extends Enum {
         readonly isAddPost: boolean;
         readonly asAddPost: {
@@ -4016,7 +4053,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AddPost' | 'DeletePost' | 'UpdatePost' | 'ChangeThreadMode';
     }
-    /** @name PalletProposalsCodexCall (416) */
+    /** @name PalletProposalsCodexCall (424) */
     interface PalletProposalsCodexCall extends Enum {
         readonly isCreateProposal: boolean;
         readonly asCreateProposal: {
@@ -4025,7 +4062,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'CreateProposal';
     }
-    /** @name PalletWorkingGroupCall (417) */
+    /** @name PalletWorkingGroupCall (425) */
     interface PalletWorkingGroupCall extends Enum {
         readonly isAddOpening: boolean;
         readonly asAddOpening: {
@@ -4130,7 +4167,7 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'AddOpening' | 'ApplyOnOpening' | 'FillOpening' | 'UpdateRoleAccount' | 'LeaveRole' | 'TerminateRole' | 'SlashStake' | 'DecreaseStake' | 'IncreaseStake' | 'WithdrawApplication' | 'CancelOpening' | 'SetBudget' | 'UpdateRewardAccount' | 'UpdateRewardAmount' | 'SetStatusText' | 'SpendFromBudget' | 'VestedSpendFromBudget' | 'FundWorkingGroupBudget' | 'LeadRemark' | 'WorkerRemark';
     }
-    /** @name PalletProxyCall (426) */
+    /** @name PalletProxyCall (434) */
     interface PalletProxyCall extends Enum {
         readonly isProxy: boolean;
         readonly asProxy: {
@@ -4189,14 +4226,44 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Proxy' | 'AddProxy' | 'RemoveProxy' | 'RemoveProxies' | 'CreatePure' | 'KillPure' | 'Announce' | 'RemoveAnnouncement' | 'RejectAnnouncement' | 'ProxyAnnounced';
     }
-    /** @name JoystreamNodeRuntimeOriginCaller (428) */
+    /** @name PalletArgoBridgeCall (436) */
+    interface PalletArgoBridgeCall extends Enum {
+        readonly isRequestOutboundTransfer: boolean;
+        readonly asRequestOutboundTransfer: {
+            readonly destAccount: PalletArgoBridgeRemoteAccount;
+            readonly amount: u128;
+            readonly expectedFee: u128;
+        } & Struct;
+        readonly isFinalizeInboundTransfer: boolean;
+        readonly asFinalizeInboundTransfer: {
+            readonly remoteTransfer: PalletArgoBridgeRemoteTransfer;
+            readonly destAccount: AccountId32;
+            readonly amount: u128;
+        } & Struct;
+        readonly isRevertOutboundTransfer: boolean;
+        readonly asRevertOutboundTransfer: {
+            readonly transferId: u64;
+            readonly revertAccount: AccountId32;
+            readonly revertAmount: u128;
+            readonly rationale: Bytes;
+        } & Struct;
+        readonly isPauseBridge: boolean;
+        readonly isInitUnpauseBridge: boolean;
+        readonly isFinishUnpauseBridge: boolean;
+        readonly isUpdateBridgeConstrains: boolean;
+        readonly asUpdateBridgeConstrains: {
+            readonly parameters: PalletArgoBridgeBridgeConstraints;
+        } & Struct;
+        readonly type: 'RequestOutboundTransfer' | 'FinalizeInboundTransfer' | 'RevertOutboundTransfer' | 'PauseBridge' | 'InitUnpauseBridge' | 'FinishUnpauseBridge' | 'UpdateBridgeConstrains';
+    }
+    /** @name JoystreamNodeRuntimeOriginCaller (437) */
     interface JoystreamNodeRuntimeOriginCaller extends Enum {
         readonly isSystem: boolean;
         readonly asSystem: FrameSupportDispatchRawOrigin;
         readonly isVoid: boolean;
         readonly type: 'System' | 'Void';
     }
-    /** @name FrameSupportDispatchRawOrigin (429) */
+    /** @name FrameSupportDispatchRawOrigin (438) */
     interface FrameSupportDispatchRawOrigin extends Enum {
         readonly isRoot: boolean;
         readonly isSigned: boolean;
@@ -4204,14 +4271,14 @@ declare module '@polkadot/types/lookup' {
         readonly isNone: boolean;
         readonly type: 'Root' | 'Signed' | 'None';
     }
-    /** @name SpCoreVoid (430) */
+    /** @name SpCoreVoid (439) */
     type SpCoreVoid = Null;
-    /** @name PalletUtilityError (431) */
+    /** @name PalletUtilityError (440) */
     interface PalletUtilityError extends Enum {
         readonly isTooManyCalls: boolean;
         readonly type: 'TooManyCalls';
     }
-    /** @name SpConsensusBabeDigestsPreDigest (438) */
+    /** @name SpConsensusBabeDigestsPreDigest (447) */
     interface SpConsensusBabeDigestsPreDigest extends Enum {
         readonly isPrimary: boolean;
         readonly asPrimary: SpConsensusBabeDigestsPrimaryPreDigest;
@@ -4221,31 +4288,31 @@ declare module '@polkadot/types/lookup' {
         readonly asSecondaryVRF: SpConsensusBabeDigestsSecondaryVRFPreDigest;
         readonly type: 'Primary' | 'SecondaryPlain' | 'SecondaryVRF';
     }
-    /** @name SpConsensusBabeDigestsPrimaryPreDigest (439) */
+    /** @name SpConsensusBabeDigestsPrimaryPreDigest (448) */
     interface SpConsensusBabeDigestsPrimaryPreDigest extends Struct {
         readonly authorityIndex: u32;
         readonly slot: u64;
         readonly vrfOutput: U8aFixed;
         readonly vrfProof: U8aFixed;
     }
-    /** @name SpConsensusBabeDigestsSecondaryPlainPreDigest (440) */
+    /** @name SpConsensusBabeDigestsSecondaryPlainPreDigest (449) */
     interface SpConsensusBabeDigestsSecondaryPlainPreDigest extends Struct {
         readonly authorityIndex: u32;
         readonly slot: u64;
     }
-    /** @name SpConsensusBabeDigestsSecondaryVRFPreDigest (441) */
+    /** @name SpConsensusBabeDigestsSecondaryVRFPreDigest (450) */
     interface SpConsensusBabeDigestsSecondaryVRFPreDigest extends Struct {
         readonly authorityIndex: u32;
         readonly slot: u64;
         readonly vrfOutput: U8aFixed;
         readonly vrfProof: U8aFixed;
     }
-    /** @name SpConsensusBabeBabeEpochConfiguration (443) */
+    /** @name SpConsensusBabeBabeEpochConfiguration (452) */
     interface SpConsensusBabeBabeEpochConfiguration extends Struct {
         readonly c: ITuple<[u64, u64]>;
         readonly allowedSlots: SpConsensusBabeAllowedSlots;
     }
-    /** @name PalletBabeError (445) */
+    /** @name PalletBabeError (454) */
     interface PalletBabeError extends Enum {
         readonly isInvalidEquivocationProof: boolean;
         readonly isInvalidKeyOwnershipProof: boolean;
@@ -4253,25 +4320,25 @@ declare module '@polkadot/types/lookup' {
         readonly isInvalidConfiguration: boolean;
         readonly type: 'InvalidEquivocationProof' | 'InvalidKeyOwnershipProof' | 'DuplicateOffenceReport' | 'InvalidConfiguration';
     }
-    /** @name PalletBalancesBalanceLock (447) */
+    /** @name PalletBalancesBalanceLock (456) */
     interface PalletBalancesBalanceLock extends Struct {
         readonly id: U8aFixed;
         readonly amount: u128;
         readonly reasons: PalletBalancesReasons;
     }
-    /** @name PalletBalancesReasons (448) */
+    /** @name PalletBalancesReasons (457) */
     interface PalletBalancesReasons extends Enum {
         readonly isFee: boolean;
         readonly isMisc: boolean;
         readonly isAll: boolean;
         readonly type: 'Fee' | 'Misc' | 'All';
     }
-    /** @name PalletBalancesReserveData (451) */
+    /** @name PalletBalancesReserveData (460) */
     interface PalletBalancesReserveData extends Struct {
         readonly id: U8aFixed;
         readonly amount: u128;
     }
-    /** @name PalletBalancesError (453) */
+    /** @name PalletBalancesError (462) */
     interface PalletBalancesError extends Enum {
         readonly isVestingBalance: boolean;
         readonly isLiquidityRestrictions: boolean;
@@ -4283,31 +4350,31 @@ declare module '@polkadot/types/lookup' {
         readonly isTooManyReserves: boolean;
         readonly type: 'VestingBalance' | 'LiquidityRestrictions' | 'InsufficientBalance' | 'ExistentialDeposit' | 'KeepAlive' | 'ExistingVestingSchedule' | 'DeadAccount' | 'TooManyReserves';
     }
-    /** @name PalletTransactionPaymentReleases (455) */
+    /** @name PalletTransactionPaymentReleases (464) */
     interface PalletTransactionPaymentReleases extends Enum {
         readonly isV1Ancient: boolean;
         readonly isV2: boolean;
         readonly type: 'V1Ancient' | 'V2';
     }
-    /** @name PalletElectionProviderMultiPhaseReadySolution (456) */
+    /** @name PalletElectionProviderMultiPhaseReadySolution (465) */
     interface PalletElectionProviderMultiPhaseReadySolution extends Struct {
         readonly supports: Vec<ITuple<[AccountId32, SpNposElectionsSupport]>>;
         readonly score: SpNposElectionsElectionScore;
         readonly compute: PalletElectionProviderMultiPhaseElectionCompute;
     }
-    /** @name PalletElectionProviderMultiPhaseRoundSnapshot (458) */
+    /** @name PalletElectionProviderMultiPhaseRoundSnapshot (467) */
     interface PalletElectionProviderMultiPhaseRoundSnapshot extends Struct {
         readonly voters: Vec<ITuple<[AccountId32, u64, Vec<AccountId32>]>>;
         readonly targets: Vec<AccountId32>;
     }
-    /** @name PalletElectionProviderMultiPhaseSignedSignedSubmission (465) */
+    /** @name PalletElectionProviderMultiPhaseSignedSignedSubmission (474) */
     interface PalletElectionProviderMultiPhaseSignedSignedSubmission extends Struct {
         readonly who: AccountId32;
         readonly deposit: u128;
         readonly rawSolution: PalletElectionProviderMultiPhaseRawSolution;
         readonly callFee: u128;
     }
-    /** @name PalletElectionProviderMultiPhaseError (466) */
+    /** @name PalletElectionProviderMultiPhaseError (475) */
     interface PalletElectionProviderMultiPhaseError extends Enum {
         readonly isPreDispatchEarlySubmission: boolean;
         readonly isPreDispatchWrongWinnerCount: boolean;
@@ -4325,7 +4392,7 @@ declare module '@polkadot/types/lookup' {
         readonly isTooManyWinners: boolean;
         readonly type: 'PreDispatchEarlySubmission' | 'PreDispatchWrongWinnerCount' | 'PreDispatchWeakSubmission' | 'SignedQueueFull' | 'SignedCannotPayDeposit' | 'SignedInvalidWitness' | 'SignedTooMuchWeight' | 'OcwCallWrongEra' | 'MissingSnapshotMetadata' | 'InvalidSubmissionIndex' | 'CallNotAllowed' | 'FallbackFailed' | 'BoundNotMet' | 'TooManyWinners';
     }
-    /** @name PalletStakingStakingLedger (467) */
+    /** @name PalletStakingStakingLedger (476) */
     interface PalletStakingStakingLedger extends Struct {
         readonly stash: AccountId32;
         readonly total: Compact<u128>;
@@ -4333,28 +4400,28 @@ declare module '@polkadot/types/lookup' {
         readonly unlocking: Vec<PalletStakingUnlockChunk>;
         readonly claimedRewards: Vec<u32>;
     }
-    /** @name PalletStakingUnlockChunk (469) */
+    /** @name PalletStakingUnlockChunk (478) */
     interface PalletStakingUnlockChunk extends Struct {
         readonly value: Compact<u128>;
         readonly era: Compact<u32>;
     }
-    /** @name PalletStakingNominations (472) */
+    /** @name PalletStakingNominations (481) */
     interface PalletStakingNominations extends Struct {
         readonly targets: Vec<AccountId32>;
         readonly submittedIn: u32;
         readonly suppressed: bool;
     }
-    /** @name PalletStakingActiveEraInfo (473) */
+    /** @name PalletStakingActiveEraInfo (482) */
     interface PalletStakingActiveEraInfo extends Struct {
         readonly index: u32;
         readonly start: Option<u64>;
     }
-    /** @name PalletStakingEraRewardPoints (475) */
+    /** @name PalletStakingEraRewardPoints (484) */
     interface PalletStakingEraRewardPoints extends Struct {
         readonly total: u32;
         readonly individual: BTreeMap<AccountId32, u32>;
     }
-    /** @name PalletStakingUnappliedSlash (480) */
+    /** @name PalletStakingUnappliedSlash (489) */
     interface PalletStakingUnappliedSlash extends Struct {
         readonly validator: AccountId32;
         readonly own: u128;
@@ -4362,19 +4429,19 @@ declare module '@polkadot/types/lookup' {
         readonly reporters: Vec<AccountId32>;
         readonly payout: u128;
     }
-    /** @name PalletStakingSlashingSlashingSpans (482) */
+    /** @name PalletStakingSlashingSlashingSpans (491) */
     interface PalletStakingSlashingSlashingSpans extends Struct {
         readonly spanIndex: u32;
         readonly lastStart: u32;
         readonly lastNonzeroSlash: u32;
         readonly prior: Vec<u32>;
     }
-    /** @name PalletStakingSlashingSpanRecord (483) */
+    /** @name PalletStakingSlashingSpanRecord (492) */
     interface PalletStakingSlashingSpanRecord extends Struct {
         readonly slashed: u128;
         readonly paidOut: u128;
     }
-    /** @name PalletStakingPalletError (486) */
+    /** @name PalletStakingPalletError (495) */
     interface PalletStakingPalletError extends Enum {
         readonly isNotController: boolean;
         readonly isNotStash: boolean;
@@ -4404,10 +4471,10 @@ declare module '@polkadot/types/lookup' {
         readonly isBondingRestricted: boolean;
         readonly type: 'NotController' | 'NotStash' | 'AlreadyBonded' | 'AlreadyPaired' | 'EmptyTargets' | 'DuplicateIndex' | 'InvalidSlashIndex' | 'InsufficientBond' | 'NoMoreChunks' | 'NoUnlockChunk' | 'FundedTarget' | 'InvalidEraToReward' | 'InvalidNumberOfNominations' | 'NotSortedAndUnique' | 'AlreadyClaimed' | 'IncorrectHistoryDepth' | 'IncorrectSlashingSpans' | 'BadState' | 'TooManyTargets' | 'BadTarget' | 'CannotChillOther' | 'TooManyNominators' | 'TooManyValidators' | 'CommissionTooLow' | 'BoundNotMet' | 'BondingRestricted';
     }
-    /** @name SpCoreCryptoKeyTypeId (490) */
+    /** @name SpCoreCryptoKeyTypeId (499) */
     interface SpCoreCryptoKeyTypeId extends U8aFixed {
     }
-    /** @name PalletSessionError (491) */
+    /** @name PalletSessionError (500) */
     interface PalletSessionError extends Enum {
         readonly isInvalidProof: boolean;
         readonly isNoAssociatedValidatorId: boolean;
@@ -4416,7 +4483,7 @@ declare module '@polkadot/types/lookup' {
         readonly isNoAccount: boolean;
         readonly type: 'InvalidProof' | 'NoAssociatedValidatorId' | 'DuplicatedKey' | 'NoKeys' | 'NoAccount';
     }
-    /** @name PalletGrandpaStoredState (493) */
+    /** @name PalletGrandpaStoredState (502) */
     interface PalletGrandpaStoredState extends Enum {
         readonly isLive: boolean;
         readonly isPendingPause: boolean;
@@ -4432,14 +4499,14 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Live' | 'PendingPause' | 'Paused' | 'PendingResume';
     }
-    /** @name PalletGrandpaStoredPendingChange (494) */
+    /** @name PalletGrandpaStoredPendingChange (503) */
     interface PalletGrandpaStoredPendingChange extends Struct {
         readonly scheduledAt: u32;
         readonly delay: u32;
         readonly nextAuthorities: Vec<ITuple<[SpConsensusGrandpaAppPublic, u64]>>;
         readonly forced: Option<u32>;
     }
-    /** @name PalletGrandpaError (496) */
+    /** @name PalletGrandpaError (505) */
     interface PalletGrandpaError extends Enum {
         readonly isPauseFailed: boolean;
         readonly isResumeFailed: boolean;
@@ -4450,23 +4517,23 @@ declare module '@polkadot/types/lookup' {
         readonly isDuplicateOffenceReport: boolean;
         readonly type: 'PauseFailed' | 'ResumeFailed' | 'ChangePending' | 'TooSoon' | 'InvalidKeyOwnershipProof' | 'InvalidEquivocationProof' | 'DuplicateOffenceReport';
     }
-    /** @name PalletImOnlineBoundedOpaqueNetworkState (502) */
+    /** @name PalletImOnlineBoundedOpaqueNetworkState (511) */
     interface PalletImOnlineBoundedOpaqueNetworkState extends Struct {
         readonly peerId: Bytes;
         readonly externalAddresses: Vec<Bytes>;
     }
-    /** @name PalletImOnlineError (506) */
+    /** @name PalletImOnlineError (515) */
     interface PalletImOnlineError extends Enum {
         readonly isInvalidKey: boolean;
         readonly isDuplicatedHeartbeat: boolean;
         readonly type: 'InvalidKey' | 'DuplicatedHeartbeat';
     }
-    /** @name SpStakingOffenceOffenceDetails (507) */
+    /** @name SpStakingOffenceOffenceDetails (516) */
     interface SpStakingOffenceOffenceDetails extends Struct {
         readonly offender: ITuple<[AccountId32, PalletStakingExposure]>;
         readonly reporters: Vec<AccountId32>;
     }
-    /** @name PalletBagsListListNode (510) */
+    /** @name PalletBagsListListNode (519) */
     interface PalletBagsListListNode extends Struct {
         readonly id: AccountId32;
         readonly prev: Option<AccountId32>;
@@ -4474,18 +4541,18 @@ declare module '@polkadot/types/lookup' {
         readonly bagUpper: u64;
         readonly score: u64;
     }
-    /** @name PalletBagsListListBag (511) */
+    /** @name PalletBagsListListBag (520) */
     interface PalletBagsListListBag extends Struct {
         readonly head: Option<AccountId32>;
         readonly tail: Option<AccountId32>;
     }
-    /** @name PalletBagsListError (512) */
+    /** @name PalletBagsListError (521) */
     interface PalletBagsListError extends Enum {
         readonly isList: boolean;
         readonly asList: PalletBagsListListListError;
         readonly type: 'List';
     }
-    /** @name PalletBagsListListListError (513) */
+    /** @name PalletBagsListListListError (522) */
     interface PalletBagsListListListError extends Enum {
         readonly isDuplicate: boolean;
         readonly isNotHeavier: boolean;
@@ -4493,13 +4560,13 @@ declare module '@polkadot/types/lookup' {
         readonly isNodeNotFound: boolean;
         readonly type: 'Duplicate' | 'NotHeavier' | 'NotInSameBag' | 'NodeNotFound';
     }
-    /** @name PalletVestingReleases (516) */
+    /** @name PalletVestingReleases (525) */
     interface PalletVestingReleases extends Enum {
         readonly isV0: boolean;
         readonly isV1: boolean;
         readonly type: 'V0' | 'V1';
     }
-    /** @name PalletVestingError (517) */
+    /** @name PalletVestingError (526) */
     interface PalletVestingError extends Enum {
         readonly isNotVesting: boolean;
         readonly isAtMaxVestingSchedules: boolean;
@@ -4508,14 +4575,14 @@ declare module '@polkadot/types/lookup' {
         readonly isInvalidScheduleParams: boolean;
         readonly type: 'NotVesting' | 'AtMaxVestingSchedules' | 'AmountLow' | 'ScheduleIndexOutOfBounds' | 'InvalidScheduleParams';
     }
-    /** @name PalletMultisigMultisig (519) */
+    /** @name PalletMultisigMultisig (528) */
     interface PalletMultisigMultisig extends Struct {
         readonly when: PalletMultisigTimepoint;
         readonly deposit: u128;
         readonly depositor: AccountId32;
         readonly approvals: Vec<AccountId32>;
     }
-    /** @name PalletMultisigError (521) */
+    /** @name PalletMultisigError (530) */
     interface PalletMultisigError extends Enum {
         readonly isMinimumThreshold: boolean;
         readonly isAlreadyApproved: boolean;
@@ -4533,12 +4600,12 @@ declare module '@polkadot/types/lookup' {
         readonly isAlreadyStored: boolean;
         readonly type: 'MinimumThreshold' | 'AlreadyApproved' | 'NoApprovalsNeeded' | 'TooFewSignatories' | 'TooManySignatories' | 'SignatoriesOutOfOrder' | 'SenderInSignatories' | 'NotFound' | 'NotOwner' | 'NoTimepoint' | 'WrongTimepoint' | 'UnexpectedTimepoint' | 'MaxWeightTooLow' | 'AlreadyStored';
     }
-    /** @name PalletCouncilCouncilStageUpdate (522) */
+    /** @name PalletCouncilCouncilStageUpdate (531) */
     interface PalletCouncilCouncilStageUpdate extends Struct {
         readonly stage: PalletCouncilCouncilStage;
         readonly changedAt: u32;
     }
-    /** @name PalletCouncilCouncilStage (523) */
+    /** @name PalletCouncilCouncilStage (532) */
     interface PalletCouncilCouncilStage extends Enum {
         readonly isAnnouncing: boolean;
         readonly asAnnouncing: PalletCouncilCouncilStageAnnouncing;
@@ -4548,20 +4615,20 @@ declare module '@polkadot/types/lookup' {
         readonly asIdle: PalletCouncilCouncilStageIdle;
         readonly type: 'Announcing' | 'Election' | 'Idle';
     }
-    /** @name PalletCouncilCouncilStageAnnouncing (524) */
+    /** @name PalletCouncilCouncilStageAnnouncing (533) */
     interface PalletCouncilCouncilStageAnnouncing extends Struct {
         readonly candidatesCount: u32;
         readonly endsAt: u32;
     }
-    /** @name PalletCouncilCouncilStageElection (525) */
+    /** @name PalletCouncilCouncilStageElection (534) */
     interface PalletCouncilCouncilStageElection extends Struct {
         readonly candidatesCount: u32;
     }
-    /** @name PalletCouncilCouncilStageIdle (526) */
+    /** @name PalletCouncilCouncilStageIdle (535) */
     interface PalletCouncilCouncilStageIdle extends Struct {
         readonly endsAt: u32;
     }
-    /** @name PalletCouncilCouncilMember (528) */
+    /** @name PalletCouncilCouncilMember (537) */
     interface PalletCouncilCouncilMember extends Struct {
         readonly stakingAccountId: AccountId32;
         readonly rewardAccountId: AccountId32;
@@ -4570,7 +4637,7 @@ declare module '@polkadot/types/lookup' {
         readonly lastPaymentBlock: u32;
         readonly unpaidReward: u128;
     }
-    /** @name PalletCouncilCandidate (530) */
+    /** @name PalletCouncilCandidate (539) */
     interface PalletCouncilCandidate extends Struct {
         readonly stakingAccountId: AccountId32;
         readonly rewardAccountId: AccountId32;
@@ -4579,7 +4646,7 @@ declare module '@polkadot/types/lookup' {
         readonly votePower: u128;
         readonly noteHash: Option<H256>;
     }
-    /** @name PalletCouncilError (531) */
+    /** @name PalletCouncilError (540) */
     interface PalletCouncilError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isBadOrigin: boolean;
@@ -4608,7 +4675,7 @@ declare module '@polkadot/types/lookup' {
         readonly isReductionAmountTooLarge: boolean;
         readonly type: 'ArithmeticError' | 'BadOrigin' | 'CantCandidateNow' | 'CantReleaseStakeNow' | 'CandidacyStakeTooLow' | 'CantCandidateTwice' | 'ConflictingStake' | 'StakeStillNeeded' | 'NoStake' | 'InsufficientBalanceForStaking' | 'CantVoteForYourself' | 'MemberIdNotMatchAccount' | 'InvalidAccountToStakeReuse' | 'NotCandidatingNow' | 'CantWithdrawCandidacyNow' | 'NotCouncilor' | 'InsufficientFundsForFundingRequest' | 'ZeroBalanceFundRequest' | 'RepeatedFundRequestAccount' | 'EmptyFundingRequests' | 'InsufficientTokensForFunding' | 'ZeroTokensFunding' | 'CandidateDoesNotExist' | 'InsufficientBalanceForTransfer' | 'ReductionAmountTooLarge';
     }
-    /** @name PalletReferendumReferendumStage (532) */
+    /** @name PalletReferendumReferendumStage (541) */
     interface PalletReferendumReferendumStage extends Enum {
         readonly isInactive: boolean;
         readonly isVoting: boolean;
@@ -4617,14 +4684,14 @@ declare module '@polkadot/types/lookup' {
         readonly asRevealing: PalletReferendumReferendumStageRevealing;
         readonly type: 'Inactive' | 'Voting' | 'Revealing';
     }
-    /** @name PalletReferendumReferendumStageVoting (534) */
+    /** @name PalletReferendumReferendumStageVoting (543) */
     interface PalletReferendumReferendumStageVoting extends Struct {
         readonly started: u32;
         readonly winningTargetCount: u32;
         readonly currentCycleId: u64;
         readonly endsAt: u32;
     }
-    /** @name PalletReferendumReferendumStageRevealing (535) */
+    /** @name PalletReferendumReferendumStageRevealing (544) */
     interface PalletReferendumReferendumStageRevealing extends Struct {
         readonly started: u32;
         readonly winningTargetCount: u32;
@@ -4632,14 +4699,14 @@ declare module '@polkadot/types/lookup' {
         readonly currentCycleId: u64;
         readonly endsAt: u32;
     }
-    /** @name PalletReferendumCastVote (536) */
+    /** @name PalletReferendumCastVote (545) */
     interface PalletReferendumCastVote extends Struct {
         readonly commitment: H256;
         readonly cycleId: u64;
         readonly stake: u128;
         readonly voteFor: Option<u64>;
     }
-    /** @name PalletReferendumError (537) */
+    /** @name PalletReferendumError (546) */
     interface PalletReferendumError extends Enum {
         readonly isBadOrigin: boolean;
         readonly isReferendumNotRunning: boolean;
@@ -4657,7 +4724,7 @@ declare module '@polkadot/types/lookup' {
         readonly isAccountAlreadyOptedOutOfVoting: boolean;
         readonly type: 'BadOrigin' | 'ReferendumNotRunning' | 'RevealingNotInProgress' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToStake' | 'InsufficientStake' | 'InvalidReveal' | 'InvalidVote' | 'VoteNotExisting' | 'AlreadyVotedThisCycle' | 'UnstakingVoteInSameCycle' | 'SaltTooLong' | 'UnstakingForbidden' | 'AccountAlreadyOptedOutOfVoting';
     }
-    /** @name PalletMembershipMembershipObject (538) */
+    /** @name PalletMembershipMembershipObject (547) */
     interface PalletMembershipMembershipObject extends Struct {
         readonly handleHash: H256;
         readonly rootAccount: AccountId32;
@@ -4665,12 +4732,12 @@ declare module '@polkadot/types/lookup' {
         readonly verified: bool;
         readonly invites: u32;
     }
-    /** @name PalletMembershipStakingAccountMemberBinding (539) */
+    /** @name PalletMembershipStakingAccountMemberBinding (548) */
     interface PalletMembershipStakingAccountMemberBinding extends Struct {
         readonly memberId: u64;
         readonly confirmed: bool;
     }
-    /** @name PalletMembershipError (540) */
+    /** @name PalletMembershipError (549) */
     interface PalletMembershipError extends Enum {
         readonly isNotEnoughBalanceToBuyMembership: boolean;
         readonly isControllerAccountRequired: boolean;
@@ -4696,7 +4763,7 @@ declare module '@polkadot/types/lookup' {
         readonly isInsufficientBalanceToCoverPayment: boolean;
         readonly type: 'NotEnoughBalanceToBuyMembership' | 'ControllerAccountRequired' | 'RootAccountRequired' | 'UnsignedOrigin' | 'MemberProfileNotFound' | 'HandleAlreadyRegistered' | 'HandleMustBeProvidedDuringRegistration' | 'ReferrerIsNotMember' | 'CannotTransferInvitesForNotMember' | 'NotEnoughInvites' | 'WorkingGroupLeaderNotSet' | 'StakingAccountIsAlreadyRegistered' | 'StakingAccountDoesntExist' | 'StakingAccountAlreadyConfirmed' | 'WorkingGroupBudgetIsNotSufficientForInviting' | 'ConflictingLock' | 'CannotExceedReferralCutPercentLimit' | 'ConflictStakesOnAccount' | 'InsufficientBalanceToCoverStake' | 'GifLockExceedsCredit' | 'InsufficientBalanceToGift' | 'InsufficientBalanceToCoverPayment';
     }
-    /** @name PalletForumCategory (541) */
+    /** @name PalletForumCategory (550) */
     interface PalletForumCategory extends Struct {
         readonly titleHash: H256;
         readonly descriptionHash: H256;
@@ -4707,14 +4774,14 @@ declare module '@polkadot/types/lookup' {
         readonly parentCategoryId: Option<u64>;
         readonly stickyThreadIds: BTreeSet<u64>;
     }
-    /** @name PalletForumThread (543) */
+    /** @name PalletForumThread (552) */
     interface PalletForumThread extends Struct {
         readonly categoryId: u64;
         readonly authorId: u64;
         readonly cleanupPayOff: PalletCommonBloatBondRepayableBloatBond;
         readonly numberOfEditablePosts: u64;
     }
-    /** @name PalletForumPost (544) */
+    /** @name PalletForumPost (553) */
     interface PalletForumPost extends Struct {
         readonly threadId: u64;
         readonly textHash: H256;
@@ -4722,7 +4789,7 @@ declare module '@polkadot/types/lookup' {
         readonly cleanupPayOff: PalletCommonBloatBondRepayableBloatBond;
         readonly lastEdited: u32;
     }
-    /** @name PalletForumError (545) */
+    /** @name PalletForumError (554) */
     interface PalletForumError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isOriginNotForumLead: boolean;
@@ -4753,11 +4820,11 @@ declare module '@polkadot/types/lookup' {
         readonly isMaxNumberOfStickiedThreadsExceeded: boolean;
         readonly type: 'ArithmeticError' | 'OriginNotForumLead' | 'ForumUserIdNotMatchAccount' | 'ModeratorIdNotMatchAccount' | 'AccountDoesNotMatchThreadAuthor' | 'ThreadDoesNotExist' | 'ModeratorModerateOriginCategory' | 'ModeratorModerateDestinationCategory' | 'ThreadMoveInvalid' | 'ThreadNotBeingUpdated' | 'InsufficientBalanceForThreadCreation' | 'CannotDeleteThreadWithOutstandingPosts' | 'PostDoesNotExist' | 'AccountDoesNotMatchPostAuthor' | 'InsufficientBalanceForPost' | 'CategoryNotBeingUpdated' | 'AncestorCategoryImmutable' | 'MaxValidCategoryDepthExceeded' | 'CategoryDoesNotExist' | 'CategoryModeratorDoesNotExist' | 'CategoryNotEmptyThreads' | 'CategoryNotEmptyCategories' | 'ModeratorCantDeleteCategory' | 'ModeratorCantUpdateCategory' | 'MapSizeLimit' | 'PathLengthShouldBeGreaterThanZero' | 'MaxNumberOfStickiedThreadsExceeded';
     }
-    /** @name PalletConstitutionConstitutionInfo (546) */
+    /** @name PalletConstitutionConstitutionInfo (555) */
     interface PalletConstitutionConstitutionInfo extends Struct {
         readonly textHash: H256;
     }
-    /** @name PalletBountyBountyRecord (547) */
+    /** @name PalletBountyBountyRecord (556) */
     interface PalletBountyBountyRecord extends Struct {
         readonly creationParams: PalletBountyBountyParametersBoundedBTreeSet;
         readonly totalFunding: u128;
@@ -4765,7 +4832,7 @@ declare module '@polkadot/types/lookup' {
         readonly activeWorkEntryCount: u32;
         readonly hasUnpaidOracleReward: bool;
     }
-    /** @name PalletBountyBountyParametersBoundedBTreeSet (549) */
+    /** @name PalletBountyBountyParametersBoundedBTreeSet (558) */
     interface PalletBountyBountyParametersBoundedBTreeSet extends Struct {
         readonly oracle: PalletBountyBountyActor;
         readonly contractType: PalletBountyAssuranceContractTypeBoundedBTreeSet;
@@ -4775,14 +4842,14 @@ declare module '@polkadot/types/lookup' {
         readonly entrantStake: u128;
         readonly fundingType: PalletBountyFundingType;
     }
-    /** @name PalletBountyAssuranceContractTypeBoundedBTreeSet (550) */
+    /** @name PalletBountyAssuranceContractTypeBoundedBTreeSet (559) */
     interface PalletBountyAssuranceContractTypeBoundedBTreeSet extends Enum {
         readonly isOpen: boolean;
         readonly isClosed: boolean;
         readonly asClosed: BTreeSet<u64>;
         readonly type: 'Open' | 'Closed';
     }
-    /** @name PalletBountyBountyMilestone (551) */
+    /** @name PalletBountyBountyMilestone (560) */
     interface PalletBountyBountyMilestone extends Enum {
         readonly isCreated: boolean;
         readonly asCreated: {
@@ -4798,19 +4865,19 @@ declare module '@polkadot/types/lookup' {
         } & Struct;
         readonly type: 'Created' | 'BountyMaxFundingReached' | 'WorkSubmitted' | 'Terminated' | 'JudgmentSubmitted';
     }
-    /** @name PalletBountyContribution (553) */
+    /** @name PalletBountyContribution (562) */
     interface PalletBountyContribution extends Struct {
         readonly amount: u128;
         readonly funderStateBloatBondAmount: u128;
     }
-    /** @name PalletBountyEntryRecord (554) */
+    /** @name PalletBountyEntryRecord (563) */
     interface PalletBountyEntryRecord extends Struct {
         readonly memberId: u64;
         readonly stakingAccountId: AccountId32;
         readonly submittedAt: u32;
         readonly workSubmitted: bool;
     }
-    /** @name PalletBountyError (555) */
+    /** @name PalletBountyError (564) */
     interface PalletBountyError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isMinFundingAmountCannotBeGreaterThanMaxAmount: boolean;
@@ -4849,28 +4916,28 @@ declare module '@polkadot/types/lookup' {
         readonly isOracleRewardAlreadyWithdrawn: boolean;
         readonly type: 'ArithmeticError' | 'MinFundingAmountCannotBeGreaterThanMaxAmount' | 'BountyDoesntExist' | 'SwitchOracleOriginIsRoot' | 'InvalidStageUnexpectedFunding' | 'InvalidStageUnexpectedNoFundingContributed' | 'InvalidStageUnexpectedCancelled' | 'InvalidStageUnexpectedWorkSubmission' | 'InvalidStageUnexpectedJudgment' | 'InvalidStageUnexpectedSuccessfulBountyWithdrawal' | 'InvalidStageUnexpectedFailedBountyWithdrawal' | 'InsufficientBalanceForBounty' | 'NoBountyContributionFound' | 'InsufficientBalanceForStake' | 'ConflictingStakes' | 'WorkEntryDoesntExist' | 'CherryLessThenMinimumAllowed' | 'CannotSubmitWorkToClosedContractBounty' | 'ClosedContractMemberListIsEmpty' | 'ClosedContractMemberListIsTooLarge' | 'ClosedContractMemberNotFound' | 'InvalidOracleMemberId' | 'InvalidStakingAccountForMember' | 'ZeroWinnerReward' | 'TotalRewardShouldBeEqualToTotalFunding' | 'EntrantStakeIsLessThanMininum' | 'FundingAmountCannotBeZero' | 'FundingPeriodCannotBeZero' | 'WinnerShouldHasWorkSubmission' | 'InvalidContributorActorSpecified' | 'InvalidOracleActorSpecified' | 'InvalidEntrantWorkerSpecified' | 'InvalidCreatorActorSpecified' | 'WorkEntryDoesntBelongToWorker' | 'OracleRewardAlreadyWithdrawn';
     }
-    /** @name PalletJoystreamUtilityError (556) */
+    /** @name PalletJoystreamUtilityError (565) */
     interface PalletJoystreamUtilityError extends Enum {
         readonly isInsufficientFundsForBudgetUpdate: boolean;
         readonly isZeroTokensBurn: boolean;
         readonly isInsufficientFundsForBurn: boolean;
         readonly type: 'InsufficientFundsForBudgetUpdate' | 'ZeroTokensBurn' | 'InsufficientFundsForBurn';
     }
-    /** @name PalletContentVideoRecord (557) */
+    /** @name PalletContentVideoRecord (566) */
     interface PalletContentVideoRecord extends Struct {
         readonly inChannel: u64;
         readonly nftStatus: Option<PalletContentNftTypesOwnedNft>;
         readonly dataObjects: BTreeSet<u64>;
         readonly videoStateBloatBond: PalletCommonBloatBondRepayableBloatBond;
     }
-    /** @name PalletContentNftTypesOwnedNft (558) */
+    /** @name PalletContentNftTypesOwnedNft (567) */
     interface PalletContentNftTypesOwnedNft extends Struct {
         readonly owner: PalletContentNftTypesNftOwner;
         readonly transactionalStatus: PalletContentNftTypesTransactionalStatusRecord;
         readonly creatorRoyalty: Option<Perbill>;
         readonly openAuctionsNonce: u64;
     }
-    /** @name PalletContentNftTypesTransactionalStatusRecord (559) */
+    /** @name PalletContentNftTypesTransactionalStatusRecord (568) */
     interface PalletContentNftTypesTransactionalStatusRecord extends Enum {
         readonly isIdle: boolean;
         readonly isInitiatedOfferToMember: boolean;
@@ -4883,7 +4950,7 @@ declare module '@polkadot/types/lookup' {
         readonly asBuyNow: u128;
         readonly type: 'Idle' | 'InitiatedOfferToMember' | 'EnglishAuction' | 'OpenAuction' | 'BuyNow';
     }
-    /** @name PalletContentNftTypesEnglishAuctionRecord (560) */
+    /** @name PalletContentNftTypesEnglishAuctionRecord (569) */
     interface PalletContentNftTypesEnglishAuctionRecord extends Struct {
         readonly startingPrice: u128;
         readonly buyNowPrice: Option<u128>;
@@ -4894,12 +4961,12 @@ declare module '@polkadot/types/lookup' {
         readonly minBidStep: u128;
         readonly topBid: Option<PalletContentNftTypesEnglishAuctionBid>;
     }
-    /** @name PalletContentNftTypesEnglishAuctionBid (563) */
+    /** @name PalletContentNftTypesEnglishAuctionBid (572) */
     interface PalletContentNftTypesEnglishAuctionBid extends Struct {
         readonly amount: u128;
         readonly bidderId: u64;
     }
-    /** @name PalletContentNftTypesOpenAuctionRecord (564) */
+    /** @name PalletContentNftTypesOpenAuctionRecord (573) */
     interface PalletContentNftTypesOpenAuctionRecord extends Struct {
         readonly startingPrice: u128;
         readonly buyNowPrice: Option<u128>;
@@ -4908,26 +4975,26 @@ declare module '@polkadot/types/lookup' {
         readonly auctionId: u64;
         readonly start: u32;
     }
-    /** @name PalletContentNftTypesNftOwner (565) */
+    /** @name PalletContentNftTypesNftOwner (574) */
     interface PalletContentNftTypesNftOwner extends Enum {
         readonly isChannelOwner: boolean;
         readonly isMember: boolean;
         readonly asMember: u64;
         readonly type: 'ChannelOwner' | 'Member';
     }
-    /** @name PalletContentPermissionsCuratorGroupCuratorGroupRecord (568) */
+    /** @name PalletContentPermissionsCuratorGroupCuratorGroupRecord (577) */
     interface PalletContentPermissionsCuratorGroupCuratorGroupRecord extends Struct {
         readonly curators: BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>;
         readonly active: bool;
         readonly permissionsByLevel: BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>;
     }
-    /** @name PalletContentNftTypesOpenAuctionBidRecord (575) */
+    /** @name PalletContentNftTypesOpenAuctionBidRecord (584) */
     interface PalletContentNftTypesOpenAuctionBidRecord extends Struct {
         readonly amount: u128;
         readonly madeAtBlock: u32;
         readonly auctionId: u64;
     }
-    /** @name PalletContentErrorsError (576) */
+    /** @name PalletContentErrorsError (585) */
     interface PalletContentErrorsError extends Enum {
         readonly isChannelStateBloatBondChanged: boolean;
         readonly isVideoStateBloatBondChanged: boolean;
@@ -5060,21 +5127,21 @@ declare module '@polkadot/types/lookup' {
         readonly isChannelTransfersBlockedDuringActiveAmm: boolean;
         readonly type: 'ChannelStateBloatBondChanged' | 'VideoStateBloatBondChanged' | 'MinCashoutValueTooLow' | 'MaxCashoutValueTooHigh' | 'MaxNumberOfChannelCollaboratorsExceeded' | 'MaxNumberOfChannelAssetsExceeded' | 'MaxNumberOfVideoAssetsExceeded' | 'MaxNumberOfChannelAgentPermissionsExceeded' | 'MaxNumberOfPausedFeaturesPerChannelExceeded' | 'InvalidChannelBagWitnessProvided' | 'InvalidStorageBucketsNumWitnessProvided' | 'MissingStorageBucketsNumWitness' | 'ChannelOwnerMemberDoesNotExist' | 'ChannelOwnerCuratorGroupDoesNotExist' | 'ChannelStateBloatBondBelowExistentialDeposit' | 'NumberOfAssetsToRemoveIsZero' | 'CuratorIsNotAMemberOfGivenCuratorGroup' | 'CuratorIsAlreadyAMemberOfGivenCuratorGroup' | 'CuratorGroupDoesNotExist' | 'CuratorsPerGroupLimitReached' | 'CuratorGroupIsNotActive' | 'CuratorIdInvalid' | 'LeadAuthFailed' | 'MemberAuthFailed' | 'CuratorAuthFailed' | 'BadOrigin' | 'ActorNotAuthorized' | 'CategoryDoesNotExist' | 'ChannelDoesNotExist' | 'VideoDoesNotExist' | 'VideoInSeason' | 'ActorCannotBeLead' | 'ActorCannotOwnChannel' | 'NftAlreadyOwnedByChannel' | 'NftAlreadyExists' | 'NftDoesNotExist' | 'OverflowOrUnderflowHappened' | 'DoesNotOwnNft' | 'RoyaltyUpperBoundExceeded' | 'RoyaltyLowerBoundExceeded' | 'AuctionDurationUpperBoundExceeded' | 'AuctionDurationLowerBoundExceeded' | 'ExtensionPeriodUpperBoundExceeded' | 'ExtensionPeriodLowerBoundExceeded' | 'BidLockDurationUpperBoundExceeded' | 'BidLockDurationLowerBoundExceeded' | 'StartingPriceUpperBoundExceeded' | 'StartingPriceLowerBoundExceeded' | 'AuctionBidStepUpperBoundExceeded' | 'AuctionBidStepLowerBoundExceeded' | 'InsufficientBalance' | 'BidStepConstraintViolated' | 'InvalidBidAmountSpecified' | 'StartingPriceConstraintViolated' | 'ActionHasBidsAlready' | 'NftIsNotIdle' | 'PendingOfferDoesNotExist' | 'RewardAccountIsNotSet' | 'ActorIsNotBidder' | 'AuctionCannotBeCompleted' | 'BidDoesNotExist' | 'BidIsForPastAuction' | 'StartsAtLowerBoundExceeded' | 'StartsAtUpperBoundExceeded' | 'AuctionDidNotStart' | 'NotInAuctionState' | 'MemberIsNotAllowedToParticipate' | 'MemberProfileNotFound' | 'NftNotInBuyNowState' | 'InvalidBuyNowWitnessPriceProvided' | 'IsNotOpenAuctionType' | 'IsNotEnglishAuctionType' | 'BidLockDurationIsNotExpired' | 'NftAuctionIsAlreadyExpired' | 'BuyNowMustBeGreaterThanStartingPrice' | 'TargetMemberDoesNotExist' | 'InvalidNftOfferWitnessPriceProvided' | 'MaxAuctionWhiteListLengthUpperBoundExceeded' | 'WhitelistHasOnlyOneMember' | 'WhitelistedMemberDoesNotExist' | 'NftNonChannelOwnerDoesNotExist' | 'ExtensionPeriodIsGreaterThenAuctionDuration' | 'NoAssetsSpecified' | 'InvalidAssetsProvided' | 'ChannelContainsVideos' | 'ChannelContainsAssets' | 'InvalidBagSizeSpecified' | 'MigrationNotFinished' | 'ReplyDoesNotExist' | 'UnsufficientBalance' | 'InsufficientTreasuryBalance' | 'InvalidMemberProvided' | 'ActorNotAMember' | 'PaymentProofVerificationFailed' | 'CashoutAmountExceedsMaximumAmount' | 'CashoutAmountBelowMinimumAmount' | 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance' | 'WithdrawFromChannelAmountIsZero' | 'ChannelCashoutsDisabled' | 'MinCashoutAllowedExceedsMaxCashoutAllowed' | 'CuratorModerationActionNotAllowed' | 'MaxCuratorPermissionsPerLevelExceeded' | 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded' | 'ChannelFeaturePaused' | 'ChannelBagMissing' | 'AssetsToRemoveBeyondEntityAssetsSet' | 'InvalidVideoDataObjectsCountProvided' | 'InvalidChannelTransferStatus' | 'InvalidChannelTransferAcceptor' | 'InvalidChannelTransferCommitmentParams' | 'ChannelAgentInsufficientPermissions' | 'InvalidChannelOwner' | 'ZeroReward' | 'InsufficientBalanceForTransfer' | 'InsufficientBalanceForChannelCreation' | 'InsufficientBalanceForVideoCreation' | 'InsufficientCouncilBudget' | 'GlobalNftDailyLimitExceeded' | 'GlobalNftWeeklyLimitExceeded' | 'ChannelNftDailyLimitExceeded' | 'ChannelNftWeeklyLimitExceeded' | 'CreatorTokenAlreadyIssued' | 'CreatorTokenNotIssued' | 'MemberIdCouldNotBeDerivedFromActor' | 'CannotWithdrawFromChannelWithCreatorTokenIssued' | 'PatronageCanOnlyBeClaimedForMemberOwnedChannels' | 'ChannelTransfersBlockedDuringRevenueSplits' | 'ChannelTransfersBlockedDuringTokenSales' | 'ChannelTransfersBlockedDuringActiveAmm';
     }
-    /** @name PalletStorageBagRecord (577) */
+    /** @name PalletStorageBagRecord (586) */
     interface PalletStorageBagRecord extends Struct {
         readonly storedBy: BTreeSet<u64>;
         readonly distributedBy: BTreeSet<PalletStorageDistributionBucketIdRecord>;
         readonly objectsTotalSize: u64;
         readonly objectsNumber: u64;
     }
-    /** @name PalletStorageStorageBucketRecord (580) */
+    /** @name PalletStorageStorageBucketRecord (589) */
     interface PalletStorageStorageBucketRecord extends Struct {
         readonly operatorStatus: PalletStorageStorageBucketOperatorStatus;
         readonly acceptingNewBags: bool;
         readonly voucher: PalletStorageVoucher;
         readonly assignedBags: u64;
     }
-    /** @name PalletStorageStorageBucketOperatorStatus (581) */
+    /** @name PalletStorageStorageBucketOperatorStatus (590) */
     interface PalletStorageStorageBucketOperatorStatus extends Enum {
         readonly isMissing: boolean;
         readonly isInvitedStorageWorker: boolean;
@@ -5083,23 +5150,23 @@ declare module '@polkadot/types/lookup' {
         readonly asStorageWorker: ITuple<[u64, AccountId32]>;
         readonly type: 'Missing' | 'InvitedStorageWorker' | 'StorageWorker';
     }
-    /** @name PalletStorageDynamicBagCreationPolicy (583) */
+    /** @name PalletStorageDynamicBagCreationPolicy (592) */
     interface PalletStorageDynamicBagCreationPolicy extends Struct {
         readonly numberOfStorageBuckets: u32;
         readonly families: BTreeMap<u64, u32>;
     }
-    /** @name PalletStorageDataObject (586) */
+    /** @name PalletStorageDataObject (595) */
     interface PalletStorageDataObject extends Struct {
         readonly accepted: bool;
         readonly stateBloatBond: PalletCommonBloatBondRepayableBloatBond;
         readonly size_: u64;
         readonly ipfsContentId: Bytes;
     }
-    /** @name PalletStorageDistributionBucketFamilyRecord (587) */
+    /** @name PalletStorageDistributionBucketFamilyRecord (596) */
     interface PalletStorageDistributionBucketFamilyRecord extends Struct {
         readonly nextDistributionBucketIndex: u64;
     }
-    /** @name PalletStorageDistributionBucketRecord (588) */
+    /** @name PalletStorageDistributionBucketRecord (597) */
     interface PalletStorageDistributionBucketRecord extends Struct {
         readonly acceptingNewBags: bool;
         readonly distributing: bool;
@@ -5107,7 +5174,7 @@ declare module '@polkadot/types/lookup' {
         readonly operators: BTreeSet<u64>;
         readonly assignedBags: u64;
     }
-    /** @name PalletStorageError (591) */
+    /** @name PalletStorageError (600) */
     interface PalletStorageError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isInvalidCidLength: boolean;
@@ -5176,7 +5243,7 @@ declare module '@polkadot/types/lookup' {
         readonly isCallDisabled: boolean;
         readonly type: 'ArithmeticError' | 'InvalidCidLength' | 'NoObjectsOnUpload' | 'StorageBucketDoesntExist' | 'StorageBucketIsNotBoundToBag' | 'StorageBucketIsBoundToBag' | 'NoStorageBucketInvitation' | 'StorageProviderAlreadySet' | 'StorageProviderMustBeSet' | 'DifferentStorageProviderInvited' | 'InvitedStorageProvider' | 'StorageBucketIdCollectionsAreEmpty' | 'StorageBucketsNumberViolatesDynamicBagCreationPolicy' | 'DistributionBucketsViolatesDynamicBagCreationPolicy' | 'EmptyContentId' | 'ZeroObjectSize' | 'InvalidStateBloatBondSourceAccount' | 'InvalidStorageProvider' | 'InsufficientBalance' | 'DataObjectDoesntExist' | 'UploadingBlocked' | 'DataObjectIdCollectionIsEmpty' | 'SourceAndDestinationBagsAreEqual' | 'DataObjectBlacklisted' | 'BlacklistSizeLimitExceeded' | 'VoucherMaxObjectSizeLimitExceeded' | 'VoucherMaxObjectNumberLimitExceeded' | 'StorageBucketObjectNumberLimitReached' | 'StorageBucketObjectSizeLimitReached' | 'InsufficientTreasuryBalance' | 'CannotDeleteNonEmptyStorageBucket' | 'DataObjectIdParamsAreEmpty' | 'StorageBucketsPerBagLimitTooLow' | 'StorageBucketsPerBagLimitTooHigh' | 'StorageBucketPerBagLimitExceeded' | 'StorageBucketDoesntAcceptNewBags' | 'DynamicBagExists' | 'DynamicBagDoesntExist' | 'StorageProviderOperatorDoesntExist' | 'DataSizeFeeChanged' | 'DataObjectStateBloatBondChanged' | 'CannotDeleteNonEmptyDynamicBag' | 'MaxDistributionBucketFamilyNumberLimitExceeded' | 'DistributionBucketFamilyDoesntExist' | 'DistributionBucketDoesntExist' | 'DistributionBucketIdCollectionsAreEmpty' | 'DistributionBucketDoesntAcceptNewBags' | 'MaxDistributionBucketNumberPerBagLimitExceeded' | 'DistributionBucketIsNotBoundToBag' | 'DistributionBucketIsBoundToBag' | 'DistributionBucketsPerBagLimitTooLow' | 'DistributionBucketsPerBagLimitTooHigh' | 'DistributionProviderOperatorDoesntExist' | 'DistributionProviderOperatorAlreadyInvited' | 'DistributionProviderOperatorSet' | 'NoDistributionBucketInvitation' | 'MustBeDistributionProviderOperatorForBucket' | 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached' | 'MaxNumberOfOperatorsPerDistributionBucketReached' | 'DistributionFamilyBoundToBagCreationPolicy' | 'MaxDataObjectSizeExceeded' | 'InvalidTransactorAccount' | 'NumberOfStorageBucketsOutsideOfAllowedContraints' | 'NumberOfDistributionBucketsOutsideOfAllowedContraints' | 'CallDisabled';
     }
-    /** @name PalletProjectTokenAccountData (592) */
+    /** @name PalletProjectTokenAccountData (601) */
     interface PalletProjectTokenAccountData extends Struct {
         readonly vestingSchedules: BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>;
         readonly amount: u128;
@@ -5185,12 +5252,12 @@ declare module '@polkadot/types/lookup' {
         readonly nextVestingTransferId: u64;
         readonly lastSaleTotalPurchasedAmount: Option<ITuple<[u32, u128]>>;
     }
-    /** @name PalletProjectTokenStakingStatus (593) */
+    /** @name PalletProjectTokenStakingStatus (602) */
     interface PalletProjectTokenStakingStatus extends Struct {
         readonly splitId: u32;
         readonly amount: u128;
     }
-    /** @name PalletProjectTokenVestingSchedule (595) */
+    /** @name PalletProjectTokenVestingSchedule (604) */
     interface PalletProjectTokenVestingSchedule extends Struct {
         readonly linearVestingStartBlock: u32;
         readonly linearVestingDuration: u32;
@@ -5198,7 +5265,7 @@ declare module '@polkadot/types/lookup' {
         readonly postCliffTotalAmount: u128;
         readonly burnedAmount: u128;
     }
-    /** @name PalletProjectTokenTokenData (602) */
+    /** @name PalletProjectTokenTokenData (611) */
     interface PalletProjectTokenTokenData extends Struct {
         readonly totalSupply: u128;
         readonly tokensIssued: u128;
@@ -5212,31 +5279,31 @@ declare module '@polkadot/types/lookup' {
         readonly nextRevenueSplitId: u32;
         readonly ammCurve: Option<PalletProjectTokenAmmCurve>;
     }
-    /** @name PalletProjectTokenRevenueSplitState (603) */
+    /** @name PalletProjectTokenRevenueSplitState (612) */
     interface PalletProjectTokenRevenueSplitState extends Enum {
         readonly isInactive: boolean;
         readonly isActive: boolean;
         readonly asActive: PalletProjectTokenRevenueSplitInfo;
         readonly type: 'Inactive' | 'Active';
     }
-    /** @name PalletProjectTokenRevenueSplitInfo (604) */
+    /** @name PalletProjectTokenRevenueSplitInfo (613) */
     interface PalletProjectTokenRevenueSplitInfo extends Struct {
         readonly allocation: u128;
         readonly timeline: PalletProjectTokenTimeline;
         readonly dividendsClaimed: u128;
     }
-    /** @name PalletProjectTokenTimeline (605) */
+    /** @name PalletProjectTokenTimeline (614) */
     interface PalletProjectTokenTimeline extends Struct {
         readonly start: u32;
         readonly duration: u32;
     }
-    /** @name PalletProjectTokenPatronageData (607) */
+    /** @name PalletProjectTokenPatronageData (616) */
     interface PalletProjectTokenPatronageData extends Struct {
         readonly rate: Permill;
         readonly unclaimedPatronageTallyAmount: u128;
         readonly lastUnclaimedPatronageTallyBlock: u32;
     }
-    /** @name PalletProjectTokenErrorsError (609) */
+    /** @name PalletProjectTokenErrorsError (618) */
     interface PalletProjectTokenErrorsError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isInsufficientTransferrableBalance: boolean;
@@ -5301,7 +5368,7 @@ declare module '@polkadot/types/lookup' {
         readonly isPalletFrozen: boolean;
         readonly type: 'ArithmeticError' | 'InsufficientTransferrableBalance' | 'TokenDoesNotExist' | 'AccountInformationDoesNotExist' | 'TransferDestinationMemberDoesNotExist' | 'MerkleProofVerificationFailure' | 'TokenSymbolAlreadyInUse' | 'InitialAllocationToNonExistingMember' | 'AccountAlreadyExists' | 'TooManyTransferOutputs' | 'TokenIssuanceNotInIdleState' | 'InsufficientJoyBalance' | 'JoyTransferSubjectToDusting' | 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode' | 'AttemptToRemoveNonEmptyAccount' | 'CannotJoinWhitelistInPermissionlessMode' | 'CannotDeissueTokenWithOutstandingAccounts' | 'NoUpcomingSale' | 'NoActiveSale' | 'InsufficientBalanceForTokenPurchase' | 'NotEnoughTokensOnSale' | 'SaleStartingBlockInThePast' | 'SaleAccessProofRequired' | 'SaleAccessProofParticipantIsNotSender' | 'SalePurchaseCapExceeded' | 'MaxVestingSchedulesPerAccountPerTokenReached' | 'PreviousSaleNotFinalized' | 'NoTokensToRecover' | 'SaleDurationTooShort' | 'SaleDurationIsZero' | 'SaleUpperBoundQuantityIsZero' | 'SaleCapPerMemberIsZero' | 'SaleUnitPriceIsZero' | 'SalePurchaseAmountIsZero' | 'CannotInitSaleIfAmmIsActive' | 'RevenueSplitTimeToStartTooShort' | 'RevenueSplitDurationTooShort' | 'RevenueSplitAlreadyActiveForToken' | 'RevenueSplitNotActiveForToken' | 'RevenueSplitDidNotEnd' | 'RevenueSplitNotOngoing' | 'UserAlreadyParticipating' | 'InsufficientBalanceForSplitParticipation' | 'UserNotParticipantingInAnySplit' | 'CannotParticipateInSplitWithZeroAmount' | 'CannotIssueSplitWithZeroAllocationAmount' | 'CannotModifySupplyWhenRevenueSplitsAreActive' | 'RevenueSplitRateIsZero' | 'BurnAmountIsZero' | 'BurnAmountGreaterThanAccountTokensAmount' | 'NotInAmmState' | 'InvalidCurveParameters' | 'DeadlineExpired' | 'SlippageToleranceExceeded' | 'InsufficientTokenBalance' | 'OutstandingAmmProvidedSupplyTooLarge' | 'CurveSlopeParametersTooLow' | 'NotEnoughTokenMintedByAmmForThisSale' | 'TargetPatronageRateIsHigherThanCurrentRate' | 'YearlyPatronageRateLimitExceeded' | 'PalletFrozen';
     }
-    /** @name PalletProposalsEngineProposal (610) */
+    /** @name PalletProposalsEngineProposal (619) */
     interface PalletProposalsEngineProposal extends Struct {
         readonly parameters: PalletProposalsEngineProposalParameters;
         readonly proposerId: u64;
@@ -5312,7 +5379,7 @@ declare module '@polkadot/types/lookup' {
         readonly nrOfCouncilConfirmations: u32;
         readonly stakingAccountId: Option<AccountId32>;
     }
-    /** @name PalletProposalsEngineProposalParameters (611) */
+    /** @name PalletProposalsEngineProposalParameters (620) */
     interface PalletProposalsEngineProposalParameters extends Struct {
         readonly votingPeriod: u32;
         readonly gracePeriod: u32;
@@ -5323,14 +5390,14 @@ declare module '@polkadot/types/lookup' {
         readonly requiredStake: Option<u128>;
         readonly constitutionality: u32;
     }
-    /** @name PalletProposalsEngineVotingResults (612) */
+    /** @name PalletProposalsEngineVotingResults (621) */
     interface PalletProposalsEngineVotingResults extends Struct {
         readonly abstentions: u32;
         readonly approvals: u32;
         readonly rejections: u32;
         readonly slashes: u32;
     }
-    /** @name PalletProposalsEngineError (615) */
+    /** @name PalletProposalsEngineError (624) */
     interface PalletProposalsEngineError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isEmptyTitleProvided: boolean;
@@ -5357,26 +5424,26 @@ declare module '@polkadot/types/lookup' {
         readonly isMaxDispatchableCallCodeSizeExceeded: boolean;
         readonly type: 'ArithmeticError' | 'EmptyTitleProvided' | 'EmptyDescriptionProvided' | 'TitleIsTooLong' | 'DescriptionIsTooLong' | 'ProposalNotFound' | 'ProposalFinalized' | 'AlreadyVoted' | 'NotAuthor' | 'MaxActiveProposalNumberExceeded' | 'EmptyStake' | 'StakeShouldBeEmpty' | 'StakeDiffersFromRequired' | 'InvalidParameterApprovalThreshold' | 'InvalidParameterSlashingThreshold' | 'RequireRootOrigin' | 'ProposalHasVotes' | 'ZeroExactExecutionBlock' | 'InvalidExactExecutionBlock' | 'InsufficientBalanceForStake' | 'ConflictingStakes' | 'InvalidStakingAccountForMember' | 'MaxDispatchableCallCodeSizeExceeded';
     }
-    /** @name PalletProposalsDiscussionDiscussionThread (616) */
+    /** @name PalletProposalsDiscussionDiscussionThread (625) */
     interface PalletProposalsDiscussionDiscussionThread extends Struct {
         readonly activatedAt: u32;
         readonly authorId: u64;
         readonly mode: PalletProposalsDiscussionThreadModeBoundedBTreeSet;
     }
-    /** @name PalletProposalsDiscussionThreadModeBoundedBTreeSet (618) */
+    /** @name PalletProposalsDiscussionThreadModeBoundedBTreeSet (627) */
     interface PalletProposalsDiscussionThreadModeBoundedBTreeSet extends Enum {
         readonly isOpen: boolean;
         readonly isClosed: boolean;
         readonly asClosed: BTreeSet<u64>;
         readonly type: 'Open' | 'Closed';
     }
-    /** @name PalletProposalsDiscussionDiscussionPost (619) */
+    /** @name PalletProposalsDiscussionDiscussionPost (628) */
     interface PalletProposalsDiscussionDiscussionPost extends Struct {
         readonly authorId: u64;
         readonly cleanupPayOff: PalletCommonBloatBondRepayableBloatBond;
         readonly lastEdited: u32;
     }
-    /** @name PalletProposalsDiscussionError (620) */
+    /** @name PalletProposalsDiscussionError (629) */
     interface PalletProposalsDiscussionError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isThreadDoesntExist: boolean;
@@ -5390,7 +5457,7 @@ declare module '@polkadot/types/lookup' {
         readonly isCannotDeletePost: boolean;
         readonly type: 'ArithmeticError' | 'ThreadDoesntExist' | 'PostDoesntExist' | 'RequireRootOrigin' | 'CannotPostOnClosedThread' | 'NotAuthorOrCouncilor' | 'MaxWhiteListSizeExceeded' | 'WhitelistedMemberDoesNotExist' | 'InsufficientBalanceForPost' | 'CannotDeletePost';
     }
-    /** @name PalletProposalsCodexError (621) */
+    /** @name PalletProposalsCodexError (630) */
     interface PalletProposalsCodexError extends Enum {
         readonly isSignalProposalIsEmpty: boolean;
         readonly isRuntimeProposalIsEmpty: boolean;
@@ -5421,7 +5488,7 @@ declare module '@polkadot/types/lookup' {
         readonly isReductionAmountZero: boolean;
         readonly type: 'SignalProposalIsEmpty' | 'RuntimeProposalIsEmpty' | 'InvalidFundingRequestProposalBalance' | 'InvalidValidatorCount' | 'RequireRootOrigin' | 'InvalidCouncilElectionParameterCouncilSize' | 'InvalidCouncilElectionParameterCandidacyLimit' | 'InvalidCouncilElectionParameterMinVotingStake' | 'InvalidCouncilElectionParameterNewTermDuration' | 'InvalidCouncilElectionParameterMinCouncilStake' | 'InvalidCouncilElectionParameterRevealingPeriod' | 'InvalidCouncilElectionParameterVotingPeriod' | 'InvalidCouncilElectionParameterAnnouncingPeriod' | 'InvalidWorkingGroupBudgetCapacity' | 'InvalidSetLeadParameterCannotBeCouncilor' | 'SlashingStakeIsZero' | 'DecreasingStakeIsZero' | 'InsufficientFundsForBudgetUpdate' | 'InvalidFundingRequestProposalNumberOfAccount' | 'InvalidFundingRequestProposalRepeatedAccount' | 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout' | 'InvalidLeadWorkerId' | 'InvalidLeadOpeningId' | 'InvalidLeadApplicationId' | 'InvalidProposalId' | 'ArithmeticError' | 'ReductionAmountZero';
     }
-    /** @name PalletWorkingGroupOpening (622) */
+    /** @name PalletWorkingGroupOpening (631) */
     interface PalletWorkingGroupOpening extends Struct {
         readonly openingType: PalletWorkingGroupOpeningType;
         readonly created: u32;
@@ -5430,7 +5497,7 @@ declare module '@polkadot/types/lookup' {
         readonly rewardPerBlock: Option<u128>;
         readonly creationStake: u128;
     }
-    /** @name PalletWorkingGroupJobApplication (623) */
+    /** @name PalletWorkingGroupJobApplication (632) */
     interface PalletWorkingGroupJobApplication extends Struct {
         readonly roleAccountId: AccountId32;
         readonly rewardAccountId: AccountId32;
@@ -5439,7 +5506,7 @@ declare module '@polkadot/types/lookup' {
         readonly descriptionHash: H256;
         readonly openingId: u64;
     }
-    /** @name PalletWorkingGroupGroupWorker (624) */
+    /** @name PalletWorkingGroupGroupWorker (633) */
     interface PalletWorkingGroupGroupWorker extends Struct {
         readonly memberId: u64;
         readonly roleAccountId: AccountId32;
@@ -5451,7 +5518,7 @@ declare module '@polkadot/types/lookup' {
         readonly missedReward: Option<u128>;
         readonly createdAt: u32;
     }
-    /** @name PalletWorkingGroupErrorsError (625) */
+    /** @name PalletWorkingGroupErrorsError (634) */
     interface PalletWorkingGroupErrorsError extends Enum {
         readonly isArithmeticError: boolean;
         readonly isStakeBalanceCannotBeZero: boolean;
@@ -5487,19 +5554,19 @@ declare module '@polkadot/types/lookup' {
         readonly isInsufficientBalanceForTransfer: boolean;
         readonly type: 'ArithmeticError' | 'StakeBalanceCannotBeZero' | 'OpeningDoesNotExist' | 'CannotHireMultipleLeaders' | 'WorkerApplicationDoesNotExist' | 'MaxActiveWorkerNumberExceeded' | 'SuccessfulWorkerApplicationDoesNotExist' | 'CannotHireLeaderWhenLeaderExists' | 'IsNotLeadAccount' | 'CurrentLeadNotSet' | 'WorkerDoesNotExist' | 'InvalidMemberOrigin' | 'SignerIsNotWorkerRoleAccount' | 'BelowMinimumStakes' | 'InsufficientBalanceToCoverStake' | 'ApplicationStakeDoesntMatchOpening' | 'OriginIsNotApplicant' | 'WorkerIsLeaving' | 'CannotRewardWithZero' | 'InvalidStakingAccountForMember' | 'ConflictStakesOnAccount' | 'WorkerHasNoReward' | 'UnstakingPeriodLessThanMinimum' | 'CannotSpendZero' | 'InsufficientBudgetForSpending' | 'NoApplicationsProvided' | 'CannotDecreaseStakeDeltaGreaterThanStake' | 'ApplicationsNotForOpening' | 'WorkerStorageValueTooLong' | 'InsufficientTokensForFunding' | 'ZeroTokensFunding' | 'InsufficientBalanceForTransfer';
     }
-    /** @name PalletProxyProxyDefinition (636) */
+    /** @name PalletProxyProxyDefinition (645) */
     interface PalletProxyProxyDefinition extends Struct {
         readonly delegate: AccountId32;
         readonly proxyType: JoystreamNodeRuntimeProxyType;
         readonly delay: u32;
     }
-    /** @name PalletProxyAnnouncement (640) */
+    /** @name PalletProxyAnnouncement (649) */
     interface PalletProxyAnnouncement extends Struct {
         readonly real: AccountId32;
         readonly callHash: H256;
         readonly height: u32;
     }
-    /** @name PalletProxyError (642) */
+    /** @name PalletProxyError (651) */
     interface PalletProxyError extends Enum {
         readonly isTooMany: boolean;
         readonly isNotFound: boolean;
@@ -5511,7 +5578,17 @@ declare module '@polkadot/types/lookup' {
         readonly isNoSelfProxy: boolean;
         readonly type: 'TooMany' | 'NotFound' | 'NotProxy' | 'Unproxyable' | 'Duplicate' | 'NoPermission' | 'Unannounced' | 'NoSelfProxy';
     }
-    /** @name SpRuntimeMultiSignature (644) */
+    /** @name PalletArgoBridgeBridgeStatus (652) */
+    interface PalletArgoBridgeBridgeStatus extends Enum {
+        readonly isActive: boolean;
+        readonly isPaused: boolean;
+        readonly isThawn: boolean;
+        readonly asThawn: {
+            readonly thawnEndsAt: u32;
+        } & Struct;
+        readonly type: 'Active' | 'Paused' | 'Thawn';
+    }
+    /** @name SpRuntimeMultiSignature (655) */
     interface SpRuntimeMultiSignature extends Enum {
         readonly isEd25519: boolean;
         readonly asEd25519: SpCoreEd25519Signature;
@@ -5521,25 +5598,25 @@ declare module '@polkadot/types/lookup' {
         readonly asEcdsa: SpCoreEcdsaSignature;
         readonly type: 'Ed25519' | 'Sr25519' | 'Ecdsa';
     }
-    /** @name SpCoreEcdsaSignature (645) */
+    /** @name SpCoreEcdsaSignature (656) */
     interface SpCoreEcdsaSignature extends U8aFixed {
     }
-    /** @name FrameSystemExtensionsCheckNonZeroSender (648) */
+    /** @name FrameSystemExtensionsCheckNonZeroSender (659) */
     type FrameSystemExtensionsCheckNonZeroSender = Null;
-    /** @name FrameSystemExtensionsCheckSpecVersion (649) */
+    /** @name FrameSystemExtensionsCheckSpecVersion (660) */
     type FrameSystemExtensionsCheckSpecVersion = Null;
-    /** @name FrameSystemExtensionsCheckTxVersion (650) */
+    /** @name FrameSystemExtensionsCheckTxVersion (661) */
     type FrameSystemExtensionsCheckTxVersion = Null;
-    /** @name FrameSystemExtensionsCheckGenesis (651) */
+    /** @name FrameSystemExtensionsCheckGenesis (662) */
     type FrameSystemExtensionsCheckGenesis = Null;
-    /** @name FrameSystemExtensionsCheckNonce (654) */
+    /** @name FrameSystemExtensionsCheckNonce (665) */
     interface FrameSystemExtensionsCheckNonce extends Compact<u32> {
     }
-    /** @name FrameSystemExtensionsCheckWeight (655) */
+    /** @name FrameSystemExtensionsCheckWeight (666) */
     type FrameSystemExtensionsCheckWeight = Null;
-    /** @name PalletTransactionPaymentChargeTransactionPayment (656) */
+    /** @name PalletTransactionPaymentChargeTransactionPayment (667) */
     interface PalletTransactionPaymentChargeTransactionPayment extends Compact<u128> {
     }
-    /** @name JoystreamNodeRuntimeRuntime (657) */
+    /** @name JoystreamNodeRuntimeRuntime (668) */
     type JoystreamNodeRuntimeRuntime = Null;
 }
diff --git a/lib/cjs/augment/lookup.js b/lib/cjs/augment/lookup.js
index d66938c18a2c5c3f68655684048bb1acc890da7c..12dfe3e4eaa1f504461bd326bdfdd5961665bd4c 100644
--- a/lib/cjs/augment/lookup.js
+++ b/lib/cjs/augment/lookup.js
@@ -1484,7 +1484,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup214: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>, ProposalId, ThreadId>
+     * Lookup214: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>, pallet_argo_bridge::types::BridgeConstraints<sp_core::crypto::AccountId32, Balance, BlockNumber>>, ProposalId, ThreadId>
      **/
     PalletProposalsCodexRawEvent: {
         _enum: {
@@ -1502,7 +1502,7 @@ exports.default = {
         exactExecutionBlock: 'Option<u32>'
     },
     /**
-     * Lookup216: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>
+     * Lookup216: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>, pallet_argo_bridge::types::BridgeConstraints<sp_core::crypto::AccountId32, Balance, BlockNumber>>
      **/
     PalletProposalsCodexProposalDetails: {
         _enum: {
@@ -1531,19 +1531,30 @@ exports.default = {
             UpdateChannelPayouts: 'PalletContentUpdateChannelPayoutsParametersRecord',
             SetPalletFozenStatus: '(bool,PalletCommonFreezablePallet)',
             UpdateTokenPalletTokenConstraints: 'PalletProjectTokenTokenConstraints',
+            UpdateArgoBridgeConstraints: 'PalletArgoBridgeBridgeConstraints',
             SetEraPayoutDampingFactor: 'Percent',
             DecreaseCouncilBudget: 'u128'
         }
     },
     /**
-     * Lookup218: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
+     * Lookup217: pallet_argo_bridge::types::BridgeConstraints<sp_core::crypto::AccountId32, Balance, BlockNumber>
+     **/
+    PalletArgoBridgeBridgeConstraints: {
+        operatorAccount: 'Option<AccountId32>',
+        pauserAccounts: 'Option<Vec<AccountId32>>',
+        bridgingFee: 'Option<u128>',
+        thawnDuration: 'Option<u32>',
+        remoteChains: 'Option<Vec<u32>>'
+    },
+    /**
+     * Lookup224: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
      **/
     PalletCommonFundingRequestParameters: {
         account: 'AccountId32',
         amount: 'u128'
     },
     /**
-     * Lookup219: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
+     * Lookup225: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
      **/
     PalletProposalsCodexCreateOpeningParameters: {
         description: 'Bytes',
@@ -1552,14 +1563,14 @@ exports.default = {
         group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup220: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
+     * Lookup226: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
      **/
     PalletWorkingGroupStakePolicy: {
         stakeAmount: 'u128',
         leavingUnstakingPeriod: 'u32'
     },
     /**
-     * Lookup221: pallet_proposals_codex::types::FillOpeningParameters
+     * Lookup227: pallet_proposals_codex::types::FillOpeningParameters
      **/
     PalletProposalsCodexFillOpeningParameters: {
         openingId: 'u64',
@@ -1567,7 +1578,7 @@ exports.default = {
         workingGroup: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup222: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
+     * Lookup228: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
      **/
     PalletProposalsCodexTerminateRoleParameters: {
         workerId: 'u64',
@@ -1575,13 +1586,13 @@ exports.default = {
         group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup223: pallet_common::FreezablePallet
+     * Lookup229: pallet_common::FreezablePallet
      **/
     PalletCommonFreezablePallet: {
         _enum: ['ProjectToken']
     },
     /**
-     * Lookup224: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance1>
+     * Lookup230: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance1>
      **/
     PalletWorkingGroupRawEventInstance1: {
         _enum: {
@@ -1614,13 +1625,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup228: pallet_working_group::types::OpeningType
+     * Lookup234: pallet_working_group::types::OpeningType
      **/
     PalletWorkingGroupOpeningType: {
         _enum: ['Leader', 'Regular']
     },
     /**
-     * Lookup229: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
+     * Lookup235: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupApplyOnOpeningParams: {
         memberId: 'u64',
@@ -1631,14 +1642,14 @@ exports.default = {
         stakeParameters: 'PalletWorkingGroupStakeParameters'
     },
     /**
-     * Lookup230: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup236: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupStakeParameters: {
         stake: 'u128',
         stakingAccountId: 'AccountId32'
     },
     /**
-     * Lookup231: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
+     * Lookup237: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
      **/
     PalletVestingVestingInfo: {
         locked: 'u128',
@@ -1646,17 +1657,17 @@ exports.default = {
         startingBlock: 'u32'
     },
     /**
-     * Lookup232: pallet_working_group::Instance1
+     * Lookup238: pallet_working_group::Instance1
      **/
     PalletWorkingGroupInstance1: 'Null',
     /**
-     * Lookup233: pallet_working_group::types::RewardPaymentType
+     * Lookup239: pallet_working_group::types::RewardPaymentType
      **/
     PalletWorkingGroupRewardPaymentType: {
         _enum: ['MissedReward', 'RegularReward']
     },
     /**
-     * Lookup234: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance2>
+     * Lookup240: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance2>
      **/
     PalletWorkingGroupRawEventInstance2: {
         _enum: {
@@ -1689,11 +1700,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup235: pallet_working_group::Instance2
+     * Lookup241: pallet_working_group::Instance2
      **/
     PalletWorkingGroupInstance2: 'Null',
     /**
-     * Lookup236: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance3>
+     * Lookup242: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance3>
      **/
     PalletWorkingGroupRawEventInstance3: {
         _enum: {
@@ -1726,11 +1737,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup237: pallet_working_group::Instance3
+     * Lookup243: pallet_working_group::Instance3
      **/
     PalletWorkingGroupInstance3: 'Null',
     /**
-     * Lookup238: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance4>
+     * Lookup244: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance4>
      **/
     PalletWorkingGroupRawEventInstance4: {
         _enum: {
@@ -1763,11 +1774,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup239: pallet_working_group::Instance4
+     * Lookup245: pallet_working_group::Instance4
      **/
     PalletWorkingGroupInstance4: 'Null',
     /**
-     * Lookup240: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance5>
+     * Lookup246: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance5>
      **/
     PalletWorkingGroupRawEventInstance5: {
         _enum: {
@@ -1800,11 +1811,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup241: pallet_working_group::Instance5
+     * Lookup247: pallet_working_group::Instance5
      **/
     PalletWorkingGroupInstance5: 'Null',
     /**
-     * Lookup242: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance6>
+     * Lookup248: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance6>
      **/
     PalletWorkingGroupRawEventInstance6: {
         _enum: {
@@ -1837,11 +1848,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup243: pallet_working_group::Instance6
+     * Lookup249: pallet_working_group::Instance6
      **/
     PalletWorkingGroupInstance6: 'Null',
     /**
-     * Lookup244: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance7>
+     * Lookup250: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance7>
      **/
     PalletWorkingGroupRawEventInstance7: {
         _enum: {
@@ -1874,11 +1885,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup245: pallet_working_group::Instance7
+     * Lookup251: pallet_working_group::Instance7
      **/
     PalletWorkingGroupInstance7: 'Null',
     /**
-     * Lookup246: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance8>
+     * Lookup252: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance8>
      **/
     PalletWorkingGroupRawEventInstance8: {
         _enum: {
@@ -1911,11 +1922,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup247: pallet_working_group::Instance8
+     * Lookup253: pallet_working_group::Instance8
      **/
     PalletWorkingGroupInstance8: 'Null',
     /**
-     * Lookup248: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance9>
+     * Lookup254: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance9>
      **/
     PalletWorkingGroupRawEventInstance9: {
         _enum: {
@@ -1948,11 +1959,11 @@ exports.default = {
         }
     },
     /**
-     * Lookup249: pallet_working_group::Instance9
+     * Lookup255: pallet_working_group::Instance9
      **/
     PalletWorkingGroupInstance9: 'Null',
     /**
-     * Lookup250: pallet_proxy::pallet::Event<T>
+     * Lookup256: pallet_proxy::pallet::Event<T>
      **/
     PalletProxyEvent: {
         _enum: {
@@ -1985,13 +1996,41 @@ exports.default = {
         }
     },
     /**
-     * Lookup251: joystream_node_runtime::ProxyType
+     * Lookup257: joystream_node_runtime::ProxyType
      **/
     JoystreamNodeRuntimeProxyType: {
         _enum: ['Any', 'NonTransfer', 'Governance', 'Referendum', 'Staking', 'StorageTransactor']
     },
     /**
-     * Lookup253: frame_system::Phase
+     * Lookup259: pallet_argo_bridge::events::RawEvent<sp_core::crypto::AccountId32, Balance, pallet_argo_bridge::types::BridgeConstraints<sp_core::crypto::AccountId32, Balance, BlockNumber>, BlockNumber>
+     **/
+    PalletArgoBridgeEventsRawEvent: {
+        _enum: {
+            OutboundTransferRequested: '(u64,AccountId32,PalletArgoBridgeRemoteAccount,u128,u128)',
+            InboundTransferFinalized: '(PalletArgoBridgeRemoteTransfer,AccountId32,u128)',
+            OutboundTransferReverted: '(u64,AccountId32,u128,Bytes)',
+            BridgePaused: 'AccountId32',
+            BridgeThawnStarted: '(AccountId32,u32)',
+            BridgeThawnFinished: 'Null',
+            BridgeConfigUpdated: 'PalletArgoBridgeBridgeConstraints'
+        }
+    },
+    /**
+     * Lookup260: pallet_argo_bridge::types::RemoteAccount
+     **/
+    PalletArgoBridgeRemoteAccount: {
+        account: '[u8;32]',
+        chainId: 'u32'
+    },
+    /**
+     * Lookup261: pallet_argo_bridge::types::RemoteTransfer
+     **/
+    PalletArgoBridgeRemoteTransfer: {
+        id: 'u64',
+        chainId: 'u32'
+    },
+    /**
+     * Lookup263: frame_system::Phase
      **/
     FrameSystemPhase: {
         _enum: {
@@ -2001,14 +2040,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup257: frame_system::LastRuntimeUpgradeInfo
+     * Lookup267: frame_system::LastRuntimeUpgradeInfo
      **/
     FrameSystemLastRuntimeUpgradeInfo: {
         specVersion: 'Compact<u32>',
         specName: 'Text'
     },
     /**
-     * Lookup260: frame_system::pallet::Call<T>
+     * Lookup270: frame_system::pallet::Call<T>
      **/
     FrameSystemCall: {
         _enum: {
@@ -2043,7 +2082,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup263: frame_system::limits::BlockWeights
+     * Lookup273: frame_system::limits::BlockWeights
      **/
     FrameSystemLimitsBlockWeights: {
         baseBlock: 'SpWeightsWeightV2Weight',
@@ -2051,7 +2090,7 @@ exports.default = {
         perClass: 'FrameSupportDispatchPerDispatchClassWeightsPerClass'
     },
     /**
-     * Lookup264: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
+     * Lookup274: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
      **/
     FrameSupportDispatchPerDispatchClassWeightsPerClass: {
         normal: 'FrameSystemLimitsWeightsPerClass',
@@ -2059,7 +2098,7 @@ exports.default = {
         mandatory: 'FrameSystemLimitsWeightsPerClass'
     },
     /**
-     * Lookup265: frame_system::limits::WeightsPerClass
+     * Lookup275: frame_system::limits::WeightsPerClass
      **/
     FrameSystemLimitsWeightsPerClass: {
         baseExtrinsic: 'SpWeightsWeightV2Weight',
@@ -2068,13 +2107,13 @@ exports.default = {
         reserved: 'Option<SpWeightsWeightV2Weight>'
     },
     /**
-     * Lookup267: frame_system::limits::BlockLength
+     * Lookup277: frame_system::limits::BlockLength
      **/
     FrameSystemLimitsBlockLength: {
         max: 'FrameSupportDispatchPerDispatchClassU32'
     },
     /**
-     * Lookup268: frame_support::dispatch::PerDispatchClass<T>
+     * Lookup278: frame_support::dispatch::PerDispatchClass<T>
      **/
     FrameSupportDispatchPerDispatchClassU32: {
         normal: 'u32',
@@ -2082,14 +2121,14 @@ exports.default = {
         mandatory: 'u32'
     },
     /**
-     * Lookup269: sp_weights::RuntimeDbWeight
+     * Lookup279: sp_weights::RuntimeDbWeight
      **/
     SpWeightsRuntimeDbWeight: {
         read: 'u64',
         write: 'u64'
     },
     /**
-     * Lookup270: sp_version::RuntimeVersion
+     * Lookup280: sp_version::RuntimeVersion
      **/
     SpVersionRuntimeVersion: {
         specName: 'Text',
@@ -2102,13 +2141,13 @@ exports.default = {
         stateVersion: 'u8'
     },
     /**
-     * Lookup275: frame_system::pallet::Error<T>
+     * Lookup285: frame_system::pallet::Error<T>
      **/
     FrameSystemError: {
         _enum: ['InvalidSpecName', 'SpecVersionNeedsToIncrease', 'FailedToExtractRuntimeVersion', 'NonDefaultComposite', 'NonZeroRefCount', 'CallFiltered']
     },
     /**
-     * Lookup276: pallet_utility::pallet::Call<T>
+     * Lookup286: pallet_utility::pallet::Call<T>
      **/
     PalletUtilityCall: {
         _enum: {
@@ -2136,7 +2175,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup279: pallet_babe::pallet::Call<T>
+     * Lookup289: pallet_babe::pallet::Call<T>
      **/
     PalletBabeCall: {
         _enum: {
@@ -2154,7 +2193,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup280: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
+     * Lookup290: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
      **/
     SpConsensusSlotsEquivocationProof: {
         offender: 'SpConsensusBabeAppPublic',
@@ -2163,7 +2202,7 @@ exports.default = {
         secondHeader: 'SpRuntimeHeader'
     },
     /**
-     * Lookup281: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
+     * Lookup291: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
      **/
     SpRuntimeHeader: {
         parentHash: 'H256',
@@ -2173,15 +2212,15 @@ exports.default = {
         digest: 'SpRuntimeDigest'
     },
     /**
-     * Lookup282: sp_runtime::traits::BlakeTwo256
+     * Lookup292: sp_runtime::traits::BlakeTwo256
      **/
     SpRuntimeBlakeTwo256: 'Null',
     /**
-     * Lookup283: sp_consensus_babe::app::Public
+     * Lookup293: sp_consensus_babe::app::Public
      **/
     SpConsensusBabeAppPublic: 'SpCoreSr25519Public',
     /**
-     * Lookup285: sp_session::MembershipProof
+     * Lookup295: sp_session::MembershipProof
      **/
     SpSessionMembershipProof: {
         session: 'u32',
@@ -2189,7 +2228,7 @@ exports.default = {
         validatorCount: 'u32'
     },
     /**
-     * Lookup286: sp_consensus_babe::digests::NextConfigDescriptor
+     * Lookup296: sp_consensus_babe::digests::NextConfigDescriptor
      **/
     SpConsensusBabeDigestsNextConfigDescriptor: {
         _enum: {
@@ -2201,13 +2240,13 @@ exports.default = {
         }
     },
     /**
-     * Lookup287: sp_consensus_babe::AllowedSlots
+     * Lookup297: sp_consensus_babe::AllowedSlots
      **/
     SpConsensusBabeAllowedSlots: {
         _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']
     },
     /**
-     * Lookup288: pallet_timestamp::pallet::Call<T>
+     * Lookup298: pallet_timestamp::pallet::Call<T>
      **/
     PalletTimestampCall: {
         _enum: {
@@ -2217,7 +2256,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup289: pallet_balances::pallet::Call<T, I>
+     * Lookup299: pallet_balances::pallet::Call<T, I>
      **/
     PalletBalancesCall: {
         _enum: {
@@ -2250,7 +2289,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup290: pallet_election_provider_multi_phase::pallet::Call<T>
+     * Lookup300: pallet_election_provider_multi_phase::pallet::Call<T>
      **/
     PalletElectionProviderMultiPhaseCall: {
         _enum: {
@@ -2274,7 +2313,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup291: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
+     * Lookup301: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseRawSolution: {
         solution: 'JoystreamNodeRuntimeNposSolution16',
@@ -2282,7 +2321,7 @@ exports.default = {
         round: 'u32'
     },
     /**
-     * Lookup292: joystream_node_runtime::NposSolution16
+     * Lookup302: joystream_node_runtime::NposSolution16
      **/
     JoystreamNodeRuntimeNposSolution16: {
         votes1: 'Vec<(Compact<u32>,Compact<u16>)>',
@@ -2303,21 +2342,21 @@ exports.default = {
         votes16: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);15],Compact<u16>)>'
     },
     /**
-     * Lookup343: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
+     * Lookup353: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
      **/
     PalletElectionProviderMultiPhaseSolutionOrSnapshotSize: {
         voters: 'Compact<u32>',
         targets: 'Compact<u32>'
     },
     /**
-     * Lookup347: sp_npos_elections::Support<sp_core::crypto::AccountId32>
+     * Lookup357: sp_npos_elections::Support<sp_core::crypto::AccountId32>
      **/
     SpNposElectionsSupport: {
         total: 'u128',
         voters: 'Vec<(AccountId32,u128)>'
     },
     /**
-     * Lookup349: pallet_staking::pallet::pallet::Call<T>
+     * Lookup359: pallet_staking::pallet::pallet::Call<T>
      **/
     PalletStakingPalletCall: {
         _enum: {
@@ -2411,7 +2450,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup350: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
+     * Lookup360: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
      **/
     PalletStakingRewardDestination: {
         _enum: {
@@ -2423,7 +2462,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup353: pallet_staking::pallet::pallet::ConfigOp<T>
+     * Lookup361: pallet_staking::pallet::pallet::ConfigOp<T>
      **/
     PalletStakingPalletConfigOpU128: {
         _enum: {
@@ -2433,7 +2472,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup354: pallet_staking::pallet::pallet::ConfigOp<T>
+     * Lookup362: pallet_staking::pallet::pallet::ConfigOp<T>
      **/
     PalletStakingPalletConfigOpU32: {
         _enum: {
@@ -2443,7 +2482,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup355: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
+     * Lookup363: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
      **/
     PalletStakingPalletConfigOpPercent: {
         _enum: {
@@ -2453,7 +2492,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup356: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
+     * Lookup364: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
      **/
     PalletStakingPalletConfigOpPerbill: {
         _enum: {
@@ -2463,7 +2502,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup357: pallet_session::pallet::Call<T>
+     * Lookup365: pallet_session::pallet::Call<T>
      **/
     PalletSessionCall: {
         _enum: {
@@ -2478,7 +2517,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup358: joystream_node_runtime::SessionKeys
+     * Lookup366: joystream_node_runtime::SessionKeys
      **/
     JoystreamNodeRuntimeSessionKeys: {
         grandpa: 'SpConsensusGrandpaAppPublic',
@@ -2487,11 +2526,11 @@ exports.default = {
         authorityDiscovery: 'SpAuthorityDiscoveryAppPublic'
     },
     /**
-     * Lookup359: sp_authority_discovery::app::Public
+     * Lookup367: sp_authority_discovery::app::Public
      **/
     SpAuthorityDiscoveryAppPublic: 'SpCoreSr25519Public',
     /**
-     * Lookup360: pallet_grandpa::pallet::Call<T>
+     * Lookup368: pallet_grandpa::pallet::Call<T>
      **/
     PalletGrandpaCall: {
         _enum: {
@@ -2510,14 +2549,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup361: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
+     * Lookup369: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
      **/
     SpConsensusGrandpaEquivocationProof: {
         setId: 'u64',
         equivocation: 'SpConsensusGrandpaEquivocation'
     },
     /**
-     * Lookup362: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
+     * Lookup370: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
      **/
     SpConsensusGrandpaEquivocation: {
         _enum: {
@@ -2526,7 +2565,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup363: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+     * Lookup371: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
      **/
     FinalityGrandpaEquivocationPrevote: {
         roundNumber: 'u64',
@@ -2535,22 +2574,22 @@ exports.default = {
         second: '(FinalityGrandpaPrevote,SpConsensusGrandpaAppSignature)'
     },
     /**
-     * Lookup364: finality_grandpa::Prevote<primitive_types::H256, N>
+     * Lookup372: finality_grandpa::Prevote<primitive_types::H256, N>
      **/
     FinalityGrandpaPrevote: {
         targetHash: 'H256',
         targetNumber: 'u32'
     },
     /**
-     * Lookup365: sp_consensus_grandpa::app::Signature
+     * Lookup373: sp_consensus_grandpa::app::Signature
      **/
     SpConsensusGrandpaAppSignature: 'SpCoreEd25519Signature',
     /**
-     * Lookup366: sp_core::ed25519::Signature
+     * Lookup374: sp_core::ed25519::Signature
      **/
     SpCoreEd25519Signature: '[u8;64]',
     /**
-     * Lookup369: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+     * Lookup377: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
      **/
     FinalityGrandpaEquivocationPrecommit: {
         roundNumber: 'u64',
@@ -2559,14 +2598,14 @@ exports.default = {
         second: '(FinalityGrandpaPrecommit,SpConsensusGrandpaAppSignature)'
     },
     /**
-     * Lookup370: finality_grandpa::Precommit<primitive_types::H256, N>
+     * Lookup378: finality_grandpa::Precommit<primitive_types::H256, N>
      **/
     FinalityGrandpaPrecommit: {
         targetHash: 'H256',
         targetNumber: 'u32'
     },
     /**
-     * Lookup372: pallet_im_online::pallet::Call<T>
+     * Lookup380: pallet_im_online::pallet::Call<T>
      **/
     PalletImOnlineCall: {
         _enum: {
@@ -2577,7 +2616,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup373: pallet_im_online::Heartbeat<BlockNumber>
+     * Lookup381: pallet_im_online::Heartbeat<BlockNumber>
      **/
     PalletImOnlineHeartbeat: {
         blockNumber: 'u32',
@@ -2587,22 +2626,22 @@ exports.default = {
         validatorsLen: 'u32'
     },
     /**
-     * Lookup374: sp_core::offchain::OpaqueNetworkState
+     * Lookup382: sp_core::offchain::OpaqueNetworkState
      **/
     SpCoreOffchainOpaqueNetworkState: {
         peerId: 'OpaquePeerId',
         externalAddresses: 'Vec<OpaqueMultiaddr>'
     },
     /**
-     * Lookup378: pallet_im_online::sr25519::app_sr25519::Signature
+     * Lookup386: pallet_im_online::sr25519::app_sr25519::Signature
      **/
     PalletImOnlineSr25519AppSr25519Signature: 'SpCoreSr25519Signature',
     /**
-     * Lookup379: sp_core::sr25519::Signature
+     * Lookup387: sp_core::sr25519::Signature
      **/
     SpCoreSr25519Signature: '[u8;64]',
     /**
-     * Lookup380: pallet_bags_list::pallet::Call<T, I>
+     * Lookup388: pallet_bags_list::pallet::Call<T, I>
      **/
     PalletBagsListCall: {
         _enum: {
@@ -2615,7 +2654,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup381: pallet_vesting::pallet::Call<T>
+     * Lookup389: pallet_vesting::pallet::Call<T>
      **/
     PalletVestingCall: {
         _enum: {
@@ -2639,7 +2678,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup382: pallet_multisig::pallet::Call<T>
+     * Lookup390: pallet_multisig::pallet::Call<T>
      **/
     PalletMultisigCall: {
         _enum: {
@@ -2670,7 +2709,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup384: pallet_council::Call<T>
+     * Lookup392: pallet_council::Call<T>
      **/
     PalletCouncilCall: {
         _enum: {
@@ -2727,7 +2766,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup385: pallet_referendum::Call<T, I>
+     * Lookup393: pallet_referendum::Call<T, I>
      **/
     PalletReferendumCall: {
         _enum: {
@@ -2744,7 +2783,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup386: pallet_membership::Call<T>
+     * Lookup394: pallet_membership::Call<T>
      **/
     PalletMembershipCall: {
         _enum: {
@@ -2813,7 +2852,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup387: pallet_forum::Call<T>
+     * Lookup395: pallet_forum::Call<T>
      **/
     PalletForumCall: {
         _enum: {
@@ -2910,7 +2949,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup388: pallet_constitution::Call<T>
+     * Lookup396: pallet_constitution::Call<T>
      **/
     PalletConstitutionCall: {
         _enum: {
@@ -2920,7 +2959,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup389: pallet_bounty::Call<T>
+     * Lookup397: pallet_bounty::Call<T>
      **/
     PalletBountyCall: {
         _enum: {
@@ -2996,7 +3035,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup390: pallet_joystream_utility::Call<T>
+     * Lookup398: pallet_joystream_utility::Call<T>
      **/
     PalletJoystreamUtilityCall: {
         _enum: {
@@ -3017,7 +3056,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup391: pallet_content::Call<T>
+     * Lookup399: pallet_content::Call<T>
      **/
     PalletContentCall: {
         _enum: {
@@ -3326,14 +3365,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup392: pallet_content::types::ChannelBagWitness
+     * Lookup400: pallet_content::types::ChannelBagWitness
      **/
     PalletContentChannelBagWitness: {
         storageBucketsNum: 'u32',
         distributionBucketsNum: 'u32'
     },
     /**
-     * Lookup394: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
+     * Lookup402: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
      **/
     PalletCommonMerkleTreeProofElementRecord: {
         _alias: {
@@ -3343,13 +3382,13 @@ exports.default = {
         side: 'PalletCommonMerkleTreeSide'
     },
     /**
-     * Lookup395: pallet_common::merkle_tree::Side
+     * Lookup403: pallet_common::merkle_tree::Side
      **/
     PalletCommonMerkleTreeSide: {
         _enum: ['Left', 'Right']
     },
     /**
-     * Lookup396: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
+     * Lookup404: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
      **/
     PalletContentPullPaymentElement: {
         channelId: 'u64',
@@ -3357,7 +3396,7 @@ exports.default = {
         reason: 'H256'
     },
     /**
-     * Lookup397: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
+     * Lookup405: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
      **/
     PalletContentInitTransferParameters: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -3365,7 +3404,7 @@ exports.default = {
         newOwner: 'PalletContentChannelOwner'
     },
     /**
-     * Lookup398: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup406: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenSaleParams: {
         unitPrice: 'u128',
@@ -3377,14 +3416,14 @@ exports.default = {
         metadata: 'Option<Bytes>'
     },
     /**
-     * Lookup402: pallet_project_token::types::AmmParams<Balance>
+     * Lookup410: pallet_project_token::types::AmmParams<Balance>
      **/
     PalletProjectTokenAmmParams: {
         slope: 'u128',
         intercept: 'u128'
     },
     /**
-     * Lookup403: pallet_storage::Call<T>
+     * Lookup411: pallet_storage::Call<T>
      **/
     PalletStorageCall: {
         _enum: {
@@ -3531,7 +3570,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup404: pallet_project_token::Call<T>
+     * Lookup412: pallet_project_token::Call<T>
      **/
     PalletProjectTokenCall: {
         _enum: {
@@ -3590,17 +3629,17 @@ exports.default = {
         }
     },
     /**
-     * Lookup408: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
+     * Lookup416: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
      **/
     PalletProjectTokenMerkleProof: 'Vec<(H256,PalletProjectTokenMerkleSide)>',
     /**
-     * Lookup411: pallet_project_token::types::MerkleSide
+     * Lookup419: pallet_project_token::types::MerkleSide
      **/
     PalletProjectTokenMerkleSide: {
         _enum: ['Right', 'Left']
     },
     /**
-     * Lookup414: pallet_proposals_engine::Call<T>
+     * Lookup422: pallet_proposals_engine::Call<T>
      **/
     PalletProposalsEngineCall: {
         _enum: {
@@ -3625,7 +3664,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup415: pallet_proposals_discussion::Call<T>
+     * Lookup423: pallet_proposals_discussion::Call<T>
      **/
     PalletProposalsDiscussionCall: {
         _enum: {
@@ -3654,7 +3693,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup416: pallet_proposals_codex::Call<T>
+     * Lookup424: pallet_proposals_codex::Call<T>
      **/
     PalletProposalsCodexCall: {
         _enum: {
@@ -3665,7 +3704,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup417: pallet_working_group::Call<T, I>
+     * Lookup425: pallet_working_group::Call<T, I>
      **/
     PalletWorkingGroupCall: {
         _enum: {
@@ -3753,7 +3792,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup426: pallet_proxy::pallet::Call<T>
+     * Lookup434: pallet_proxy::pallet::Call<T>
      **/
     PalletProxyCall: {
         _enum: {
@@ -3806,7 +3845,36 @@ exports.default = {
         }
     },
     /**
-     * Lookup428: joystream_node_runtime::OriginCaller
+     * Lookup436: pallet_argo_bridge::Call<T>
+     **/
+    PalletArgoBridgeCall: {
+        _enum: {
+            request_outbound_transfer: {
+                destAccount: 'PalletArgoBridgeRemoteAccount',
+                amount: 'u128',
+                expectedFee: 'u128',
+            },
+            finalize_inbound_transfer: {
+                remoteTransfer: 'PalletArgoBridgeRemoteTransfer',
+                destAccount: 'AccountId32',
+                amount: 'u128',
+            },
+            revert_outbound_transfer: {
+                transferId: 'u64',
+                revertAccount: 'AccountId32',
+                revertAmount: 'u128',
+                rationale: 'Bytes',
+            },
+            pause_bridge: 'Null',
+            init_unpause_bridge: 'Null',
+            finish_unpause_bridge: 'Null',
+            update_bridge_constrains: {
+                parameters: 'PalletArgoBridgeBridgeConstraints'
+            }
+        }
+    },
+    /**
+     * Lookup437: joystream_node_runtime::OriginCaller
      **/
     JoystreamNodeRuntimeOriginCaller: {
         _enum: {
@@ -3815,7 +3883,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup429: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
+     * Lookup438: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
      **/
     FrameSupportDispatchRawOrigin: {
         _enum: {
@@ -3825,17 +3893,17 @@ exports.default = {
         }
     },
     /**
-     * Lookup430: sp_core::Void
+     * Lookup439: sp_core::Void
      **/
     SpCoreVoid: 'Null',
     /**
-     * Lookup431: pallet_utility::pallet::Error<T>
+     * Lookup440: pallet_utility::pallet::Error<T>
      **/
     PalletUtilityError: {
         _enum: ['TooManyCalls']
     },
     /**
-     * Lookup438: sp_consensus_babe::digests::PreDigest
+     * Lookup447: sp_consensus_babe::digests::PreDigest
      **/
     SpConsensusBabeDigestsPreDigest: {
         _enum: {
@@ -3846,7 +3914,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup439: sp_consensus_babe::digests::PrimaryPreDigest
+     * Lookup448: sp_consensus_babe::digests::PrimaryPreDigest
      **/
     SpConsensusBabeDigestsPrimaryPreDigest: {
         authorityIndex: 'u32',
@@ -3855,14 +3923,14 @@ exports.default = {
         vrfProof: '[u8;64]'
     },
     /**
-     * Lookup440: sp_consensus_babe::digests::SecondaryPlainPreDigest
+     * Lookup449: sp_consensus_babe::digests::SecondaryPlainPreDigest
      **/
     SpConsensusBabeDigestsSecondaryPlainPreDigest: {
         authorityIndex: 'u32',
         slot: 'u64'
     },
     /**
-     * Lookup441: sp_consensus_babe::digests::SecondaryVRFPreDigest
+     * Lookup450: sp_consensus_babe::digests::SecondaryVRFPreDigest
      **/
     SpConsensusBabeDigestsSecondaryVRFPreDigest: {
         authorityIndex: 'u32',
@@ -3871,20 +3939,20 @@ exports.default = {
         vrfProof: '[u8;64]'
     },
     /**
-     * Lookup443: sp_consensus_babe::BabeEpochConfiguration
+     * Lookup452: sp_consensus_babe::BabeEpochConfiguration
      **/
     SpConsensusBabeBabeEpochConfiguration: {
         c: '(u64,u64)',
         allowedSlots: 'SpConsensusBabeAllowedSlots'
     },
     /**
-     * Lookup445: pallet_babe::pallet::Error<T>
+     * Lookup454: pallet_babe::pallet::Error<T>
      **/
     PalletBabeError: {
         _enum: ['InvalidEquivocationProof', 'InvalidKeyOwnershipProof', 'DuplicateOffenceReport', 'InvalidConfiguration']
     },
     /**
-     * Lookup447: pallet_balances::BalanceLock<Balance>
+     * Lookup456: pallet_balances::BalanceLock<Balance>
      **/
     PalletBalancesBalanceLock: {
         id: '[u8;8]',
@@ -3892,32 +3960,32 @@ exports.default = {
         reasons: 'PalletBalancesReasons'
     },
     /**
-     * Lookup448: pallet_balances::Reasons
+     * Lookup457: pallet_balances::Reasons
      **/
     PalletBalancesReasons: {
         _enum: ['Fee', 'Misc', 'All']
     },
     /**
-     * Lookup451: pallet_balances::ReserveData<ReserveIdentifier, Balance>
+     * Lookup460: pallet_balances::ReserveData<ReserveIdentifier, Balance>
      **/
     PalletBalancesReserveData: {
         id: '[u8;8]',
         amount: 'u128'
     },
     /**
-     * Lookup453: pallet_balances::pallet::Error<T, I>
+     * Lookup462: pallet_balances::pallet::Error<T, I>
      **/
     PalletBalancesError: {
         _enum: ['VestingBalance', 'LiquidityRestrictions', 'InsufficientBalance', 'ExistentialDeposit', 'KeepAlive', 'ExistingVestingSchedule', 'DeadAccount', 'TooManyReserves']
     },
     /**
-     * Lookup455: pallet_transaction_payment::Releases
+     * Lookup464: pallet_transaction_payment::Releases
      **/
     PalletTransactionPaymentReleases: {
         _enum: ['V1Ancient', 'V2']
     },
     /**
-     * Lookup456: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
+     * Lookup465: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
      **/
     PalletElectionProviderMultiPhaseReadySolution: {
         supports: 'Vec<(AccountId32,SpNposElectionsSupport)>',
@@ -3925,14 +3993,14 @@ exports.default = {
         compute: 'PalletElectionProviderMultiPhaseElectionCompute'
     },
     /**
-     * Lookup458: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
+     * Lookup467: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
      **/
     PalletElectionProviderMultiPhaseRoundSnapshot: {
         voters: 'Vec<(AccountId32,u64,Vec<AccountId32>)>',
         targets: 'Vec<AccountId32>'
     },
     /**
-     * Lookup465: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
+     * Lookup474: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseSignedSignedSubmission: {
         who: 'AccountId32',
@@ -3941,13 +4009,13 @@ exports.default = {
         callFee: 'u128'
     },
     /**
-     * Lookup466: pallet_election_provider_multi_phase::pallet::Error<T>
+     * Lookup475: pallet_election_provider_multi_phase::pallet::Error<T>
      **/
     PalletElectionProviderMultiPhaseError: {
         _enum: ['PreDispatchEarlySubmission', 'PreDispatchWrongWinnerCount', 'PreDispatchWeakSubmission', 'SignedQueueFull', 'SignedCannotPayDeposit', 'SignedInvalidWitness', 'SignedTooMuchWeight', 'OcwCallWrongEra', 'MissingSnapshotMetadata', 'InvalidSubmissionIndex', 'CallNotAllowed', 'FallbackFailed', 'BoundNotMet', 'TooManyWinners']
     },
     /**
-     * Lookup467: pallet_staking::StakingLedger<T>
+     * Lookup476: pallet_staking::StakingLedger<T>
      **/
     PalletStakingStakingLedger: {
         stash: 'AccountId32',
@@ -3957,14 +4025,14 @@ exports.default = {
         claimedRewards: 'Vec<u32>'
     },
     /**
-     * Lookup469: pallet_staking::UnlockChunk<Balance>
+     * Lookup478: pallet_staking::UnlockChunk<Balance>
      **/
     PalletStakingUnlockChunk: {
         value: 'Compact<u128>',
         era: 'Compact<u32>'
     },
     /**
-     * Lookup472: pallet_staking::Nominations<T>
+     * Lookup481: pallet_staking::Nominations<T>
      **/
     PalletStakingNominations: {
         targets: 'Vec<AccountId32>',
@@ -3972,21 +4040,21 @@ exports.default = {
         suppressed: 'bool'
     },
     /**
-     * Lookup473: pallet_staking::ActiveEraInfo
+     * Lookup482: pallet_staking::ActiveEraInfo
      **/
     PalletStakingActiveEraInfo: {
         index: 'u32',
         start: 'Option<u64>'
     },
     /**
-     * Lookup475: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
+     * Lookup484: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
      **/
     PalletStakingEraRewardPoints: {
         total: 'u32',
         individual: 'BTreeMap<AccountId32, u32>'
     },
     /**
-     * Lookup480: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
+     * Lookup489: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
      **/
     PalletStakingUnappliedSlash: {
         validator: 'AccountId32',
@@ -3996,7 +4064,7 @@ exports.default = {
         payout: 'u128'
     },
     /**
-     * Lookup482: pallet_staking::slashing::SlashingSpans
+     * Lookup491: pallet_staking::slashing::SlashingSpans
      **/
     PalletStakingSlashingSlashingSpans: {
         spanIndex: 'u32',
@@ -4005,30 +4073,30 @@ exports.default = {
         prior: 'Vec<u32>'
     },
     /**
-     * Lookup483: pallet_staking::slashing::SpanRecord<Balance>
+     * Lookup492: pallet_staking::slashing::SpanRecord<Balance>
      **/
     PalletStakingSlashingSpanRecord: {
         slashed: 'u128',
         paidOut: 'u128'
     },
     /**
-     * Lookup486: pallet_staking::pallet::pallet::Error<T>
+     * Lookup495: pallet_staking::pallet::pallet::Error<T>
      **/
     PalletStakingPalletError: {
         _enum: ['NotController', 'NotStash', 'AlreadyBonded', 'AlreadyPaired', 'EmptyTargets', 'DuplicateIndex', 'InvalidSlashIndex', 'InsufficientBond', 'NoMoreChunks', 'NoUnlockChunk', 'FundedTarget', 'InvalidEraToReward', 'InvalidNumberOfNominations', 'NotSortedAndUnique', 'AlreadyClaimed', 'IncorrectHistoryDepth', 'IncorrectSlashingSpans', 'BadState', 'TooManyTargets', 'BadTarget', 'CannotChillOther', 'TooManyNominators', 'TooManyValidators', 'CommissionTooLow', 'BoundNotMet', 'BondingRestricted']
     },
     /**
-     * Lookup490: sp_core::crypto::KeyTypeId
+     * Lookup499: sp_core::crypto::KeyTypeId
      **/
     SpCoreCryptoKeyTypeId: '[u8;4]',
     /**
-     * Lookup491: pallet_session::pallet::Error<T>
+     * Lookup500: pallet_session::pallet::Error<T>
      **/
     PalletSessionError: {
         _enum: ['InvalidProof', 'NoAssociatedValidatorId', 'DuplicatedKey', 'NoKeys', 'NoAccount']
     },
     /**
-     * Lookup493: pallet_grandpa::StoredState<N>
+     * Lookup502: pallet_grandpa::StoredState<N>
      **/
     PalletGrandpaStoredState: {
         _enum: {
@@ -4045,7 +4113,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup494: pallet_grandpa::StoredPendingChange<N, Limit>
+     * Lookup503: pallet_grandpa::StoredPendingChange<N, Limit>
      **/
     PalletGrandpaStoredPendingChange: {
         scheduledAt: 'u32',
@@ -4054,33 +4122,33 @@ exports.default = {
         forced: 'Option<u32>'
     },
     /**
-     * Lookup496: pallet_grandpa::pallet::Error<T>
+     * Lookup505: pallet_grandpa::pallet::Error<T>
      **/
     PalletGrandpaError: {
         _enum: ['PauseFailed', 'ResumeFailed', 'ChangePending', 'TooSoon', 'InvalidKeyOwnershipProof', 'InvalidEquivocationProof', 'DuplicateOffenceReport']
     },
     /**
-     * Lookup502: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
+     * Lookup511: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
      **/
     PalletImOnlineBoundedOpaqueNetworkState: {
         peerId: 'Bytes',
         externalAddresses: 'Vec<Bytes>'
     },
     /**
-     * Lookup506: pallet_im_online::pallet::Error<T>
+     * Lookup515: pallet_im_online::pallet::Error<T>
      **/
     PalletImOnlineError: {
         _enum: ['InvalidKey', 'DuplicatedHeartbeat']
     },
     /**
-     * Lookup507: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
+     * Lookup516: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
      **/
     SpStakingOffenceOffenceDetails: {
         offender: '(AccountId32,PalletStakingExposure)',
         reporters: 'Vec<AccountId32>'
     },
     /**
-     * Lookup510: pallet_bags_list::list::Node<T, I>
+     * Lookup519: pallet_bags_list::list::Node<T, I>
      **/
     PalletBagsListListNode: {
         id: 'AccountId32',
@@ -4090,14 +4158,14 @@ exports.default = {
         score: 'u64'
     },
     /**
-     * Lookup511: pallet_bags_list::list::Bag<T, I>
+     * Lookup520: pallet_bags_list::list::Bag<T, I>
      **/
     PalletBagsListListBag: {
         head: 'Option<AccountId32>',
         tail: 'Option<AccountId32>'
     },
     /**
-     * Lookup512: pallet_bags_list::pallet::Error<T, I>
+     * Lookup521: pallet_bags_list::pallet::Error<T, I>
      **/
     PalletBagsListError: {
         _enum: {
@@ -4105,25 +4173,25 @@ exports.default = {
         }
     },
     /**
-     * Lookup513: pallet_bags_list::list::ListError
+     * Lookup522: pallet_bags_list::list::ListError
      **/
     PalletBagsListListListError: {
         _enum: ['Duplicate', 'NotHeavier', 'NotInSameBag', 'NodeNotFound']
     },
     /**
-     * Lookup516: pallet_vesting::Releases
+     * Lookup525: pallet_vesting::Releases
      **/
     PalletVestingReleases: {
         _enum: ['V0', 'V1']
     },
     /**
-     * Lookup517: pallet_vesting::pallet::Error<T>
+     * Lookup526: pallet_vesting::pallet::Error<T>
      **/
     PalletVestingError: {
         _enum: ['NotVesting', 'AtMaxVestingSchedules', 'AmountLow', 'ScheduleIndexOutOfBounds', 'InvalidScheduleParams']
     },
     /**
-     * Lookup519: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
+     * Lookup528: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
      **/
     PalletMultisigMultisig: {
         when: 'PalletMultisigTimepoint',
@@ -4132,20 +4200,20 @@ exports.default = {
         approvals: 'Vec<AccountId32>'
     },
     /**
-     * Lookup521: pallet_multisig::pallet::Error<T>
+     * Lookup530: pallet_multisig::pallet::Error<T>
      **/
     PalletMultisigError: {
         _enum: ['MinimumThreshold', 'AlreadyApproved', 'NoApprovalsNeeded', 'TooFewSignatories', 'TooManySignatories', 'SignatoriesOutOfOrder', 'SenderInSignatories', 'NotFound', 'NotOwner', 'NoTimepoint', 'WrongTimepoint', 'UnexpectedTimepoint', 'MaxWeightTooLow', 'AlreadyStored']
     },
     /**
-     * Lookup522: pallet_council::CouncilStageUpdate<BlockNumber>
+     * Lookup531: pallet_council::CouncilStageUpdate<BlockNumber>
      **/
     PalletCouncilCouncilStageUpdate: {
         stage: 'PalletCouncilCouncilStage',
         changedAt: 'u32'
     },
     /**
-     * Lookup523: pallet_council::CouncilStage<BlockNumber>
+     * Lookup532: pallet_council::CouncilStage<BlockNumber>
      **/
     PalletCouncilCouncilStage: {
         _enum: {
@@ -4155,26 +4223,26 @@ exports.default = {
         }
     },
     /**
-     * Lookup524: pallet_council::CouncilStageAnnouncing<BlockNumber>
+     * Lookup533: pallet_council::CouncilStageAnnouncing<BlockNumber>
      **/
     PalletCouncilCouncilStageAnnouncing: {
         candidatesCount: 'u32',
         endsAt: 'u32'
     },
     /**
-     * Lookup525: pallet_council::CouncilStageElection
+     * Lookup534: pallet_council::CouncilStageElection
      **/
     PalletCouncilCouncilStageElection: {
         candidatesCount: 'u32'
     },
     /**
-     * Lookup526: pallet_council::CouncilStageIdle<BlockNumber>
+     * Lookup535: pallet_council::CouncilStageIdle<BlockNumber>
      **/
     PalletCouncilCouncilStageIdle: {
         endsAt: 'u32'
     },
     /**
-     * Lookup528: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
+     * Lookup537: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
      **/
     PalletCouncilCouncilMember: {
         stakingAccountId: 'AccountId32',
@@ -4185,7 +4253,7 @@ exports.default = {
         unpaidReward: 'u128'
     },
     /**
-     * Lookup530: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
+     * Lookup539: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
      **/
     PalletCouncilCandidate: {
         stakingAccountId: 'AccountId32',
@@ -4196,13 +4264,13 @@ exports.default = {
         noteHash: 'Option<H256>'
     },
     /**
-     * Lookup531: pallet_council::Error<T>
+     * Lookup540: pallet_council::Error<T>
      **/
     PalletCouncilError: {
         _enum: ['ArithmeticError', 'BadOrigin', 'CantCandidateNow', 'CantReleaseStakeNow', 'CandidacyStakeTooLow', 'CantCandidateTwice', 'ConflictingStake', 'StakeStillNeeded', 'NoStake', 'InsufficientBalanceForStaking', 'CantVoteForYourself', 'MemberIdNotMatchAccount', 'InvalidAccountToStakeReuse', 'NotCandidatingNow', 'CantWithdrawCandidacyNow', 'NotCouncilor', 'InsufficientFundsForFundingRequest', 'ZeroBalanceFundRequest', 'RepeatedFundRequestAccount', 'EmptyFundingRequests', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'CandidateDoesNotExist', 'InsufficientBalanceForTransfer', 'ReductionAmountTooLarge']
     },
     /**
-     * Lookup532: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup541: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStage: {
         _enum: {
@@ -4212,7 +4280,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup534: pallet_referendum::ReferendumStageVoting<BlockNumber>
+     * Lookup543: pallet_referendum::ReferendumStageVoting<BlockNumber>
      **/
     PalletReferendumReferendumStageVoting: {
         started: 'u32',
@@ -4221,7 +4289,7 @@ exports.default = {
         endsAt: 'u32'
     },
     /**
-     * Lookup535: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup544: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStageRevealing: {
         started: 'u32',
@@ -4231,7 +4299,7 @@ exports.default = {
         endsAt: 'u32'
     },
     /**
-     * Lookup536: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
+     * Lookup545: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
      **/
     PalletReferendumCastVote: {
         commitment: 'H256',
@@ -4240,13 +4308,13 @@ exports.default = {
         voteFor: 'Option<u64>'
     },
     /**
-     * Lookup537: pallet_referendum::Error<T, I>
+     * Lookup546: pallet_referendum::Error<T, I>
      **/
     PalletReferendumError: {
         _enum: ['BadOrigin', 'ReferendumNotRunning', 'RevealingNotInProgress', 'ConflictStakesOnAccount', 'InsufficientBalanceToStake', 'InsufficientStake', 'InvalidReveal', 'InvalidVote', 'VoteNotExisting', 'AlreadyVotedThisCycle', 'UnstakingVoteInSameCycle', 'SaltTooLong', 'UnstakingForbidden', 'AccountAlreadyOptedOutOfVoting']
     },
     /**
-     * Lookup538: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
+     * Lookup547: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
      **/
     PalletMembershipMembershipObject: {
         handleHash: 'H256',
@@ -4256,20 +4324,20 @@ exports.default = {
         invites: 'u32'
     },
     /**
-     * Lookup539: pallet_membership::StakingAccountMemberBinding<MemberId>
+     * Lookup548: pallet_membership::StakingAccountMemberBinding<MemberId>
      **/
     PalletMembershipStakingAccountMemberBinding: {
         memberId: 'u64',
         confirmed: 'bool'
     },
     /**
-     * Lookup540: pallet_membership::Error<T>
+     * Lookup549: pallet_membership::Error<T>
      **/
     PalletMembershipError: {
         _enum: ['NotEnoughBalanceToBuyMembership', 'ControllerAccountRequired', 'RootAccountRequired', 'UnsignedOrigin', 'MemberProfileNotFound', 'HandleAlreadyRegistered', 'HandleMustBeProvidedDuringRegistration', 'ReferrerIsNotMember', 'CannotTransferInvitesForNotMember', 'NotEnoughInvites', 'WorkingGroupLeaderNotSet', 'StakingAccountIsAlreadyRegistered', 'StakingAccountDoesntExist', 'StakingAccountAlreadyConfirmed', 'WorkingGroupBudgetIsNotSufficientForInviting', 'ConflictingLock', 'CannotExceedReferralCutPercentLimit', 'ConflictStakesOnAccount', 'InsufficientBalanceToCoverStake', 'GifLockExceedsCredit', 'InsufficientBalanceToGift', 'InsufficientBalanceToCoverPayment']
     },
     /**
-     * Lookup541: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup550: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletForumCategory: {
         titleHash: 'H256',
@@ -4282,7 +4350,7 @@ exports.default = {
         stickyThreadIds: 'BTreeSet<u64>'
     },
     /**
-     * Lookup543: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup552: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumThread: {
         categoryId: 'u64',
@@ -4291,7 +4359,7 @@ exports.default = {
         numberOfEditablePosts: 'u64'
     },
     /**
-     * Lookup544: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup553: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumPost: {
         threadId: 'u64',
@@ -4301,19 +4369,19 @@ exports.default = {
         lastEdited: 'u32'
     },
     /**
-     * Lookup545: pallet_forum::Error<T>
+     * Lookup554: pallet_forum::Error<T>
      **/
     PalletForumError: {
         _enum: ['ArithmeticError', 'OriginNotForumLead', 'ForumUserIdNotMatchAccount', 'ModeratorIdNotMatchAccount', 'AccountDoesNotMatchThreadAuthor', 'ThreadDoesNotExist', 'ModeratorModerateOriginCategory', 'ModeratorModerateDestinationCategory', 'ThreadMoveInvalid', 'ThreadNotBeingUpdated', 'InsufficientBalanceForThreadCreation', 'CannotDeleteThreadWithOutstandingPosts', 'PostDoesNotExist', 'AccountDoesNotMatchPostAuthor', 'InsufficientBalanceForPost', 'CategoryNotBeingUpdated', 'AncestorCategoryImmutable', 'MaxValidCategoryDepthExceeded', 'CategoryDoesNotExist', 'CategoryModeratorDoesNotExist', 'CategoryNotEmptyThreads', 'CategoryNotEmptyCategories', 'ModeratorCantDeleteCategory', 'ModeratorCantUpdateCategory', 'MapSizeLimit', 'PathLengthShouldBeGreaterThanZero', 'MaxNumberOfStickiedThreadsExceeded']
     },
     /**
-     * Lookup546: pallet_constitution::ConstitutionInfo<primitive_types::H256>
+     * Lookup555: pallet_constitution::ConstitutionInfo<primitive_types::H256>
      **/
     PalletConstitutionConstitutionInfo: {
         textHash: 'H256'
     },
     /**
-     * Lookup547: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup556: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyRecord: {
         creationParams: 'PalletBountyBountyParametersBoundedBTreeSet',
@@ -4323,7 +4391,7 @@ exports.default = {
         hasUnpaidOracleReward: 'bool'
     },
     /**
-     * Lookup549: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup558: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyParametersBoundedBTreeSet: {
         oracle: 'PalletBountyBountyActor',
@@ -4335,7 +4403,7 @@ exports.default = {
         fundingType: 'PalletBountyFundingType'
     },
     /**
-     * Lookup550: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup559: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyAssuranceContractTypeBoundedBTreeSet: {
         _enum: {
@@ -4344,7 +4412,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup551: pallet_bounty::BountyMilestone<BlockNumber>
+     * Lookup560: pallet_bounty::BountyMilestone<BlockNumber>
      **/
     PalletBountyBountyMilestone: {
         _enum: {
@@ -4361,14 +4429,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup553: pallet_bounty::Contribution<T>
+     * Lookup562: pallet_bounty::Contribution<T>
      **/
     PalletBountyContribution: {
         amount: 'u128',
         funderStateBloatBondAmount: 'u128'
     },
     /**
-     * Lookup554: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
+     * Lookup563: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
      **/
     PalletBountyEntryRecord: {
         memberId: 'u64',
@@ -4377,19 +4445,19 @@ exports.default = {
         workSubmitted: 'bool'
     },
     /**
-     * Lookup555: pallet_bounty::Error<T>
+     * Lookup564: pallet_bounty::Error<T>
      **/
     PalletBountyError: {
         _enum: ['ArithmeticError', 'MinFundingAmountCannotBeGreaterThanMaxAmount', 'BountyDoesntExist', 'SwitchOracleOriginIsRoot', 'InvalidStageUnexpectedFunding', 'InvalidStageUnexpectedNoFundingContributed', 'InvalidStageUnexpectedCancelled', 'InvalidStageUnexpectedWorkSubmission', 'InvalidStageUnexpectedJudgment', 'InvalidStageUnexpectedSuccessfulBountyWithdrawal', 'InvalidStageUnexpectedFailedBountyWithdrawal', 'InsufficientBalanceForBounty', 'NoBountyContributionFound', 'InsufficientBalanceForStake', 'ConflictingStakes', 'WorkEntryDoesntExist', 'CherryLessThenMinimumAllowed', 'CannotSubmitWorkToClosedContractBounty', 'ClosedContractMemberListIsEmpty', 'ClosedContractMemberListIsTooLarge', 'ClosedContractMemberNotFound', 'InvalidOracleMemberId', 'InvalidStakingAccountForMember', 'ZeroWinnerReward', 'TotalRewardShouldBeEqualToTotalFunding', 'EntrantStakeIsLessThanMininum', 'FundingAmountCannotBeZero', 'FundingPeriodCannotBeZero', 'WinnerShouldHasWorkSubmission', 'InvalidContributorActorSpecified', 'InvalidOracleActorSpecified', 'InvalidEntrantWorkerSpecified', 'InvalidCreatorActorSpecified', 'WorkEntryDoesntBelongToWorker', 'OracleRewardAlreadyWithdrawn']
     },
     /**
-     * Lookup556: pallet_joystream_utility::Error<T>
+     * Lookup565: pallet_joystream_utility::Error<T>
      **/
     PalletJoystreamUtilityError: {
         _enum: ['InsufficientFundsForBudgetUpdate', 'ZeroTokensBurn', 'InsufficientFundsForBurn']
     },
     /**
-     * Lookup557: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup566: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentVideoRecord: {
         inChannel: 'u64',
@@ -4398,7 +4466,7 @@ exports.default = {
         videoStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
     },
     /**
-     * Lookup558: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
+     * Lookup567: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
      **/
     PalletContentNftTypesOwnedNft: {
         owner: 'PalletContentNftTypesNftOwner',
@@ -4407,7 +4475,7 @@ exports.default = {
         openAuctionsNonce: 'u64'
     },
     /**
-     * Lookup559: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
+     * Lookup568: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
      **/
     PalletContentNftTypesTransactionalStatusRecord: {
         _enum: {
@@ -4419,7 +4487,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup560: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup569: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesEnglishAuctionRecord: {
         startingPrice: 'u128',
@@ -4432,14 +4500,14 @@ exports.default = {
         topBid: 'Option<PalletContentNftTypesEnglishAuctionBid>'
     },
     /**
-     * Lookup563: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
+     * Lookup572: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionBid: {
         amount: 'u128',
         bidderId: 'u64'
     },
     /**
-     * Lookup564: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup573: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesOpenAuctionRecord: {
         startingPrice: 'u128',
@@ -4450,7 +4518,7 @@ exports.default = {
         start: 'u32'
     },
     /**
-     * Lookup565: pallet_content::nft::types::NftOwner<MemberId>
+     * Lookup574: pallet_content::nft::types::NftOwner<MemberId>
      **/
     PalletContentNftTypesNftOwner: {
         _enum: {
@@ -4459,7 +4527,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup568: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
+     * Lookup577: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
      **/
     PalletContentPermissionsCuratorGroupCuratorGroupRecord: {
         curators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -4467,7 +4535,7 @@ exports.default = {
         permissionsByLevel: 'BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>'
     },
     /**
-     * Lookup575: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
+     * Lookup584: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
      **/
     PalletContentNftTypesOpenAuctionBidRecord: {
         amount: 'u128',
@@ -4475,13 +4543,13 @@ exports.default = {
         auctionId: 'u64'
     },
     /**
-     * Lookup576: pallet_content::errors::Error<T>
+     * Lookup585: pallet_content::errors::Error<T>
      **/
     PalletContentErrorsError: {
         _enum: ['ChannelStateBloatBondChanged', 'VideoStateBloatBondChanged', 'MinCashoutValueTooLow', 'MaxCashoutValueTooHigh', 'MaxNumberOfChannelCollaboratorsExceeded', 'MaxNumberOfChannelAssetsExceeded', 'MaxNumberOfVideoAssetsExceeded', 'MaxNumberOfChannelAgentPermissionsExceeded', 'MaxNumberOfPausedFeaturesPerChannelExceeded', 'InvalidChannelBagWitnessProvided', 'InvalidStorageBucketsNumWitnessProvided', 'MissingStorageBucketsNumWitness', 'ChannelOwnerMemberDoesNotExist', 'ChannelOwnerCuratorGroupDoesNotExist', 'ChannelStateBloatBondBelowExistentialDeposit', 'NumberOfAssetsToRemoveIsZero', 'CuratorIsNotAMemberOfGivenCuratorGroup', 'CuratorIsAlreadyAMemberOfGivenCuratorGroup', 'CuratorGroupDoesNotExist', 'CuratorsPerGroupLimitReached', 'CuratorGroupIsNotActive', 'CuratorIdInvalid', 'LeadAuthFailed', 'MemberAuthFailed', 'CuratorAuthFailed', 'BadOrigin', 'ActorNotAuthorized', 'CategoryDoesNotExist', 'ChannelDoesNotExist', 'VideoDoesNotExist', 'VideoInSeason', 'ActorCannotBeLead', 'ActorCannotOwnChannel', 'NftAlreadyOwnedByChannel', 'NftAlreadyExists', 'NftDoesNotExist', 'OverflowOrUnderflowHappened', 'DoesNotOwnNft', 'RoyaltyUpperBoundExceeded', 'RoyaltyLowerBoundExceeded', 'AuctionDurationUpperBoundExceeded', 'AuctionDurationLowerBoundExceeded', 'ExtensionPeriodUpperBoundExceeded', 'ExtensionPeriodLowerBoundExceeded', 'BidLockDurationUpperBoundExceeded', 'BidLockDurationLowerBoundExceeded', 'StartingPriceUpperBoundExceeded', 'StartingPriceLowerBoundExceeded', 'AuctionBidStepUpperBoundExceeded', 'AuctionBidStepLowerBoundExceeded', 'InsufficientBalance', 'BidStepConstraintViolated', 'InvalidBidAmountSpecified', 'StartingPriceConstraintViolated', 'ActionHasBidsAlready', 'NftIsNotIdle', 'PendingOfferDoesNotExist', 'RewardAccountIsNotSet', 'ActorIsNotBidder', 'AuctionCannotBeCompleted', 'BidDoesNotExist', 'BidIsForPastAuction', 'StartsAtLowerBoundExceeded', 'StartsAtUpperBoundExceeded', 'AuctionDidNotStart', 'NotInAuctionState', 'MemberIsNotAllowedToParticipate', 'MemberProfileNotFound', 'NftNotInBuyNowState', 'InvalidBuyNowWitnessPriceProvided', 'IsNotOpenAuctionType', 'IsNotEnglishAuctionType', 'BidLockDurationIsNotExpired', 'NftAuctionIsAlreadyExpired', 'BuyNowMustBeGreaterThanStartingPrice', 'TargetMemberDoesNotExist', 'InvalidNftOfferWitnessPriceProvided', 'MaxAuctionWhiteListLengthUpperBoundExceeded', 'WhitelistHasOnlyOneMember', 'WhitelistedMemberDoesNotExist', 'NftNonChannelOwnerDoesNotExist', 'ExtensionPeriodIsGreaterThenAuctionDuration', 'NoAssetsSpecified', 'InvalidAssetsProvided', 'ChannelContainsVideos', 'ChannelContainsAssets', 'InvalidBagSizeSpecified', 'MigrationNotFinished', 'ReplyDoesNotExist', 'UnsufficientBalance', 'InsufficientTreasuryBalance', 'InvalidMemberProvided', 'ActorNotAMember', 'PaymentProofVerificationFailed', 'CashoutAmountExceedsMaximumAmount', 'CashoutAmountBelowMinimumAmount', 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance', 'WithdrawFromChannelAmountIsZero', 'ChannelCashoutsDisabled', 'MinCashoutAllowedExceedsMaxCashoutAllowed', 'CuratorModerationActionNotAllowed', 'MaxCuratorPermissionsPerLevelExceeded', 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded', 'ChannelFeaturePaused', 'ChannelBagMissing', 'AssetsToRemoveBeyondEntityAssetsSet', 'InvalidVideoDataObjectsCountProvided', 'InvalidChannelTransferStatus', 'InvalidChannelTransferAcceptor', 'InvalidChannelTransferCommitmentParams', 'ChannelAgentInsufficientPermissions', 'InvalidChannelOwner', 'ZeroReward', 'InsufficientBalanceForTransfer', 'InsufficientBalanceForChannelCreation', 'InsufficientBalanceForVideoCreation', 'InsufficientCouncilBudget', 'GlobalNftDailyLimitExceeded', 'GlobalNftWeeklyLimitExceeded', 'ChannelNftDailyLimitExceeded', 'ChannelNftWeeklyLimitExceeded', 'CreatorTokenAlreadyIssued', 'CreatorTokenNotIssued', 'MemberIdCouldNotBeDerivedFromActor', 'CannotWithdrawFromChannelWithCreatorTokenIssued', 'PatronageCanOnlyBeClaimedForMemberOwnedChannels', 'ChannelTransfersBlockedDuringRevenueSplits', 'ChannelTransfersBlockedDuringTokenSales', 'ChannelTransfersBlockedDuringActiveAmm']
     },
     /**
-     * Lookup577: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
+     * Lookup586: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
      **/
     PalletStorageBagRecord: {
         storedBy: 'BTreeSet<u64>',
@@ -4490,7 +4558,7 @@ exports.default = {
         objectsNumber: 'u64'
     },
     /**
-     * Lookup580: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup589: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketRecord: {
         operatorStatus: 'PalletStorageStorageBucketOperatorStatus',
@@ -4499,7 +4567,7 @@ exports.default = {
         assignedBags: 'u64'
     },
     /**
-     * Lookup581: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup590: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketOperatorStatus: {
         _enum: {
@@ -4509,14 +4577,14 @@ exports.default = {
         }
     },
     /**
-     * Lookup583: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
+     * Lookup592: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
      **/
     PalletStorageDynamicBagCreationPolicy: {
         numberOfStorageBuckets: 'u32',
         families: 'BTreeMap<u64, u32>'
     },
     /**
-     * Lookup586: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup595: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletStorageDataObject: {
         _alias: {
@@ -4528,13 +4596,13 @@ exports.default = {
         ipfsContentId: 'Bytes'
     },
     /**
-     * Lookup587: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
+     * Lookup596: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketFamilyRecord: {
         nextDistributionBucketIndex: 'u64'
     },
     /**
-     * Lookup588: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup597: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletStorageDistributionBucketRecord: {
         acceptingNewBags: 'bool',
@@ -4544,13 +4612,13 @@ exports.default = {
         assignedBags: 'u64'
     },
     /**
-     * Lookup591: pallet_storage::Error<T>
+     * Lookup600: pallet_storage::Error<T>
      **/
     PalletStorageError: {
         _enum: ['ArithmeticError', 'InvalidCidLength', 'NoObjectsOnUpload', 'StorageBucketDoesntExist', 'StorageBucketIsNotBoundToBag', 'StorageBucketIsBoundToBag', 'NoStorageBucketInvitation', 'StorageProviderAlreadySet', 'StorageProviderMustBeSet', 'DifferentStorageProviderInvited', 'InvitedStorageProvider', 'StorageBucketIdCollectionsAreEmpty', 'StorageBucketsNumberViolatesDynamicBagCreationPolicy', 'DistributionBucketsViolatesDynamicBagCreationPolicy', 'EmptyContentId', 'ZeroObjectSize', 'InvalidStateBloatBondSourceAccount', 'InvalidStorageProvider', 'InsufficientBalance', 'DataObjectDoesntExist', 'UploadingBlocked', 'DataObjectIdCollectionIsEmpty', 'SourceAndDestinationBagsAreEqual', 'DataObjectBlacklisted', 'BlacklistSizeLimitExceeded', 'VoucherMaxObjectSizeLimitExceeded', 'VoucherMaxObjectNumberLimitExceeded', 'StorageBucketObjectNumberLimitReached', 'StorageBucketObjectSizeLimitReached', 'InsufficientTreasuryBalance', 'CannotDeleteNonEmptyStorageBucket', 'DataObjectIdParamsAreEmpty', 'StorageBucketsPerBagLimitTooLow', 'StorageBucketsPerBagLimitTooHigh', 'StorageBucketPerBagLimitExceeded', 'StorageBucketDoesntAcceptNewBags', 'DynamicBagExists', 'DynamicBagDoesntExist', 'StorageProviderOperatorDoesntExist', 'DataSizeFeeChanged', 'DataObjectStateBloatBondChanged', 'CannotDeleteNonEmptyDynamicBag', 'MaxDistributionBucketFamilyNumberLimitExceeded', 'DistributionBucketFamilyDoesntExist', 'DistributionBucketDoesntExist', 'DistributionBucketIdCollectionsAreEmpty', 'DistributionBucketDoesntAcceptNewBags', 'MaxDistributionBucketNumberPerBagLimitExceeded', 'DistributionBucketIsNotBoundToBag', 'DistributionBucketIsBoundToBag', 'DistributionBucketsPerBagLimitTooLow', 'DistributionBucketsPerBagLimitTooHigh', 'DistributionProviderOperatorDoesntExist', 'DistributionProviderOperatorAlreadyInvited', 'DistributionProviderOperatorSet', 'NoDistributionBucketInvitation', 'MustBeDistributionProviderOperatorForBucket', 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached', 'MaxNumberOfOperatorsPerDistributionBucketReached', 'DistributionFamilyBoundToBagCreationPolicy', 'MaxDataObjectSizeExceeded', 'InvalidTransactorAccount', 'NumberOfStorageBucketsOutsideOfAllowedContraints', 'NumberOfDistributionBucketsOutsideOfAllowedContraints', 'CallDisabled']
     },
     /**
-     * Lookup592: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
+     * Lookup601: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
      **/
     PalletProjectTokenAccountData: {
         vestingSchedules: 'BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>',
@@ -4561,14 +4629,14 @@ exports.default = {
         lastSaleTotalPurchasedAmount: 'Option<(u32,u128)>'
     },
     /**
-     * Lookup593: pallet_project_token::types::StakingStatus<Balance>
+     * Lookup602: pallet_project_token::types::StakingStatus<Balance>
      **/
     PalletProjectTokenStakingStatus: {
         splitId: 'u32',
         amount: 'u128'
     },
     /**
-     * Lookup595: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
+     * Lookup604: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
      **/
     PalletProjectTokenVestingSchedule: {
         linearVestingStartBlock: 'u32',
@@ -4578,7 +4646,7 @@ exports.default = {
         burnedAmount: 'u128'
     },
     /**
-     * Lookup602: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
+     * Lookup611: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
      **/
     PalletProjectTokenTokenData: {
         totalSupply: 'u128',
@@ -4594,7 +4662,7 @@ exports.default = {
         ammCurve: 'Option<PalletProjectTokenAmmCurve>'
     },
     /**
-     * Lookup603: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
+     * Lookup612: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitState: {
         _enum: {
@@ -4603,7 +4671,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup604: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
+     * Lookup613: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitInfo: {
         allocation: 'u128',
@@ -4611,14 +4679,14 @@ exports.default = {
         dividendsClaimed: 'u128'
     },
     /**
-     * Lookup605: pallet_project_token::types::Timeline<BlockNumber>
+     * Lookup614: pallet_project_token::types::Timeline<BlockNumber>
      **/
     PalletProjectTokenTimeline: {
         start: 'u32',
         duration: 'u32'
     },
     /**
-     * Lookup607: pallet_project_token::types::PatronageData<Balance, BlockNumber>
+     * Lookup616: pallet_project_token::types::PatronageData<Balance, BlockNumber>
      **/
     PalletProjectTokenPatronageData: {
         rate: 'Permill',
@@ -4626,13 +4694,13 @@ exports.default = {
         lastUnclaimedPatronageTallyBlock: 'u32'
     },
     /**
-     * Lookup609: pallet_project_token::errors::Error<T>
+     * Lookup618: pallet_project_token::errors::Error<T>
      **/
     PalletProjectTokenErrorsError: {
         _enum: ['ArithmeticError', 'InsufficientTransferrableBalance', 'TokenDoesNotExist', 'AccountInformationDoesNotExist', 'TransferDestinationMemberDoesNotExist', 'MerkleProofVerificationFailure', 'TokenSymbolAlreadyInUse', 'InitialAllocationToNonExistingMember', 'AccountAlreadyExists', 'TooManyTransferOutputs', 'TokenIssuanceNotInIdleState', 'InsufficientJoyBalance', 'JoyTransferSubjectToDusting', 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode', 'AttemptToRemoveNonEmptyAccount', 'CannotJoinWhitelistInPermissionlessMode', 'CannotDeissueTokenWithOutstandingAccounts', 'NoUpcomingSale', 'NoActiveSale', 'InsufficientBalanceForTokenPurchase', 'NotEnoughTokensOnSale', 'SaleStartingBlockInThePast', 'SaleAccessProofRequired', 'SaleAccessProofParticipantIsNotSender', 'SalePurchaseCapExceeded', 'MaxVestingSchedulesPerAccountPerTokenReached', 'PreviousSaleNotFinalized', 'NoTokensToRecover', 'SaleDurationTooShort', 'SaleDurationIsZero', 'SaleUpperBoundQuantityIsZero', 'SaleCapPerMemberIsZero', 'SaleUnitPriceIsZero', 'SalePurchaseAmountIsZero', 'CannotInitSaleIfAmmIsActive', 'RevenueSplitTimeToStartTooShort', 'RevenueSplitDurationTooShort', 'RevenueSplitAlreadyActiveForToken', 'RevenueSplitNotActiveForToken', 'RevenueSplitDidNotEnd', 'RevenueSplitNotOngoing', 'UserAlreadyParticipating', 'InsufficientBalanceForSplitParticipation', 'UserNotParticipantingInAnySplit', 'CannotParticipateInSplitWithZeroAmount', 'CannotIssueSplitWithZeroAllocationAmount', 'CannotModifySupplyWhenRevenueSplitsAreActive', 'RevenueSplitRateIsZero', 'BurnAmountIsZero', 'BurnAmountGreaterThanAccountTokensAmount', 'NotInAmmState', 'InvalidCurveParameters', 'DeadlineExpired', 'SlippageToleranceExceeded', 'InsufficientTokenBalance', 'OutstandingAmmProvidedSupplyTooLarge', 'CurveSlopeParametersTooLow', 'NotEnoughTokenMintedByAmmForThisSale', 'TargetPatronageRateIsHigherThanCurrentRate', 'YearlyPatronageRateLimitExceeded', 'PalletFrozen']
     },
     /**
-     * Lookup610: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
+     * Lookup619: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
      **/
     PalletProposalsEngineProposal: {
         parameters: 'PalletProposalsEngineProposalParameters',
@@ -4645,7 +4713,7 @@ exports.default = {
         stakingAccountId: 'Option<AccountId32>'
     },
     /**
-     * Lookup611: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
+     * Lookup620: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
      **/
     PalletProposalsEngineProposalParameters: {
         votingPeriod: 'u32',
@@ -4658,7 +4726,7 @@ exports.default = {
         constitutionality: 'u32'
     },
     /**
-     * Lookup612: pallet_proposals_engine::types::VotingResults
+     * Lookup621: pallet_proposals_engine::types::VotingResults
      **/
     PalletProposalsEngineVotingResults: {
         abstentions: 'u32',
@@ -4667,13 +4735,13 @@ exports.default = {
         slashes: 'u32'
     },
     /**
-     * Lookup615: pallet_proposals_engine::Error<T>
+     * Lookup624: pallet_proposals_engine::Error<T>
      **/
     PalletProposalsEngineError: {
         _enum: ['ArithmeticError', 'EmptyTitleProvided', 'EmptyDescriptionProvided', 'TitleIsTooLong', 'DescriptionIsTooLong', 'ProposalNotFound', 'ProposalFinalized', 'AlreadyVoted', 'NotAuthor', 'MaxActiveProposalNumberExceeded', 'EmptyStake', 'StakeShouldBeEmpty', 'StakeDiffersFromRequired', 'InvalidParameterApprovalThreshold', 'InvalidParameterSlashingThreshold', 'RequireRootOrigin', 'ProposalHasVotes', 'ZeroExactExecutionBlock', 'InvalidExactExecutionBlock', 'InsufficientBalanceForStake', 'ConflictingStakes', 'InvalidStakingAccountForMember', 'MaxDispatchableCallCodeSizeExceeded']
     },
     /**
-     * Lookup616: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup625: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionDiscussionThread: {
         activatedAt: 'u32',
@@ -4681,7 +4749,7 @@ exports.default = {
         mode: 'PalletProposalsDiscussionThreadModeBoundedBTreeSet'
     },
     /**
-     * Lookup618: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup627: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionThreadModeBoundedBTreeSet: {
         _enum: {
@@ -4690,7 +4758,7 @@ exports.default = {
         }
     },
     /**
-     * Lookup619: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup628: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletProposalsDiscussionDiscussionPost: {
         authorId: 'u64',
@@ -4698,19 +4766,19 @@ exports.default = {
         lastEdited: 'u32'
     },
     /**
-     * Lookup620: pallet_proposals_discussion::Error<T>
+     * Lookup629: pallet_proposals_discussion::Error<T>
      **/
     PalletProposalsDiscussionError: {
         _enum: ['ArithmeticError', 'ThreadDoesntExist', 'PostDoesntExist', 'RequireRootOrigin', 'CannotPostOnClosedThread', 'NotAuthorOrCouncilor', 'MaxWhiteListSizeExceeded', 'WhitelistedMemberDoesNotExist', 'InsufficientBalanceForPost', 'CannotDeletePost']
     },
     /**
-     * Lookup621: pallet_proposals_codex::Error<T>
+     * Lookup630: pallet_proposals_codex::Error<T>
      **/
     PalletProposalsCodexError: {
         _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError', 'ReductionAmountZero']
     },
     /**
-     * Lookup622: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
+     * Lookup631: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
      **/
     PalletWorkingGroupOpening: {
         openingType: 'PalletWorkingGroupOpeningType',
@@ -4721,7 +4789,7 @@ exports.default = {
         creationStake: 'u128'
     },
     /**
-     * Lookup623: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
+     * Lookup632: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
      **/
     PalletWorkingGroupJobApplication: {
         roleAccountId: 'AccountId32',
@@ -4732,7 +4800,7 @@ exports.default = {
         openingId: 'u64'
     },
     /**
-     * Lookup624: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
+     * Lookup633: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
      **/
     PalletWorkingGroupGroupWorker: {
         memberId: 'u64',
@@ -4746,13 +4814,13 @@ exports.default = {
         createdAt: 'u32'
     },
     /**
-     * Lookup625: pallet_working_group::errors::Error<T, I>
+     * Lookup634: pallet_working_group::errors::Error<T, I>
      **/
     PalletWorkingGroupErrorsError: {
         _enum: ['ArithmeticError', 'StakeBalanceCannotBeZero', 'OpeningDoesNotExist', 'CannotHireMultipleLeaders', 'WorkerApplicationDoesNotExist', 'MaxActiveWorkerNumberExceeded', 'SuccessfulWorkerApplicationDoesNotExist', 'CannotHireLeaderWhenLeaderExists', 'IsNotLeadAccount', 'CurrentLeadNotSet', 'WorkerDoesNotExist', 'InvalidMemberOrigin', 'SignerIsNotWorkerRoleAccount', 'BelowMinimumStakes', 'InsufficientBalanceToCoverStake', 'ApplicationStakeDoesntMatchOpening', 'OriginIsNotApplicant', 'WorkerIsLeaving', 'CannotRewardWithZero', 'InvalidStakingAccountForMember', 'ConflictStakesOnAccount', 'WorkerHasNoReward', 'UnstakingPeriodLessThanMinimum', 'CannotSpendZero', 'InsufficientBudgetForSpending', 'NoApplicationsProvided', 'CannotDecreaseStakeDeltaGreaterThanStake', 'ApplicationsNotForOpening', 'WorkerStorageValueTooLong', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'InsufficientBalanceForTransfer']
     },
     /**
-     * Lookup636: pallet_proxy::ProxyDefinition<sp_core::crypto::AccountId32, joystream_node_runtime::ProxyType, BlockNumber>
+     * Lookup645: pallet_proxy::ProxyDefinition<sp_core::crypto::AccountId32, joystream_node_runtime::ProxyType, BlockNumber>
      **/
     PalletProxyProxyDefinition: {
         delegate: 'AccountId32',
@@ -4760,7 +4828,7 @@ exports.default = {
         delay: 'u32'
     },
     /**
-     * Lookup640: pallet_proxy::Announcement<sp_core::crypto::AccountId32, primitive_types::H256, BlockNumber>
+     * Lookup649: pallet_proxy::Announcement<sp_core::crypto::AccountId32, primitive_types::H256, BlockNumber>
      **/
     PalletProxyAnnouncement: {
         real: 'AccountId32',
@@ -4768,13 +4836,25 @@ exports.default = {
         height: 'u32'
     },
     /**
-     * Lookup642: pallet_proxy::pallet::Error<T>
+     * Lookup651: pallet_proxy::pallet::Error<T>
      **/
     PalletProxyError: {
         _enum: ['TooMany', 'NotFound', 'NotProxy', 'Unproxyable', 'Duplicate', 'NoPermission', 'Unannounced', 'NoSelfProxy']
     },
     /**
-     * Lookup644: sp_runtime::MultiSignature
+     * Lookup652: pallet_argo_bridge::types::BridgeStatus<BlockNumber>
+     **/
+    PalletArgoBridgeBridgeStatus: {
+        _enum: {
+            Active: 'Null',
+            Paused: 'Null',
+            Thawn: {
+                thawnEndsAt: 'u32'
+            }
+        }
+    },
+    /**
+     * Lookup655: sp_runtime::MultiSignature
      **/
     SpRuntimeMultiSignature: {
         _enum: {
@@ -4784,39 +4864,39 @@ exports.default = {
         }
     },
     /**
-     * Lookup645: sp_core::ecdsa::Signature
+     * Lookup656: sp_core::ecdsa::Signature
      **/
     SpCoreEcdsaSignature: '[u8;65]',
     /**
-     * Lookup648: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
+     * Lookup659: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
      **/
     FrameSystemExtensionsCheckNonZeroSender: 'Null',
     /**
-     * Lookup649: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
+     * Lookup660: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
      **/
     FrameSystemExtensionsCheckSpecVersion: 'Null',
     /**
-     * Lookup650: frame_system::extensions::check_tx_version::CheckTxVersion<T>
+     * Lookup661: frame_system::extensions::check_tx_version::CheckTxVersion<T>
      **/
     FrameSystemExtensionsCheckTxVersion: 'Null',
     /**
-     * Lookup651: frame_system::extensions::check_genesis::CheckGenesis<T>
+     * Lookup662: frame_system::extensions::check_genesis::CheckGenesis<T>
      **/
     FrameSystemExtensionsCheckGenesis: 'Null',
     /**
-     * Lookup654: frame_system::extensions::check_nonce::CheckNonce<T>
+     * Lookup665: frame_system::extensions::check_nonce::CheckNonce<T>
      **/
     FrameSystemExtensionsCheckNonce: 'Compact<u32>',
     /**
-     * Lookup655: frame_system::extensions::check_weight::CheckWeight<T>
+     * Lookup666: frame_system::extensions::check_weight::CheckWeight<T>
      **/
     FrameSystemExtensionsCheckWeight: 'Null',
     /**
-     * Lookup656: pallet_transaction_payment::ChargeTransactionPayment<T>
+     * Lookup667: pallet_transaction_payment::ChargeTransactionPayment<T>
      **/
     PalletTransactionPaymentChargeTransactionPayment: 'Compact<u128>',
     /**
-     * Lookup657: joystream_node_runtime::Runtime
+     * Lookup668: joystream_node_runtime::Runtime
      **/
     JoystreamNodeRuntimeRuntime: 'Null'
 };
diff --git a/lib/mjs/augment/lookup.js b/lib/mjs/augment/lookup.js
index 8593573b5abfdaf833b6089e6cdc941262573d46..4f6b852adc13d867025a663f6e8dc9b42281a15e 100644
--- a/lib/mjs/augment/lookup.js
+++ b/lib/mjs/augment/lookup.js
@@ -1482,7 +1482,7 @@ export default {
         }
     },
     /**
-     * Lookup214: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>, ProposalId, ThreadId>
+     * Lookup214: pallet_proposals_codex::RawEvent<pallet_proposals_codex::types::GeneralProposalParams<MemberId, sp_core::crypto::AccountId32, BlockNumber>, pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>, pallet_argo_bridge::types::BridgeConstraints<sp_core::crypto::AccountId32, Balance, BlockNumber>>, ProposalId, ThreadId>
      **/
     PalletProposalsCodexRawEvent: {
         _enum: {
@@ -1500,7 +1500,7 @@ export default {
         exactExecutionBlock: 'Option<u32>'
     },
     /**
-     * Lookup216: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>>
+     * Lookup216: pallet_proposals_codex::types::ProposalDetails<Balance, BlockNumber, sp_core::crypto::AccountId32, WorkerId, OpeningId, ProposalId, pallet_content::types::UpdateChannelPayoutsParametersRecord<pallet_content::types::ChannelPayoutsPayloadParametersRecord<Balance>, Balance, primitive_types::H256>, pallet_project_token::types::TokenConstraints<Balance, BlockNumber, JoyBalance>, pallet_argo_bridge::types::BridgeConstraints<sp_core::crypto::AccountId32, Balance, BlockNumber>>
      **/
     PalletProposalsCodexProposalDetails: {
         _enum: {
@@ -1529,19 +1529,30 @@ export default {
             UpdateChannelPayouts: 'PalletContentUpdateChannelPayoutsParametersRecord',
             SetPalletFozenStatus: '(bool,PalletCommonFreezablePallet)',
             UpdateTokenPalletTokenConstraints: 'PalletProjectTokenTokenConstraints',
+            UpdateArgoBridgeConstraints: 'PalletArgoBridgeBridgeConstraints',
             SetEraPayoutDampingFactor: 'Percent',
             DecreaseCouncilBudget: 'u128'
         }
     },
     /**
-     * Lookup218: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
+     * Lookup217: pallet_argo_bridge::types::BridgeConstraints<sp_core::crypto::AccountId32, Balance, BlockNumber>
+     **/
+    PalletArgoBridgeBridgeConstraints: {
+        operatorAccount: 'Option<AccountId32>',
+        pauserAccounts: 'Option<Vec<AccountId32>>',
+        bridgingFee: 'Option<u128>',
+        thawnDuration: 'Option<u32>',
+        remoteChains: 'Option<Vec<u32>>'
+    },
+    /**
+     * Lookup224: pallet_common::FundingRequestParameters<Balance, sp_core::crypto::AccountId32>
      **/
     PalletCommonFundingRequestParameters: {
         account: 'AccountId32',
         amount: 'u128'
     },
     /**
-     * Lookup219: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
+     * Lookup225: pallet_proposals_codex::types::CreateOpeningParameters<BlockNumber, Balance>
      **/
     PalletProposalsCodexCreateOpeningParameters: {
         description: 'Bytes',
@@ -1550,14 +1561,14 @@ export default {
         group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup220: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
+     * Lookup226: pallet_working_group::types::StakePolicy<BlockNumber, Balance>
      **/
     PalletWorkingGroupStakePolicy: {
         stakeAmount: 'u128',
         leavingUnstakingPeriod: 'u32'
     },
     /**
-     * Lookup221: pallet_proposals_codex::types::FillOpeningParameters
+     * Lookup227: pallet_proposals_codex::types::FillOpeningParameters
      **/
     PalletProposalsCodexFillOpeningParameters: {
         openingId: 'u64',
@@ -1565,7 +1576,7 @@ export default {
         workingGroup: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup222: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
+     * Lookup228: pallet_proposals_codex::types::TerminateRoleParameters<WorkerId, Balance>
      **/
     PalletProposalsCodexTerminateRoleParameters: {
         workerId: 'u64',
@@ -1573,13 +1584,13 @@ export default {
         group: 'PalletCommonWorkingGroupIterableEnumsWorkingGroup'
     },
     /**
-     * Lookup223: pallet_common::FreezablePallet
+     * Lookup229: pallet_common::FreezablePallet
      **/
     PalletCommonFreezablePallet: {
         _enum: ['ProjectToken']
     },
     /**
-     * Lookup224: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance1>
+     * Lookup230: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance1>
      **/
     PalletWorkingGroupRawEventInstance1: {
         _enum: {
@@ -1612,13 +1623,13 @@ export default {
         }
     },
     /**
-     * Lookup228: pallet_working_group::types::OpeningType
+     * Lookup234: pallet_working_group::types::OpeningType
      **/
     PalletWorkingGroupOpeningType: {
         _enum: ['Leader', 'Regular']
     },
     /**
-     * Lookup229: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
+     * Lookup235: pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupApplyOnOpeningParams: {
         memberId: 'u64',
@@ -1629,14 +1640,14 @@ export default {
         stakeParameters: 'PalletWorkingGroupStakeParameters'
     },
     /**
-     * Lookup230: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
+     * Lookup236: pallet_working_group::types::StakeParameters<sp_core::crypto::AccountId32, Balance>
      **/
     PalletWorkingGroupStakeParameters: {
         stake: 'u128',
         stakingAccountId: 'AccountId32'
     },
     /**
-     * Lookup231: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
+     * Lookup237: pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>
      **/
     PalletVestingVestingInfo: {
         locked: 'u128',
@@ -1644,17 +1655,17 @@ export default {
         startingBlock: 'u32'
     },
     /**
-     * Lookup232: pallet_working_group::Instance1
+     * Lookup238: pallet_working_group::Instance1
      **/
     PalletWorkingGroupInstance1: 'Null',
     /**
-     * Lookup233: pallet_working_group::types::RewardPaymentType
+     * Lookup239: pallet_working_group::types::RewardPaymentType
      **/
     PalletWorkingGroupRewardPaymentType: {
         _enum: ['MissedReward', 'RegularReward']
     },
     /**
-     * Lookup234: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance2>
+     * Lookup240: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance2>
      **/
     PalletWorkingGroupRawEventInstance2: {
         _enum: {
@@ -1687,11 +1698,11 @@ export default {
         }
     },
     /**
-     * Lookup235: pallet_working_group::Instance2
+     * Lookup241: pallet_working_group::Instance2
      **/
     PalletWorkingGroupInstance2: 'Null',
     /**
-     * Lookup236: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance3>
+     * Lookup242: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance3>
      **/
     PalletWorkingGroupRawEventInstance3: {
         _enum: {
@@ -1724,11 +1735,11 @@ export default {
         }
     },
     /**
-     * Lookup237: pallet_working_group::Instance3
+     * Lookup243: pallet_working_group::Instance3
      **/
     PalletWorkingGroupInstance3: 'Null',
     /**
-     * Lookup238: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance4>
+     * Lookup244: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance4>
      **/
     PalletWorkingGroupRawEventInstance4: {
         _enum: {
@@ -1761,11 +1772,11 @@ export default {
         }
     },
     /**
-     * Lookup239: pallet_working_group::Instance4
+     * Lookup245: pallet_working_group::Instance4
      **/
     PalletWorkingGroupInstance4: 'Null',
     /**
-     * Lookup240: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance5>
+     * Lookup246: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance5>
      **/
     PalletWorkingGroupRawEventInstance5: {
         _enum: {
@@ -1798,11 +1809,11 @@ export default {
         }
     },
     /**
-     * Lookup241: pallet_working_group::Instance5
+     * Lookup247: pallet_working_group::Instance5
      **/
     PalletWorkingGroupInstance5: 'Null',
     /**
-     * Lookup242: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance6>
+     * Lookup248: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance6>
      **/
     PalletWorkingGroupRawEventInstance6: {
         _enum: {
@@ -1835,11 +1846,11 @@ export default {
         }
     },
     /**
-     * Lookup243: pallet_working_group::Instance6
+     * Lookup249: pallet_working_group::Instance6
      **/
     PalletWorkingGroupInstance6: 'Null',
     /**
-     * Lookup244: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance7>
+     * Lookup250: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance7>
      **/
     PalletWorkingGroupRawEventInstance7: {
         _enum: {
@@ -1872,11 +1883,11 @@ export default {
         }
     },
     /**
-     * Lookup245: pallet_working_group::Instance7
+     * Lookup251: pallet_working_group::Instance7
      **/
     PalletWorkingGroupInstance7: 'Null',
     /**
-     * Lookup246: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance8>
+     * Lookup252: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance8>
      **/
     PalletWorkingGroupRawEventInstance8: {
         _enum: {
@@ -1909,11 +1920,11 @@ export default {
         }
     },
     /**
-     * Lookup247: pallet_working_group::Instance8
+     * Lookup253: pallet_working_group::Instance8
      **/
     PalletWorkingGroupInstance8: 'Null',
     /**
-     * Lookup248: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance9>
+     * Lookup254: pallet_working_group::RawEvent<OpeningId, ApplicationId, BTreeMap<K, V>, WorkerId, sp_core::crypto::AccountId32, Balance, pallet_working_group::types::OpeningType, pallet_working_group::types::StakePolicy<BlockNumber, Balance>, pallet_working_group::types::ApplyOnOpeningParams<MemberId, OpeningId, sp_core::crypto::AccountId32, Balance>, MemberId, primitive_types::H256, pallet_vesting::vesting_info::VestingInfo<Balance, BlockNumber>, pallet_working_group::Instance9>
      **/
     PalletWorkingGroupRawEventInstance9: {
         _enum: {
@@ -1946,11 +1957,11 @@ export default {
         }
     },
     /**
-     * Lookup249: pallet_working_group::Instance9
+     * Lookup255: pallet_working_group::Instance9
      **/
     PalletWorkingGroupInstance9: 'Null',
     /**
-     * Lookup250: pallet_proxy::pallet::Event<T>
+     * Lookup256: pallet_proxy::pallet::Event<T>
      **/
     PalletProxyEvent: {
         _enum: {
@@ -1983,13 +1994,41 @@ export default {
         }
     },
     /**
-     * Lookup251: joystream_node_runtime::ProxyType
+     * Lookup257: joystream_node_runtime::ProxyType
      **/
     JoystreamNodeRuntimeProxyType: {
         _enum: ['Any', 'NonTransfer', 'Governance', 'Referendum', 'Staking', 'StorageTransactor']
     },
     /**
-     * Lookup253: frame_system::Phase
+     * Lookup259: pallet_argo_bridge::events::RawEvent<sp_core::crypto::AccountId32, Balance, pallet_argo_bridge::types::BridgeConstraints<sp_core::crypto::AccountId32, Balance, BlockNumber>, BlockNumber>
+     **/
+    PalletArgoBridgeEventsRawEvent: {
+        _enum: {
+            OutboundTransferRequested: '(u64,AccountId32,PalletArgoBridgeRemoteAccount,u128,u128)',
+            InboundTransferFinalized: '(PalletArgoBridgeRemoteTransfer,AccountId32,u128)',
+            OutboundTransferReverted: '(u64,AccountId32,u128,Bytes)',
+            BridgePaused: 'AccountId32',
+            BridgeThawnStarted: '(AccountId32,u32)',
+            BridgeThawnFinished: 'Null',
+            BridgeConfigUpdated: 'PalletArgoBridgeBridgeConstraints'
+        }
+    },
+    /**
+     * Lookup260: pallet_argo_bridge::types::RemoteAccount
+     **/
+    PalletArgoBridgeRemoteAccount: {
+        account: '[u8;32]',
+        chainId: 'u32'
+    },
+    /**
+     * Lookup261: pallet_argo_bridge::types::RemoteTransfer
+     **/
+    PalletArgoBridgeRemoteTransfer: {
+        id: 'u64',
+        chainId: 'u32'
+    },
+    /**
+     * Lookup263: frame_system::Phase
      **/
     FrameSystemPhase: {
         _enum: {
@@ -1999,14 +2038,14 @@ export default {
         }
     },
     /**
-     * Lookup257: frame_system::LastRuntimeUpgradeInfo
+     * Lookup267: frame_system::LastRuntimeUpgradeInfo
      **/
     FrameSystemLastRuntimeUpgradeInfo: {
         specVersion: 'Compact<u32>',
         specName: 'Text'
     },
     /**
-     * Lookup260: frame_system::pallet::Call<T>
+     * Lookup270: frame_system::pallet::Call<T>
      **/
     FrameSystemCall: {
         _enum: {
@@ -2041,7 +2080,7 @@ export default {
         }
     },
     /**
-     * Lookup263: frame_system::limits::BlockWeights
+     * Lookup273: frame_system::limits::BlockWeights
      **/
     FrameSystemLimitsBlockWeights: {
         baseBlock: 'SpWeightsWeightV2Weight',
@@ -2049,7 +2088,7 @@ export default {
         perClass: 'FrameSupportDispatchPerDispatchClassWeightsPerClass'
     },
     /**
-     * Lookup264: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
+     * Lookup274: frame_support::dispatch::PerDispatchClass<frame_system::limits::WeightsPerClass>
      **/
     FrameSupportDispatchPerDispatchClassWeightsPerClass: {
         normal: 'FrameSystemLimitsWeightsPerClass',
@@ -2057,7 +2096,7 @@ export default {
         mandatory: 'FrameSystemLimitsWeightsPerClass'
     },
     /**
-     * Lookup265: frame_system::limits::WeightsPerClass
+     * Lookup275: frame_system::limits::WeightsPerClass
      **/
     FrameSystemLimitsWeightsPerClass: {
         baseExtrinsic: 'SpWeightsWeightV2Weight',
@@ -2066,13 +2105,13 @@ export default {
         reserved: 'Option<SpWeightsWeightV2Weight>'
     },
     /**
-     * Lookup267: frame_system::limits::BlockLength
+     * Lookup277: frame_system::limits::BlockLength
      **/
     FrameSystemLimitsBlockLength: {
         max: 'FrameSupportDispatchPerDispatchClassU32'
     },
     /**
-     * Lookup268: frame_support::dispatch::PerDispatchClass<T>
+     * Lookup278: frame_support::dispatch::PerDispatchClass<T>
      **/
     FrameSupportDispatchPerDispatchClassU32: {
         normal: 'u32',
@@ -2080,14 +2119,14 @@ export default {
         mandatory: 'u32'
     },
     /**
-     * Lookup269: sp_weights::RuntimeDbWeight
+     * Lookup279: sp_weights::RuntimeDbWeight
      **/
     SpWeightsRuntimeDbWeight: {
         read: 'u64',
         write: 'u64'
     },
     /**
-     * Lookup270: sp_version::RuntimeVersion
+     * Lookup280: sp_version::RuntimeVersion
      **/
     SpVersionRuntimeVersion: {
         specName: 'Text',
@@ -2100,13 +2139,13 @@ export default {
         stateVersion: 'u8'
     },
     /**
-     * Lookup275: frame_system::pallet::Error<T>
+     * Lookup285: frame_system::pallet::Error<T>
      **/
     FrameSystemError: {
         _enum: ['InvalidSpecName', 'SpecVersionNeedsToIncrease', 'FailedToExtractRuntimeVersion', 'NonDefaultComposite', 'NonZeroRefCount', 'CallFiltered']
     },
     /**
-     * Lookup276: pallet_utility::pallet::Call<T>
+     * Lookup286: pallet_utility::pallet::Call<T>
      **/
     PalletUtilityCall: {
         _enum: {
@@ -2134,7 +2173,7 @@ export default {
         }
     },
     /**
-     * Lookup279: pallet_babe::pallet::Call<T>
+     * Lookup289: pallet_babe::pallet::Call<T>
      **/
     PalletBabeCall: {
         _enum: {
@@ -2152,7 +2191,7 @@ export default {
         }
     },
     /**
-     * Lookup280: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
+     * Lookup290: sp_consensus_slots::EquivocationProof<sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>, sp_consensus_babe::app::Public>
      **/
     SpConsensusSlotsEquivocationProof: {
         offender: 'SpConsensusBabeAppPublic',
@@ -2161,7 +2200,7 @@ export default {
         secondHeader: 'SpRuntimeHeader'
     },
     /**
-     * Lookup281: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
+     * Lookup291: sp_runtime::generic::header::Header<Number, sp_runtime::traits::BlakeTwo256>
      **/
     SpRuntimeHeader: {
         parentHash: 'H256',
@@ -2171,15 +2210,15 @@ export default {
         digest: 'SpRuntimeDigest'
     },
     /**
-     * Lookup282: sp_runtime::traits::BlakeTwo256
+     * Lookup292: sp_runtime::traits::BlakeTwo256
      **/
     SpRuntimeBlakeTwo256: 'Null',
     /**
-     * Lookup283: sp_consensus_babe::app::Public
+     * Lookup293: sp_consensus_babe::app::Public
      **/
     SpConsensusBabeAppPublic: 'SpCoreSr25519Public',
     /**
-     * Lookup285: sp_session::MembershipProof
+     * Lookup295: sp_session::MembershipProof
      **/
     SpSessionMembershipProof: {
         session: 'u32',
@@ -2187,7 +2226,7 @@ export default {
         validatorCount: 'u32'
     },
     /**
-     * Lookup286: sp_consensus_babe::digests::NextConfigDescriptor
+     * Lookup296: sp_consensus_babe::digests::NextConfigDescriptor
      **/
     SpConsensusBabeDigestsNextConfigDescriptor: {
         _enum: {
@@ -2199,13 +2238,13 @@ export default {
         }
     },
     /**
-     * Lookup287: sp_consensus_babe::AllowedSlots
+     * Lookup297: sp_consensus_babe::AllowedSlots
      **/
     SpConsensusBabeAllowedSlots: {
         _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']
     },
     /**
-     * Lookup288: pallet_timestamp::pallet::Call<T>
+     * Lookup298: pallet_timestamp::pallet::Call<T>
      **/
     PalletTimestampCall: {
         _enum: {
@@ -2215,7 +2254,7 @@ export default {
         }
     },
     /**
-     * Lookup289: pallet_balances::pallet::Call<T, I>
+     * Lookup299: pallet_balances::pallet::Call<T, I>
      **/
     PalletBalancesCall: {
         _enum: {
@@ -2248,7 +2287,7 @@ export default {
         }
     },
     /**
-     * Lookup290: pallet_election_provider_multi_phase::pallet::Call<T>
+     * Lookup300: pallet_election_provider_multi_phase::pallet::Call<T>
      **/
     PalletElectionProviderMultiPhaseCall: {
         _enum: {
@@ -2272,7 +2311,7 @@ export default {
         }
     },
     /**
-     * Lookup291: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
+     * Lookup301: pallet_election_provider_multi_phase::RawSolution<joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseRawSolution: {
         solution: 'JoystreamNodeRuntimeNposSolution16',
@@ -2280,7 +2319,7 @@ export default {
         round: 'u32'
     },
     /**
-     * Lookup292: joystream_node_runtime::NposSolution16
+     * Lookup302: joystream_node_runtime::NposSolution16
      **/
     JoystreamNodeRuntimeNposSolution16: {
         votes1: 'Vec<(Compact<u32>,Compact<u16>)>',
@@ -2301,21 +2340,21 @@ export default {
         votes16: 'Vec<(Compact<u32>,[(Compact<u16>,Compact<PerU16>);15],Compact<u16>)>'
     },
     /**
-     * Lookup343: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
+     * Lookup353: pallet_election_provider_multi_phase::SolutionOrSnapshotSize
      **/
     PalletElectionProviderMultiPhaseSolutionOrSnapshotSize: {
         voters: 'Compact<u32>',
         targets: 'Compact<u32>'
     },
     /**
-     * Lookup347: sp_npos_elections::Support<sp_core::crypto::AccountId32>
+     * Lookup357: sp_npos_elections::Support<sp_core::crypto::AccountId32>
      **/
     SpNposElectionsSupport: {
         total: 'u128',
         voters: 'Vec<(AccountId32,u128)>'
     },
     /**
-     * Lookup349: pallet_staking::pallet::pallet::Call<T>
+     * Lookup359: pallet_staking::pallet::pallet::Call<T>
      **/
     PalletStakingPalletCall: {
         _enum: {
@@ -2409,7 +2448,7 @@ export default {
         }
     },
     /**
-     * Lookup350: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
+     * Lookup360: pallet_staking::RewardDestination<sp_core::crypto::AccountId32>
      **/
     PalletStakingRewardDestination: {
         _enum: {
@@ -2421,7 +2460,7 @@ export default {
         }
     },
     /**
-     * Lookup353: pallet_staking::pallet::pallet::ConfigOp<T>
+     * Lookup361: pallet_staking::pallet::pallet::ConfigOp<T>
      **/
     PalletStakingPalletConfigOpU128: {
         _enum: {
@@ -2431,7 +2470,7 @@ export default {
         }
     },
     /**
-     * Lookup354: pallet_staking::pallet::pallet::ConfigOp<T>
+     * Lookup362: pallet_staking::pallet::pallet::ConfigOp<T>
      **/
     PalletStakingPalletConfigOpU32: {
         _enum: {
@@ -2441,7 +2480,7 @@ export default {
         }
     },
     /**
-     * Lookup355: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
+     * Lookup363: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Percent>
      **/
     PalletStakingPalletConfigOpPercent: {
         _enum: {
@@ -2451,7 +2490,7 @@ export default {
         }
     },
     /**
-     * Lookup356: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
+     * Lookup364: pallet_staking::pallet::pallet::ConfigOp<sp_arithmetic::per_things::Perbill>
      **/
     PalletStakingPalletConfigOpPerbill: {
         _enum: {
@@ -2461,7 +2500,7 @@ export default {
         }
     },
     /**
-     * Lookup357: pallet_session::pallet::Call<T>
+     * Lookup365: pallet_session::pallet::Call<T>
      **/
     PalletSessionCall: {
         _enum: {
@@ -2476,7 +2515,7 @@ export default {
         }
     },
     /**
-     * Lookup358: joystream_node_runtime::SessionKeys
+     * Lookup366: joystream_node_runtime::SessionKeys
      **/
     JoystreamNodeRuntimeSessionKeys: {
         grandpa: 'SpConsensusGrandpaAppPublic',
@@ -2485,11 +2524,11 @@ export default {
         authorityDiscovery: 'SpAuthorityDiscoveryAppPublic'
     },
     /**
-     * Lookup359: sp_authority_discovery::app::Public
+     * Lookup367: sp_authority_discovery::app::Public
      **/
     SpAuthorityDiscoveryAppPublic: 'SpCoreSr25519Public',
     /**
-     * Lookup360: pallet_grandpa::pallet::Call<T>
+     * Lookup368: pallet_grandpa::pallet::Call<T>
      **/
     PalletGrandpaCall: {
         _enum: {
@@ -2508,14 +2547,14 @@ export default {
         }
     },
     /**
-     * Lookup361: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
+     * Lookup369: sp_consensus_grandpa::EquivocationProof<primitive_types::H256, N>
      **/
     SpConsensusGrandpaEquivocationProof: {
         setId: 'u64',
         equivocation: 'SpConsensusGrandpaEquivocation'
     },
     /**
-     * Lookup362: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
+     * Lookup370: sp_consensus_grandpa::Equivocation<primitive_types::H256, N>
      **/
     SpConsensusGrandpaEquivocation: {
         _enum: {
@@ -2524,7 +2563,7 @@ export default {
         }
     },
     /**
-     * Lookup363: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+     * Lookup371: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Prevote<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
      **/
     FinalityGrandpaEquivocationPrevote: {
         roundNumber: 'u64',
@@ -2533,22 +2572,22 @@ export default {
         second: '(FinalityGrandpaPrevote,SpConsensusGrandpaAppSignature)'
     },
     /**
-     * Lookup364: finality_grandpa::Prevote<primitive_types::H256, N>
+     * Lookup372: finality_grandpa::Prevote<primitive_types::H256, N>
      **/
     FinalityGrandpaPrevote: {
         targetHash: 'H256',
         targetNumber: 'u32'
     },
     /**
-     * Lookup365: sp_consensus_grandpa::app::Signature
+     * Lookup373: sp_consensus_grandpa::app::Signature
      **/
     SpConsensusGrandpaAppSignature: 'SpCoreEd25519Signature',
     /**
-     * Lookup366: sp_core::ed25519::Signature
+     * Lookup374: sp_core::ed25519::Signature
      **/
     SpCoreEd25519Signature: '[u8;64]',
     /**
-     * Lookup369: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
+     * Lookup377: finality_grandpa::Equivocation<sp_consensus_grandpa::app::Public, finality_grandpa::Precommit<primitive_types::H256, N>, sp_consensus_grandpa::app::Signature>
      **/
     FinalityGrandpaEquivocationPrecommit: {
         roundNumber: 'u64',
@@ -2557,14 +2596,14 @@ export default {
         second: '(FinalityGrandpaPrecommit,SpConsensusGrandpaAppSignature)'
     },
     /**
-     * Lookup370: finality_grandpa::Precommit<primitive_types::H256, N>
+     * Lookup378: finality_grandpa::Precommit<primitive_types::H256, N>
      **/
     FinalityGrandpaPrecommit: {
         targetHash: 'H256',
         targetNumber: 'u32'
     },
     /**
-     * Lookup372: pallet_im_online::pallet::Call<T>
+     * Lookup380: pallet_im_online::pallet::Call<T>
      **/
     PalletImOnlineCall: {
         _enum: {
@@ -2575,7 +2614,7 @@ export default {
         }
     },
     /**
-     * Lookup373: pallet_im_online::Heartbeat<BlockNumber>
+     * Lookup381: pallet_im_online::Heartbeat<BlockNumber>
      **/
     PalletImOnlineHeartbeat: {
         blockNumber: 'u32',
@@ -2585,22 +2624,22 @@ export default {
         validatorsLen: 'u32'
     },
     /**
-     * Lookup374: sp_core::offchain::OpaqueNetworkState
+     * Lookup382: sp_core::offchain::OpaqueNetworkState
      **/
     SpCoreOffchainOpaqueNetworkState: {
         peerId: 'OpaquePeerId',
         externalAddresses: 'Vec<OpaqueMultiaddr>'
     },
     /**
-     * Lookup378: pallet_im_online::sr25519::app_sr25519::Signature
+     * Lookup386: pallet_im_online::sr25519::app_sr25519::Signature
      **/
     PalletImOnlineSr25519AppSr25519Signature: 'SpCoreSr25519Signature',
     /**
-     * Lookup379: sp_core::sr25519::Signature
+     * Lookup387: sp_core::sr25519::Signature
      **/
     SpCoreSr25519Signature: '[u8;64]',
     /**
-     * Lookup380: pallet_bags_list::pallet::Call<T, I>
+     * Lookup388: pallet_bags_list::pallet::Call<T, I>
      **/
     PalletBagsListCall: {
         _enum: {
@@ -2613,7 +2652,7 @@ export default {
         }
     },
     /**
-     * Lookup381: pallet_vesting::pallet::Call<T>
+     * Lookup389: pallet_vesting::pallet::Call<T>
      **/
     PalletVestingCall: {
         _enum: {
@@ -2637,7 +2676,7 @@ export default {
         }
     },
     /**
-     * Lookup382: pallet_multisig::pallet::Call<T>
+     * Lookup390: pallet_multisig::pallet::Call<T>
      **/
     PalletMultisigCall: {
         _enum: {
@@ -2668,7 +2707,7 @@ export default {
         }
     },
     /**
-     * Lookup384: pallet_council::Call<T>
+     * Lookup392: pallet_council::Call<T>
      **/
     PalletCouncilCall: {
         _enum: {
@@ -2725,7 +2764,7 @@ export default {
         }
     },
     /**
-     * Lookup385: pallet_referendum::Call<T, I>
+     * Lookup393: pallet_referendum::Call<T, I>
      **/
     PalletReferendumCall: {
         _enum: {
@@ -2742,7 +2781,7 @@ export default {
         }
     },
     /**
-     * Lookup386: pallet_membership::Call<T>
+     * Lookup394: pallet_membership::Call<T>
      **/
     PalletMembershipCall: {
         _enum: {
@@ -2811,7 +2850,7 @@ export default {
         }
     },
     /**
-     * Lookup387: pallet_forum::Call<T>
+     * Lookup395: pallet_forum::Call<T>
      **/
     PalletForumCall: {
         _enum: {
@@ -2908,7 +2947,7 @@ export default {
         }
     },
     /**
-     * Lookup388: pallet_constitution::Call<T>
+     * Lookup396: pallet_constitution::Call<T>
      **/
     PalletConstitutionCall: {
         _enum: {
@@ -2918,7 +2957,7 @@ export default {
         }
     },
     /**
-     * Lookup389: pallet_bounty::Call<T>
+     * Lookup397: pallet_bounty::Call<T>
      **/
     PalletBountyCall: {
         _enum: {
@@ -2994,7 +3033,7 @@ export default {
         }
     },
     /**
-     * Lookup390: pallet_joystream_utility::Call<T>
+     * Lookup398: pallet_joystream_utility::Call<T>
      **/
     PalletJoystreamUtilityCall: {
         _enum: {
@@ -3015,7 +3054,7 @@ export default {
         }
     },
     /**
-     * Lookup391: pallet_content::Call<T>
+     * Lookup399: pallet_content::Call<T>
      **/
     PalletContentCall: {
         _enum: {
@@ -3324,14 +3363,14 @@ export default {
         }
     },
     /**
-     * Lookup392: pallet_content::types::ChannelBagWitness
+     * Lookup400: pallet_content::types::ChannelBagWitness
      **/
     PalletContentChannelBagWitness: {
         storageBucketsNum: 'u32',
         distributionBucketsNum: 'u32'
     },
     /**
-     * Lookup394: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
+     * Lookup402: pallet_common::merkle_tree::ProofElementRecord<primitive_types::H256, pallet_common::merkle_tree::Side>
      **/
     PalletCommonMerkleTreeProofElementRecord: {
         _alias: {
@@ -3341,13 +3380,13 @@ export default {
         side: 'PalletCommonMerkleTreeSide'
     },
     /**
-     * Lookup395: pallet_common::merkle_tree::Side
+     * Lookup403: pallet_common::merkle_tree::Side
      **/
     PalletCommonMerkleTreeSide: {
         _enum: ['Left', 'Right']
     },
     /**
-     * Lookup396: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
+     * Lookup404: pallet_content::types::PullPaymentElement<ChannelId, Balance, primitive_types::H256>
      **/
     PalletContentPullPaymentElement: {
         channelId: 'u64',
@@ -3355,7 +3394,7 @@ export default {
         reason: 'H256'
     },
     /**
-     * Lookup397: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
+     * Lookup405: pallet_content::types::InitTransferParameters<MemberId, CuratorGroupId, Balance>
      **/
     PalletContentInitTransferParameters: {
         newCollaborators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -3363,7 +3402,7 @@ export default {
         newOwner: 'PalletContentChannelOwner'
     },
     /**
-     * Lookup398: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
+     * Lookup406: pallet_project_token::types::TokenSaleParams<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>>
      **/
     PalletProjectTokenTokenSaleParams: {
         unitPrice: 'u128',
@@ -3375,14 +3414,14 @@ export default {
         metadata: 'Option<Bytes>'
     },
     /**
-     * Lookup402: pallet_project_token::types::AmmParams<Balance>
+     * Lookup410: pallet_project_token::types::AmmParams<Balance>
      **/
     PalletProjectTokenAmmParams: {
         slope: 'u128',
         intercept: 'u128'
     },
     /**
-     * Lookup403: pallet_storage::Call<T>
+     * Lookup411: pallet_storage::Call<T>
      **/
     PalletStorageCall: {
         _enum: {
@@ -3529,7 +3568,7 @@ export default {
         }
     },
     /**
-     * Lookup404: pallet_project_token::Call<T>
+     * Lookup412: pallet_project_token::Call<T>
      **/
     PalletProjectTokenCall: {
         _enum: {
@@ -3588,17 +3627,17 @@ export default {
         }
     },
     /**
-     * Lookup408: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
+     * Lookup416: pallet_project_token::types::MerkleProof<sp_runtime::traits::BlakeTwo256>
      **/
     PalletProjectTokenMerkleProof: 'Vec<(H256,PalletProjectTokenMerkleSide)>',
     /**
-     * Lookup411: pallet_project_token::types::MerkleSide
+     * Lookup419: pallet_project_token::types::MerkleSide
      **/
     PalletProjectTokenMerkleSide: {
         _enum: ['Right', 'Left']
     },
     /**
-     * Lookup414: pallet_proposals_engine::Call<T>
+     * Lookup422: pallet_proposals_engine::Call<T>
      **/
     PalletProposalsEngineCall: {
         _enum: {
@@ -3623,7 +3662,7 @@ export default {
         }
     },
     /**
-     * Lookup415: pallet_proposals_discussion::Call<T>
+     * Lookup423: pallet_proposals_discussion::Call<T>
      **/
     PalletProposalsDiscussionCall: {
         _enum: {
@@ -3652,7 +3691,7 @@ export default {
         }
     },
     /**
-     * Lookup416: pallet_proposals_codex::Call<T>
+     * Lookup424: pallet_proposals_codex::Call<T>
      **/
     PalletProposalsCodexCall: {
         _enum: {
@@ -3663,7 +3702,7 @@ export default {
         }
     },
     /**
-     * Lookup417: pallet_working_group::Call<T, I>
+     * Lookup425: pallet_working_group::Call<T, I>
      **/
     PalletWorkingGroupCall: {
         _enum: {
@@ -3751,7 +3790,7 @@ export default {
         }
     },
     /**
-     * Lookup426: pallet_proxy::pallet::Call<T>
+     * Lookup434: pallet_proxy::pallet::Call<T>
      **/
     PalletProxyCall: {
         _enum: {
@@ -3804,7 +3843,36 @@ export default {
         }
     },
     /**
-     * Lookup428: joystream_node_runtime::OriginCaller
+     * Lookup436: pallet_argo_bridge::Call<T>
+     **/
+    PalletArgoBridgeCall: {
+        _enum: {
+            request_outbound_transfer: {
+                destAccount: 'PalletArgoBridgeRemoteAccount',
+                amount: 'u128',
+                expectedFee: 'u128',
+            },
+            finalize_inbound_transfer: {
+                remoteTransfer: 'PalletArgoBridgeRemoteTransfer',
+                destAccount: 'AccountId32',
+                amount: 'u128',
+            },
+            revert_outbound_transfer: {
+                transferId: 'u64',
+                revertAccount: 'AccountId32',
+                revertAmount: 'u128',
+                rationale: 'Bytes',
+            },
+            pause_bridge: 'Null',
+            init_unpause_bridge: 'Null',
+            finish_unpause_bridge: 'Null',
+            update_bridge_constrains: {
+                parameters: 'PalletArgoBridgeBridgeConstraints'
+            }
+        }
+    },
+    /**
+     * Lookup437: joystream_node_runtime::OriginCaller
      **/
     JoystreamNodeRuntimeOriginCaller: {
         _enum: {
@@ -3813,7 +3881,7 @@ export default {
         }
     },
     /**
-     * Lookup429: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
+     * Lookup438: frame_support::dispatch::RawOrigin<sp_core::crypto::AccountId32>
      **/
     FrameSupportDispatchRawOrigin: {
         _enum: {
@@ -3823,17 +3891,17 @@ export default {
         }
     },
     /**
-     * Lookup430: sp_core::Void
+     * Lookup439: sp_core::Void
      **/
     SpCoreVoid: 'Null',
     /**
-     * Lookup431: pallet_utility::pallet::Error<T>
+     * Lookup440: pallet_utility::pallet::Error<T>
      **/
     PalletUtilityError: {
         _enum: ['TooManyCalls']
     },
     /**
-     * Lookup438: sp_consensus_babe::digests::PreDigest
+     * Lookup447: sp_consensus_babe::digests::PreDigest
      **/
     SpConsensusBabeDigestsPreDigest: {
         _enum: {
@@ -3844,7 +3912,7 @@ export default {
         }
     },
     /**
-     * Lookup439: sp_consensus_babe::digests::PrimaryPreDigest
+     * Lookup448: sp_consensus_babe::digests::PrimaryPreDigest
      **/
     SpConsensusBabeDigestsPrimaryPreDigest: {
         authorityIndex: 'u32',
@@ -3853,14 +3921,14 @@ export default {
         vrfProof: '[u8;64]'
     },
     /**
-     * Lookup440: sp_consensus_babe::digests::SecondaryPlainPreDigest
+     * Lookup449: sp_consensus_babe::digests::SecondaryPlainPreDigest
      **/
     SpConsensusBabeDigestsSecondaryPlainPreDigest: {
         authorityIndex: 'u32',
         slot: 'u64'
     },
     /**
-     * Lookup441: sp_consensus_babe::digests::SecondaryVRFPreDigest
+     * Lookup450: sp_consensus_babe::digests::SecondaryVRFPreDigest
      **/
     SpConsensusBabeDigestsSecondaryVRFPreDigest: {
         authorityIndex: 'u32',
@@ -3869,20 +3937,20 @@ export default {
         vrfProof: '[u8;64]'
     },
     /**
-     * Lookup443: sp_consensus_babe::BabeEpochConfiguration
+     * Lookup452: sp_consensus_babe::BabeEpochConfiguration
      **/
     SpConsensusBabeBabeEpochConfiguration: {
         c: '(u64,u64)',
         allowedSlots: 'SpConsensusBabeAllowedSlots'
     },
     /**
-     * Lookup445: pallet_babe::pallet::Error<T>
+     * Lookup454: pallet_babe::pallet::Error<T>
      **/
     PalletBabeError: {
         _enum: ['InvalidEquivocationProof', 'InvalidKeyOwnershipProof', 'DuplicateOffenceReport', 'InvalidConfiguration']
     },
     /**
-     * Lookup447: pallet_balances::BalanceLock<Balance>
+     * Lookup456: pallet_balances::BalanceLock<Balance>
      **/
     PalletBalancesBalanceLock: {
         id: '[u8;8]',
@@ -3890,32 +3958,32 @@ export default {
         reasons: 'PalletBalancesReasons'
     },
     /**
-     * Lookup448: pallet_balances::Reasons
+     * Lookup457: pallet_balances::Reasons
      **/
     PalletBalancesReasons: {
         _enum: ['Fee', 'Misc', 'All']
     },
     /**
-     * Lookup451: pallet_balances::ReserveData<ReserveIdentifier, Balance>
+     * Lookup460: pallet_balances::ReserveData<ReserveIdentifier, Balance>
      **/
     PalletBalancesReserveData: {
         id: '[u8;8]',
         amount: 'u128'
     },
     /**
-     * Lookup453: pallet_balances::pallet::Error<T, I>
+     * Lookup462: pallet_balances::pallet::Error<T, I>
      **/
     PalletBalancesError: {
         _enum: ['VestingBalance', 'LiquidityRestrictions', 'InsufficientBalance', 'ExistentialDeposit', 'KeepAlive', 'ExistingVestingSchedule', 'DeadAccount', 'TooManyReserves']
     },
     /**
-     * Lookup455: pallet_transaction_payment::Releases
+     * Lookup464: pallet_transaction_payment::Releases
      **/
     PalletTransactionPaymentReleases: {
         _enum: ['V1Ancient', 'V2']
     },
     /**
-     * Lookup456: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
+     * Lookup465: pallet_election_provider_multi_phase::ReadySolution<AccountId, MaxWinners>
      **/
     PalletElectionProviderMultiPhaseReadySolution: {
         supports: 'Vec<(AccountId32,SpNposElectionsSupport)>',
@@ -3923,14 +3991,14 @@ export default {
         compute: 'PalletElectionProviderMultiPhaseElectionCompute'
     },
     /**
-     * Lookup458: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
+     * Lookup467: pallet_election_provider_multi_phase::RoundSnapshot<sp_core::crypto::AccountId32, DataProvider>
      **/
     PalletElectionProviderMultiPhaseRoundSnapshot: {
         voters: 'Vec<(AccountId32,u64,Vec<AccountId32>)>',
         targets: 'Vec<AccountId32>'
     },
     /**
-     * Lookup465: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
+     * Lookup474: pallet_election_provider_multi_phase::signed::SignedSubmission<sp_core::crypto::AccountId32, Balance, joystream_node_runtime::NposSolution16>
      **/
     PalletElectionProviderMultiPhaseSignedSignedSubmission: {
         who: 'AccountId32',
@@ -3939,13 +4007,13 @@ export default {
         callFee: 'u128'
     },
     /**
-     * Lookup466: pallet_election_provider_multi_phase::pallet::Error<T>
+     * Lookup475: pallet_election_provider_multi_phase::pallet::Error<T>
      **/
     PalletElectionProviderMultiPhaseError: {
         _enum: ['PreDispatchEarlySubmission', 'PreDispatchWrongWinnerCount', 'PreDispatchWeakSubmission', 'SignedQueueFull', 'SignedCannotPayDeposit', 'SignedInvalidWitness', 'SignedTooMuchWeight', 'OcwCallWrongEra', 'MissingSnapshotMetadata', 'InvalidSubmissionIndex', 'CallNotAllowed', 'FallbackFailed', 'BoundNotMet', 'TooManyWinners']
     },
     /**
-     * Lookup467: pallet_staking::StakingLedger<T>
+     * Lookup476: pallet_staking::StakingLedger<T>
      **/
     PalletStakingStakingLedger: {
         stash: 'AccountId32',
@@ -3955,14 +4023,14 @@ export default {
         claimedRewards: 'Vec<u32>'
     },
     /**
-     * Lookup469: pallet_staking::UnlockChunk<Balance>
+     * Lookup478: pallet_staking::UnlockChunk<Balance>
      **/
     PalletStakingUnlockChunk: {
         value: 'Compact<u128>',
         era: 'Compact<u32>'
     },
     /**
-     * Lookup472: pallet_staking::Nominations<T>
+     * Lookup481: pallet_staking::Nominations<T>
      **/
     PalletStakingNominations: {
         targets: 'Vec<AccountId32>',
@@ -3970,21 +4038,21 @@ export default {
         suppressed: 'bool'
     },
     /**
-     * Lookup473: pallet_staking::ActiveEraInfo
+     * Lookup482: pallet_staking::ActiveEraInfo
      **/
     PalletStakingActiveEraInfo: {
         index: 'u32',
         start: 'Option<u64>'
     },
     /**
-     * Lookup475: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
+     * Lookup484: pallet_staking::EraRewardPoints<sp_core::crypto::AccountId32>
      **/
     PalletStakingEraRewardPoints: {
         total: 'u32',
         individual: 'BTreeMap<AccountId32, u32>'
     },
     /**
-     * Lookup480: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
+     * Lookup489: pallet_staking::UnappliedSlash<sp_core::crypto::AccountId32, Balance>
      **/
     PalletStakingUnappliedSlash: {
         validator: 'AccountId32',
@@ -3994,7 +4062,7 @@ export default {
         payout: 'u128'
     },
     /**
-     * Lookup482: pallet_staking::slashing::SlashingSpans
+     * Lookup491: pallet_staking::slashing::SlashingSpans
      **/
     PalletStakingSlashingSlashingSpans: {
         spanIndex: 'u32',
@@ -4003,30 +4071,30 @@ export default {
         prior: 'Vec<u32>'
     },
     /**
-     * Lookup483: pallet_staking::slashing::SpanRecord<Balance>
+     * Lookup492: pallet_staking::slashing::SpanRecord<Balance>
      **/
     PalletStakingSlashingSpanRecord: {
         slashed: 'u128',
         paidOut: 'u128'
     },
     /**
-     * Lookup486: pallet_staking::pallet::pallet::Error<T>
+     * Lookup495: pallet_staking::pallet::pallet::Error<T>
      **/
     PalletStakingPalletError: {
         _enum: ['NotController', 'NotStash', 'AlreadyBonded', 'AlreadyPaired', 'EmptyTargets', 'DuplicateIndex', 'InvalidSlashIndex', 'InsufficientBond', 'NoMoreChunks', 'NoUnlockChunk', 'FundedTarget', 'InvalidEraToReward', 'InvalidNumberOfNominations', 'NotSortedAndUnique', 'AlreadyClaimed', 'IncorrectHistoryDepth', 'IncorrectSlashingSpans', 'BadState', 'TooManyTargets', 'BadTarget', 'CannotChillOther', 'TooManyNominators', 'TooManyValidators', 'CommissionTooLow', 'BoundNotMet', 'BondingRestricted']
     },
     /**
-     * Lookup490: sp_core::crypto::KeyTypeId
+     * Lookup499: sp_core::crypto::KeyTypeId
      **/
     SpCoreCryptoKeyTypeId: '[u8;4]',
     /**
-     * Lookup491: pallet_session::pallet::Error<T>
+     * Lookup500: pallet_session::pallet::Error<T>
      **/
     PalletSessionError: {
         _enum: ['InvalidProof', 'NoAssociatedValidatorId', 'DuplicatedKey', 'NoKeys', 'NoAccount']
     },
     /**
-     * Lookup493: pallet_grandpa::StoredState<N>
+     * Lookup502: pallet_grandpa::StoredState<N>
      **/
     PalletGrandpaStoredState: {
         _enum: {
@@ -4043,7 +4111,7 @@ export default {
         }
     },
     /**
-     * Lookup494: pallet_grandpa::StoredPendingChange<N, Limit>
+     * Lookup503: pallet_grandpa::StoredPendingChange<N, Limit>
      **/
     PalletGrandpaStoredPendingChange: {
         scheduledAt: 'u32',
@@ -4052,33 +4120,33 @@ export default {
         forced: 'Option<u32>'
     },
     /**
-     * Lookup496: pallet_grandpa::pallet::Error<T>
+     * Lookup505: pallet_grandpa::pallet::Error<T>
      **/
     PalletGrandpaError: {
         _enum: ['PauseFailed', 'ResumeFailed', 'ChangePending', 'TooSoon', 'InvalidKeyOwnershipProof', 'InvalidEquivocationProof', 'DuplicateOffenceReport']
     },
     /**
-     * Lookup502: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
+     * Lookup511: pallet_im_online::BoundedOpaqueNetworkState<PeerIdEncodingLimit, MultiAddrEncodingLimit, AddressesLimit>
      **/
     PalletImOnlineBoundedOpaqueNetworkState: {
         peerId: 'Bytes',
         externalAddresses: 'Vec<Bytes>'
     },
     /**
-     * Lookup506: pallet_im_online::pallet::Error<T>
+     * Lookup515: pallet_im_online::pallet::Error<T>
      **/
     PalletImOnlineError: {
         _enum: ['InvalidKey', 'DuplicatedHeartbeat']
     },
     /**
-     * Lookup507: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
+     * Lookup516: sp_staking::offence::OffenceDetails<sp_core::crypto::AccountId32, Offender>
      **/
     SpStakingOffenceOffenceDetails: {
         offender: '(AccountId32,PalletStakingExposure)',
         reporters: 'Vec<AccountId32>'
     },
     /**
-     * Lookup510: pallet_bags_list::list::Node<T, I>
+     * Lookup519: pallet_bags_list::list::Node<T, I>
      **/
     PalletBagsListListNode: {
         id: 'AccountId32',
@@ -4088,14 +4156,14 @@ export default {
         score: 'u64'
     },
     /**
-     * Lookup511: pallet_bags_list::list::Bag<T, I>
+     * Lookup520: pallet_bags_list::list::Bag<T, I>
      **/
     PalletBagsListListBag: {
         head: 'Option<AccountId32>',
         tail: 'Option<AccountId32>'
     },
     /**
-     * Lookup512: pallet_bags_list::pallet::Error<T, I>
+     * Lookup521: pallet_bags_list::pallet::Error<T, I>
      **/
     PalletBagsListError: {
         _enum: {
@@ -4103,25 +4171,25 @@ export default {
         }
     },
     /**
-     * Lookup513: pallet_bags_list::list::ListError
+     * Lookup522: pallet_bags_list::list::ListError
      **/
     PalletBagsListListListError: {
         _enum: ['Duplicate', 'NotHeavier', 'NotInSameBag', 'NodeNotFound']
     },
     /**
-     * Lookup516: pallet_vesting::Releases
+     * Lookup525: pallet_vesting::Releases
      **/
     PalletVestingReleases: {
         _enum: ['V0', 'V1']
     },
     /**
-     * Lookup517: pallet_vesting::pallet::Error<T>
+     * Lookup526: pallet_vesting::pallet::Error<T>
      **/
     PalletVestingError: {
         _enum: ['NotVesting', 'AtMaxVestingSchedules', 'AmountLow', 'ScheduleIndexOutOfBounds', 'InvalidScheduleParams']
     },
     /**
-     * Lookup519: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
+     * Lookup528: pallet_multisig::Multisig<BlockNumber, Balance, sp_core::crypto::AccountId32, MaxApprovals>
      **/
     PalletMultisigMultisig: {
         when: 'PalletMultisigTimepoint',
@@ -4130,20 +4198,20 @@ export default {
         approvals: 'Vec<AccountId32>'
     },
     /**
-     * Lookup521: pallet_multisig::pallet::Error<T>
+     * Lookup530: pallet_multisig::pallet::Error<T>
      **/
     PalletMultisigError: {
         _enum: ['MinimumThreshold', 'AlreadyApproved', 'NoApprovalsNeeded', 'TooFewSignatories', 'TooManySignatories', 'SignatoriesOutOfOrder', 'SenderInSignatories', 'NotFound', 'NotOwner', 'NoTimepoint', 'WrongTimepoint', 'UnexpectedTimepoint', 'MaxWeightTooLow', 'AlreadyStored']
     },
     /**
-     * Lookup522: pallet_council::CouncilStageUpdate<BlockNumber>
+     * Lookup531: pallet_council::CouncilStageUpdate<BlockNumber>
      **/
     PalletCouncilCouncilStageUpdate: {
         stage: 'PalletCouncilCouncilStage',
         changedAt: 'u32'
     },
     /**
-     * Lookup523: pallet_council::CouncilStage<BlockNumber>
+     * Lookup532: pallet_council::CouncilStage<BlockNumber>
      **/
     PalletCouncilCouncilStage: {
         _enum: {
@@ -4153,26 +4221,26 @@ export default {
         }
     },
     /**
-     * Lookup524: pallet_council::CouncilStageAnnouncing<BlockNumber>
+     * Lookup533: pallet_council::CouncilStageAnnouncing<BlockNumber>
      **/
     PalletCouncilCouncilStageAnnouncing: {
         candidatesCount: 'u32',
         endsAt: 'u32'
     },
     /**
-     * Lookup525: pallet_council::CouncilStageElection
+     * Lookup534: pallet_council::CouncilStageElection
      **/
     PalletCouncilCouncilStageElection: {
         candidatesCount: 'u32'
     },
     /**
-     * Lookup526: pallet_council::CouncilStageIdle<BlockNumber>
+     * Lookup535: pallet_council::CouncilStageIdle<BlockNumber>
      **/
     PalletCouncilCouncilStageIdle: {
         endsAt: 'u32'
     },
     /**
-     * Lookup528: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
+     * Lookup537: pallet_council::CouncilMember<sp_core::crypto::AccountId32, MemberId, Balance, BlockNumber>
      **/
     PalletCouncilCouncilMember: {
         stakingAccountId: 'AccountId32',
@@ -4183,7 +4251,7 @@ export default {
         unpaidReward: 'u128'
     },
     /**
-     * Lookup530: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
+     * Lookup539: pallet_council::Candidate<sp_core::crypto::AccountId32, Balance, primitive_types::H256, VotePower>
      **/
     PalletCouncilCandidate: {
         stakingAccountId: 'AccountId32',
@@ -4194,13 +4262,13 @@ export default {
         noteHash: 'Option<H256>'
     },
     /**
-     * Lookup531: pallet_council::Error<T>
+     * Lookup540: pallet_council::Error<T>
      **/
     PalletCouncilError: {
         _enum: ['ArithmeticError', 'BadOrigin', 'CantCandidateNow', 'CantReleaseStakeNow', 'CandidacyStakeTooLow', 'CantCandidateTwice', 'ConflictingStake', 'StakeStillNeeded', 'NoStake', 'InsufficientBalanceForStaking', 'CantVoteForYourself', 'MemberIdNotMatchAccount', 'InvalidAccountToStakeReuse', 'NotCandidatingNow', 'CantWithdrawCandidacyNow', 'NotCouncilor', 'InsufficientFundsForFundingRequest', 'ZeroBalanceFundRequest', 'RepeatedFundRequestAccount', 'EmptyFundingRequests', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'CandidateDoesNotExist', 'InsufficientBalanceForTransfer', 'ReductionAmountTooLarge']
     },
     /**
-     * Lookup532: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup541: pallet_referendum::ReferendumStage<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStage: {
         _enum: {
@@ -4210,7 +4278,7 @@ export default {
         }
     },
     /**
-     * Lookup534: pallet_referendum::ReferendumStageVoting<BlockNumber>
+     * Lookup543: pallet_referendum::ReferendumStageVoting<BlockNumber>
      **/
     PalletReferendumReferendumStageVoting: {
         started: 'u32',
@@ -4219,7 +4287,7 @@ export default {
         endsAt: 'u32'
     },
     /**
-     * Lookup535: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
+     * Lookup544: pallet_referendum::ReferendumStageRevealing<BlockNumber, bounded_collections::weak_bounded_vec::WeakBoundedVec<pallet_referendum::OptionResult<MemberId, VotePower>, S>>
      **/
     PalletReferendumReferendumStageRevealing: {
         started: 'u32',
@@ -4229,7 +4297,7 @@ export default {
         endsAt: 'u32'
     },
     /**
-     * Lookup536: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
+     * Lookup545: pallet_referendum::CastVote<primitive_types::H256, Currency, MemberId>
      **/
     PalletReferendumCastVote: {
         commitment: 'H256',
@@ -4238,13 +4306,13 @@ export default {
         voteFor: 'Option<u64>'
     },
     /**
-     * Lookup537: pallet_referendum::Error<T, I>
+     * Lookup546: pallet_referendum::Error<T, I>
      **/
     PalletReferendumError: {
         _enum: ['BadOrigin', 'ReferendumNotRunning', 'RevealingNotInProgress', 'ConflictStakesOnAccount', 'InsufficientBalanceToStake', 'InsufficientStake', 'InvalidReveal', 'InvalidVote', 'VoteNotExisting', 'AlreadyVotedThisCycle', 'UnstakingVoteInSameCycle', 'SaltTooLong', 'UnstakingForbidden', 'AccountAlreadyOptedOutOfVoting']
     },
     /**
-     * Lookup538: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
+     * Lookup547: pallet_membership::MembershipObject<sp_core::crypto::AccountId32, primitive_types::H256>
      **/
     PalletMembershipMembershipObject: {
         handleHash: 'H256',
@@ -4254,20 +4322,20 @@ export default {
         invites: 'u32'
     },
     /**
-     * Lookup539: pallet_membership::StakingAccountMemberBinding<MemberId>
+     * Lookup548: pallet_membership::StakingAccountMemberBinding<MemberId>
      **/
     PalletMembershipStakingAccountMemberBinding: {
         memberId: 'u64',
         confirmed: 'bool'
     },
     /**
-     * Lookup540: pallet_membership::Error<T>
+     * Lookup549: pallet_membership::Error<T>
      **/
     PalletMembershipError: {
         _enum: ['NotEnoughBalanceToBuyMembership', 'ControllerAccountRequired', 'RootAccountRequired', 'UnsignedOrigin', 'MemberProfileNotFound', 'HandleAlreadyRegistered', 'HandleMustBeProvidedDuringRegistration', 'ReferrerIsNotMember', 'CannotTransferInvitesForNotMember', 'NotEnoughInvites', 'WorkingGroupLeaderNotSet', 'StakingAccountIsAlreadyRegistered', 'StakingAccountDoesntExist', 'StakingAccountAlreadyConfirmed', 'WorkingGroupBudgetIsNotSufficientForInviting', 'ConflictingLock', 'CannotExceedReferralCutPercentLimit', 'ConflictStakesOnAccount', 'InsufficientBalanceToCoverStake', 'GifLockExceedsCredit', 'InsufficientBalanceToGift', 'InsufficientBalanceToCoverPayment']
     },
     /**
-     * Lookup541: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup550: pallet_forum::Category<CategoryId, primitive_types::H256, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletForumCategory: {
         titleHash: 'H256',
@@ -4280,7 +4348,7 @@ export default {
         stickyThreadIds: 'BTreeSet<u64>'
     },
     /**
-     * Lookup543: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup552: pallet_forum::Thread<ForumUserId, CategoryId, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumThread: {
         categoryId: 'u64',
@@ -4289,7 +4357,7 @@ export default {
         numberOfEditablePosts: 'u64'
     },
     /**
-     * Lookup544: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup553: pallet_forum::Post<ForumUserId, ThreadId, primitive_types::H256, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletForumPost: {
         threadId: 'u64',
@@ -4299,19 +4367,19 @@ export default {
         lastEdited: 'u32'
     },
     /**
-     * Lookup545: pallet_forum::Error<T>
+     * Lookup554: pallet_forum::Error<T>
      **/
     PalletForumError: {
         _enum: ['ArithmeticError', 'OriginNotForumLead', 'ForumUserIdNotMatchAccount', 'ModeratorIdNotMatchAccount', 'AccountDoesNotMatchThreadAuthor', 'ThreadDoesNotExist', 'ModeratorModerateOriginCategory', 'ModeratorModerateDestinationCategory', 'ThreadMoveInvalid', 'ThreadNotBeingUpdated', 'InsufficientBalanceForThreadCreation', 'CannotDeleteThreadWithOutstandingPosts', 'PostDoesNotExist', 'AccountDoesNotMatchPostAuthor', 'InsufficientBalanceForPost', 'CategoryNotBeingUpdated', 'AncestorCategoryImmutable', 'MaxValidCategoryDepthExceeded', 'CategoryDoesNotExist', 'CategoryModeratorDoesNotExist', 'CategoryNotEmptyThreads', 'CategoryNotEmptyCategories', 'ModeratorCantDeleteCategory', 'ModeratorCantUpdateCategory', 'MapSizeLimit', 'PathLengthShouldBeGreaterThanZero', 'MaxNumberOfStickiedThreadsExceeded']
     },
     /**
-     * Lookup546: pallet_constitution::ConstitutionInfo<primitive_types::H256>
+     * Lookup555: pallet_constitution::ConstitutionInfo<primitive_types::H256>
      **/
     PalletConstitutionConstitutionInfo: {
         textHash: 'H256'
     },
     /**
-     * Lookup547: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup556: pallet_bounty::BountyRecord<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyRecord: {
         creationParams: 'PalletBountyBountyParametersBoundedBTreeSet',
@@ -4321,7 +4389,7 @@ export default {
         hasUnpaidOracleReward: 'bool'
     },
     /**
-     * Lookup549: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup558: pallet_bounty::BountyParameters<Balance, BlockNumber, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyBountyParametersBoundedBTreeSet: {
         oracle: 'PalletBountyBountyActor',
@@ -4333,7 +4401,7 @@ export default {
         fundingType: 'PalletBountyFundingType'
     },
     /**
-     * Lookup550: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup559: pallet_bounty::AssuranceContractType<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletBountyAssuranceContractTypeBoundedBTreeSet: {
         _enum: {
@@ -4342,7 +4410,7 @@ export default {
         }
     },
     /**
-     * Lookup551: pallet_bounty::BountyMilestone<BlockNumber>
+     * Lookup560: pallet_bounty::BountyMilestone<BlockNumber>
      **/
     PalletBountyBountyMilestone: {
         _enum: {
@@ -4359,14 +4427,14 @@ export default {
         }
     },
     /**
-     * Lookup553: pallet_bounty::Contribution<T>
+     * Lookup562: pallet_bounty::Contribution<T>
      **/
     PalletBountyContribution: {
         amount: 'u128',
         funderStateBloatBondAmount: 'u128'
     },
     /**
-     * Lookup554: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
+     * Lookup563: pallet_bounty::EntryRecord<sp_core::crypto::AccountId32, MemberId, BlockNumber>
      **/
     PalletBountyEntryRecord: {
         memberId: 'u64',
@@ -4375,19 +4443,19 @@ export default {
         workSubmitted: 'bool'
     },
     /**
-     * Lookup555: pallet_bounty::Error<T>
+     * Lookup564: pallet_bounty::Error<T>
      **/
     PalletBountyError: {
         _enum: ['ArithmeticError', 'MinFundingAmountCannotBeGreaterThanMaxAmount', 'BountyDoesntExist', 'SwitchOracleOriginIsRoot', 'InvalidStageUnexpectedFunding', 'InvalidStageUnexpectedNoFundingContributed', 'InvalidStageUnexpectedCancelled', 'InvalidStageUnexpectedWorkSubmission', 'InvalidStageUnexpectedJudgment', 'InvalidStageUnexpectedSuccessfulBountyWithdrawal', 'InvalidStageUnexpectedFailedBountyWithdrawal', 'InsufficientBalanceForBounty', 'NoBountyContributionFound', 'InsufficientBalanceForStake', 'ConflictingStakes', 'WorkEntryDoesntExist', 'CherryLessThenMinimumAllowed', 'CannotSubmitWorkToClosedContractBounty', 'ClosedContractMemberListIsEmpty', 'ClosedContractMemberListIsTooLarge', 'ClosedContractMemberNotFound', 'InvalidOracleMemberId', 'InvalidStakingAccountForMember', 'ZeroWinnerReward', 'TotalRewardShouldBeEqualToTotalFunding', 'EntrantStakeIsLessThanMininum', 'FundingAmountCannotBeZero', 'FundingPeriodCannotBeZero', 'WinnerShouldHasWorkSubmission', 'InvalidContributorActorSpecified', 'InvalidOracleActorSpecified', 'InvalidEntrantWorkerSpecified', 'InvalidCreatorActorSpecified', 'WorkEntryDoesntBelongToWorker', 'OracleRewardAlreadyWithdrawn']
     },
     /**
-     * Lookup556: pallet_joystream_utility::Error<T>
+     * Lookup565: pallet_joystream_utility::Error<T>
      **/
     PalletJoystreamUtilityError: {
         _enum: ['InsufficientFundsForBudgetUpdate', 'ZeroTokensBurn', 'InsufficientFundsForBurn']
     },
     /**
-     * Lookup557: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup566: pallet_content::types::VideoRecord<ChannelId, pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletContentVideoRecord: {
         inChannel: 'u64',
@@ -4396,7 +4464,7 @@ export default {
         videoStateBloatBond: 'PalletCommonBloatBondRepayableBloatBond'
     },
     /**
-     * Lookup558: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
+     * Lookup567: pallet_content::nft::types::OwnedNft<pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>, MemberId, AuctionId>
      **/
     PalletContentNftTypesOwnedNft: {
         owner: 'PalletContentNftTypesNftOwner',
@@ -4405,7 +4473,7 @@ export default {
         openAuctionsNonce: 'u64'
     },
     /**
-     * Lookup559: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
+     * Lookup568: pallet_content::nft::types::TransactionalStatusRecord<MemberId, Balance, pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>, pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>>
      **/
     PalletContentNftTypesTransactionalStatusRecord: {
         _enum: {
@@ -4417,7 +4485,7 @@ export default {
         }
     },
     /**
-     * Lookup560: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup569: pallet_content::nft::types::EnglishAuctionRecord<BlockNumber, Balance, MemberId, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesEnglishAuctionRecord: {
         startingPrice: 'u128',
@@ -4430,14 +4498,14 @@ export default {
         topBid: 'Option<PalletContentNftTypesEnglishAuctionBid>'
     },
     /**
-     * Lookup563: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
+     * Lookup572: pallet_content::nft::types::EnglishAuctionBid<Balance, MemberId>
      **/
     PalletContentNftTypesEnglishAuctionBid: {
         amount: 'u128',
         bidderId: 'u64'
     },
     /**
-     * Lookup564: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup573: pallet_content::nft::types::OpenAuctionRecord<BlockNumber, AuctionId, Balance, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletContentNftTypesOpenAuctionRecord: {
         startingPrice: 'u128',
@@ -4448,7 +4516,7 @@ export default {
         start: 'u32'
     },
     /**
-     * Lookup565: pallet_content::nft::types::NftOwner<MemberId>
+     * Lookup574: pallet_content::nft::types::NftOwner<MemberId>
      **/
     PalletContentNftTypesNftOwner: {
         _enum: {
@@ -4457,7 +4525,7 @@ export default {
         }
     },
     /**
-     * Lookup568: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
+     * Lookup577: pallet_content::permissions::curator_group::CuratorGroupRecord<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::types::iterable_enums::ChannelActionPermission, S>, S>, bounded_collections::bounded_btree_map::BoundedBTreeMap<K, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_content::permissions::curator_group::iterable_enums::ContentModerationAction, S>, S>>
      **/
     PalletContentPermissionsCuratorGroupCuratorGroupRecord: {
         curators: 'BTreeMap<u64, BTreeSet<PalletContentIterableEnumsChannelActionPermission>>',
@@ -4465,7 +4533,7 @@ export default {
         permissionsByLevel: 'BTreeMap<u8, BTreeSet<PalletContentPermissionsCuratorGroupIterableEnumsContentModerationAction>>'
     },
     /**
-     * Lookup575: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
+     * Lookup584: pallet_content::nft::types::OpenAuctionBidRecord<Balance, BlockNumber, AuctionId>
      **/
     PalletContentNftTypesOpenAuctionBidRecord: {
         amount: 'u128',
@@ -4473,13 +4541,13 @@ export default {
         auctionId: 'u64'
     },
     /**
-     * Lookup576: pallet_content::errors::Error<T>
+     * Lookup585: pallet_content::errors::Error<T>
      **/
     PalletContentErrorsError: {
         _enum: ['ChannelStateBloatBondChanged', 'VideoStateBloatBondChanged', 'MinCashoutValueTooLow', 'MaxCashoutValueTooHigh', 'MaxNumberOfChannelCollaboratorsExceeded', 'MaxNumberOfChannelAssetsExceeded', 'MaxNumberOfVideoAssetsExceeded', 'MaxNumberOfChannelAgentPermissionsExceeded', 'MaxNumberOfPausedFeaturesPerChannelExceeded', 'InvalidChannelBagWitnessProvided', 'InvalidStorageBucketsNumWitnessProvided', 'MissingStorageBucketsNumWitness', 'ChannelOwnerMemberDoesNotExist', 'ChannelOwnerCuratorGroupDoesNotExist', 'ChannelStateBloatBondBelowExistentialDeposit', 'NumberOfAssetsToRemoveIsZero', 'CuratorIsNotAMemberOfGivenCuratorGroup', 'CuratorIsAlreadyAMemberOfGivenCuratorGroup', 'CuratorGroupDoesNotExist', 'CuratorsPerGroupLimitReached', 'CuratorGroupIsNotActive', 'CuratorIdInvalid', 'LeadAuthFailed', 'MemberAuthFailed', 'CuratorAuthFailed', 'BadOrigin', 'ActorNotAuthorized', 'CategoryDoesNotExist', 'ChannelDoesNotExist', 'VideoDoesNotExist', 'VideoInSeason', 'ActorCannotBeLead', 'ActorCannotOwnChannel', 'NftAlreadyOwnedByChannel', 'NftAlreadyExists', 'NftDoesNotExist', 'OverflowOrUnderflowHappened', 'DoesNotOwnNft', 'RoyaltyUpperBoundExceeded', 'RoyaltyLowerBoundExceeded', 'AuctionDurationUpperBoundExceeded', 'AuctionDurationLowerBoundExceeded', 'ExtensionPeriodUpperBoundExceeded', 'ExtensionPeriodLowerBoundExceeded', 'BidLockDurationUpperBoundExceeded', 'BidLockDurationLowerBoundExceeded', 'StartingPriceUpperBoundExceeded', 'StartingPriceLowerBoundExceeded', 'AuctionBidStepUpperBoundExceeded', 'AuctionBidStepLowerBoundExceeded', 'InsufficientBalance', 'BidStepConstraintViolated', 'InvalidBidAmountSpecified', 'StartingPriceConstraintViolated', 'ActionHasBidsAlready', 'NftIsNotIdle', 'PendingOfferDoesNotExist', 'RewardAccountIsNotSet', 'ActorIsNotBidder', 'AuctionCannotBeCompleted', 'BidDoesNotExist', 'BidIsForPastAuction', 'StartsAtLowerBoundExceeded', 'StartsAtUpperBoundExceeded', 'AuctionDidNotStart', 'NotInAuctionState', 'MemberIsNotAllowedToParticipate', 'MemberProfileNotFound', 'NftNotInBuyNowState', 'InvalidBuyNowWitnessPriceProvided', 'IsNotOpenAuctionType', 'IsNotEnglishAuctionType', 'BidLockDurationIsNotExpired', 'NftAuctionIsAlreadyExpired', 'BuyNowMustBeGreaterThanStartingPrice', 'TargetMemberDoesNotExist', 'InvalidNftOfferWitnessPriceProvided', 'MaxAuctionWhiteListLengthUpperBoundExceeded', 'WhitelistHasOnlyOneMember', 'WhitelistedMemberDoesNotExist', 'NftNonChannelOwnerDoesNotExist', 'ExtensionPeriodIsGreaterThenAuctionDuration', 'NoAssetsSpecified', 'InvalidAssetsProvided', 'ChannelContainsVideos', 'ChannelContainsAssets', 'InvalidBagSizeSpecified', 'MigrationNotFinished', 'ReplyDoesNotExist', 'UnsufficientBalance', 'InsufficientTreasuryBalance', 'InvalidMemberProvided', 'ActorNotAMember', 'PaymentProofVerificationFailed', 'CashoutAmountExceedsMaximumAmount', 'CashoutAmountBelowMinimumAmount', 'WithdrawalAmountExceedsChannelAccountWithdrawableBalance', 'WithdrawFromChannelAmountIsZero', 'ChannelCashoutsDisabled', 'MinCashoutAllowedExceedsMaxCashoutAllowed', 'CuratorModerationActionNotAllowed', 'MaxCuratorPermissionsPerLevelExceeded', 'CuratorGroupMaxPermissionsByLevelMapSizeExceeded', 'ChannelFeaturePaused', 'ChannelBagMissing', 'AssetsToRemoveBeyondEntityAssetsSet', 'InvalidVideoDataObjectsCountProvided', 'InvalidChannelTransferStatus', 'InvalidChannelTransferAcceptor', 'InvalidChannelTransferCommitmentParams', 'ChannelAgentInsufficientPermissions', 'InvalidChannelOwner', 'ZeroReward', 'InsufficientBalanceForTransfer', 'InsufficientBalanceForChannelCreation', 'InsufficientBalanceForVideoCreation', 'InsufficientCouncilBudget', 'GlobalNftDailyLimitExceeded', 'GlobalNftWeeklyLimitExceeded', 'ChannelNftDailyLimitExceeded', 'ChannelNftWeeklyLimitExceeded', 'CreatorTokenAlreadyIssued', 'CreatorTokenNotIssued', 'MemberIdCouldNotBeDerivedFromActor', 'CannotWithdrawFromChannelWithCreatorTokenIssued', 'PatronageCanOnlyBeClaimedForMemberOwnedChannels', 'ChannelTransfersBlockedDuringRevenueSplits', 'ChannelTransfersBlockedDuringTokenSales', 'ChannelTransfersBlockedDuringActiveAmm']
     },
     /**
-     * Lookup577: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
+     * Lookup586: pallet_storage::BagRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<pallet_storage::DistributionBucketIdRecord<DistributionBucketFamilyId, DistributionBucketIndex>, S>>
      **/
     PalletStorageBagRecord: {
         storedBy: 'BTreeSet<u64>',
@@ -4488,7 +4556,7 @@ export default {
         objectsNumber: 'u64'
     },
     /**
-     * Lookup580: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup589: pallet_storage::StorageBucketRecord<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketRecord: {
         operatorStatus: 'PalletStorageStorageBucketOperatorStatus',
@@ -4497,7 +4565,7 @@ export default {
         assignedBags: 'u64'
     },
     /**
-     * Lookup581: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
+     * Lookup590: pallet_storage::StorageBucketOperatorStatus<WorkerId, sp_core::crypto::AccountId32>
      **/
     PalletStorageStorageBucketOperatorStatus: {
         _enum: {
@@ -4507,14 +4575,14 @@ export default {
         }
     },
     /**
-     * Lookup583: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
+     * Lookup592: pallet_storage::DynamicBagCreationPolicy<bounded_collections::bounded_btree_map::BoundedBTreeMap<K, V, S>>
      **/
     PalletStorageDynamicBagCreationPolicy: {
         numberOfStorageBuckets: 'u32',
         families: 'BTreeMap<u64, u32>'
     },
     /**
-     * Lookup586: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup595: pallet_storage::DataObject<pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletStorageDataObject: {
         _alias: {
@@ -4526,13 +4594,13 @@ export default {
         ipfsContentId: 'Bytes'
     },
     /**
-     * Lookup587: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
+     * Lookup596: pallet_storage::DistributionBucketFamilyRecord<DistributionBucketIndex>
      **/
     PalletStorageDistributionBucketFamilyRecord: {
         nextDistributionBucketIndex: 'u64'
     },
     /**
-     * Lookup588: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup597: pallet_storage::DistributionBucketRecord<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletStorageDistributionBucketRecord: {
         acceptingNewBags: 'bool',
@@ -4542,13 +4610,13 @@ export default {
         assignedBags: 'u64'
     },
     /**
-     * Lookup591: pallet_storage::Error<T>
+     * Lookup600: pallet_storage::Error<T>
      **/
     PalletStorageError: {
         _enum: ['ArithmeticError', 'InvalidCidLength', 'NoObjectsOnUpload', 'StorageBucketDoesntExist', 'StorageBucketIsNotBoundToBag', 'StorageBucketIsBoundToBag', 'NoStorageBucketInvitation', 'StorageProviderAlreadySet', 'StorageProviderMustBeSet', 'DifferentStorageProviderInvited', 'InvitedStorageProvider', 'StorageBucketIdCollectionsAreEmpty', 'StorageBucketsNumberViolatesDynamicBagCreationPolicy', 'DistributionBucketsViolatesDynamicBagCreationPolicy', 'EmptyContentId', 'ZeroObjectSize', 'InvalidStateBloatBondSourceAccount', 'InvalidStorageProvider', 'InsufficientBalance', 'DataObjectDoesntExist', 'UploadingBlocked', 'DataObjectIdCollectionIsEmpty', 'SourceAndDestinationBagsAreEqual', 'DataObjectBlacklisted', 'BlacklistSizeLimitExceeded', 'VoucherMaxObjectSizeLimitExceeded', 'VoucherMaxObjectNumberLimitExceeded', 'StorageBucketObjectNumberLimitReached', 'StorageBucketObjectSizeLimitReached', 'InsufficientTreasuryBalance', 'CannotDeleteNonEmptyStorageBucket', 'DataObjectIdParamsAreEmpty', 'StorageBucketsPerBagLimitTooLow', 'StorageBucketsPerBagLimitTooHigh', 'StorageBucketPerBagLimitExceeded', 'StorageBucketDoesntAcceptNewBags', 'DynamicBagExists', 'DynamicBagDoesntExist', 'StorageProviderOperatorDoesntExist', 'DataSizeFeeChanged', 'DataObjectStateBloatBondChanged', 'CannotDeleteNonEmptyDynamicBag', 'MaxDistributionBucketFamilyNumberLimitExceeded', 'DistributionBucketFamilyDoesntExist', 'DistributionBucketDoesntExist', 'DistributionBucketIdCollectionsAreEmpty', 'DistributionBucketDoesntAcceptNewBags', 'MaxDistributionBucketNumberPerBagLimitExceeded', 'DistributionBucketIsNotBoundToBag', 'DistributionBucketIsBoundToBag', 'DistributionBucketsPerBagLimitTooLow', 'DistributionBucketsPerBagLimitTooHigh', 'DistributionProviderOperatorDoesntExist', 'DistributionProviderOperatorAlreadyInvited', 'DistributionProviderOperatorSet', 'NoDistributionBucketInvitation', 'MustBeDistributionProviderOperatorForBucket', 'MaxNumberOfPendingInvitationsLimitForDistributionBucketReached', 'MaxNumberOfOperatorsPerDistributionBucketReached', 'DistributionFamilyBoundToBagCreationPolicy', 'MaxDataObjectSizeExceeded', 'InvalidTransactorAccount', 'NumberOfStorageBucketsOutsideOfAllowedContraints', 'NumberOfDistributionBucketsOutsideOfAllowedContraints', 'CallDisabled']
     },
     /**
-     * Lookup592: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
+     * Lookup601: pallet_project_token::types::AccountData<Balance, pallet_project_token::types::StakingStatus<Balance>, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>, bounded_collections::bounded_btree_map::BoundedBTreeMap<pallet_project_token::types::VestingSource, pallet_project_token::types::VestingSchedule<BlockNumber, Balance>, S>>
      **/
     PalletProjectTokenAccountData: {
         vestingSchedules: 'BTreeMap<PalletProjectTokenVestingSource, PalletProjectTokenVestingSchedule>',
@@ -4559,14 +4627,14 @@ export default {
         lastSaleTotalPurchasedAmount: 'Option<(u32,u128)>'
     },
     /**
-     * Lookup593: pallet_project_token::types::StakingStatus<Balance>
+     * Lookup602: pallet_project_token::types::StakingStatus<Balance>
      **/
     PalletProjectTokenStakingStatus: {
         splitId: 'u32',
         amount: 'u128'
     },
     /**
-     * Lookup595: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
+     * Lookup604: pallet_project_token::types::VestingSchedule<BlockNumber, Balance>
      **/
     PalletProjectTokenVestingSchedule: {
         linearVestingStartBlock: 'u32',
@@ -4576,7 +4644,7 @@ export default {
         burnedAmount: 'u128'
     },
     /**
-     * Lookup602: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
+     * Lookup611: pallet_project_token::types::TokenData<Balance, primitive_types::H256, BlockNumber, pallet_project_token::types::TokenSale<JoyBalance, Balance, BlockNumber, pallet_project_token::types::VestingScheduleParams<BlockNumber>, MemberId, sp_core::crypto::AccountId32>, pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>>
      **/
     PalletProjectTokenTokenData: {
         totalSupply: 'u128',
@@ -4592,7 +4660,7 @@ export default {
         ammCurve: 'Option<PalletProjectTokenAmmCurve>'
     },
     /**
-     * Lookup603: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
+     * Lookup612: pallet_project_token::types::RevenueSplitState<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitState: {
         _enum: {
@@ -4601,7 +4669,7 @@ export default {
         }
     },
     /**
-     * Lookup604: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
+     * Lookup613: pallet_project_token::types::RevenueSplitInfo<JoyBalance, BlockNumber>
      **/
     PalletProjectTokenRevenueSplitInfo: {
         allocation: 'u128',
@@ -4609,14 +4677,14 @@ export default {
         dividendsClaimed: 'u128'
     },
     /**
-     * Lookup605: pallet_project_token::types::Timeline<BlockNumber>
+     * Lookup614: pallet_project_token::types::Timeline<BlockNumber>
      **/
     PalletProjectTokenTimeline: {
         start: 'u32',
         duration: 'u32'
     },
     /**
-     * Lookup607: pallet_project_token::types::PatronageData<Balance, BlockNumber>
+     * Lookup616: pallet_project_token::types::PatronageData<Balance, BlockNumber>
      **/
     PalletProjectTokenPatronageData: {
         rate: 'Permill',
@@ -4624,13 +4692,13 @@ export default {
         lastUnclaimedPatronageTallyBlock: 'u32'
     },
     /**
-     * Lookup609: pallet_project_token::errors::Error<T>
+     * Lookup618: pallet_project_token::errors::Error<T>
      **/
     PalletProjectTokenErrorsError: {
         _enum: ['ArithmeticError', 'InsufficientTransferrableBalance', 'TokenDoesNotExist', 'AccountInformationDoesNotExist', 'TransferDestinationMemberDoesNotExist', 'MerkleProofVerificationFailure', 'TokenSymbolAlreadyInUse', 'InitialAllocationToNonExistingMember', 'AccountAlreadyExists', 'TooManyTransferOutputs', 'TokenIssuanceNotInIdleState', 'InsufficientJoyBalance', 'JoyTransferSubjectToDusting', 'AttemptToRemoveNonOwnedAccountUnderPermissionedMode', 'AttemptToRemoveNonEmptyAccount', 'CannotJoinWhitelistInPermissionlessMode', 'CannotDeissueTokenWithOutstandingAccounts', 'NoUpcomingSale', 'NoActiveSale', 'InsufficientBalanceForTokenPurchase', 'NotEnoughTokensOnSale', 'SaleStartingBlockInThePast', 'SaleAccessProofRequired', 'SaleAccessProofParticipantIsNotSender', 'SalePurchaseCapExceeded', 'MaxVestingSchedulesPerAccountPerTokenReached', 'PreviousSaleNotFinalized', 'NoTokensToRecover', 'SaleDurationTooShort', 'SaleDurationIsZero', 'SaleUpperBoundQuantityIsZero', 'SaleCapPerMemberIsZero', 'SaleUnitPriceIsZero', 'SalePurchaseAmountIsZero', 'CannotInitSaleIfAmmIsActive', 'RevenueSplitTimeToStartTooShort', 'RevenueSplitDurationTooShort', 'RevenueSplitAlreadyActiveForToken', 'RevenueSplitNotActiveForToken', 'RevenueSplitDidNotEnd', 'RevenueSplitNotOngoing', 'UserAlreadyParticipating', 'InsufficientBalanceForSplitParticipation', 'UserNotParticipantingInAnySplit', 'CannotParticipateInSplitWithZeroAmount', 'CannotIssueSplitWithZeroAllocationAmount', 'CannotModifySupplyWhenRevenueSplitsAreActive', 'RevenueSplitRateIsZero', 'BurnAmountIsZero', 'BurnAmountGreaterThanAccountTokensAmount', 'NotInAmmState', 'InvalidCurveParameters', 'DeadlineExpired', 'SlippageToleranceExceeded', 'InsufficientTokenBalance', 'OutstandingAmmProvidedSupplyTooLarge', 'CurveSlopeParametersTooLow', 'NotEnoughTokenMintedByAmmForThisSale', 'TargetPatronageRateIsHigherThanCurrentRate', 'YearlyPatronageRateLimitExceeded', 'PalletFrozen']
     },
     /**
-     * Lookup610: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
+     * Lookup619: pallet_proposals_engine::types::Proposal<BlockNumber, ProposerId, Balance, sp_core::crypto::AccountId32>
      **/
     PalletProposalsEngineProposal: {
         parameters: 'PalletProposalsEngineProposalParameters',
@@ -4643,7 +4711,7 @@ export default {
         stakingAccountId: 'Option<AccountId32>'
     },
     /**
-     * Lookup611: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
+     * Lookup620: pallet_proposals_engine::types::ProposalParameters<BlockNumber, Balance>
      **/
     PalletProposalsEngineProposalParameters: {
         votingPeriod: 'u32',
@@ -4656,7 +4724,7 @@ export default {
         constitutionality: 'u32'
     },
     /**
-     * Lookup612: pallet_proposals_engine::types::VotingResults
+     * Lookup621: pallet_proposals_engine::types::VotingResults
      **/
     PalletProposalsEngineVotingResults: {
         abstentions: 'u32',
@@ -4665,13 +4733,13 @@ export default {
         slashes: 'u32'
     },
     /**
-     * Lookup615: pallet_proposals_engine::Error<T>
+     * Lookup624: pallet_proposals_engine::Error<T>
      **/
     PalletProposalsEngineError: {
         _enum: ['ArithmeticError', 'EmptyTitleProvided', 'EmptyDescriptionProvided', 'TitleIsTooLong', 'DescriptionIsTooLong', 'ProposalNotFound', 'ProposalFinalized', 'AlreadyVoted', 'NotAuthor', 'MaxActiveProposalNumberExceeded', 'EmptyStake', 'StakeShouldBeEmpty', 'StakeDiffersFromRequired', 'InvalidParameterApprovalThreshold', 'InvalidParameterSlashingThreshold', 'RequireRootOrigin', 'ProposalHasVotes', 'ZeroExactExecutionBlock', 'InvalidExactExecutionBlock', 'InsufficientBalanceForStake', 'ConflictingStakes', 'InvalidStakingAccountForMember', 'MaxDispatchableCallCodeSizeExceeded']
     },
     /**
-     * Lookup616: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup625: pallet_proposals_discussion::types::DiscussionThread<MemberId, BlockNumber, bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionDiscussionThread: {
         activatedAt: 'u32',
@@ -4679,7 +4747,7 @@ export default {
         mode: 'PalletProposalsDiscussionThreadModeBoundedBTreeSet'
     },
     /**
-     * Lookup618: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
+     * Lookup627: pallet_proposals_discussion::types::ThreadMode<bounded_collections::bounded_btree_set::BoundedBTreeSet<T, S>>
      **/
     PalletProposalsDiscussionThreadModeBoundedBTreeSet: {
         _enum: {
@@ -4688,7 +4756,7 @@ export default {
         }
     },
     /**
-     * Lookup619: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
+     * Lookup628: pallet_proposals_discussion::types::DiscussionPost<MemberId, BlockNumber, pallet_common::bloat_bond::RepayableBloatBond<sp_core::crypto::AccountId32, Balance>>
      **/
     PalletProposalsDiscussionDiscussionPost: {
         authorId: 'u64',
@@ -4696,19 +4764,19 @@ export default {
         lastEdited: 'u32'
     },
     /**
-     * Lookup620: pallet_proposals_discussion::Error<T>
+     * Lookup629: pallet_proposals_discussion::Error<T>
      **/
     PalletProposalsDiscussionError: {
         _enum: ['ArithmeticError', 'ThreadDoesntExist', 'PostDoesntExist', 'RequireRootOrigin', 'CannotPostOnClosedThread', 'NotAuthorOrCouncilor', 'MaxWhiteListSizeExceeded', 'WhitelistedMemberDoesNotExist', 'InsufficientBalanceForPost', 'CannotDeletePost']
     },
     /**
-     * Lookup621: pallet_proposals_codex::Error<T>
+     * Lookup630: pallet_proposals_codex::Error<T>
      **/
     PalletProposalsCodexError: {
         _enum: ['SignalProposalIsEmpty', 'RuntimeProposalIsEmpty', 'InvalidFundingRequestProposalBalance', 'InvalidValidatorCount', 'RequireRootOrigin', 'InvalidCouncilElectionParameterCouncilSize', 'InvalidCouncilElectionParameterCandidacyLimit', 'InvalidCouncilElectionParameterMinVotingStake', 'InvalidCouncilElectionParameterNewTermDuration', 'InvalidCouncilElectionParameterMinCouncilStake', 'InvalidCouncilElectionParameterRevealingPeriod', 'InvalidCouncilElectionParameterVotingPeriod', 'InvalidCouncilElectionParameterAnnouncingPeriod', 'InvalidWorkingGroupBudgetCapacity', 'InvalidSetLeadParameterCannotBeCouncilor', 'SlashingStakeIsZero', 'DecreasingStakeIsZero', 'InsufficientFundsForBudgetUpdate', 'InvalidFundingRequestProposalNumberOfAccount', 'InvalidFundingRequestProposalRepeatedAccount', 'InvalidChannelPayoutsProposalMinCashoutExceedsMaxCashout', 'InvalidLeadWorkerId', 'InvalidLeadOpeningId', 'InvalidLeadApplicationId', 'InvalidProposalId', 'ArithmeticError', 'ReductionAmountZero']
     },
     /**
-     * Lookup622: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
+     * Lookup631: pallet_working_group::types::Opening<BlockNumber, Balance, primitive_types::H256>
      **/
     PalletWorkingGroupOpening: {
         openingType: 'PalletWorkingGroupOpeningType',
@@ -4719,7 +4787,7 @@ export default {
         creationStake: 'u128'
     },
     /**
-     * Lookup623: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
+     * Lookup632: pallet_working_group::types::JobApplication<sp_core::crypto::AccountId32, MemberId, primitive_types::H256>
      **/
     PalletWorkingGroupJobApplication: {
         roleAccountId: 'AccountId32',
@@ -4730,7 +4798,7 @@ export default {
         openingId: 'u64'
     },
     /**
-     * Lookup624: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
+     * Lookup633: pallet_working_group::types::GroupWorker<sp_core::crypto::AccountId32, MemberId, BlockNumber, Balance>
      **/
     PalletWorkingGroupGroupWorker: {
         memberId: 'u64',
@@ -4744,13 +4812,13 @@ export default {
         createdAt: 'u32'
     },
     /**
-     * Lookup625: pallet_working_group::errors::Error<T, I>
+     * Lookup634: pallet_working_group::errors::Error<T, I>
      **/
     PalletWorkingGroupErrorsError: {
         _enum: ['ArithmeticError', 'StakeBalanceCannotBeZero', 'OpeningDoesNotExist', 'CannotHireMultipleLeaders', 'WorkerApplicationDoesNotExist', 'MaxActiveWorkerNumberExceeded', 'SuccessfulWorkerApplicationDoesNotExist', 'CannotHireLeaderWhenLeaderExists', 'IsNotLeadAccount', 'CurrentLeadNotSet', 'WorkerDoesNotExist', 'InvalidMemberOrigin', 'SignerIsNotWorkerRoleAccount', 'BelowMinimumStakes', 'InsufficientBalanceToCoverStake', 'ApplicationStakeDoesntMatchOpening', 'OriginIsNotApplicant', 'WorkerIsLeaving', 'CannotRewardWithZero', 'InvalidStakingAccountForMember', 'ConflictStakesOnAccount', 'WorkerHasNoReward', 'UnstakingPeriodLessThanMinimum', 'CannotSpendZero', 'InsufficientBudgetForSpending', 'NoApplicationsProvided', 'CannotDecreaseStakeDeltaGreaterThanStake', 'ApplicationsNotForOpening', 'WorkerStorageValueTooLong', 'InsufficientTokensForFunding', 'ZeroTokensFunding', 'InsufficientBalanceForTransfer']
     },
     /**
-     * Lookup636: pallet_proxy::ProxyDefinition<sp_core::crypto::AccountId32, joystream_node_runtime::ProxyType, BlockNumber>
+     * Lookup645: pallet_proxy::ProxyDefinition<sp_core::crypto::AccountId32, joystream_node_runtime::ProxyType, BlockNumber>
      **/
     PalletProxyProxyDefinition: {
         delegate: 'AccountId32',
@@ -4758,7 +4826,7 @@ export default {
         delay: 'u32'
     },
     /**
-     * Lookup640: pallet_proxy::Announcement<sp_core::crypto::AccountId32, primitive_types::H256, BlockNumber>
+     * Lookup649: pallet_proxy::Announcement<sp_core::crypto::AccountId32, primitive_types::H256, BlockNumber>
      **/
     PalletProxyAnnouncement: {
         real: 'AccountId32',
@@ -4766,13 +4834,25 @@ export default {
         height: 'u32'
     },
     /**
-     * Lookup642: pallet_proxy::pallet::Error<T>
+     * Lookup651: pallet_proxy::pallet::Error<T>
      **/
     PalletProxyError: {
         _enum: ['TooMany', 'NotFound', 'NotProxy', 'Unproxyable', 'Duplicate', 'NoPermission', 'Unannounced', 'NoSelfProxy']
     },
     /**
-     * Lookup644: sp_runtime::MultiSignature
+     * Lookup652: pallet_argo_bridge::types::BridgeStatus<BlockNumber>
+     **/
+    PalletArgoBridgeBridgeStatus: {
+        _enum: {
+            Active: 'Null',
+            Paused: 'Null',
+            Thawn: {
+                thawnEndsAt: 'u32'
+            }
+        }
+    },
+    /**
+     * Lookup655: sp_runtime::MultiSignature
      **/
     SpRuntimeMultiSignature: {
         _enum: {
@@ -4782,39 +4862,39 @@ export default {
         }
     },
     /**
-     * Lookup645: sp_core::ecdsa::Signature
+     * Lookup656: sp_core::ecdsa::Signature
      **/
     SpCoreEcdsaSignature: '[u8;65]',
     /**
-     * Lookup648: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
+     * Lookup659: frame_system::extensions::check_non_zero_sender::CheckNonZeroSender<T>
      **/
     FrameSystemExtensionsCheckNonZeroSender: 'Null',
     /**
-     * Lookup649: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
+     * Lookup660: frame_system::extensions::check_spec_version::CheckSpecVersion<T>
      **/
     FrameSystemExtensionsCheckSpecVersion: 'Null',
     /**
-     * Lookup650: frame_system::extensions::check_tx_version::CheckTxVersion<T>
+     * Lookup661: frame_system::extensions::check_tx_version::CheckTxVersion<T>
      **/
     FrameSystemExtensionsCheckTxVersion: 'Null',
     /**
-     * Lookup651: frame_system::extensions::check_genesis::CheckGenesis<T>
+     * Lookup662: frame_system::extensions::check_genesis::CheckGenesis<T>
      **/
     FrameSystemExtensionsCheckGenesis: 'Null',
     /**
-     * Lookup654: frame_system::extensions::check_nonce::CheckNonce<T>
+     * Lookup665: frame_system::extensions::check_nonce::CheckNonce<T>
      **/
     FrameSystemExtensionsCheckNonce: 'Compact<u32>',
     /**
-     * Lookup655: frame_system::extensions::check_weight::CheckWeight<T>
+     * Lookup666: frame_system::extensions::check_weight::CheckWeight<T>
      **/
     FrameSystemExtensionsCheckWeight: 'Null',
     /**
-     * Lookup656: pallet_transaction_payment::ChargeTransactionPayment<T>
+     * Lookup667: pallet_transaction_payment::ChargeTransactionPayment<T>
      **/
     PalletTransactionPaymentChargeTransactionPayment: 'Compact<u128>',
     /**
-     * Lookup657: joystream_node_runtime::Runtime
+     * Lookup668: joystream_node_runtime::Runtime
      **/
     JoystreamNodeRuntimeRuntime: 'Null'
 };
