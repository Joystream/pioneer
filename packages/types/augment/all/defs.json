{
    "ActorId": "u64",
    "MemberId": "u64",
    "BlockAndTime": {
        "block": "u32",
        "time": "u64"
    },
    "ThreadId": "u64",
    "PostId": "u64",
    "InputValidationLengthConstraint": {
        "min": "u16",
        "max_min_diff": "u16"
    },
    "WorkingGroup": {
        "_enum": [
            "Forum",
            "Storage",
            "Content",
            "Membership"
        ]
    },
    "MemoText": "Text",
    "Address": "AccountId",
    "LookupSource": "AccountId",
    "Membership": {
        "handle_hash": "Bytes",
        "root_account": "AccountId",
        "controller_account": "AccountId",
        "verified": "bool",
        "invites": "u32"
    },
    "StakingAccountMemberBinding": {
        "member_id": "MemberId",
        "confirmed": "bool"
    },
    "BuyMembershipParameters": {
        "root_account": "AccountId",
        "controller_account": "AccountId",
        "name": "Option<Text>",
        "handle": "Option<Text>",
        "avatar_uri": "Option<Text>",
        "about": "Option<Text>",
        "referrer_id": "Option<MemberId>"
    },
    "InviteMembershipParameters": {
        "inviting_member_id": "MemberId",
        "root_account": "AccountId",
        "controller_account": "AccountId",
        "name": "Option<Text>",
        "handle": "Option<Text>",
        "avatar_uri": "Option<Text>",
        "about": "Option<Text>"
    },
    "CouncilStageAnnouncing": {
        "candidatesCount": "u64"
    },
    "CouncilStageElection": {
        "candidatesCount": "u64"
    },
    "CouncilStageUpdate": {
        "stage": "CouncilStage",
        "changed_at": "u32"
    },
    "CouncilStage": {
        "_enum": {
            "Announcing": "CouncilStageAnnouncing",
            "Election": "CouncilStageElection",
            "Idle": "u32"
        }
    },
    "Candidate": {
        "staking_account_id": "AccountId",
        "reward_account_id": "AccountId",
        "cycle_id": "u64",
        "stake": "u32",
        "vote_power": "VotePower",
        "note_hash": "Option<Hash>"
    },
    "CouncilMemberOf": {
        "staking_account_id": "AccountId",
        "reward_account_id": "AccountId",
        "membership_id": "MemberId",
        "stake": "u128",
        "last_payment_block": "u32",
        "unpaid_reward": "u128"
    },
    "CastVoteOf": {
        "commitment": "Hash",
        "cycle_id": "u64",
        "stake": "u128",
        "vote_for": "Option<MemberId>"
    },
    "ForumUserId": "u64",
    "ModeratorId": "u64",
    "CategoryId": "u64",
    "PostReactionId": "u64",
    "Category": {
        "title_hash": "Hash",
        "description_hash": "Hash",
        "archived": "bool",
        "num_direct_subcategories": "u32",
        "num_direct_threads": "u32",
        "num_direct_moderators": "u32",
        "parent_category_id": "Option<CategoryId>",
        "sticky_thread_ids": "Vec<ThreadId>"
    },
    "Thread": {
        "title_hash": "Hash",
        "category_id": "CategoryId",
        "author_id": "ForumUserId",
        "archived": "bool",
        "poll": "Option<Poll>",
        "num_direct_posts": "u32"
    },
    "Post": {
        "thread_id": "ThreadId",
        "text_hash": "Hash",
        "author_id": "ForumUserId"
    },
    "PollAlternative": {
        "alternative_text_hash": "Hash",
        "vote_count": "u32"
    },
    "Poll": {
        "description_hash": "Hash",
        "end_time": "u64",
        "poll_alternatives": "Vec<PollAlternative>"
    },
    "PrivilegedActor": {
        "_enum": {
            "Lead": "Null",
            "Moderator": "ModeratorId"
        }
    },
    "ApplicationId": "u64",
    "Application": {
        "role_account_id": "AccountId",
        "reward_account_id": "AccountId",
        "staking_account_id": "AccountId",
        "member_id": "MemberId",
        "description_hash": "Text"
    },
    "ApplicationInfo": {
        "application_id": "ApplicationId",
        "application": "Application"
    },
    "ApplicationIdSet": "BTreeSet<ApplicationId>",
    "ApplicationIdToWorkerIdMap": "BTreeMap<ApplicationId,WorkerId>",
    "WorkerId": "u64",
    "Worker": {
        "member_id": "MemberId",
        "role_account_id": "AccountId",
        "staking_account_id": "Option<AccountId>",
        "reward_account_id": "AccountId",
        "started_leaving_at": "Option<u32>",
        "job_unstaking_period": "u32",
        "reward_per_block": "Option<u128>",
        "missed_reward": "Option<u128>",
        "created_at": "u32"
    },
    "WorkerInfo": {
        "worker_id": "WorkerId",
        "worker": "Worker"
    },
    "Opening": {
        "opening_type": "OpeningType",
        "created": "u32",
        "description_hash": "Text",
        "stake_policy": "Option<StakePolicy>",
        "reward_per_block": "Option<u128>"
    },
    "OpeningId": "u64",
    "StakePolicy": {
        "stake_amount": "u128",
        "leaving_unstaking_period": "u32"
    },
    "StakeParameters": {
        "stake": "u128",
        "staking_account_id": "AccountId"
    },
    "StorageProviderId": "u64",
    "OpeningType": {
        "_enum": {
            "Leader": "Null",
            "Regular": "Null"
        }
    },
    "ApplyOnOpeningParameters": {
        "member_id": "MemberId",
        "opening_id": "OpeningId",
        "role_account_id": "AccountId",
        "reward_account_id": "AccountId",
        "description": "Text",
        "stake_parameters": "Option<StakeParameters>"
    },
    "Penalty": {
        "slashing_text": "Text",
        "slashing_amount": "u128"
    },
    "Url": "Text",
    "IPNSIdentity": "Text",
    "ServiceProviderRecord": {
        "identity": "IPNSIdentity",
        "expires_at": "u32"
    },
    "ContentId": "[u8;32]",
    "LiaisonJudgement": {
        "_enum": [
            "Pending",
            "Accepted",
            "Rejected"
        ]
    },
    "DataObject": {
        "owner": "MemberId",
        "added_at": "BlockAndTime",
        "type_id": "DataObjectTypeId",
        "size": "u64",
        "liaison": "StorageProviderId",
        "liaison_judgement": "LiaisonJudgement",
        "ipfs_content_id": "Text"
    },
    "DataObjectStorageRelationshipId": "u64",
    "DataObjectStorageRelationship": {
        "content_id": "ContentId",
        "storage_provider": "StorageProviderId",
        "ready": "bool"
    },
    "DataObjectTypeId": "u64",
    "DataObjectType": {
        "description": "Text",
        "active": "bool"
    },
    "DataObjectsMap": "BTreeMap<ContentId,DataObject>",
    "ProposalId": "u32",
    "ProposalStatus": {
        "_enum": {
            "Active": "Null",
            "PendingExecution": "u32",
            "PendingConstitutionality": "Null"
        }
    },
    "ProposalOf": {
        "parameters": "ProposalParameters",
        "proposerId": "MemberId",
        "activatedAt": "u32",
        "status": "ProposalStatus",
        "votingResults": "VotingResults",
        "exactExecutionBlock": "Option<u32>",
        "nrOfCouncilConfirmations": "u32",
        "stakingAccountId": "Option<AccountId>"
    },
    "ProposalDetails": {
        "_enum": {
            "Text": "Text",
            "RuntimeUpgrade": "Bytes",
            "Spending": "(Balance,AccountId)",
            "SetValidatorCount": "u32",
            "AddWorkingGroupLeaderOpening": "AddOpeningParameters",
            "FillWorkingGroupLeaderOpening": "FillOpeningParameters",
            "SetWorkingGroupBudgetCapacity": "(Balance,WorkingGroup)",
            "DecreaseWorkingGroupLeaderStake": "(WorkerId,Balance,WorkingGroup)",
            "SlashWorkingGroupLeaderStake": "(WorkerId,Balance,WorkingGroup)",
            "SetWorkingGroupLeaderReward": "(WorkerId,Balance,WorkingGroup)",
            "TerminateWorkingGroupLeaderRole": "TerminateRoleParameters",
            "AmendConstitution": "Text"
        }
    },
    "ProposalDetailsOf": {
        "_enum": {
            "Text": "Text",
            "RuntimeUpgrade": "Bytes",
            "Spending": "(Balance,AccountId)",
            "SetValidatorCount": "u32",
            "AddWorkingGroupLeaderOpening": "AddOpeningParameters",
            "FillWorkingGroupLeaderOpening": "FillOpeningParameters",
            "SetWorkingGroupBudgetCapacity": "(Balance,WorkingGroup)",
            "DecreaseWorkingGroupLeaderStake": "(WorkerId,Balance,WorkingGroup)",
            "SlashWorkingGroupLeaderStake": "(WorkerId,Balance,WorkingGroup)",
            "SetWorkingGroupLeaderReward": "(WorkerId,Balance,WorkingGroup)",
            "TerminateWorkingGroupLeaderRole": "TerminateRoleParameters",
            "AmendConstitution": "Text"
        }
    },
    "VotingResults": {
        "abstensions": "u32",
        "approvals": "u32",
        "rejections": "u32",
        "slashes": "u32"
    },
    "ProposalParameters": {
        "votingPeriod": "u32",
        "gracePeriod": "u32",
        "approvalQuorumPercentage": "u32",
        "approvalThresholdPercentage": "u32",
        "slashingQuorumPercentage": "u32",
        "slashingThresholdPercentage": "u32",
        "requiredStake": "Option<u128>",
        "constitutionality": "u32"
    },
    "GeneralProposalParameters": {
        "member_id": "MemberId",
        "title": "Text",
        "description": "Text",
        "staking_account_id": "Option<AccountId>",
        "exact_execution_block": "Option<u32>"
    },
    "VoteKind": {
        "_enum": [
            "Approve",
            "Reject",
            "Slash",
            "Abstain"
        ]
    },
    "DiscussionThread": {
        "activated_at": "u32",
        "author_id": "u64",
        "mode": "ThreadMode"
    },
    "DiscussionPost": {
        "author_id": "u64"
    },
    "AddOpeningParameters": {
        "description": "Text",
        "stake_policy": "Option<StakePolicy>",
        "reward_per_block": "Option<u128>",
        "working_group": "WorkingGroup"
    },
    "FillOpeningParameters": {
        "opening_id": "OpeningId",
        "successful_application_id": "ApplicationId",
        "working_group": "WorkingGroup"
    },
    "TerminateRoleParameters": {
        "worker_id": "WorkerId",
        "penalty": "Option<Penalty>",
        "working_group": "WorkingGroup"
    },
    "ProposalDecision": {
        "_enum": {
            "Canceled": "Null",
            "Vetoed": "Null",
            "Rejected": "Null",
            "Slashed": "Null",
            "Expired": "Null",
            "Approved": "Approved"
        }
    },
    "ExecutionFailed": {
        "error": "Text"
    },
    "Approved": {
        "_enum": [
            "PendingExecution",
            "PendingConstitutionality"
        ]
    },
    "SetLeadParams": "(MemberId,AccountId)",
    "ThreadMode": {
        "_enum": {
            "Open": "Null",
            "Closed": "Vec<MemberId>"
        }
    },
    "ExecutionStatus": {
        "_enum": {
            "Executed": "Null",
            "ExecutionFailed": "ExecutionFailed"
        }
    },
    "Nonce": "u64",
    "EntityId": "u64",
    "ClassId": "u64",
    "CuratorId": "u64",
    "CuratorGroupId": "u64",
    "VecMaxLength": "u16",
    "TextMaxLength": "u16",
    "HashedTextMaxLength": "Option<u16>",
    "PropertyId": "u16",
    "SchemaId": "u16",
    "SameController": "bool",
    "ClassPermissions": {
        "any_member": "bool",
        "entity_creation_blocked": "bool",
        "all_entity_property_values_locked": "bool",
        "maintainers": "Vec<CuratorGroupId>"
    },
    "PropertyTypeSingle": {
        "_enum": {
            "Bool": "Null",
            "Uint16": "Null",
            "Uint32": "Null",
            "Uint64": "Null",
            "Int16": "Null",
            "Int32": "Null",
            "Int64": "Null",
            "Text": "TextMaxLength",
            "Hash": "HashedTextMaxLength",
            "Reference": "(ClassId,SameController)"
        }
    },
    "PropertyTypeVector": {
        "vec_type": "PropertyTypeSingle",
        "max_length": "VecMaxLength"
    },
    "PropertyType": {
        "_enum": {
            "Single": "PropertyTypeSingle",
            "Vector": "PropertyTypeVector"
        }
    },
    "PropertyLockingPolicy": {
        "is_locked_from_maintainer": "bool",
        "is_locked_from_controller": "bool"
    },
    "Property": {
        "property_type": "PropertyType",
        "required": "bool",
        "unique": "bool",
        "name": "Text",
        "description": "Text",
        "locking_policy": "PropertyLockingPolicy"
    },
    "Schema": {
        "properties": "Vec<PropertyId>",
        "is_active": "bool"
    },
    "Class": {
        "class_permissions": "ClassPermissions",
        "properties": "Vec<Property>",
        "schemas": "Vec<Schema>",
        "name": "Text",
        "description": "Text",
        "maximum_entities_count": "EntityId",
        "current_number_of_entities": "EntityId",
        "default_entity_creation_voucher_upper_bound": "EntityId"
    },
    "ClassOf": {
        "class_permissions": "ClassPermissions",
        "properties": "Vec<Property>",
        "schemas": "Vec<Schema>",
        "name": "Text",
        "description": "Text",
        "maximum_entities_count": "EntityId",
        "current_number_of_entities": "EntityId",
        "default_entity_creation_voucher_upper_bound": "EntityId"
    },
    "EntityController": {
        "_enum": {
            "Maintainers": "Null",
            "Member": "MemberId",
            "Lead": "Null"
        }
    },
    "EntityPermissions": {
        "controller": "EntityController",
        "frozen": "bool",
        "referenceable": "bool"
    },
    "StoredValue": {
        "_enum": {
            "Bool": "bool",
            "Uint16": "u16",
            "Uint32": "u32",
            "Uint64": "u64",
            "Int16": "i16",
            "Int32": "i32",
            "Int64": "i64",
            "Text": "Text",
            "Hash": "Hash",
            "Reference": "EntityId"
        }
    },
    "VecStoredValue": {
        "_enum": {
            "Bool": "Vec<bool>",
            "Uint16": "Vec<u16>",
            "Uint32": "Vec<u32>",
            "Uint64": "Vec<u64>",
            "Int16": "Vec<i16>",
            "Int32": "Vec<i32>",
            "Int64": "Vec<i64>",
            "Hash": "Vec<Hash>",
            "Text": "Vec<Text>",
            "Reference": "Vec<EntityId>"
        }
    },
    "VecStoredPropertyValue": {
        "vec_value": "VecStoredValue",
        "nonce": "Nonce"
    },
    "StoredPropertyValue": {
        "_enum": {
            "Single": "StoredValue",
            "Vector": "VecStoredPropertyValue"
        }
    },
    "InboundReferenceCounter": {
        "total": "u32",
        "same_owner": "u32"
    },
    "Entity": {
        "entity_permissions": "EntityPermissions",
        "class_id": "ClassId",
        "supported_schemas": "Vec<SchemaId>",
        "values": "BTreeMap<PropertyId,StoredPropertyValue>",
        "reference_counter": "InboundReferenceCounter"
    },
    "EntityOf": {
        "entity_permissions": "EntityPermissions",
        "class_id": "ClassId",
        "supported_schemas": "Vec<SchemaId>",
        "values": "BTreeMap<PropertyId,StoredPropertyValue>",
        "reference_counter": "InboundReferenceCounter"
    },
    "CuratorGroup": {
        "curators": "Vec<CuratorId>",
        "active": "bool",
        "number_of_classes_maintained": "u32"
    },
    "EntityCreationVoucher": {
        "maximum_entities_count": "EntityId",
        "entities_created": "EntityId"
    },
    "Actor": {
        "_enum": {
            "Curator": "(CuratorGroupId,CuratorId)",
            "Member": "MemberId",
            "Lead": "Null"
        }
    },
    "EntityReferenceCounterSideEffect": {
        "total": "i32",
        "same_owner": "i32"
    },
    "ReferenceCounterSideEffects": "BTreeMap<EntityId,EntityReferenceCounterSideEffect>",
    "SideEffects": "Option<ReferenceCounterSideEffects>",
    "SideEffect": "Option<(EntityId,EntityReferenceCounterSideEffect)>",
    "Status": "bool",
    "InputValue": {
        "_enum": {
            "Bool": "bool",
            "Uint16": "u16",
            "Uint32": "u32",
            "Uint64": "u64",
            "Int16": "i16",
            "Int32": "i32",
            "Int64": "i64",
            "Text": "Text",
            "TextToHash": "Text",
            "Reference": "EntityId"
        }
    },
    "VecInputValue": {
        "_enum": {
            "Bool": "Vec<bool>",
            "Uint16": "Vec<u16>",
            "Uint32": "Vec<u32>",
            "Uint64": "Vec<u64>",
            "Int16": "Vec<i16>",
            "Int32": "Vec<i32>",
            "Int64": "Vec<i64>",
            "TextToHash": "Vec<Text>",
            "Text": "Vec<Text>",
            "Reference": "Vec<EntityId>"
        }
    },
    "InputPropertyValue": {
        "_enum": {
            "Single": "InputValue",
            "Vector": "VecInputValue"
        }
    },
    "ParameterizedEntity": {
        "_enum": {
            "InternalEntityJustAdded": "u32",
            "ExistingEntity": "EntityId"
        }
    },
    "ParametrizedPropertyValue": {
        "_enum": {
            "InputPropertyValue": "InputPropertyValue",
            "InternalEntityJustAdded": "u32",
            "InternalEntityVec": "Vec<ParameterizedEntity>"
        }
    },
    "ParametrizedClassPropertyValue": {
        "in_class_index": "PropertyId",
        "value": "ParametrizedPropertyValue"
    },
    "CreateEntityOperation": {
        "class_id": "ClassId"
    },
    "UpdatePropertyValuesOperation": {
        "entity_id": "ParameterizedEntity",
        "new_parametrized_property_values": "Vec<ParametrizedClassPropertyValue>"
    },
    "AddSchemaSupportToEntityOperation": {
        "entity_id": "ParameterizedEntity",
        "schema_id": "SchemaId",
        "parametrized_property_values": "Vec<ParametrizedClassPropertyValue>"
    },
    "OperationType": {
        "_enum": {
            "CreateEntity": "CreateEntityOperation",
            "UpdatePropertyValues": "UpdatePropertyValuesOperation",
            "AddSchemaSupportToEntity": "AddSchemaSupportToEntityOperation"
        }
    },
    "InputEntityValuesMap": "BTreeMap<PropertyId,InputPropertyValue>",
    "FailedAt": "u32",
    "ReferendumStageVoting": {
        "started": "u32",
        "winning_target_count": "u64",
        "current_cycle_id": "u64"
    },
    "ReferendumStageRevealing": {
        "started": "u32",
        "winning_target_count": "u64",
        "intermediate_winners": "Vec<OptionResult>",
        "current_cycle_id": "u64"
    },
    "ReferendumStage": {
        "_enum": {
            "Inactive": "Null",
            "Voting": "ReferendumStageVoting",
            "Revealing": "ReferendumStageRevealing"
        }
    },
    "OptionResult": {
        "option_id": "MemberId",
        "vote_power": "VotePower"
    },
    "VotePower": "u128",
    "ConstitutionInfo": {
        "text_hash": "Hash"
    }
}