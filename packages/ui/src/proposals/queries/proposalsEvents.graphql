fragment ProposalCreatedEventFields on ProposalCreatedEvent {
  id
  createdAt
  proposal {
    id
    title
    creator {
      id
      handle
    }
  }
}

fragment ProposalCancelledEventFields on ProposalCancelledEvent {
  id
  createdAt
  proposal {
    id
    title
    creator {
      id
      handle
    }
  }
}

fragment ProposalStatusUpdatedEventFields on ProposalStatusUpdatedEvent {
  id
  createdAt
  proposal {
    id
    title
  }
  newStatus {
    __typename
  }
}

fragment ProposalDecisionMadeEventFields on ProposalDecisionMadeEvent {
  id
  createdAt
  proposal {
    id
    title
  }
}

fragment ProposalDiscussionModeChangedEventFields on ProposalDiscussionThreadModeChangedEvent {
  id
  createdAt
  thread {
    proposal {
      id
      title
    }
  }
  newMode {
    __typename
  }
}

fragment ProposalExecutedEventFields on ProposalExecutedEvent {
  id
  createdAt
  proposal {
    id
    title
  }
  executionStatus {
    __typename
  }
}

fragment ProposalVotedEventFields on ProposalVotedEvent {
  id
  createdAt
  proposal {
    id
    title
  }
  voter {
    id
    handle
  }
}

query GetProposalsEvents {
  events (
    where: {
      type_in: [
        ProposalCreatedEvent,
        ProposalStatusUpdatedEvent,
        ProposalDecisionMadeEvent,
        ProposalCancelledEvent,
        ProposalDiscussionThreadModeChangedEvent,
        ProposalExecutedEvent,
        ProposalVotedEvent,
      ]
    }
    orderBy: [createdAt_DESC]
  ) {
    ...on ProposalCreatedEvent {
      ...ProposalCreatedEventFields
    }
    ...on ProposalCancelledEvent {
      ...ProposalCancelledEventFields
    }
    ...on ProposalStatusUpdatedEvent {
      ...ProposalStatusUpdatedEventFields
    }
    ...on ProposalDecisionMadeEvent {
      ...ProposalDecisionMadeEventFields
    }
    ...on ProposalDiscussionThreadModeChangedEvent {
      ...ProposalDiscussionModeChangedEventFields
    }
    ...on ProposalExecutedEvent {
      ...ProposalExecutedEventFields
    }
    ...on ProposalVotedEvent {
      ...ProposalVotedEventFields
    }
  }
}
