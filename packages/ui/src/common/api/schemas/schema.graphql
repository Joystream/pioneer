type Query {
  applicationFormQuestionAnswers(
    offset: Int
    limit: Int = 50
    where: ApplicationFormQuestionAnswerWhereInput
    orderBy: [ApplicationFormQuestionAnswerOrderByInput!]
  ): [ApplicationFormQuestionAnswer!]!
  applicationFormQuestionAnswerByUniqueInput(
    where: ApplicationFormQuestionAnswerWhereUniqueInput!
  ): ApplicationFormQuestionAnswer
  applicationFormQuestionAnswersConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ApplicationFormQuestionAnswerWhereInput
    orderBy: [ApplicationFormQuestionAnswerOrderByInput!]
  ): ApplicationFormQuestionAnswerConnection!
  applicationFormQuestions(
    offset: Int
    limit: Int = 50
    where: ApplicationFormQuestionWhereInput
    orderBy: [ApplicationFormQuestionOrderByInput!]
  ): [ApplicationFormQuestion!]!
  applicationFormQuestionByUniqueInput(
    where: ApplicationFormQuestionWhereUniqueInput!
  ): ApplicationFormQuestion
  applicationFormQuestionsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ApplicationFormQuestionWhereInput
    orderBy: [ApplicationFormQuestionOrderByInput!]
  ): ApplicationFormQuestionConnection!
  applicationWithdrawnEvents(
    offset: Int
    limit: Int = 50
    where: ApplicationWithdrawnEventWhereInput
    orderBy: [ApplicationWithdrawnEventOrderByInput!]
  ): [ApplicationWithdrawnEvent!]!
  applicationWithdrawnEventByUniqueInput(
    where: ApplicationWithdrawnEventWhereUniqueInput!
  ): ApplicationWithdrawnEvent
  applicationWithdrawnEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ApplicationWithdrawnEventWhereInput
    orderBy: [ApplicationWithdrawnEventOrderByInput!]
  ): ApplicationWithdrawnEventConnection!
  appliedOnOpeningEvents(
    offset: Int
    limit: Int = 50
    where: AppliedOnOpeningEventWhereInput
    orderBy: [AppliedOnOpeningEventOrderByInput!]
  ): [AppliedOnOpeningEvent!]!
  appliedOnOpeningEventByUniqueInput(
    where: AppliedOnOpeningEventWhereUniqueInput!
  ): AppliedOnOpeningEvent
  appliedOnOpeningEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: AppliedOnOpeningEventWhereInput
    orderBy: [AppliedOnOpeningEventOrderByInput!]
  ): AppliedOnOpeningEventConnection!
  budgetSetEvents(
    offset: Int
    limit: Int = 50
    where: BudgetSetEventWhereInput
    orderBy: [BudgetSetEventOrderByInput!]
  ): [BudgetSetEvent!]!
  budgetSetEventByUniqueInput(
    where: BudgetSetEventWhereUniqueInput!
  ): BudgetSetEvent
  budgetSetEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BudgetSetEventWhereInput
    orderBy: [BudgetSetEventOrderByInput!]
  ): BudgetSetEventConnection!
  budgetSpendingEvents(
    offset: Int
    limit: Int = 50
    where: BudgetSpendingEventWhereInput
    orderBy: [BudgetSpendingEventOrderByInput!]
  ): [BudgetSpendingEvent!]!
  budgetSpendingEventByUniqueInput(
    where: BudgetSpendingEventWhereUniqueInput!
  ): BudgetSpendingEvent
  budgetSpendingEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BudgetSpendingEventWhereInput
    orderBy: [BudgetSpendingEventOrderByInput!]
  ): BudgetSpendingEventConnection!
  categoryArchivalStatusUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: CategoryArchivalStatusUpdatedEventWhereInput
    orderBy: [CategoryArchivalStatusUpdatedEventOrderByInput!]
  ): [CategoryArchivalStatusUpdatedEvent!]!
  categoryArchivalStatusUpdatedEventByUniqueInput(
    where: CategoryArchivalStatusUpdatedEventWhereUniqueInput!
  ): CategoryArchivalStatusUpdatedEvent
  categoryArchivalStatusUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CategoryArchivalStatusUpdatedEventWhereInput
    orderBy: [CategoryArchivalStatusUpdatedEventOrderByInput!]
  ): CategoryArchivalStatusUpdatedEventConnection!
  categoryCreatedEvents(
    offset: Int
    limit: Int = 50
    where: CategoryCreatedEventWhereInput
    orderBy: [CategoryCreatedEventOrderByInput!]
  ): [CategoryCreatedEvent!]!
  categoryCreatedEventByUniqueInput(
    where: CategoryCreatedEventWhereUniqueInput!
  ): CategoryCreatedEvent
  categoryCreatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CategoryCreatedEventWhereInput
    orderBy: [CategoryCreatedEventOrderByInput!]
  ): CategoryCreatedEventConnection!
  categoryDeletedEvents(
    offset: Int
    limit: Int = 50
    where: CategoryDeletedEventWhereInput
    orderBy: [CategoryDeletedEventOrderByInput!]
  ): [CategoryDeletedEvent!]!
  categoryDeletedEventByUniqueInput(
    where: CategoryDeletedEventWhereUniqueInput!
  ): CategoryDeletedEvent
  categoryDeletedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CategoryDeletedEventWhereInput
    orderBy: [CategoryDeletedEventOrderByInput!]
  ): CategoryDeletedEventConnection!
  categoryMembershipOfModeratorUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: CategoryMembershipOfModeratorUpdatedEventWhereInput
    orderBy: [CategoryMembershipOfModeratorUpdatedEventOrderByInput!]
  ): [CategoryMembershipOfModeratorUpdatedEvent!]!
  categoryMembershipOfModeratorUpdatedEventByUniqueInput(
    where: CategoryMembershipOfModeratorUpdatedEventWhereUniqueInput!
  ): CategoryMembershipOfModeratorUpdatedEvent
  categoryMembershipOfModeratorUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CategoryMembershipOfModeratorUpdatedEventWhereInput
    orderBy: [CategoryMembershipOfModeratorUpdatedEventOrderByInput!]
  ): CategoryMembershipOfModeratorUpdatedEventConnection!
  categoryStickyThreadUpdateEvents(
    offset: Int
    limit: Int = 50
    where: CategoryStickyThreadUpdateEventWhereInput
    orderBy: [CategoryStickyThreadUpdateEventOrderByInput!]
  ): [CategoryStickyThreadUpdateEvent!]!
  categoryStickyThreadUpdateEventByUniqueInput(
    where: CategoryStickyThreadUpdateEventWhereUniqueInput!
  ): CategoryStickyThreadUpdateEvent
  categoryStickyThreadUpdateEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CategoryStickyThreadUpdateEventWhereInput
    orderBy: [CategoryStickyThreadUpdateEventOrderByInput!]
  ): CategoryStickyThreadUpdateEventConnection!
  channelCategories(
    offset: Int
    limit: Int = 50
    where: ChannelCategoryWhereInput
    orderBy: [ChannelCategoryOrderByInput!]
  ): [ChannelCategory!]!
  channelCategoryByUniqueInput(
    where: ChannelCategoryWhereUniqueInput!
  ): ChannelCategory
  channelCategoriesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ChannelCategoryWhereInput
    orderBy: [ChannelCategoryOrderByInput!]
  ): ChannelCategoryConnection!
  channels(
    offset: Int
    limit: Int = 50
    where: ChannelWhereInput
    orderBy: [ChannelOrderByInput!]
  ): [Channel!]!
  channelByUniqueInput(where: ChannelWhereUniqueInput!): Channel
  channelsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ChannelWhereInput
    orderBy: [ChannelOrderByInput!]
  ): ChannelConnection!
  curatorGroups(
    offset: Int
    limit: Int = 50
    where: CuratorGroupWhereInput
    orderBy: [CuratorGroupOrderByInput!]
  ): [CuratorGroup!]!
  curatorGroupByUniqueInput(where: CuratorGroupWhereUniqueInput!): CuratorGroup
  curatorGroupsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CuratorGroupWhereInput
    orderBy: [CuratorGroupOrderByInput!]
  ): CuratorGroupConnection!
  dataObjects(
    offset: Int
    limit: Int = 50
    where: DataObjectWhereInput
    orderBy: [DataObjectOrderByInput!]
  ): [DataObject!]!
  dataObjectByUniqueInput(where: DataObjectWhereUniqueInput!): DataObject
  dataObjectsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: DataObjectWhereInput
    orderBy: [DataObjectOrderByInput!]
  ): DataObjectConnection!
  events(
    offset: Int
    limit: Int = 50
    where: EventWhereInput
    orderBy: [EventOrderByInput!]
  ): [Event!]!
  forumCategories(
    offset: Int
    limit: Int = 50
    where: ForumCategoryWhereInput
    orderBy: [ForumCategoryOrderByInput!]
  ): [ForumCategory!]!
  forumCategoryByUniqueInput(
    where: ForumCategoryWhereUniqueInput!
  ): ForumCategory
  forumCategoriesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumCategoryWhereInput
    orderBy: [ForumCategoryOrderByInput!]
  ): ForumCategoryConnection!
  forumPollAlternatives(
    offset: Int
    limit: Int = 50
    where: ForumPollAlternativeWhereInput
    orderBy: [ForumPollAlternativeOrderByInput!]
  ): [ForumPollAlternative!]!
  forumPollAlternativeByUniqueInput(
    where: ForumPollAlternativeWhereUniqueInput!
  ): ForumPollAlternative
  forumPollAlternativesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumPollAlternativeWhereInput
    orderBy: [ForumPollAlternativeOrderByInput!]
  ): ForumPollAlternativeConnection!
  forumPolls(
    offset: Int
    limit: Int = 50
    where: ForumPollWhereInput
    orderBy: [ForumPollOrderByInput!]
  ): [ForumPoll!]!
  forumPollByUniqueInput(where: ForumPollWhereUniqueInput!): ForumPoll
  forumPollsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumPollWhereInput
    orderBy: [ForumPollOrderByInput!]
  ): ForumPollConnection!
  forumPostReactions(
    offset: Int
    limit: Int = 50
    where: ForumPostReactionWhereInput
    orderBy: [ForumPostReactionOrderByInput!]
  ): [ForumPostReaction!]!
  forumPostReactionByUniqueInput(
    where: ForumPostReactionWhereUniqueInput!
  ): ForumPostReaction
  forumPostReactionsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumPostReactionWhereInput
    orderBy: [ForumPostReactionOrderByInput!]
  ): ForumPostReactionConnection!
  forumPosts(
    offset: Int
    limit: Int = 50
    where: ForumPostWhereInput
    orderBy: [ForumPostOrderByInput!]
  ): [ForumPost!]!
  forumPostByUniqueInput(where: ForumPostWhereUniqueInput!): ForumPost
  forumPostsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumPostWhereInput
    orderBy: [ForumPostOrderByInput!]
  ): ForumPostConnection!
  forumThreadTags(
    offset: Int
    limit: Int = 50
    where: ForumThreadTagWhereInput
    orderBy: [ForumThreadTagOrderByInput!]
  ): [ForumThreadTag!]!
  forumThreadTagByUniqueInput(
    where: ForumThreadTagWhereUniqueInput!
  ): ForumThreadTag
  forumThreadTagsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumThreadTagWhereInput
    orderBy: [ForumThreadTagOrderByInput!]
  ): ForumThreadTagConnection!
  forumThreads(
    offset: Int
    limit: Int = 50
    where: ForumThreadWhereInput
    orderBy: [ForumThreadOrderByInput!]
  ): [ForumThread!]!
  forumThreadByUniqueInput(where: ForumThreadWhereUniqueInput!): ForumThread
  forumThreadsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumThreadWhereInput
    orderBy: [ForumThreadOrderByInput!]
  ): ForumThreadConnection!
  fundingRequestDestinations(
    offset: Int
    limit: Int = 50
    where: FundingRequestDestinationWhereInput
    orderBy: [FundingRequestDestinationOrderByInput!]
  ): [FundingRequestDestination!]!
  fundingRequestDestinationByUniqueInput(
    where: FundingRequestDestinationWhereUniqueInput!
  ): FundingRequestDestination
  fundingRequestDestinationsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: FundingRequestDestinationWhereInput
    orderBy: [FundingRequestDestinationOrderByInput!]
  ): FundingRequestDestinationConnection!
  fundingRequestDestinationsLists(
    offset: Int
    limit: Int = 50
    where: FundingRequestDestinationsListWhereInput
    orderBy: [FundingRequestDestinationsListOrderByInput!]
  ): [FundingRequestDestinationsList!]!
  fundingRequestDestinationsListByUniqueInput(
    where: FundingRequestDestinationsListWhereUniqueInput!
  ): FundingRequestDestinationsList
  fundingRequestDestinationsListsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: FundingRequestDestinationsListWhereInput
    orderBy: [FundingRequestDestinationsListOrderByInput!]
  ): FundingRequestDestinationsListConnection!
  initialInvitationBalanceUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: InitialInvitationBalanceUpdatedEventWhereInput
    orderBy: [InitialInvitationBalanceUpdatedEventOrderByInput!]
  ): [InitialInvitationBalanceUpdatedEvent!]!
  initialInvitationBalanceUpdatedEventByUniqueInput(
    where: InitialInvitationBalanceUpdatedEventWhereUniqueInput!
  ): InitialInvitationBalanceUpdatedEvent
  initialInvitationBalanceUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: InitialInvitationBalanceUpdatedEventWhereInput
    orderBy: [InitialInvitationBalanceUpdatedEventOrderByInput!]
  ): InitialInvitationBalanceUpdatedEventConnection!
  initialInvitationCountUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: InitialInvitationCountUpdatedEventWhereInput
    orderBy: [InitialInvitationCountUpdatedEventOrderByInput!]
  ): [InitialInvitationCountUpdatedEvent!]!
  initialInvitationCountUpdatedEventByUniqueInput(
    where: InitialInvitationCountUpdatedEventWhereUniqueInput!
  ): InitialInvitationCountUpdatedEvent
  initialInvitationCountUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: InitialInvitationCountUpdatedEventWhereInput
    orderBy: [InitialInvitationCountUpdatedEventOrderByInput!]
  ): InitialInvitationCountUpdatedEventConnection!
  invitesTransferredEvents(
    offset: Int
    limit: Int = 50
    where: InvitesTransferredEventWhereInput
    orderBy: [InvitesTransferredEventOrderByInput!]
  ): [InvitesTransferredEvent!]!
  invitesTransferredEventByUniqueInput(
    where: InvitesTransferredEventWhereUniqueInput!
  ): InvitesTransferredEvent
  invitesTransferredEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: InvitesTransferredEventWhereInput
    orderBy: [InvitesTransferredEventOrderByInput!]
  ): InvitesTransferredEventConnection!
  languages(
    offset: Int
    limit: Int = 50
    where: LanguageWhereInput
    orderBy: [LanguageOrderByInput!]
  ): [Language!]!
  languageByUniqueInput(where: LanguageWhereUniqueInput!): Language
  languagesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: LanguageWhereInput
    orderBy: [LanguageOrderByInput!]
  ): LanguageConnection!
  leaderInvitationQuotaUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: LeaderInvitationQuotaUpdatedEventWhereInput
    orderBy: [LeaderInvitationQuotaUpdatedEventOrderByInput!]
  ): [LeaderInvitationQuotaUpdatedEvent!]!
  leaderInvitationQuotaUpdatedEventByUniqueInput(
    where: LeaderInvitationQuotaUpdatedEventWhereUniqueInput!
  ): LeaderInvitationQuotaUpdatedEvent
  leaderInvitationQuotaUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: LeaderInvitationQuotaUpdatedEventWhereInput
    orderBy: [LeaderInvitationQuotaUpdatedEventOrderByInput!]
  ): LeaderInvitationQuotaUpdatedEventConnection!
  leaderSetEvents(
    offset: Int
    limit: Int = 50
    where: LeaderSetEventWhereInput
    orderBy: [LeaderSetEventOrderByInput!]
  ): [LeaderSetEvent!]!
  leaderSetEventByUniqueInput(
    where: LeaderSetEventWhereUniqueInput!
  ): LeaderSetEvent
  leaderSetEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: LeaderSetEventWhereInput
    orderBy: [LeaderSetEventOrderByInput!]
  ): LeaderSetEventConnection!
  leaderUnsetEvents(
    offset: Int
    limit: Int = 50
    where: LeaderUnsetEventWhereInput
    orderBy: [LeaderUnsetEventOrderByInput!]
  ): [LeaderUnsetEvent!]!
  leaderUnsetEventByUniqueInput(
    where: LeaderUnsetEventWhereUniqueInput!
  ): LeaderUnsetEvent
  leaderUnsetEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: LeaderUnsetEventWhereInput
    orderBy: [LeaderUnsetEventOrderByInput!]
  ): LeaderUnsetEventConnection!
  licenses(
    offset: Int
    limit: Int = 50
    where: LicenseWhereInput
    orderBy: [LicenseOrderByInput!]
  ): [License!]!
  licenseByUniqueInput(where: LicenseWhereUniqueInput!): License
  licensesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: LicenseWhereInput
    orderBy: [LicenseOrderByInput!]
  ): LicenseConnection!
  memberAccountsUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: MemberAccountsUpdatedEventWhereInput
    orderBy: [MemberAccountsUpdatedEventOrderByInput!]
  ): [MemberAccountsUpdatedEvent!]!
  memberAccountsUpdatedEventByUniqueInput(
    where: MemberAccountsUpdatedEventWhereUniqueInput!
  ): MemberAccountsUpdatedEvent
  memberAccountsUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MemberAccountsUpdatedEventWhereInput
    orderBy: [MemberAccountsUpdatedEventOrderByInput!]
  ): MemberAccountsUpdatedEventConnection!
  memberInvitedEvents(
    offset: Int
    limit: Int = 50
    where: MemberInvitedEventWhereInput
    orderBy: [MemberInvitedEventOrderByInput!]
  ): [MemberInvitedEvent!]!
  memberInvitedEventByUniqueInput(
    where: MemberInvitedEventWhereUniqueInput!
  ): MemberInvitedEvent
  memberInvitedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MemberInvitedEventWhereInput
    orderBy: [MemberInvitedEventOrderByInput!]
  ): MemberInvitedEventConnection!
  memberMetadata(
    offset: Int
    limit: Int = 50
    where: MemberMetadataWhereInput
    orderBy: [MemberMetadataOrderByInput!]
  ): [MemberMetadata!]!
  memberMetadataByUniqueInput(
    where: MemberMetadataWhereUniqueInput!
  ): MemberMetadata
  memberMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MemberMetadataWhereInput
    orderBy: [MemberMetadataOrderByInput!]
  ): MemberMetadataConnection!
  memberProfileUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: MemberProfileUpdatedEventWhereInput
    orderBy: [MemberProfileUpdatedEventOrderByInput!]
  ): [MemberProfileUpdatedEvent!]!
  memberProfileUpdatedEventByUniqueInput(
    where: MemberProfileUpdatedEventWhereUniqueInput!
  ): MemberProfileUpdatedEvent
  memberProfileUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MemberProfileUpdatedEventWhereInput
    orderBy: [MemberProfileUpdatedEventOrderByInput!]
  ): MemberProfileUpdatedEventConnection!
  memberVerificationStatusUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: MemberVerificationStatusUpdatedEventWhereInput
    orderBy: [MemberVerificationStatusUpdatedEventOrderByInput!]
  ): [MemberVerificationStatusUpdatedEvent!]!
  memberVerificationStatusUpdatedEventByUniqueInput(
    where: MemberVerificationStatusUpdatedEventWhereUniqueInput!
  ): MemberVerificationStatusUpdatedEvent
  memberVerificationStatusUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MemberVerificationStatusUpdatedEventWhereInput
    orderBy: [MemberVerificationStatusUpdatedEventOrderByInput!]
  ): MemberVerificationStatusUpdatedEventConnection!
  membershipBoughtEvents(
    offset: Int
    limit: Int = 50
    where: MembershipBoughtEventWhereInput
    orderBy: [MembershipBoughtEventOrderByInput!]
  ): [MembershipBoughtEvent!]!
  membershipBoughtEventByUniqueInput(
    where: MembershipBoughtEventWhereUniqueInput!
  ): MembershipBoughtEvent
  membershipBoughtEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MembershipBoughtEventWhereInput
    orderBy: [MembershipBoughtEventOrderByInput!]
  ): MembershipBoughtEventConnection!
  membershipPriceUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: MembershipPriceUpdatedEventWhereInput
    orderBy: [MembershipPriceUpdatedEventOrderByInput!]
  ): [MembershipPriceUpdatedEvent!]!
  membershipPriceUpdatedEventByUniqueInput(
    where: MembershipPriceUpdatedEventWhereUniqueInput!
  ): MembershipPriceUpdatedEvent
  membershipPriceUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MembershipPriceUpdatedEventWhereInput
    orderBy: [MembershipPriceUpdatedEventOrderByInput!]
  ): MembershipPriceUpdatedEventConnection!
  membershipSystemSnapshots(
    offset: Int
    limit: Int = 50
    where: MembershipSystemSnapshotWhereInput
    orderBy: [MembershipSystemSnapshotOrderByInput!]
  ): [MembershipSystemSnapshot!]!
  membershipSystemSnapshotByUniqueInput(
    where: MembershipSystemSnapshotWhereUniqueInput!
  ): MembershipSystemSnapshot
  membershipSystemSnapshotsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MembershipSystemSnapshotWhereInput
    orderBy: [MembershipSystemSnapshotOrderByInput!]
  ): MembershipSystemSnapshotConnection!
  memberships(
    offset: Int
    limit: Int = 50
    where: MembershipWhereInput
    orderBy: [MembershipOrderByInput!]
  ): [Membership!]!
  membershipByUniqueInput(where: MembershipWhereUniqueInput!): Membership
  membershipsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MembershipWhereInput
    orderBy: [MembershipOrderByInput!]
  ): MembershipConnection!
  newMissedRewardLevelReachedEvents(
    offset: Int
    limit: Int = 50
    where: NewMissedRewardLevelReachedEventWhereInput
    orderBy: [NewMissedRewardLevelReachedEventOrderByInput!]
  ): [NewMissedRewardLevelReachedEvent!]!
  newMissedRewardLevelReachedEventByUniqueInput(
    where: NewMissedRewardLevelReachedEventWhereUniqueInput!
  ): NewMissedRewardLevelReachedEvent
  newMissedRewardLevelReachedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: NewMissedRewardLevelReachedEventWhereInput
    orderBy: [NewMissedRewardLevelReachedEventOrderByInput!]
  ): NewMissedRewardLevelReachedEventConnection!
  openingAddedEvents(
    offset: Int
    limit: Int = 50
    where: OpeningAddedEventWhereInput
    orderBy: [OpeningAddedEventOrderByInput!]
  ): [OpeningAddedEvent!]!
  openingAddedEventByUniqueInput(
    where: OpeningAddedEventWhereUniqueInput!
  ): OpeningAddedEvent
  openingAddedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OpeningAddedEventWhereInput
    orderBy: [OpeningAddedEventOrderByInput!]
  ): OpeningAddedEventConnection!
  openingCanceledEvents(
    offset: Int
    limit: Int = 50
    where: OpeningCanceledEventWhereInput
    orderBy: [OpeningCanceledEventOrderByInput!]
  ): [OpeningCanceledEvent!]!
  openingCanceledEventByUniqueInput(
    where: OpeningCanceledEventWhereUniqueInput!
  ): OpeningCanceledEvent
  openingCanceledEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OpeningCanceledEventWhereInput
    orderBy: [OpeningCanceledEventOrderByInput!]
  ): OpeningCanceledEventConnection!
  openingFilledEvents(
    offset: Int
    limit: Int = 50
    where: OpeningFilledEventWhereInput
    orderBy: [OpeningFilledEventOrderByInput!]
  ): [OpeningFilledEvent!]!
  openingFilledEventByUniqueInput(
    where: OpeningFilledEventWhereUniqueInput!
  ): OpeningFilledEvent
  openingFilledEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OpeningFilledEventWhereInput
    orderBy: [OpeningFilledEventOrderByInput!]
  ): OpeningFilledEventConnection!
  postAddedEvents(
    offset: Int
    limit: Int = 50
    where: PostAddedEventWhereInput
    orderBy: [PostAddedEventOrderByInput!]
  ): [PostAddedEvent!]!
  postAddedEventByUniqueInput(
    where: PostAddedEventWhereUniqueInput!
  ): PostAddedEvent
  postAddedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: PostAddedEventWhereInput
    orderBy: [PostAddedEventOrderByInput!]
  ): PostAddedEventConnection!
  postDeletedEvents(
    offset: Int
    limit: Int = 50
    where: PostDeletedEventWhereInput
    orderBy: [PostDeletedEventOrderByInput!]
  ): [PostDeletedEvent!]!
  postDeletedEventByUniqueInput(
    where: PostDeletedEventWhereUniqueInput!
  ): PostDeletedEvent
  postDeletedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: PostDeletedEventWhereInput
    orderBy: [PostDeletedEventOrderByInput!]
  ): PostDeletedEventConnection!
  postModeratedEvents(
    offset: Int
    limit: Int = 50
    where: PostModeratedEventWhereInput
    orderBy: [PostModeratedEventOrderByInput!]
  ): [PostModeratedEvent!]!
  postModeratedEventByUniqueInput(
    where: PostModeratedEventWhereUniqueInput!
  ): PostModeratedEvent
  postModeratedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: PostModeratedEventWhereInput
    orderBy: [PostModeratedEventOrderByInput!]
  ): PostModeratedEventConnection!
  postReactedEvents(
    offset: Int
    limit: Int = 50
    where: PostReactedEventWhereInput
    orderBy: [PostReactedEventOrderByInput!]
  ): [PostReactedEvent!]!
  postReactedEventByUniqueInput(
    where: PostReactedEventWhereUniqueInput!
  ): PostReactedEvent
  postReactedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: PostReactedEventWhereInput
    orderBy: [PostReactedEventOrderByInput!]
  ): PostReactedEventConnection!
  postTextUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: PostTextUpdatedEventWhereInput
    orderBy: [PostTextUpdatedEventOrderByInput!]
  ): [PostTextUpdatedEvent!]!
  postTextUpdatedEventByUniqueInput(
    where: PostTextUpdatedEventWhereUniqueInput!
  ): PostTextUpdatedEvent
  postTextUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: PostTextUpdatedEventWhereInput
    orderBy: [PostTextUpdatedEventOrderByInput!]
  ): PostTextUpdatedEventConnection!
  proposalCancelledEvents(
    offset: Int
    limit: Int = 50
    where: ProposalCancelledEventWhereInput
    orderBy: [ProposalCancelledEventOrderByInput!]
  ): [ProposalCancelledEvent!]!
  proposalCancelledEventByUniqueInput(
    where: ProposalCancelledEventWhereUniqueInput!
  ): ProposalCancelledEvent
  proposalCancelledEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalCancelledEventWhereInput
    orderBy: [ProposalCancelledEventOrderByInput!]
  ): ProposalCancelledEventConnection!
  proposalCreatedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalCreatedEventWhereInput
    orderBy: [ProposalCreatedEventOrderByInput!]
  ): [ProposalCreatedEvent!]!
  proposalCreatedEventByUniqueInput(
    where: ProposalCreatedEventWhereUniqueInput!
  ): ProposalCreatedEvent
  proposalCreatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalCreatedEventWhereInput
    orderBy: [ProposalCreatedEventOrderByInput!]
  ): ProposalCreatedEventConnection!
  proposalDecisionMadeEvents(
    offset: Int
    limit: Int = 50
    where: ProposalDecisionMadeEventWhereInput
    orderBy: [ProposalDecisionMadeEventOrderByInput!]
  ): [ProposalDecisionMadeEvent!]!
  proposalDecisionMadeEventByUniqueInput(
    where: ProposalDecisionMadeEventWhereUniqueInput!
  ): ProposalDecisionMadeEvent
  proposalDecisionMadeEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDecisionMadeEventWhereInput
    orderBy: [ProposalDecisionMadeEventOrderByInput!]
  ): ProposalDecisionMadeEventConnection!
  proposalDiscussionPostCreatedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionPostCreatedEventWhereInput
    orderBy: [ProposalDiscussionPostCreatedEventOrderByInput!]
  ): [ProposalDiscussionPostCreatedEvent!]!
  proposalDiscussionPostCreatedEventByUniqueInput(
    where: ProposalDiscussionPostCreatedEventWhereUniqueInput!
  ): ProposalDiscussionPostCreatedEvent
  proposalDiscussionPostCreatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionPostCreatedEventWhereInput
    orderBy: [ProposalDiscussionPostCreatedEventOrderByInput!]
  ): ProposalDiscussionPostCreatedEventConnection!
  proposalDiscussionPostDeletedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionPostDeletedEventWhereInput
    orderBy: [ProposalDiscussionPostDeletedEventOrderByInput!]
  ): [ProposalDiscussionPostDeletedEvent!]!
  proposalDiscussionPostDeletedEventByUniqueInput(
    where: ProposalDiscussionPostDeletedEventWhereUniqueInput!
  ): ProposalDiscussionPostDeletedEvent
  proposalDiscussionPostDeletedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionPostDeletedEventWhereInput
    orderBy: [ProposalDiscussionPostDeletedEventOrderByInput!]
  ): ProposalDiscussionPostDeletedEventConnection!
  proposalDiscussionPostUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionPostUpdatedEventWhereInput
    orderBy: [ProposalDiscussionPostUpdatedEventOrderByInput!]
  ): [ProposalDiscussionPostUpdatedEvent!]!
  proposalDiscussionPostUpdatedEventByUniqueInput(
    where: ProposalDiscussionPostUpdatedEventWhereUniqueInput!
  ): ProposalDiscussionPostUpdatedEvent
  proposalDiscussionPostUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionPostUpdatedEventWhereInput
    orderBy: [ProposalDiscussionPostUpdatedEventOrderByInput!]
  ): ProposalDiscussionPostUpdatedEventConnection!
  proposalDiscussionPosts(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionPostWhereInput
    orderBy: [ProposalDiscussionPostOrderByInput!]
  ): [ProposalDiscussionPost!]!
  proposalDiscussionPostByUniqueInput(
    where: ProposalDiscussionPostWhereUniqueInput!
  ): ProposalDiscussionPost
  proposalDiscussionPostsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionPostWhereInput
    orderBy: [ProposalDiscussionPostOrderByInput!]
  ): ProposalDiscussionPostConnection!
  proposalDiscussionThreadModeChangedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionThreadModeChangedEventWhereInput
    orderBy: [ProposalDiscussionThreadModeChangedEventOrderByInput!]
  ): [ProposalDiscussionThreadModeChangedEvent!]!
  proposalDiscussionThreadModeChangedEventByUniqueInput(
    where: ProposalDiscussionThreadModeChangedEventWhereUniqueInput!
  ): ProposalDiscussionThreadModeChangedEvent
  proposalDiscussionThreadModeChangedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionThreadModeChangedEventWhereInput
    orderBy: [ProposalDiscussionThreadModeChangedEventOrderByInput!]
  ): ProposalDiscussionThreadModeChangedEventConnection!
  proposalDiscussionThreads(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionThreadWhereInput
    orderBy: [ProposalDiscussionThreadOrderByInput!]
  ): [ProposalDiscussionThread!]!
  proposalDiscussionThreadByUniqueInput(
    where: ProposalDiscussionThreadWhereUniqueInput!
  ): ProposalDiscussionThread
  proposalDiscussionThreadsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionThreadWhereInput
    orderBy: [ProposalDiscussionThreadOrderByInput!]
  ): ProposalDiscussionThreadConnection!
  proposalDiscussionWhitelists(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionWhitelistWhereInput
    orderBy: [ProposalDiscussionWhitelistOrderByInput!]
  ): [ProposalDiscussionWhitelist!]!
  proposalDiscussionWhitelistByUniqueInput(
    where: ProposalDiscussionWhitelistWhereUniqueInput!
  ): ProposalDiscussionWhitelist
  proposalDiscussionWhitelistsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionWhitelistWhereInput
    orderBy: [ProposalDiscussionWhitelistOrderByInput!]
  ): ProposalDiscussionWhitelistConnection!
  proposalExecutedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalExecutedEventWhereInput
    orderBy: [ProposalExecutedEventOrderByInput!]
  ): [ProposalExecutedEvent!]!
  proposalExecutedEventByUniqueInput(
    where: ProposalExecutedEventWhereUniqueInput!
  ): ProposalExecutedEvent
  proposalExecutedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalExecutedEventWhereInput
    orderBy: [ProposalExecutedEventOrderByInput!]
  ): ProposalExecutedEventConnection!
  proposalStatusUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalStatusUpdatedEventWhereInput
    orderBy: [ProposalStatusUpdatedEventOrderByInput!]
  ): [ProposalStatusUpdatedEvent!]!
  proposalStatusUpdatedEventByUniqueInput(
    where: ProposalStatusUpdatedEventWhereUniqueInput!
  ): ProposalStatusUpdatedEvent
  proposalStatusUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalStatusUpdatedEventWhereInput
    orderBy: [ProposalStatusUpdatedEventOrderByInput!]
  ): ProposalStatusUpdatedEventConnection!
  proposalVotedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalVotedEventWhereInput
    orderBy: [ProposalVotedEventOrderByInput!]
  ): [ProposalVotedEvent!]!
  proposalVotedEventByUniqueInput(
    where: ProposalVotedEventWhereUniqueInput!
  ): ProposalVotedEvent
  proposalVotedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalVotedEventWhereInput
    orderBy: [ProposalVotedEventOrderByInput!]
  ): ProposalVotedEventConnection!
  proposals(
    offset: Int
    limit: Int = 50
    where: ProposalWhereInput
    orderBy: [ProposalOrderByInput!]
  ): [Proposal!]!
  proposalByUniqueInput(where: ProposalWhereUniqueInput!): Proposal
  proposalsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalWhereInput
    orderBy: [ProposalOrderByInput!]
  ): ProposalConnection!
  channelCategoriesByName(
    whereChannelCategory: ChannelCategoryWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [ChannelCategoriesByNameFTSOutput!]!
  membersByHandle(
    whereMembership: MembershipWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [MembersByHandleFTSOutput!]!
  postsByText(
    whereForumPost: ForumPostWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [PostsByTextFTSOutput!]!
  proposalsByDescription(
    whereProposal: ProposalWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [ProposalsByDescriptionFTSOutput!]!
  proposalsByTitle(
    whereProposal: ProposalWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [ProposalsByTitleFTSOutput!]!
  search(
    whereVideo: VideoWhereInput
    whereChannel: ChannelWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [SearchFTSOutput!]!
  threadsByTitle(
    whereForumThread: ForumThreadWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [ThreadsByTitleFTSOutput!]!
  videoCategoriesByName(
    whereVideoCategory: VideoCategoryWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [VideoCategoriesByNameFTSOutput!]!
  referralCutUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: ReferralCutUpdatedEventWhereInput
    orderBy: [ReferralCutUpdatedEventOrderByInput!]
  ): [ReferralCutUpdatedEvent!]!
  referralCutUpdatedEventByUniqueInput(
    where: ReferralCutUpdatedEventWhereUniqueInput!
  ): ReferralCutUpdatedEvent
  referralCutUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ReferralCutUpdatedEventWhereInput
    orderBy: [ReferralCutUpdatedEventOrderByInput!]
  ): ReferralCutUpdatedEventConnection!
  rewardPaidEvents(
    offset: Int
    limit: Int = 50
    where: RewardPaidEventWhereInput
    orderBy: [RewardPaidEventOrderByInput!]
  ): [RewardPaidEvent!]!
  rewardPaidEventByUniqueInput(
    where: RewardPaidEventWhereUniqueInput!
  ): RewardPaidEvent
  rewardPaidEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: RewardPaidEventWhereInput
    orderBy: [RewardPaidEventOrderByInput!]
  ): RewardPaidEventConnection!
  runtimeWasmBytecodes(
    offset: Int
    limit: Int = 50
    where: RuntimeWasmBytecodeWhereInput
    orderBy: [RuntimeWasmBytecodeOrderByInput!]
  ): [RuntimeWasmBytecode!]!
  runtimeWasmBytecodeByUniqueInput(
    where: RuntimeWasmBytecodeWhereUniqueInput!
  ): RuntimeWasmBytecode
  runtimeWasmBytecodesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: RuntimeWasmBytecodeWhereInput
    orderBy: [RuntimeWasmBytecodeOrderByInput!]
  ): RuntimeWasmBytecodeConnection!
  stakeDecreasedEvents(
    offset: Int
    limit: Int = 50
    where: StakeDecreasedEventWhereInput
    orderBy: [StakeDecreasedEventOrderByInput!]
  ): [StakeDecreasedEvent!]!
  stakeDecreasedEventByUniqueInput(
    where: StakeDecreasedEventWhereUniqueInput!
  ): StakeDecreasedEvent
  stakeDecreasedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakeDecreasedEventWhereInput
    orderBy: [StakeDecreasedEventOrderByInput!]
  ): StakeDecreasedEventConnection!
  stakeIncreasedEvents(
    offset: Int
    limit: Int = 50
    where: StakeIncreasedEventWhereInput
    orderBy: [StakeIncreasedEventOrderByInput!]
  ): [StakeIncreasedEvent!]!
  stakeIncreasedEventByUniqueInput(
    where: StakeIncreasedEventWhereUniqueInput!
  ): StakeIncreasedEvent
  stakeIncreasedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakeIncreasedEventWhereInput
    orderBy: [StakeIncreasedEventOrderByInput!]
  ): StakeIncreasedEventConnection!
  stakeSlashedEvents(
    offset: Int
    limit: Int = 50
    where: StakeSlashedEventWhereInput
    orderBy: [StakeSlashedEventOrderByInput!]
  ): [StakeSlashedEvent!]!
  stakeSlashedEventByUniqueInput(
    where: StakeSlashedEventWhereUniqueInput!
  ): StakeSlashedEvent
  stakeSlashedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakeSlashedEventWhereInput
    orderBy: [StakeSlashedEventOrderByInput!]
  ): StakeSlashedEventConnection!
  stakingAccountAddedEvents(
    offset: Int
    limit: Int = 50
    where: StakingAccountAddedEventWhereInput
    orderBy: [StakingAccountAddedEventOrderByInput!]
  ): [StakingAccountAddedEvent!]!
  stakingAccountAddedEventByUniqueInput(
    where: StakingAccountAddedEventWhereUniqueInput!
  ): StakingAccountAddedEvent
  stakingAccountAddedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakingAccountAddedEventWhereInput
    orderBy: [StakingAccountAddedEventOrderByInput!]
  ): StakingAccountAddedEventConnection!
  stakingAccountConfirmedEvents(
    offset: Int
    limit: Int = 50
    where: StakingAccountConfirmedEventWhereInput
    orderBy: [StakingAccountConfirmedEventOrderByInput!]
  ): [StakingAccountConfirmedEvent!]!
  stakingAccountConfirmedEventByUniqueInput(
    where: StakingAccountConfirmedEventWhereUniqueInput!
  ): StakingAccountConfirmedEvent
  stakingAccountConfirmedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakingAccountConfirmedEventWhereInput
    orderBy: [StakingAccountConfirmedEventOrderByInput!]
  ): StakingAccountConfirmedEventConnection!
  stakingAccountRemovedEvents(
    offset: Int
    limit: Int = 50
    where: StakingAccountRemovedEventWhereInput
    orderBy: [StakingAccountRemovedEventOrderByInput!]
  ): [StakingAccountRemovedEvent!]!
  stakingAccountRemovedEventByUniqueInput(
    where: StakingAccountRemovedEventWhereUniqueInput!
  ): StakingAccountRemovedEvent
  stakingAccountRemovedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakingAccountRemovedEventWhereInput
    orderBy: [StakingAccountRemovedEventOrderByInput!]
  ): StakingAccountRemovedEventConnection!
  statusTextChangedEvents(
    offset: Int
    limit: Int = 50
    where: StatusTextChangedEventWhereInput
    orderBy: [StatusTextChangedEventOrderByInput!]
  ): [StatusTextChangedEvent!]!
  statusTextChangedEventByUniqueInput(
    where: StatusTextChangedEventWhereUniqueInput!
  ): StatusTextChangedEvent
  statusTextChangedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StatusTextChangedEventWhereInput
    orderBy: [StatusTextChangedEventOrderByInput!]
  ): StatusTextChangedEventConnection!
  terminatedLeaderEvents(
    offset: Int
    limit: Int = 50
    where: TerminatedLeaderEventWhereInput
    orderBy: [TerminatedLeaderEventOrderByInput!]
  ): [TerminatedLeaderEvent!]!
  terminatedLeaderEventByUniqueInput(
    where: TerminatedLeaderEventWhereUniqueInput!
  ): TerminatedLeaderEvent
  terminatedLeaderEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: TerminatedLeaderEventWhereInput
    orderBy: [TerminatedLeaderEventOrderByInput!]
  ): TerminatedLeaderEventConnection!
  terminatedWorkerEvents(
    offset: Int
    limit: Int = 50
    where: TerminatedWorkerEventWhereInput
    orderBy: [TerminatedWorkerEventOrderByInput!]
  ): [TerminatedWorkerEvent!]!
  terminatedWorkerEventByUniqueInput(
    where: TerminatedWorkerEventWhereUniqueInput!
  ): TerminatedWorkerEvent
  terminatedWorkerEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: TerminatedWorkerEventWhereInput
    orderBy: [TerminatedWorkerEventOrderByInput!]
  ): TerminatedWorkerEventConnection!
  threadCreatedEvents(
    offset: Int
    limit: Int = 50
    where: ThreadCreatedEventWhereInput
    orderBy: [ThreadCreatedEventOrderByInput!]
  ): [ThreadCreatedEvent!]!
  threadCreatedEventByUniqueInput(
    where: ThreadCreatedEventWhereUniqueInput!
  ): ThreadCreatedEvent
  threadCreatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ThreadCreatedEventWhereInput
    orderBy: [ThreadCreatedEventOrderByInput!]
  ): ThreadCreatedEventConnection!
  threadDeletedEvents(
    offset: Int
    limit: Int = 50
    where: ThreadDeletedEventWhereInput
    orderBy: [ThreadDeletedEventOrderByInput!]
  ): [ThreadDeletedEvent!]!
  threadDeletedEventByUniqueInput(
    where: ThreadDeletedEventWhereUniqueInput!
  ): ThreadDeletedEvent
  threadDeletedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ThreadDeletedEventWhereInput
    orderBy: [ThreadDeletedEventOrderByInput!]
  ): ThreadDeletedEventConnection!
  threadMetadataUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: ThreadMetadataUpdatedEventWhereInput
    orderBy: [ThreadMetadataUpdatedEventOrderByInput!]
  ): [ThreadMetadataUpdatedEvent!]!
  threadMetadataUpdatedEventByUniqueInput(
    where: ThreadMetadataUpdatedEventWhereUniqueInput!
  ): ThreadMetadataUpdatedEvent
  threadMetadataUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ThreadMetadataUpdatedEventWhereInput
    orderBy: [ThreadMetadataUpdatedEventOrderByInput!]
  ): ThreadMetadataUpdatedEventConnection!
  threadModeratedEvents(
    offset: Int
    limit: Int = 50
    where: ThreadModeratedEventWhereInput
    orderBy: [ThreadModeratedEventOrderByInput!]
  ): [ThreadModeratedEvent!]!
  threadModeratedEventByUniqueInput(
    where: ThreadModeratedEventWhereUniqueInput!
  ): ThreadModeratedEvent
  threadModeratedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ThreadModeratedEventWhereInput
    orderBy: [ThreadModeratedEventOrderByInput!]
  ): ThreadModeratedEventConnection!
  threadMovedEvents(
    offset: Int
    limit: Int = 50
    where: ThreadMovedEventWhereInput
    orderBy: [ThreadMovedEventOrderByInput!]
  ): [ThreadMovedEvent!]!
  threadMovedEventByUniqueInput(
    where: ThreadMovedEventWhereUniqueInput!
  ): ThreadMovedEvent
  threadMovedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ThreadMovedEventWhereInput
    orderBy: [ThreadMovedEventOrderByInput!]
  ): ThreadMovedEventConnection!
  upcomingWorkingGroupOpenings(
    offset: Int
    limit: Int = 50
    where: UpcomingWorkingGroupOpeningWhereInput
    orderBy: [UpcomingWorkingGroupOpeningOrderByInput!]
  ): [UpcomingWorkingGroupOpening!]!
  upcomingWorkingGroupOpeningByUniqueInput(
    where: UpcomingWorkingGroupOpeningWhereUniqueInput!
  ): UpcomingWorkingGroupOpening
  upcomingWorkingGroupOpeningsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: UpcomingWorkingGroupOpeningWhereInput
    orderBy: [UpcomingWorkingGroupOpeningOrderByInput!]
  ): UpcomingWorkingGroupOpeningConnection!
  videoCategories(
    offset: Int
    limit: Int = 50
    where: VideoCategoryWhereInput
    orderBy: [VideoCategoryOrderByInput!]
  ): [VideoCategory!]!
  videoCategoryByUniqueInput(
    where: VideoCategoryWhereUniqueInput!
  ): VideoCategory
  videoCategoriesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VideoCategoryWhereInput
    orderBy: [VideoCategoryOrderByInput!]
  ): VideoCategoryConnection!
  videoMediaEncodings(
    offset: Int
    limit: Int = 50
    where: VideoMediaEncodingWhereInput
    orderBy: [VideoMediaEncodingOrderByInput!]
  ): [VideoMediaEncoding!]!
  videoMediaEncodingByUniqueInput(
    where: VideoMediaEncodingWhereUniqueInput!
  ): VideoMediaEncoding
  videoMediaEncodingsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VideoMediaEncodingWhereInput
    orderBy: [VideoMediaEncodingOrderByInput!]
  ): VideoMediaEncodingConnection!
  videoMediaMetadata(
    offset: Int
    limit: Int = 50
    where: VideoMediaMetadataWhereInput
    orderBy: [VideoMediaMetadataOrderByInput!]
  ): [VideoMediaMetadata!]!
  videoMediaMetadataByUniqueInput(
    where: VideoMediaMetadataWhereUniqueInput!
  ): VideoMediaMetadata
  videoMediaMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VideoMediaMetadataWhereInput
    orderBy: [VideoMediaMetadataOrderByInput!]
  ): VideoMediaMetadataConnection!
  videos(
    offset: Int
    limit: Int = 50
    where: VideoWhereInput
    orderBy: [VideoOrderByInput!]
  ): [Video!]!
  videoByUniqueInput(where: VideoWhereUniqueInput!): Video
  videosConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VideoWhereInput
    orderBy: [VideoOrderByInput!]
  ): VideoConnection!
  voteOnPollEvents(
    offset: Int
    limit: Int = 50
    where: VoteOnPollEventWhereInput
    orderBy: [VoteOnPollEventOrderByInput!]
  ): [VoteOnPollEvent!]!
  voteOnPollEventByUniqueInput(
    where: VoteOnPollEventWhereUniqueInput!
  ): VoteOnPollEvent
  voteOnPollEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VoteOnPollEventWhereInput
    orderBy: [VoteOnPollEventOrderByInput!]
  ): VoteOnPollEventConnection!
  workerExitedEvents(
    offset: Int
    limit: Int = 50
    where: WorkerExitedEventWhereInput
    orderBy: [WorkerExitedEventOrderByInput!]
  ): [WorkerExitedEvent!]!
  workerExitedEventByUniqueInput(
    where: WorkerExitedEventWhereUniqueInput!
  ): WorkerExitedEvent
  workerExitedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkerExitedEventWhereInput
    orderBy: [WorkerExitedEventOrderByInput!]
  ): WorkerExitedEventConnection!
  workerRewardAccountUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: WorkerRewardAccountUpdatedEventWhereInput
    orderBy: [WorkerRewardAccountUpdatedEventOrderByInput!]
  ): [WorkerRewardAccountUpdatedEvent!]!
  workerRewardAccountUpdatedEventByUniqueInput(
    where: WorkerRewardAccountUpdatedEventWhereUniqueInput!
  ): WorkerRewardAccountUpdatedEvent
  workerRewardAccountUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkerRewardAccountUpdatedEventWhereInput
    orderBy: [WorkerRewardAccountUpdatedEventOrderByInput!]
  ): WorkerRewardAccountUpdatedEventConnection!
  workerRewardAmountUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: WorkerRewardAmountUpdatedEventWhereInput
    orderBy: [WorkerRewardAmountUpdatedEventOrderByInput!]
  ): [WorkerRewardAmountUpdatedEvent!]!
  workerRewardAmountUpdatedEventByUniqueInput(
    where: WorkerRewardAmountUpdatedEventWhereUniqueInput!
  ): WorkerRewardAmountUpdatedEvent
  workerRewardAmountUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkerRewardAmountUpdatedEventWhereInput
    orderBy: [WorkerRewardAmountUpdatedEventOrderByInput!]
  ): WorkerRewardAmountUpdatedEventConnection!
  workerRoleAccountUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: WorkerRoleAccountUpdatedEventWhereInput
    orderBy: [WorkerRoleAccountUpdatedEventOrderByInput!]
  ): [WorkerRoleAccountUpdatedEvent!]!
  workerRoleAccountUpdatedEventByUniqueInput(
    where: WorkerRoleAccountUpdatedEventWhereUniqueInput!
  ): WorkerRoleAccountUpdatedEvent
  workerRoleAccountUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkerRoleAccountUpdatedEventWhereInput
    orderBy: [WorkerRoleAccountUpdatedEventOrderByInput!]
  ): WorkerRoleAccountUpdatedEventConnection!
  workerStartedLeavingEvents(
    offset: Int
    limit: Int = 50
    where: WorkerStartedLeavingEventWhereInput
    orderBy: [WorkerStartedLeavingEventOrderByInput!]
  ): [WorkerStartedLeavingEvent!]!
  workerStartedLeavingEventByUniqueInput(
    where: WorkerStartedLeavingEventWhereUniqueInput!
  ): WorkerStartedLeavingEvent
  workerStartedLeavingEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkerStartedLeavingEventWhereInput
    orderBy: [WorkerStartedLeavingEventOrderByInput!]
  ): WorkerStartedLeavingEventConnection!
  workers(
    offset: Int
    limit: Int = 50
    where: WorkerWhereInput
    orderBy: [WorkerOrderByInput!]
  ): [Worker!]!
  workerByUniqueInput(where: WorkerWhereUniqueInput!): Worker
  workersConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkerWhereInput
    orderBy: [WorkerOrderByInput!]
  ): WorkerConnection!
  workingGroupApplications(
    offset: Int
    limit: Int = 50
    where: WorkingGroupApplicationWhereInput
    orderBy: [WorkingGroupApplicationOrderByInput!]
  ): [WorkingGroupApplication!]!
  workingGroupApplicationByUniqueInput(
    where: WorkingGroupApplicationWhereUniqueInput!
  ): WorkingGroupApplication
  workingGroupApplicationsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkingGroupApplicationWhereInput
    orderBy: [WorkingGroupApplicationOrderByInput!]
  ): WorkingGroupApplicationConnection!
  workingGroupMetadata(
    offset: Int
    limit: Int = 50
    where: WorkingGroupMetadataWhereInput
    orderBy: [WorkingGroupMetadataOrderByInput!]
  ): [WorkingGroupMetadata!]!
  workingGroupMetadataByUniqueInput(
    where: WorkingGroupMetadataWhereUniqueInput!
  ): WorkingGroupMetadata
  workingGroupMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkingGroupMetadataWhereInput
    orderBy: [WorkingGroupMetadataOrderByInput!]
  ): WorkingGroupMetadataConnection!
  workingGroupOpeningMetadata(
    offset: Int
    limit: Int = 50
    where: WorkingGroupOpeningMetadataWhereInput
    orderBy: [WorkingGroupOpeningMetadataOrderByInput!]
  ): [WorkingGroupOpeningMetadata!]!
  workingGroupOpeningMetadataByUniqueInput(
    where: WorkingGroupOpeningMetadataWhereUniqueInput!
  ): WorkingGroupOpeningMetadata
  workingGroupOpeningMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkingGroupOpeningMetadataWhereInput
    orderBy: [WorkingGroupOpeningMetadataOrderByInput!]
  ): WorkingGroupOpeningMetadataConnection!
  workingGroupOpenings(
    offset: Int
    limit: Int = 50
    where: WorkingGroupOpeningWhereInput
    orderBy: [WorkingGroupOpeningOrderByInput!]
  ): [WorkingGroupOpening!]!
  workingGroupOpeningByUniqueInput(
    where: WorkingGroupOpeningWhereUniqueInput!
  ): WorkingGroupOpening
  workingGroupOpeningsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkingGroupOpeningWhereInput
    orderBy: [WorkingGroupOpeningOrderByInput!]
  ): WorkingGroupOpeningConnection!
  workingGroups(
    offset: Int
    limit: Int = 50
    where: WorkingGroupWhereInput
    orderBy: [WorkingGroupOrderByInput!]
  ): [WorkingGroup!]!
  workingGroupByUniqueInput(where: WorkingGroupWhereUniqueInput!): WorkingGroup
  workingGroupsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkingGroupWhereInput
    orderBy: [WorkingGroupOrderByInput!]
  ): WorkingGroupConnection!
}

input ApplicationFormQuestionAnswerWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  answer_eq: String
  answer_contains: String
  answer_startsWith: String
  answer_endsWith: String
  answer_in: [String!]
  application: WorkingGroupApplicationWhereInput
  question: ApplicationFormQuestionWhereInput
  AND: [ApplicationFormQuestionAnswerWhereInput!]
  OR: [ApplicationFormQuestionAnswerWhereInput!]
}

# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

input WorkingGroupApplicationWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  runtimeId_eq: Int
  runtimeId_gt: Int
  runtimeId_gte: Int
  runtimeId_lt: Int
  runtimeId_lte: Int
  runtimeId_in: [Int!]
  stake_eq: BigInt
  stake_gt: BigInt
  stake_gte: BigInt
  stake_lt: BigInt
  stake_lte: BigInt
  stake_in: [BigInt!]
  roleAccount_eq: String
  roleAccount_contains: String
  roleAccount_startsWith: String
  roleAccount_endsWith: String
  roleAccount_in: [String!]
  rewardAccount_eq: String
  rewardAccount_contains: String
  rewardAccount_startsWith: String
  rewardAccount_endsWith: String
  rewardAccount_in: [String!]
  stakingAccount_eq: String
  stakingAccount_contains: String
  stakingAccount_startsWith: String
  stakingAccount_endsWith: String
  stakingAccount_in: [String!]
  status_json: JSONObject
  opening: WorkingGroupOpeningWhereInput
  applicant: MembershipWhereInput
  answers_none: ApplicationFormQuestionAnswerWhereInput
  answers_some: ApplicationFormQuestionAnswerWhereInput
  answers_every: ApplicationFormQuestionAnswerWhereInput
  createdInEvent: AppliedOnOpeningEventWhereInput
  applicationwithdrawneventapplication_none: ApplicationWithdrawnEventWhereInput
  applicationwithdrawneventapplication_some: ApplicationWithdrawnEventWhereInput
  applicationwithdrawneventapplication_every: ApplicationWithdrawnEventWhereInput
  workerapplication_none: WorkerWhereInput
  workerapplication_some: WorkerWhereInput
  workerapplication_every: WorkerWhereInput
  AND: [WorkingGroupApplicationWhereInput!]
  OR: [WorkingGroupApplicationWhereInput!]
}

# GraphQL representation of BigInt
scalar BigInt

# The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSONObject

input WorkingGroupOpeningWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  runtimeId_eq: Int
  runtimeId_gt: Int
  runtimeId_gte: Int
  runtimeId_lt: Int
  runtimeId_lte: Int
  runtimeId_in: [Int!]
  type_eq: WorkingGroupOpeningType
  type_in: [WorkingGroupOpeningType!]
  status_json: JSONObject
  stakeAmount_eq: BigInt
  stakeAmount_gt: BigInt
  stakeAmount_gte: BigInt
  stakeAmount_lt: BigInt
  stakeAmount_lte: BigInt
  stakeAmount_in: [BigInt!]
  unstakingPeriod_eq: Int
  unstakingPeriod_gt: Int
  unstakingPeriod_gte: Int
  unstakingPeriod_lt: Int
  unstakingPeriod_lte: Int
  unstakingPeriod_in: [Int!]
  rewardPerBlock_eq: BigInt
  rewardPerBlock_gt: BigInt
  rewardPerBlock_gte: BigInt
  rewardPerBlock_lt: BigInt
  rewardPerBlock_lte: BigInt
  rewardPerBlock_in: [BigInt!]
  group: WorkingGroupWhereInput
  applications_none: WorkingGroupApplicationWhereInput
  applications_some: WorkingGroupApplicationWhereInput
  applications_every: WorkingGroupApplicationWhereInput
  metadata: WorkingGroupOpeningMetadataWhereInput
  createdInEvent: OpeningAddedEventWhereInput
  appliedonopeningeventopening_none: AppliedOnOpeningEventWhereInput
  appliedonopeningeventopening_some: AppliedOnOpeningEventWhereInput
  appliedonopeningeventopening_every: AppliedOnOpeningEventWhereInput
  openingcanceledeventopening_none: OpeningCanceledEventWhereInput
  openingcanceledeventopening_some: OpeningCanceledEventWhereInput
  openingcanceledeventopening_every: OpeningCanceledEventWhereInput
  openingfilledeventopening_none: OpeningFilledEventWhereInput
  openingfilledeventopening_some: OpeningFilledEventWhereInput
  openingfilledeventopening_every: OpeningFilledEventWhereInput
  AND: [WorkingGroupOpeningWhereInput!]
  OR: [WorkingGroupOpeningWhereInput!]
}

enum WorkingGroupOpeningType {
  REGULAR
  LEADER
}

input WorkingGroupWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  name_eq: String
  name_contains: String
  name_startsWith: String
  name_endsWith: String
  name_in: [String!]
  budget_eq: BigInt
  budget_gt: BigInt
  budget_gte: BigInt
  budget_lt: BigInt
  budget_lte: BigInt
  budget_in: [BigInt!]
  metadata: WorkingGroupMetadataWhereInput
  leader: WorkerWhereInput
  workers_none: WorkerWhereInput
  workers_some: WorkerWhereInput
  workers_every: WorkerWhereInput
  openings_none: WorkingGroupOpeningWhereInput
  openings_some: WorkingGroupOpeningWhereInput
  openings_every: WorkingGroupOpeningWhereInput
  applicationwithdrawneventgroup_none: ApplicationWithdrawnEventWhereInput
  applicationwithdrawneventgroup_some: ApplicationWithdrawnEventWhereInput
  applicationwithdrawneventgroup_every: ApplicationWithdrawnEventWhereInput
  appliedonopeningeventgroup_none: AppliedOnOpeningEventWhereInput
  appliedonopeningeventgroup_some: AppliedOnOpeningEventWhereInput
  appliedonopeningeventgroup_every: AppliedOnOpeningEventWhereInput
  budgetseteventgroup_none: BudgetSetEventWhereInput
  budgetseteventgroup_some: BudgetSetEventWhereInput
  budgetseteventgroup_every: BudgetSetEventWhereInput
  budgetspendingeventgroup_none: BudgetSpendingEventWhereInput
  budgetspendingeventgroup_some: BudgetSpendingEventWhereInput
  budgetspendingeventgroup_every: BudgetSpendingEventWhereInput
  leaderseteventgroup_none: LeaderSetEventWhereInput
  leaderseteventgroup_some: LeaderSetEventWhereInput
  leaderseteventgroup_every: LeaderSetEventWhereInput
  leaderunseteventgroup_none: LeaderUnsetEventWhereInput
  leaderunseteventgroup_some: LeaderUnsetEventWhereInput
  leaderunseteventgroup_every: LeaderUnsetEventWhereInput
  newmissedrewardlevelreachedeventgroup_none: NewMissedRewardLevelReachedEventWhereInput
  newmissedrewardlevelreachedeventgroup_some: NewMissedRewardLevelReachedEventWhereInput
  newmissedrewardlevelreachedeventgroup_every: NewMissedRewardLevelReachedEventWhereInput
  openingaddedeventgroup_none: OpeningAddedEventWhereInput
  openingaddedeventgroup_some: OpeningAddedEventWhereInput
  openingaddedeventgroup_every: OpeningAddedEventWhereInput
  openingcanceledeventgroup_none: OpeningCanceledEventWhereInput
  openingcanceledeventgroup_some: OpeningCanceledEventWhereInput
  openingcanceledeventgroup_every: OpeningCanceledEventWhereInput
  openingfilledeventgroup_none: OpeningFilledEventWhereInput
  openingfilledeventgroup_some: OpeningFilledEventWhereInput
  openingfilledeventgroup_every: OpeningFilledEventWhereInput
  rewardpaideventgroup_none: RewardPaidEventWhereInput
  rewardpaideventgroup_some: RewardPaidEventWhereInput
  rewardpaideventgroup_every: RewardPaidEventWhereInput
  stakedecreasedeventgroup_none: StakeDecreasedEventWhereInput
  stakedecreasedeventgroup_some: StakeDecreasedEventWhereInput
  stakedecreasedeventgroup_every: StakeDecreasedEventWhereInput
  stakeincreasedeventgroup_none: StakeIncreasedEventWhereInput
  stakeincreasedeventgroup_some: StakeIncreasedEventWhereInput
  stakeincreasedeventgroup_every: StakeIncreasedEventWhereInput
  stakeslashedeventgroup_none: StakeSlashedEventWhereInput
  stakeslashedeventgroup_some: StakeSlashedEventWhereInput
  stakeslashedeventgroup_every: StakeSlashedEventWhereInput
  statustextchangedeventgroup_none: StatusTextChangedEventWhereInput
  statustextchangedeventgroup_some: StatusTextChangedEventWhereInput
  statustextchangedeventgroup_every: StatusTextChangedEventWhereInput
  terminatedleadereventgroup_none: TerminatedLeaderEventWhereInput
  terminatedleadereventgroup_some: TerminatedLeaderEventWhereInput
  terminatedleadereventgroup_every: TerminatedLeaderEventWhereInput
  terminatedworkereventgroup_none: TerminatedWorkerEventWhereInput
  terminatedworkereventgroup_some: TerminatedWorkerEventWhereInput
  terminatedworkereventgroup_every: TerminatedWorkerEventWhereInput
  upcomingworkinggroupopeninggroup_none: UpcomingWorkingGroupOpeningWhereInput
  upcomingworkinggroupopeninggroup_some: UpcomingWorkingGroupOpeningWhereInput
  upcomingworkinggroupopeninggroup_every: UpcomingWorkingGroupOpeningWhereInput
  workerexitedeventgroup_none: WorkerExitedEventWhereInput
  workerexitedeventgroup_some: WorkerExitedEventWhereInput
  workerexitedeventgroup_every: WorkerExitedEventWhereInput
  workerrewardaccountupdatedeventgroup_none: WorkerRewardAccountUpdatedEventWhereInput
  workerrewardaccountupdatedeventgroup_some: WorkerRewardAccountUpdatedEventWhereInput
  workerrewardaccountupdatedeventgroup_every: WorkerRewardAccountUpdatedEventWhereInput
  workerrewardamountupdatedeventgroup_none: WorkerRewardAmountUpdatedEventWhereInput
  workerrewardamountupdatedeventgroup_some: WorkerRewardAmountUpdatedEventWhereInput
  workerrewardamountupdatedeventgroup_every: WorkerRewardAmountUpdatedEventWhereInput
  workerroleaccountupdatedeventgroup_none: WorkerRoleAccountUpdatedEventWhereInput
  workerroleaccountupdatedeventgroup_some: WorkerRoleAccountUpdatedEventWhereInput
  workerroleaccountupdatedeventgroup_every: WorkerRoleAccountUpdatedEventWhereInput
  workerstartedleavingeventgroup_none: WorkerStartedLeavingEventWhereInput
  workerstartedleavingeventgroup_some: WorkerStartedLeavingEventWhereInput
  workerstartedleavingeventgroup_every: WorkerStartedLeavingEventWhereInput
  workinggroupmetadatagroup_none: WorkingGroupMetadataWhereInput
  workinggroupmetadatagroup_some: WorkingGroupMetadataWhereInput
  workinggroupmetadatagroup_every: WorkingGroupMetadataWhereInput
  AND: [WorkingGroupWhereInput!]
  OR: [WorkingGroupWhereInput!]
}

input WorkingGroupMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  status_eq: String
  status_contains: String
  status_startsWith: String
  status_endsWith: String
  status_in: [String!]
  statusMessage_eq: String
  statusMessage_contains: String
  statusMessage_startsWith: String
  statusMessage_endsWith: String
  statusMessage_in: [String!]
  about_eq: String
  about_contains: String
  about_startsWith: String
  about_endsWith: String
  about_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  setInEvent: StatusTextChangedEventWhereInput
  group: WorkingGroupWhereInput
  workinggroupmetadata_none: WorkingGroupWhereInput
  workinggroupmetadata_some: WorkingGroupWhereInput
  workinggroupmetadata_every: WorkingGroupWhereInput
  AND: [WorkingGroupMetadataWhereInput!]
  OR: [WorkingGroupMetadataWhereInput!]
}

input StatusTextChangedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  metadata_eq: String
  metadata_contains: String
  metadata_startsWith: String
  metadata_endsWith: String
  metadata_in: [String!]
  result_json: JSONObject
  group: WorkingGroupWhereInput
  upcomingworkinggroupopeningcreatedInEvent_none: UpcomingWorkingGroupOpeningWhereInput
  upcomingworkinggroupopeningcreatedInEvent_some: UpcomingWorkingGroupOpeningWhereInput
  upcomingworkinggroupopeningcreatedInEvent_every: UpcomingWorkingGroupOpeningWhereInput
  workinggroupmetadatasetInEvent_none: WorkingGroupMetadataWhereInput
  workinggroupmetadatasetInEvent_some: WorkingGroupMetadataWhereInput
  workinggroupmetadatasetInEvent_every: WorkingGroupMetadataWhereInput
  AND: [StatusTextChangedEventWhereInput!]
  OR: [StatusTextChangedEventWhereInput!]
}

enum Network {
  BABYLON
  ALEXANDRIA
  ROME
  OLYMPIA
}

input UpcomingWorkingGroupOpeningWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  expectedStart_eq: DateTime
  expectedStart_lt: DateTime
  expectedStart_lte: DateTime
  expectedStart_gt: DateTime
  expectedStart_gte: DateTime
  stakeAmount_eq: BigInt
  stakeAmount_gt: BigInt
  stakeAmount_gte: BigInt
  stakeAmount_lt: BigInt
  stakeAmount_lte: BigInt
  stakeAmount_in: [BigInt!]
  rewardPerBlock_eq: BigInt
  rewardPerBlock_gt: BigInt
  rewardPerBlock_gte: BigInt
  rewardPerBlock_lt: BigInt
  rewardPerBlock_lte: BigInt
  rewardPerBlock_in: [BigInt!]
  createdInEvent: StatusTextChangedEventWhereInput
  group: WorkingGroupWhereInput
  metadata: WorkingGroupOpeningMetadataWhereInput
  AND: [UpcomingWorkingGroupOpeningWhereInput!]
  OR: [UpcomingWorkingGroupOpeningWhereInput!]
}

input WorkingGroupOpeningMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  originallyValid_eq: Boolean
  originallyValid_in: [Boolean!]
  shortDescription_eq: String
  shortDescription_contains: String
  shortDescription_startsWith: String
  shortDescription_endsWith: String
  shortDescription_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  hiringLimit_eq: Int
  hiringLimit_gt: Int
  hiringLimit_gte: Int
  hiringLimit_lt: Int
  hiringLimit_lte: Int
  hiringLimit_in: [Int!]
  expectedEnding_eq: DateTime
  expectedEnding_lt: DateTime
  expectedEnding_lte: DateTime
  expectedEnding_gt: DateTime
  expectedEnding_gte: DateTime
  applicationDetails_eq: String
  applicationDetails_contains: String
  applicationDetails_startsWith: String
  applicationDetails_endsWith: String
  applicationDetails_in: [String!]
  applicationFormQuestions_none: ApplicationFormQuestionWhereInput
  applicationFormQuestions_some: ApplicationFormQuestionWhereInput
  applicationFormQuestions_every: ApplicationFormQuestionWhereInput
  upcomingworkinggroupopeningmetadata_none: UpcomingWorkingGroupOpeningWhereInput
  upcomingworkinggroupopeningmetadata_some: UpcomingWorkingGroupOpeningWhereInput
  upcomingworkinggroupopeningmetadata_every: UpcomingWorkingGroupOpeningWhereInput
  workinggroupopeningmetadata_none: WorkingGroupOpeningWhereInput
  workinggroupopeningmetadata_some: WorkingGroupOpeningWhereInput
  workinggroupopeningmetadata_every: WorkingGroupOpeningWhereInput
  AND: [WorkingGroupOpeningMetadataWhereInput!]
  OR: [WorkingGroupOpeningMetadataWhereInput!]
}

input ApplicationFormQuestionWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  question_eq: String
  question_contains: String
  question_startsWith: String
  question_endsWith: String
  question_in: [String!]
  type_eq: ApplicationFormQuestionType
  type_in: [ApplicationFormQuestionType!]
  index_eq: Int
  index_gt: Int
  index_gte: Int
  index_lt: Int
  index_lte: Int
  index_in: [Int!]
  openingMetadata: WorkingGroupOpeningMetadataWhereInput
  applicationformquestionanswerquestion_none: ApplicationFormQuestionAnswerWhereInput
  applicationformquestionanswerquestion_some: ApplicationFormQuestionAnswerWhereInput
  applicationformquestionanswerquestion_every: ApplicationFormQuestionAnswerWhereInput
  AND: [ApplicationFormQuestionWhereInput!]
  OR: [ApplicationFormQuestionWhereInput!]
}

enum ApplicationFormQuestionType {
  TEXT
  TEXTAREA
}

input WorkerWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  runtimeId_eq: Int
  runtimeId_gt: Int
  runtimeId_gte: Int
  runtimeId_lt: Int
  runtimeId_lte: Int
  runtimeId_in: [Int!]
  roleAccount_eq: String
  roleAccount_contains: String
  roleAccount_startsWith: String
  roleAccount_endsWith: String
  roleAccount_in: [String!]
  rewardAccount_eq: String
  rewardAccount_contains: String
  rewardAccount_startsWith: String
  rewardAccount_endsWith: String
  rewardAccount_in: [String!]
  stakeAccount_eq: String
  stakeAccount_contains: String
  stakeAccount_startsWith: String
  stakeAccount_endsWith: String
  stakeAccount_in: [String!]
  status_json: JSONObject
  isLead_eq: Boolean
  isLead_in: [Boolean!]
  stake_eq: BigInt
  stake_gt: BigInt
  stake_gte: BigInt
  stake_lt: BigInt
  stake_lte: BigInt
  stake_in: [BigInt!]
  rewardPerBlock_eq: BigInt
  rewardPerBlock_gt: BigInt
  rewardPerBlock_gte: BigInt
  rewardPerBlock_lt: BigInt
  rewardPerBlock_lte: BigInt
  rewardPerBlock_in: [BigInt!]
  missingRewardAmount_eq: BigInt
  missingRewardAmount_gt: BigInt
  missingRewardAmount_gte: BigInt
  missingRewardAmount_lt: BigInt
  missingRewardAmount_lte: BigInt
  missingRewardAmount_in: [BigInt!]
  storage_eq: String
  storage_contains: String
  storage_startsWith: String
  storage_endsWith: String
  storage_in: [String!]
  group: WorkingGroupWhereInput
  membership: MembershipWhereInput
  payouts_none: RewardPaidEventWhereInput
  payouts_some: RewardPaidEventWhereInput
  payouts_every: RewardPaidEventWhereInput
  slashes_none: StakeSlashedEventWhereInput
  slashes_some: StakeSlashedEventWhereInput
  slashes_every: StakeSlashedEventWhereInput
  entry: OpeningFilledEventWhereInput
  application: WorkingGroupApplicationWhereInput
  managedForumCategories_none: ForumCategoryWhereInput
  managedForumCategories_some: ForumCategoryWhereInput
  managedForumCategories_every: ForumCategoryWhereInput
  dataObjects_none: DataObjectWhereInput
  dataObjects_some: DataObjectWhereInput
  dataObjects_every: DataObjectWhereInput
  categoryarchivalstatusupdatedeventactor_none: CategoryArchivalStatusUpdatedEventWhereInput
  categoryarchivalstatusupdatedeventactor_some: CategoryArchivalStatusUpdatedEventWhereInput
  categoryarchivalstatusupdatedeventactor_every: CategoryArchivalStatusUpdatedEventWhereInput
  categorydeletedeventactor_none: CategoryDeletedEventWhereInput
  categorydeletedeventactor_some: CategoryDeletedEventWhereInput
  categorydeletedeventactor_every: CategoryDeletedEventWhereInput
  categorymembershipofmoderatorupdatedeventmoderator_none: CategoryMembershipOfModeratorUpdatedEventWhereInput
  categorymembershipofmoderatorupdatedeventmoderator_some: CategoryMembershipOfModeratorUpdatedEventWhereInput
  categorymembershipofmoderatorupdatedeventmoderator_every: CategoryMembershipOfModeratorUpdatedEventWhereInput
  categorystickythreadupdateeventactor_none: CategoryStickyThreadUpdateEventWhereInput
  categorystickythreadupdateeventactor_some: CategoryStickyThreadUpdateEventWhereInput
  categorystickythreadupdateeventactor_every: CategoryStickyThreadUpdateEventWhereInput
  leaderseteventworker_none: LeaderSetEventWhereInput
  leaderseteventworker_some: LeaderSetEventWhereInput
  leaderseteventworker_every: LeaderSetEventWhereInput
  leaderunseteventleader_none: LeaderUnsetEventWhereInput
  leaderunseteventleader_some: LeaderUnsetEventWhereInput
  leaderunseteventleader_every: LeaderUnsetEventWhereInput
  memberverificationstatusupdatedeventworker_none: MemberVerificationStatusUpdatedEventWhereInput
  memberverificationstatusupdatedeventworker_some: MemberVerificationStatusUpdatedEventWhereInput
  memberverificationstatusupdatedeventworker_every: MemberVerificationStatusUpdatedEventWhereInput
  newmissedrewardlevelreachedeventworker_none: NewMissedRewardLevelReachedEventWhereInput
  newmissedrewardlevelreachedeventworker_some: NewMissedRewardLevelReachedEventWhereInput
  newmissedrewardlevelreachedeventworker_every: NewMissedRewardLevelReachedEventWhereInput
  postmoderatedeventactor_none: PostModeratedEventWhereInput
  postmoderatedeventactor_some: PostModeratedEventWhereInput
  postmoderatedeventactor_every: PostModeratedEventWhereInput
  stakedecreasedeventworker_none: StakeDecreasedEventWhereInput
  stakedecreasedeventworker_some: StakeDecreasedEventWhereInput
  stakedecreasedeventworker_every: StakeDecreasedEventWhereInput
  stakeincreasedeventworker_none: StakeIncreasedEventWhereInput
  stakeincreasedeventworker_some: StakeIncreasedEventWhereInput
  stakeincreasedeventworker_every: StakeIncreasedEventWhereInput
  terminatedleadereventworker_none: TerminatedLeaderEventWhereInput
  terminatedleadereventworker_some: TerminatedLeaderEventWhereInput
  terminatedleadereventworker_every: TerminatedLeaderEventWhereInput
  terminatedworkereventworker_none: TerminatedWorkerEventWhereInput
  terminatedworkereventworker_some: TerminatedWorkerEventWhereInput
  terminatedworkereventworker_every: TerminatedWorkerEventWhereInput
  threadmoderatedeventactor_none: ThreadModeratedEventWhereInput
  threadmoderatedeventactor_some: ThreadModeratedEventWhereInput
  threadmoderatedeventactor_every: ThreadModeratedEventWhereInput
  threadmovedeventactor_none: ThreadMovedEventWhereInput
  threadmovedeventactor_some: ThreadMovedEventWhereInput
  threadmovedeventactor_every: ThreadMovedEventWhereInput
  workerexitedeventworker_none: WorkerExitedEventWhereInput
  workerexitedeventworker_some: WorkerExitedEventWhereInput
  workerexitedeventworker_every: WorkerExitedEventWhereInput
  workerrewardaccountupdatedeventworker_none: WorkerRewardAccountUpdatedEventWhereInput
  workerrewardaccountupdatedeventworker_some: WorkerRewardAccountUpdatedEventWhereInput
  workerrewardaccountupdatedeventworker_every: WorkerRewardAccountUpdatedEventWhereInput
  workerrewardamountupdatedeventworker_none: WorkerRewardAmountUpdatedEventWhereInput
  workerrewardamountupdatedeventworker_some: WorkerRewardAmountUpdatedEventWhereInput
  workerrewardamountupdatedeventworker_every: WorkerRewardAmountUpdatedEventWhereInput
  workerroleaccountupdatedeventworker_none: WorkerRoleAccountUpdatedEventWhereInput
  workerroleaccountupdatedeventworker_some: WorkerRoleAccountUpdatedEventWhereInput
  workerroleaccountupdatedeventworker_every: WorkerRoleAccountUpdatedEventWhereInput
  workerstartedleavingeventworker_none: WorkerStartedLeavingEventWhereInput
  workerstartedleavingeventworker_some: WorkerStartedLeavingEventWhereInput
  workerstartedleavingeventworker_every: WorkerStartedLeavingEventWhereInput
  workinggroupleader_none: WorkingGroupWhereInput
  workinggroupleader_some: WorkingGroupWhereInput
  workinggroupleader_every: WorkingGroupWhereInput
  AND: [WorkerWhereInput!]
  OR: [WorkerWhereInput!]
}

input MembershipWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  handle_eq: String
  handle_contains: String
  handle_startsWith: String
  handle_endsWith: String
  handle_in: [String!]
  controllerAccount_eq: String
  controllerAccount_contains: String
  controllerAccount_startsWith: String
  controllerAccount_endsWith: String
  controllerAccount_in: [String!]
  rootAccount_eq: String
  rootAccount_contains: String
  rootAccount_startsWith: String
  rootAccount_endsWith: String
  rootAccount_in: [String!]
  entry_json: JSONObject
  isVerified_eq: Boolean
  isVerified_in: [Boolean!]
  boundAccounts_containsAll: [String!]
  boundAccounts_containsNone: [String!]
  boundAccounts_containsAny: [String!]
  inviteCount_eq: Int
  inviteCount_gt: Int
  inviteCount_gte: Int
  inviteCount_lt: Int
  inviteCount_lte: Int
  inviteCount_in: [Int!]
  isFoundingMember_eq: Boolean
  isFoundingMember_in: [Boolean!]
  metadata: MemberMetadataWhereInput
  invitees_none: MembershipWhereInput
  invitees_some: MembershipWhereInput
  invitees_every: MembershipWhereInput
  invitedBy: MembershipWhereInput
  referredMembers_none: MembershipWhereInput
  referredMembers_some: MembershipWhereInput
  referredMembers_every: MembershipWhereInput
  referredBy: MembershipWhereInput
  roles_none: WorkerWhereInput
  roles_some: WorkerWhereInput
  roles_every: WorkerWhereInput
  whitelistedIn_none: ProposalDiscussionWhitelistWhereInput
  whitelistedIn_some: ProposalDiscussionWhitelistWhereInput
  whitelistedIn_every: ProposalDiscussionWhitelistWhereInput
  channels_none: ChannelWhereInput
  channels_some: ChannelWhereInput
  channels_every: ChannelWhereInput
  forumpostauthor_none: ForumPostWhereInput
  forumpostauthor_some: ForumPostWhereInput
  forumpostauthor_every: ForumPostWhereInput
  forumpostreactionmember_none: ForumPostReactionWhereInput
  forumpostreactionmember_some: ForumPostReactionWhereInput
  forumpostreactionmember_every: ForumPostReactionWhereInput
  forumthreadauthor_none: ForumThreadWhereInput
  forumthreadauthor_some: ForumThreadWhereInput
  forumthreadauthor_every: ForumThreadWhereInput
  invitestransferredeventsourceMember_none: InvitesTransferredEventWhereInput
  invitestransferredeventsourceMember_some: InvitesTransferredEventWhereInput
  invitestransferredeventsourceMember_every: InvitesTransferredEventWhereInput
  invitestransferredeventtargetMember_none: InvitesTransferredEventWhereInput
  invitestransferredeventtargetMember_some: InvitesTransferredEventWhereInput
  invitestransferredeventtargetMember_every: InvitesTransferredEventWhereInput
  memberaccountsupdatedeventmember_none: MemberAccountsUpdatedEventWhereInput
  memberaccountsupdatedeventmember_some: MemberAccountsUpdatedEventWhereInput
  memberaccountsupdatedeventmember_every: MemberAccountsUpdatedEventWhereInput
  memberinvitedeventinvitingMember_none: MemberInvitedEventWhereInput
  memberinvitedeventinvitingMember_some: MemberInvitedEventWhereInput
  memberinvitedeventinvitingMember_every: MemberInvitedEventWhereInput
  memberinvitedeventnewMember_none: MemberInvitedEventWhereInput
  memberinvitedeventnewMember_some: MemberInvitedEventWhereInput
  memberinvitedeventnewMember_every: MemberInvitedEventWhereInput
  memberprofileupdatedeventmember_none: MemberProfileUpdatedEventWhereInput
  memberprofileupdatedeventmember_some: MemberProfileUpdatedEventWhereInput
  memberprofileupdatedeventmember_every: MemberProfileUpdatedEventWhereInput
  memberverificationstatusupdatedeventmember_none: MemberVerificationStatusUpdatedEventWhereInput
  memberverificationstatusupdatedeventmember_some: MemberVerificationStatusUpdatedEventWhereInput
  memberverificationstatusupdatedeventmember_every: MemberVerificationStatusUpdatedEventWhereInput
  membershipboughteventnewMember_none: MembershipBoughtEventWhereInput
  membershipboughteventnewMember_some: MembershipBoughtEventWhereInput
  membershipboughteventnewMember_every: MembershipBoughtEventWhereInput
  membershipboughteventreferrer_none: MembershipBoughtEventWhereInput
  membershipboughteventreferrer_some: MembershipBoughtEventWhereInput
  membershipboughteventreferrer_every: MembershipBoughtEventWhereInput
  postdeletedeventactor_none: PostDeletedEventWhereInput
  postdeletedeventactor_some: PostDeletedEventWhereInput
  postdeletedeventactor_every: PostDeletedEventWhereInput
  postreactedeventreactingMember_none: PostReactedEventWhereInput
  postreactedeventreactingMember_some: PostReactedEventWhereInput
  postreactedeventreactingMember_every: PostReactedEventWhereInput
  proposalcreator_none: ProposalWhereInput
  proposalcreator_some: ProposalWhereInput
  proposalcreator_every: ProposalWhereInput
  proposaldiscussionpostauthor_none: ProposalDiscussionPostWhereInput
  proposaldiscussionpostauthor_some: ProposalDiscussionPostWhereInput
  proposaldiscussionpostauthor_every: ProposalDiscussionPostWhereInput
  proposaldiscussionpostdeletedeventactor_none: ProposalDiscussionPostDeletedEventWhereInput
  proposaldiscussionpostdeletedeventactor_some: ProposalDiscussionPostDeletedEventWhereInput
  proposaldiscussionpostdeletedeventactor_every: ProposalDiscussionPostDeletedEventWhereInput
  proposaldiscussionthreadmodechangedeventactor_none: ProposalDiscussionThreadModeChangedEventWhereInput
  proposaldiscussionthreadmodechangedeventactor_some: ProposalDiscussionThreadModeChangedEventWhereInput
  proposaldiscussionthreadmodechangedeventactor_every: ProposalDiscussionThreadModeChangedEventWhereInput
  proposalvotedeventvoter_none: ProposalVotedEventWhereInput
  proposalvotedeventvoter_some: ProposalVotedEventWhereInput
  proposalvotedeventvoter_every: ProposalVotedEventWhereInput
  stakingaccountaddedeventmember_none: StakingAccountAddedEventWhereInput
  stakingaccountaddedeventmember_some: StakingAccountAddedEventWhereInput
  stakingaccountaddedeventmember_every: StakingAccountAddedEventWhereInput
  stakingaccountconfirmedeventmember_none: StakingAccountConfirmedEventWhereInput
  stakingaccountconfirmedeventmember_some: StakingAccountConfirmedEventWhereInput
  stakingaccountconfirmedeventmember_every: StakingAccountConfirmedEventWhereInput
  stakingaccountremovedeventmember_none: StakingAccountRemovedEventWhereInput
  stakingaccountremovedeventmember_some: StakingAccountRemovedEventWhereInput
  stakingaccountremovedeventmember_every: StakingAccountRemovedEventWhereInput
  voteonpolleventvotingMember_none: VoteOnPollEventWhereInput
  voteonpolleventvotingMember_some: VoteOnPollEventWhereInput
  voteonpolleventvotingMember_every: VoteOnPollEventWhereInput
  workinggroupapplicationapplicant_none: WorkingGroupApplicationWhereInput
  workinggroupapplicationapplicant_some: WorkingGroupApplicationWhereInput
  workinggroupapplicationapplicant_every: WorkingGroupApplicationWhereInput
  AND: [MembershipWhereInput!]
  OR: [MembershipWhereInput!]
}

input MemberMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  name_eq: String
  name_contains: String
  name_startsWith: String
  name_endsWith: String
  name_in: [String!]
  about_eq: String
  about_contains: String
  about_startsWith: String
  about_endsWith: String
  about_in: [String!]
  avatar: DataObjectWhereInput
  memberinvitedeventmetadata_none: MemberInvitedEventWhereInput
  memberinvitedeventmetadata_some: MemberInvitedEventWhereInput
  memberinvitedeventmetadata_every: MemberInvitedEventWhereInput
  memberprofileupdatedeventnewMetadata_none: MemberProfileUpdatedEventWhereInput
  memberprofileupdatedeventnewMetadata_some: MemberProfileUpdatedEventWhereInput
  memberprofileupdatedeventnewMetadata_every: MemberProfileUpdatedEventWhereInput
  membershipmetadata_none: MembershipWhereInput
  membershipmetadata_some: MembershipWhereInput
  membershipmetadata_every: MembershipWhereInput
  membershipboughteventmetadata_none: MembershipBoughtEventWhereInput
  membershipboughteventmetadata_some: MembershipBoughtEventWhereInput
  membershipboughteventmetadata_every: MembershipBoughtEventWhereInput
  AND: [MemberMetadataWhereInput!]
  OR: [MemberMetadataWhereInput!]
}

input DataObjectWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  owner_json: JSONObject
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  typeId_eq: Int
  typeId_gt: Int
  typeId_gte: Int
  typeId_lt: Int
  typeId_lte: Int
  typeId_in: [Int!]
  size_eq: BigInt
  size_gt: BigInt
  size_gte: BigInt
  size_lt: BigInt
  size_lte: BigInt
  size_in: [BigInt!]
  liaisonJudgement_eq: LiaisonJudgement
  liaisonJudgement_in: [LiaisonJudgement!]
  ipfsContentId_eq: String
  ipfsContentId_contains: String
  ipfsContentId_startsWith: String
  ipfsContentId_endsWith: String
  ipfsContentId_in: [String!]
  joystreamContentId_eq: String
  joystreamContentId_contains: String
  joystreamContentId_startsWith: String
  joystreamContentId_endsWith: String
  joystreamContentId_in: [String!]
  liaison: WorkerWhereInput
  membermetadataavatar_none: MemberMetadataWhereInput
  membermetadataavatar_some: MemberMetadataWhereInput
  membermetadataavatar_every: MemberMetadataWhereInput
  AND: [DataObjectWhereInput!]
  OR: [DataObjectWhereInput!]
}

enum LiaisonJudgement {
  PENDING
  ACCEPTED
}

input MemberInvitedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rootAccount_eq: String
  rootAccount_contains: String
  rootAccount_startsWith: String
  rootAccount_endsWith: String
  rootAccount_in: [String!]
  controllerAccount_eq: String
  controllerAccount_contains: String
  controllerAccount_startsWith: String
  controllerAccount_endsWith: String
  controllerAccount_in: [String!]
  handle_eq: String
  handle_contains: String
  handle_startsWith: String
  handle_endsWith: String
  handle_in: [String!]
  invitingMember: MembershipWhereInput
  newMember: MembershipWhereInput
  metadata: MemberMetadataWhereInput
  AND: [MemberInvitedEventWhereInput!]
  OR: [MemberInvitedEventWhereInput!]
}

input MemberProfileUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newHandle_eq: String
  newHandle_contains: String
  newHandle_startsWith: String
  newHandle_endsWith: String
  newHandle_in: [String!]
  member: MembershipWhereInput
  newMetadata: MemberMetadataWhereInput
  AND: [MemberProfileUpdatedEventWhereInput!]
  OR: [MemberProfileUpdatedEventWhereInput!]
}

input MembershipBoughtEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rootAccount_eq: String
  rootAccount_contains: String
  rootAccount_startsWith: String
  rootAccount_endsWith: String
  rootAccount_in: [String!]
  controllerAccount_eq: String
  controllerAccount_contains: String
  controllerAccount_startsWith: String
  controllerAccount_endsWith: String
  controllerAccount_in: [String!]
  handle_eq: String
  handle_contains: String
  handle_startsWith: String
  handle_endsWith: String
  handle_in: [String!]
  newMember: MembershipWhereInput
  metadata: MemberMetadataWhereInput
  referrer: MembershipWhereInput
  AND: [MembershipBoughtEventWhereInput!]
  OR: [MembershipBoughtEventWhereInput!]
}

input ProposalDiscussionWhitelistWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  phantom_eq: Int
  phantom_gt: Int
  phantom_gte: Int
  phantom_lt: Int
  phantom_lte: Int
  phantom_in: [Int!]
  members_none: MembershipWhereInput
  members_some: MembershipWhereInput
  members_every: MembershipWhereInput
  AND: [ProposalDiscussionWhitelistWhereInput!]
  OR: [ProposalDiscussionWhitelistWhereInput!]
}

input ChannelWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  rewardAccount_eq: String
  rewardAccount_contains: String
  rewardAccount_startsWith: String
  rewardAccount_endsWith: String
  rewardAccount_in: [String!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  coverPhoto_json: JSONObject
  avatarPhoto_json: JSONObject
  isPublic_eq: Boolean
  isPublic_in: [Boolean!]
  isCensored_eq: Boolean
  isCensored_in: [Boolean!]
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  category: ChannelCategoryWhereInput
  language: LanguageWhereInput
  videos_none: VideoWhereInput
  videos_some: VideoWhereInput
  videos_every: VideoWhereInput
  AND: [ChannelWhereInput!]
  OR: [ChannelWhereInput!]
}

input CuratorGroupWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  curatorIds_containsAll: [Int!]
  curatorIds_containsNone: [Int!]
  curatorIds_containsAny: [Int!]
  isActive_eq: Boolean
  isActive_in: [Boolean!]
  channels_none: ChannelWhereInput
  channels_some: ChannelWhereInput
  channels_every: ChannelWhereInput
  AND: [CuratorGroupWhereInput!]
  OR: [CuratorGroupWhereInput!]
}

input ChannelCategoryWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  name_eq: String
  name_contains: String
  name_startsWith: String
  name_endsWith: String
  name_in: [String!]
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  channels_none: ChannelWhereInput
  channels_some: ChannelWhereInput
  channels_every: ChannelWhereInput
  AND: [ChannelCategoryWhereInput!]
  OR: [ChannelCategoryWhereInput!]
}

input LanguageWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  iso_eq: String
  iso_contains: String
  iso_startsWith: String
  iso_endsWith: String
  iso_in: [String!]
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  channellanguage_none: ChannelWhereInput
  channellanguage_some: ChannelWhereInput
  channellanguage_every: ChannelWhereInput
  videolanguage_none: VideoWhereInput
  videolanguage_some: VideoWhereInput
  videolanguage_every: VideoWhereInput
  AND: [LanguageWhereInput!]
  OR: [LanguageWhereInput!]
}

input VideoWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  duration_eq: Int
  duration_gt: Int
  duration_gte: Int
  duration_lt: Int
  duration_lte: Int
  duration_in: [Int!]
  thumbnailPhoto_json: JSONObject
  hasMarketing_eq: Boolean
  hasMarketing_in: [Boolean!]
  publishedBeforeJoystream_eq: DateTime
  publishedBeforeJoystream_lt: DateTime
  publishedBeforeJoystream_lte: DateTime
  publishedBeforeJoystream_gt: DateTime
  publishedBeforeJoystream_gte: DateTime
  isPublic_eq: Boolean
  isPublic_in: [Boolean!]
  isCensored_eq: Boolean
  isCensored_in: [Boolean!]
  isExplicit_eq: Boolean
  isExplicit_in: [Boolean!]
  media_json: JSONObject
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  isFeatured_eq: Boolean
  isFeatured_in: [Boolean!]
  channel: ChannelWhereInput
  category: VideoCategoryWhereInput
  language: LanguageWhereInput
  license: LicenseWhereInput
  mediaMetadata: VideoMediaMetadataWhereInput
  AND: [VideoWhereInput!]
  OR: [VideoWhereInput!]
}

input VideoCategoryWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  name_eq: String
  name_contains: String
  name_startsWith: String
  name_endsWith: String
  name_in: [String!]
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  videos_none: VideoWhereInput
  videos_some: VideoWhereInput
  videos_every: VideoWhereInput
  AND: [VideoCategoryWhereInput!]
  OR: [VideoCategoryWhereInput!]
}

input LicenseWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  code_eq: Int
  code_gt: Int
  code_gte: Int
  code_lt: Int
  code_lte: Int
  code_in: [Int!]
  attribution_eq: String
  attribution_contains: String
  attribution_startsWith: String
  attribution_endsWith: String
  attribution_in: [String!]
  customText_eq: String
  customText_contains: String
  customText_startsWith: String
  customText_endsWith: String
  customText_in: [String!]
  videolicense_none: VideoWhereInput
  videolicense_some: VideoWhereInput
  videolicense_every: VideoWhereInput
  AND: [LicenseWhereInput!]
  OR: [LicenseWhereInput!]
}

input VideoMediaMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  pixelWidth_eq: Int
  pixelWidth_gt: Int
  pixelWidth_gte: Int
  pixelWidth_lt: Int
  pixelWidth_lte: Int
  pixelWidth_in: [Int!]
  pixelHeight_eq: Int
  pixelHeight_gt: Int
  pixelHeight_gte: Int
  pixelHeight_lt: Int
  pixelHeight_lte: Int
  pixelHeight_in: [Int!]
  size_eq: BigInt
  size_gt: BigInt
  size_gte: BigInt
  size_lt: BigInt
  size_lte: BigInt
  size_in: [BigInt!]
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  encoding: VideoMediaEncodingWhereInput
  video: VideoWhereInput
  AND: [VideoMediaMetadataWhereInput!]
  OR: [VideoMediaMetadataWhereInput!]
}

input VideoMediaEncodingWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  codecName_eq: String
  codecName_contains: String
  codecName_startsWith: String
  codecName_endsWith: String
  codecName_in: [String!]
  container_eq: String
  container_contains: String
  container_startsWith: String
  container_endsWith: String
  container_in: [String!]
  mimeMediaType_eq: String
  mimeMediaType_contains: String
  mimeMediaType_startsWith: String
  mimeMediaType_endsWith: String
  mimeMediaType_in: [String!]
  videomediametadataencoding_none: VideoMediaMetadataWhereInput
  videomediametadataencoding_some: VideoMediaMetadataWhereInput
  videomediametadataencoding_every: VideoMediaMetadataWhereInput
  AND: [VideoMediaEncodingWhereInput!]
  OR: [VideoMediaEncodingWhereInput!]
}

input ForumPostWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  status_json: JSONObject
  origin_json: JSONObject
  author: MembershipWhereInput
  thread: ForumThreadWhereInput
  repliesTo: ForumPostWhereInput
  edits_none: PostTextUpdatedEventWhereInput
  edits_some: PostTextUpdatedEventWhereInput
  edits_every: PostTextUpdatedEventWhereInput
  reactions_none: ForumPostReactionWhereInput
  reactions_some: ForumPostReactionWhereInput
  reactions_every: ForumPostReactionWhereInput
  deletedInEvent: PostDeletedEventWhereInput
  forumpostrepliesTo_none: ForumPostWhereInput
  forumpostrepliesTo_some: ForumPostWhereInput
  forumpostrepliesTo_every: ForumPostWhereInput
  forumthreadinitialPost_none: ForumThreadWhereInput
  forumthreadinitialPost_some: ForumThreadWhereInput
  forumthreadinitialPost_every: ForumThreadWhereInput
  postaddedeventpost_none: PostAddedEventWhereInput
  postaddedeventpost_some: PostAddedEventWhereInput
  postaddedeventpost_every: PostAddedEventWhereInput
  postmoderatedeventpost_none: PostModeratedEventWhereInput
  postmoderatedeventpost_some: PostModeratedEventWhereInput
  postmoderatedeventpost_every: PostModeratedEventWhereInput
  postreactedeventpost_none: PostReactedEventWhereInput
  postreactedeventpost_some: PostReactedEventWhereInput
  postreactedeventpost_every: PostReactedEventWhereInput
  AND: [ForumPostWhereInput!]
  OR: [ForumPostWhereInput!]
}

input ForumThreadWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  visiblePostsCount_eq: Int
  visiblePostsCount_gt: Int
  visiblePostsCount_gte: Int
  visiblePostsCount_lt: Int
  visiblePostsCount_lte: Int
  visiblePostsCount_in: [Int!]
  isSticky_eq: Boolean
  isSticky_in: [Boolean!]
  status_json: JSONObject
  author: MembershipWhereInput
  category: ForumCategoryWhereInput
  posts_none: ForumPostWhereInput
  posts_some: ForumPostWhereInput
  posts_every: ForumPostWhereInput
  initialPost: ForumPostWhereInput
  poll: ForumPollWhereInput
  createdInEvent: ThreadCreatedEventWhereInput
  metadataUpdates_none: ThreadMetadataUpdatedEventWhereInput
  metadataUpdates_some: ThreadMetadataUpdatedEventWhereInput
  metadataUpdates_every: ThreadMetadataUpdatedEventWhereInput
  madeStickyInEvents_none: CategoryStickyThreadUpdateEventWhereInput
  madeStickyInEvents_some: CategoryStickyThreadUpdateEventWhereInput
  madeStickyInEvents_every: CategoryStickyThreadUpdateEventWhereInput
  movedInEvents_none: ThreadMovedEventWhereInput
  movedInEvents_some: ThreadMovedEventWhereInput
  movedInEvents_every: ThreadMovedEventWhereInput
  tags_none: ForumThreadTagWhereInput
  tags_some: ForumThreadTagWhereInput
  tags_every: ForumThreadTagWhereInput
  threaddeletedeventthread_none: ThreadDeletedEventWhereInput
  threaddeletedeventthread_some: ThreadDeletedEventWhereInput
  threaddeletedeventthread_every: ThreadDeletedEventWhereInput
  threadmoderatedeventthread_none: ThreadModeratedEventWhereInput
  threadmoderatedeventthread_some: ThreadModeratedEventWhereInput
  threadmoderatedeventthread_every: ThreadModeratedEventWhereInput
  AND: [ForumThreadWhereInput!]
  OR: [ForumThreadWhereInput!]
}

input ForumCategoryWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  status_json: JSONObject
  parent: ForumCategoryWhereInput
  threads_none: ForumThreadWhereInput
  threads_some: ForumThreadWhereInput
  threads_every: ForumThreadWhereInput
  moderators_none: WorkerWhereInput
  moderators_some: WorkerWhereInput
  moderators_every: WorkerWhereInput
  createdInEvent: CategoryCreatedEventWhereInput
  categoryarchivalstatusupdatedeventcategory_none: CategoryArchivalStatusUpdatedEventWhereInput
  categoryarchivalstatusupdatedeventcategory_some: CategoryArchivalStatusUpdatedEventWhereInput
  categoryarchivalstatusupdatedeventcategory_every: CategoryArchivalStatusUpdatedEventWhereInput
  categorydeletedeventcategory_none: CategoryDeletedEventWhereInput
  categorydeletedeventcategory_some: CategoryDeletedEventWhereInput
  categorydeletedeventcategory_every: CategoryDeletedEventWhereInput
  categorymembershipofmoderatorupdatedeventcategory_none: CategoryMembershipOfModeratorUpdatedEventWhereInput
  categorymembershipofmoderatorupdatedeventcategory_some: CategoryMembershipOfModeratorUpdatedEventWhereInput
  categorymembershipofmoderatorupdatedeventcategory_every: CategoryMembershipOfModeratorUpdatedEventWhereInput
  categorystickythreadupdateeventcategory_none: CategoryStickyThreadUpdateEventWhereInput
  categorystickythreadupdateeventcategory_some: CategoryStickyThreadUpdateEventWhereInput
  categorystickythreadupdateeventcategory_every: CategoryStickyThreadUpdateEventWhereInput
  forumcategoryparent_none: ForumCategoryWhereInput
  forumcategoryparent_some: ForumCategoryWhereInput
  forumcategoryparent_every: ForumCategoryWhereInput
  threadmovedeventoldCategory_none: ThreadMovedEventWhereInput
  threadmovedeventoldCategory_some: ThreadMovedEventWhereInput
  threadmovedeventoldCategory_every: ThreadMovedEventWhereInput
  threadmovedeventnewCategory_none: ThreadMovedEventWhereInput
  threadmovedeventnewCategory_some: ThreadMovedEventWhereInput
  threadmovedeventnewCategory_every: ThreadMovedEventWhereInput
  AND: [ForumCategoryWhereInput!]
  OR: [ForumCategoryWhereInput!]
}

input CategoryCreatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  category: ForumCategoryWhereInput
  AND: [CategoryCreatedEventWhereInput!]
  OR: [CategoryCreatedEventWhereInput!]
}

input CategoryArchivalStatusUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newArchivalStatus_eq: Boolean
  newArchivalStatus_in: [Boolean!]
  category: ForumCategoryWhereInput
  actor: WorkerWhereInput
  AND: [CategoryArchivalStatusUpdatedEventWhereInput!]
  OR: [CategoryArchivalStatusUpdatedEventWhereInput!]
}

input CategoryDeletedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  category: ForumCategoryWhereInput
  actor: WorkerWhereInput
  AND: [CategoryDeletedEventWhereInput!]
  OR: [CategoryDeletedEventWhereInput!]
}

input CategoryMembershipOfModeratorUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newCanModerateValue_eq: Boolean
  newCanModerateValue_in: [Boolean!]
  moderator: WorkerWhereInput
  category: ForumCategoryWhereInput
  AND: [CategoryMembershipOfModeratorUpdatedEventWhereInput!]
  OR: [CategoryMembershipOfModeratorUpdatedEventWhereInput!]
}

input CategoryStickyThreadUpdateEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  category: ForumCategoryWhereInput
  newStickyThreads_none: ForumThreadWhereInput
  newStickyThreads_some: ForumThreadWhereInput
  newStickyThreads_every: ForumThreadWhereInput
  actor: WorkerWhereInput
  AND: [CategoryStickyThreadUpdateEventWhereInput!]
  OR: [CategoryStickyThreadUpdateEventWhereInput!]
}

input ThreadMovedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  thread: ForumThreadWhereInput
  oldCategory: ForumCategoryWhereInput
  newCategory: ForumCategoryWhereInput
  actor: WorkerWhereInput
  AND: [ThreadMovedEventWhereInput!]
  OR: [ThreadMovedEventWhereInput!]
}

input ForumPollWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  endTime_eq: DateTime
  endTime_lt: DateTime
  endTime_lte: DateTime
  endTime_gt: DateTime
  endTime_gte: DateTime
  thread: ForumThreadWhereInput
  pollAlternatives_none: ForumPollAlternativeWhereInput
  pollAlternatives_some: ForumPollAlternativeWhereInput
  pollAlternatives_every: ForumPollAlternativeWhereInput
  AND: [ForumPollWhereInput!]
  OR: [ForumPollWhereInput!]
}

input ForumPollAlternativeWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  index_eq: Int
  index_gt: Int
  index_gte: Int
  index_lt: Int
  index_lte: Int
  index_in: [Int!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  poll: ForumPollWhereInput
  votes_none: VoteOnPollEventWhereInput
  votes_some: VoteOnPollEventWhereInput
  votes_every: VoteOnPollEventWhereInput
  AND: [ForumPollAlternativeWhereInput!]
  OR: [ForumPollAlternativeWhereInput!]
}

input VoteOnPollEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  pollAlternative: ForumPollAlternativeWhereInput
  votingMember: MembershipWhereInput
  AND: [VoteOnPollEventWhereInput!]
  OR: [VoteOnPollEventWhereInput!]
}

input ThreadCreatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  thread: ForumThreadWhereInput
  AND: [ThreadCreatedEventWhereInput!]
  OR: [ThreadCreatedEventWhereInput!]
}

input ThreadMetadataUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newTitle_eq: String
  newTitle_contains: String
  newTitle_startsWith: String
  newTitle_endsWith: String
  newTitle_in: [String!]
  thread: ForumThreadWhereInput
  AND: [ThreadMetadataUpdatedEventWhereInput!]
  OR: [ThreadMetadataUpdatedEventWhereInput!]
}

input ForumThreadTagWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  visibleThreadsCount_eq: Int
  visibleThreadsCount_gt: Int
  visibleThreadsCount_gte: Int
  visibleThreadsCount_lt: Int
  visibleThreadsCount_lte: Int
  visibleThreadsCount_in: [Int!]
  threads_none: ForumThreadWhereInput
  threads_some: ForumThreadWhereInput
  threads_every: ForumThreadWhereInput
  AND: [ForumThreadTagWhereInput!]
  OR: [ForumThreadTagWhereInput!]
}

input ThreadDeletedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  thread: ForumThreadWhereInput
  AND: [ThreadDeletedEventWhereInput!]
  OR: [ThreadDeletedEventWhereInput!]
}

input ThreadModeratedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  thread: ForumThreadWhereInput
  actor: WorkerWhereInput
  AND: [ThreadModeratedEventWhereInput!]
  OR: [ThreadModeratedEventWhereInput!]
}

input PostTextUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newText_eq: String
  newText_contains: String
  newText_startsWith: String
  newText_endsWith: String
  newText_in: [String!]
  post: ForumPostWhereInput
  AND: [PostTextUpdatedEventWhereInput!]
  OR: [PostTextUpdatedEventWhereInput!]
}

input ForumPostReactionWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  reaction_eq: PostReaction
  reaction_in: [PostReaction!]
  member: MembershipWhereInput
  post: ForumPostWhereInput
  AND: [ForumPostReactionWhereInput!]
  OR: [ForumPostReactionWhereInput!]
}

enum PostReaction {
  LIKE
}

input PostDeletedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  posts_none: ForumPostWhereInput
  posts_some: ForumPostWhereInput
  posts_every: ForumPostWhereInput
  actor: MembershipWhereInput
  AND: [PostDeletedEventWhereInput!]
  OR: [PostDeletedEventWhereInput!]
}

input PostAddedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  isEditable_eq: Boolean
  isEditable_in: [Boolean!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  post: ForumPostWhereInput
  AND: [PostAddedEventWhereInput!]
  OR: [PostAddedEventWhereInput!]
}

input PostModeratedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  post: ForumPostWhereInput
  actor: WorkerWhereInput
  AND: [PostModeratedEventWhereInput!]
  OR: [PostModeratedEventWhereInput!]
}

input PostReactedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  reactionResult_json: JSONObject
  post: ForumPostWhereInput
  reactingMember: MembershipWhereInput
  AND: [PostReactedEventWhereInput!]
  OR: [PostReactedEventWhereInput!]
}

input InvitesTransferredEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  numberOfInvites_eq: Int
  numberOfInvites_gt: Int
  numberOfInvites_gte: Int
  numberOfInvites_lt: Int
  numberOfInvites_lte: Int
  numberOfInvites_in: [Int!]
  sourceMember: MembershipWhereInput
  targetMember: MembershipWhereInput
  AND: [InvitesTransferredEventWhereInput!]
  OR: [InvitesTransferredEventWhereInput!]
}

input MemberAccountsUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newRootAccount_eq: String
  newRootAccount_contains: String
  newRootAccount_startsWith: String
  newRootAccount_endsWith: String
  newRootAccount_in: [String!]
  newControllerAccount_eq: String
  newControllerAccount_contains: String
  newControllerAccount_startsWith: String
  newControllerAccount_endsWith: String
  newControllerAccount_in: [String!]
  member: MembershipWhereInput
  AND: [MemberAccountsUpdatedEventWhereInput!]
  OR: [MemberAccountsUpdatedEventWhereInput!]
}

input MemberVerificationStatusUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  isVerified_eq: Boolean
  isVerified_in: [Boolean!]
  member: MembershipWhereInput
  worker: WorkerWhereInput
  AND: [MemberVerificationStatusUpdatedEventWhereInput!]
  OR: [MemberVerificationStatusUpdatedEventWhereInput!]
}

input ProposalWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  details_json: JSONObject
  stakingAccount_eq: String
  stakingAccount_contains: String
  stakingAccount_startsWith: String
  stakingAccount_endsWith: String
  stakingAccount_in: [String!]
  exactExecutionBlock_eq: Int
  exactExecutionBlock_gt: Int
  exactExecutionBlock_gte: Int
  exactExecutionBlock_lt: Int
  exactExecutionBlock_lte: Int
  exactExecutionBlock_in: [Int!]
  councilApprovals_eq: Int
  councilApprovals_gt: Int
  councilApprovals_gte: Int
  councilApprovals_lt: Int
  councilApprovals_lte: Int
  councilApprovals_in: [Int!]
  status_json: JSONObject
  isFinalized_eq: Boolean
  isFinalized_in: [Boolean!]
  statusSetAtBlock_eq: Int
  statusSetAtBlock_gt: Int
  statusSetAtBlock_gte: Int
  statusSetAtBlock_lt: Int
  statusSetAtBlock_lte: Int
  statusSetAtBlock_in: [Int!]
  statusSetAtTime_eq: DateTime
  statusSetAtTime_lt: DateTime
  statusSetAtTime_lte: DateTime
  statusSetAtTime_gt: DateTime
  statusSetAtTime_gte: DateTime
  creator: MembershipWhereInput
  createdInEvent: ProposalCreatedEventWhereInput
  discussionThread: ProposalDiscussionThreadWhereInput
  proposalStatusUpdates_none: ProposalStatusUpdatedEventWhereInput
  proposalStatusUpdates_some: ProposalStatusUpdatedEventWhereInput
  proposalStatusUpdates_every: ProposalStatusUpdatedEventWhereInput
  votes_none: ProposalVotedEventWhereInput
  votes_some: ProposalVotedEventWhereInput
  votes_every: ProposalVotedEventWhereInput
  proposalcancelledeventproposal_none: ProposalCancelledEventWhereInput
  proposalcancelledeventproposal_some: ProposalCancelledEventWhereInput
  proposalcancelledeventproposal_every: ProposalCancelledEventWhereInput
  proposaldecisionmadeeventproposal_none: ProposalDecisionMadeEventWhereInput
  proposaldecisionmadeeventproposal_some: ProposalDecisionMadeEventWhereInput
  proposaldecisionmadeeventproposal_every: ProposalDecisionMadeEventWhereInput
  proposalexecutedeventproposal_none: ProposalExecutedEventWhereInput
  proposalexecutedeventproposal_some: ProposalExecutedEventWhereInput
  proposalexecutedeventproposal_every: ProposalExecutedEventWhereInput
  AND: [ProposalWhereInput!]
  OR: [ProposalWhereInput!]
}

input ProposalCreatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  proposal: ProposalWhereInput
  AND: [ProposalCreatedEventWhereInput!]
  OR: [ProposalCreatedEventWhereInput!]
}

input ProposalDiscussionThreadWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  mode_json: JSONObject
  proposal: ProposalWhereInput
  posts_none: ProposalDiscussionPostWhereInput
  posts_some: ProposalDiscussionPostWhereInput
  posts_every: ProposalDiscussionPostWhereInput
  modeChanges_none: ProposalDiscussionThreadModeChangedEventWhereInput
  modeChanges_some: ProposalDiscussionThreadModeChangedEventWhereInput
  modeChanges_every: ProposalDiscussionThreadModeChangedEventWhereInput
  AND: [ProposalDiscussionThreadWhereInput!]
  OR: [ProposalDiscussionThreadWhereInput!]
}

input ProposalDiscussionPostWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  status_json: JSONObject
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  discussionThread: ProposalDiscussionThreadWhereInput
  author: MembershipWhereInput
  repliesTo: ProposalDiscussionPostWhereInput
  updates_none: ProposalDiscussionPostUpdatedEventWhereInput
  updates_some: ProposalDiscussionPostUpdatedEventWhereInput
  updates_every: ProposalDiscussionPostUpdatedEventWhereInput
  createdInEvent: ProposalDiscussionPostCreatedEventWhereInput
  proposaldiscussionpostrepliesTo_none: ProposalDiscussionPostWhereInput
  proposaldiscussionpostrepliesTo_some: ProposalDiscussionPostWhereInput
  proposaldiscussionpostrepliesTo_every: ProposalDiscussionPostWhereInput
  proposaldiscussionpostdeletedeventpost_none: ProposalDiscussionPostDeletedEventWhereInput
  proposaldiscussionpostdeletedeventpost_some: ProposalDiscussionPostDeletedEventWhereInput
  proposaldiscussionpostdeletedeventpost_every: ProposalDiscussionPostDeletedEventWhereInput
  AND: [ProposalDiscussionPostWhereInput!]
  OR: [ProposalDiscussionPostWhereInput!]
}

input ProposalDiscussionPostUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  post: ProposalDiscussionPostWhereInput
  AND: [ProposalDiscussionPostUpdatedEventWhereInput!]
  OR: [ProposalDiscussionPostUpdatedEventWhereInput!]
}

input ProposalDiscussionPostCreatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  post: ProposalDiscussionPostWhereInput
  AND: [ProposalDiscussionPostCreatedEventWhereInput!]
  OR: [ProposalDiscussionPostCreatedEventWhereInput!]
}

input ProposalDiscussionPostDeletedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  post: ProposalDiscussionPostWhereInput
  actor: MembershipWhereInput
  AND: [ProposalDiscussionPostDeletedEventWhereInput!]
  OR: [ProposalDiscussionPostDeletedEventWhereInput!]
}

input ProposalDiscussionThreadModeChangedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newMode_json: JSONObject
  thread: ProposalDiscussionThreadWhereInput
  actor: MembershipWhereInput
  AND: [ProposalDiscussionThreadModeChangedEventWhereInput!]
  OR: [ProposalDiscussionThreadModeChangedEventWhereInput!]
}

input ProposalStatusUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newStatus_json: JSONObject
  proposal: ProposalWhereInput
  AND: [ProposalStatusUpdatedEventWhereInput!]
  OR: [ProposalStatusUpdatedEventWhereInput!]
}

input ProposalVotedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  voteKind_eq: ProposalVoteKind
  voteKind_in: [ProposalVoteKind!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  votingRound_eq: Int
  votingRound_gt: Int
  votingRound_gte: Int
  votingRound_lt: Int
  votingRound_lte: Int
  votingRound_in: [Int!]
  voter: MembershipWhereInput
  proposal: ProposalWhereInput
  AND: [ProposalVotedEventWhereInput!]
  OR: [ProposalVotedEventWhereInput!]
}

enum ProposalVoteKind {
  APPROVE
  REJECT
  SLASH
  ABSTAIN
}

input ProposalCancelledEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  proposal: ProposalWhereInput
  AND: [ProposalCancelledEventWhereInput!]
  OR: [ProposalCancelledEventWhereInput!]
}

input ProposalDecisionMadeEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  decisionStatus_json: JSONObject
  proposal: ProposalWhereInput
  AND: [ProposalDecisionMadeEventWhereInput!]
  OR: [ProposalDecisionMadeEventWhereInput!]
}

input ProposalExecutedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  executionStatus_json: JSONObject
  proposal: ProposalWhereInput
  AND: [ProposalExecutedEventWhereInput!]
  OR: [ProposalExecutedEventWhereInput!]
}

input StakingAccountAddedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  account_eq: String
  account_contains: String
  account_startsWith: String
  account_endsWith: String
  account_in: [String!]
  member: MembershipWhereInput
  AND: [StakingAccountAddedEventWhereInput!]
  OR: [StakingAccountAddedEventWhereInput!]
}

input StakingAccountConfirmedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  account_eq: String
  account_contains: String
  account_startsWith: String
  account_endsWith: String
  account_in: [String!]
  member: MembershipWhereInput
  AND: [StakingAccountConfirmedEventWhereInput!]
  OR: [StakingAccountConfirmedEventWhereInput!]
}

input StakingAccountRemovedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  account_eq: String
  account_contains: String
  account_startsWith: String
  account_endsWith: String
  account_in: [String!]
  member: MembershipWhereInput
  AND: [StakingAccountRemovedEventWhereInput!]
  OR: [StakingAccountRemovedEventWhereInput!]
}

input RewardPaidEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rewardAccount_eq: String
  rewardAccount_contains: String
  rewardAccount_startsWith: String
  rewardAccount_endsWith: String
  rewardAccount_in: [String!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  paymentType_eq: RewardPaymentType
  paymentType_in: [RewardPaymentType!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [RewardPaidEventWhereInput!]
  OR: [RewardPaidEventWhereInput!]
}

enum RewardPaymentType {
  REGULAR
  MISSED
}

input StakeSlashedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  requestedAmount_eq: BigInt
  requestedAmount_gt: BigInt
  requestedAmount_gte: BigInt
  requestedAmount_lt: BigInt
  requestedAmount_lte: BigInt
  requestedAmount_in: [BigInt!]
  slashedAmount_eq: BigInt
  slashedAmount_gt: BigInt
  slashedAmount_gte: BigInt
  slashedAmount_lt: BigInt
  slashedAmount_lte: BigInt
  slashedAmount_in: [BigInt!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [StakeSlashedEventWhereInput!]
  OR: [StakeSlashedEventWhereInput!]
}

input OpeningFilledEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  opening: WorkingGroupOpeningWhereInput
  workersHired_none: WorkerWhereInput
  workersHired_some: WorkerWhereInput
  workersHired_every: WorkerWhereInput
  AND: [OpeningFilledEventWhereInput!]
  OR: [OpeningFilledEventWhereInput!]
}

input LeaderSetEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [LeaderSetEventWhereInput!]
  OR: [LeaderSetEventWhereInput!]
}

input LeaderUnsetEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  leader: WorkerWhereInput
  AND: [LeaderUnsetEventWhereInput!]
  OR: [LeaderUnsetEventWhereInput!]
}

input NewMissedRewardLevelReachedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newMissedRewardAmount_eq: BigInt
  newMissedRewardAmount_gt: BigInt
  newMissedRewardAmount_gte: BigInt
  newMissedRewardAmount_lt: BigInt
  newMissedRewardAmount_lte: BigInt
  newMissedRewardAmount_in: [BigInt!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [NewMissedRewardLevelReachedEventWhereInput!]
  OR: [NewMissedRewardLevelReachedEventWhereInput!]
}

input StakeDecreasedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [StakeDecreasedEventWhereInput!]
  OR: [StakeDecreasedEventWhereInput!]
}

input StakeIncreasedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [StakeIncreasedEventWhereInput!]
  OR: [StakeIncreasedEventWhereInput!]
}

input TerminatedLeaderEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  penalty_eq: BigInt
  penalty_gt: BigInt
  penalty_gte: BigInt
  penalty_lt: BigInt
  penalty_lte: BigInt
  penalty_in: [BigInt!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [TerminatedLeaderEventWhereInput!]
  OR: [TerminatedLeaderEventWhereInput!]
}

input TerminatedWorkerEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  penalty_eq: BigInt
  penalty_gt: BigInt
  penalty_gte: BigInt
  penalty_lt: BigInt
  penalty_lte: BigInt
  penalty_in: [BigInt!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [TerminatedWorkerEventWhereInput!]
  OR: [TerminatedWorkerEventWhereInput!]
}

input WorkerExitedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [WorkerExitedEventWhereInput!]
  OR: [WorkerExitedEventWhereInput!]
}

input WorkerRewardAccountUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newRewardAccount_eq: String
  newRewardAccount_contains: String
  newRewardAccount_startsWith: String
  newRewardAccount_endsWith: String
  newRewardAccount_in: [String!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [WorkerRewardAccountUpdatedEventWhereInput!]
  OR: [WorkerRewardAccountUpdatedEventWhereInput!]
}

input WorkerRewardAmountUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newRewardPerBlock_eq: BigInt
  newRewardPerBlock_gt: BigInt
  newRewardPerBlock_gte: BigInt
  newRewardPerBlock_lt: BigInt
  newRewardPerBlock_lte: BigInt
  newRewardPerBlock_in: [BigInt!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [WorkerRewardAmountUpdatedEventWhereInput!]
  OR: [WorkerRewardAmountUpdatedEventWhereInput!]
}

input WorkerRoleAccountUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newRoleAccount_eq: String
  newRoleAccount_contains: String
  newRoleAccount_startsWith: String
  newRoleAccount_endsWith: String
  newRoleAccount_in: [String!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [WorkerRoleAccountUpdatedEventWhereInput!]
  OR: [WorkerRoleAccountUpdatedEventWhereInput!]
}

input WorkerStartedLeavingEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [WorkerStartedLeavingEventWhereInput!]
  OR: [WorkerStartedLeavingEventWhereInput!]
}

input ApplicationWithdrawnEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  application: WorkingGroupApplicationWhereInput
  AND: [ApplicationWithdrawnEventWhereInput!]
  OR: [ApplicationWithdrawnEventWhereInput!]
}

input AppliedOnOpeningEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  opening: WorkingGroupOpeningWhereInput
  application: WorkingGroupApplicationWhereInput
  AND: [AppliedOnOpeningEventWhereInput!]
  OR: [AppliedOnOpeningEventWhereInput!]
}

input BudgetSetEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newBudget_eq: BigInt
  newBudget_gt: BigInt
  newBudget_gte: BigInt
  newBudget_lt: BigInt
  newBudget_lte: BigInt
  newBudget_in: [BigInt!]
  group: WorkingGroupWhereInput
  AND: [BudgetSetEventWhereInput!]
  OR: [BudgetSetEventWhereInput!]
}

input BudgetSpendingEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  reciever_eq: String
  reciever_contains: String
  reciever_startsWith: String
  reciever_endsWith: String
  reciever_in: [String!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  group: WorkingGroupWhereInput
  AND: [BudgetSpendingEventWhereInput!]
  OR: [BudgetSpendingEventWhereInput!]
}

input OpeningAddedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  opening: WorkingGroupOpeningWhereInput
  AND: [OpeningAddedEventWhereInput!]
  OR: [OpeningAddedEventWhereInput!]
}

input OpeningCanceledEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  opening: WorkingGroupOpeningWhereInput
  AND: [OpeningCanceledEventWhereInput!]
  OR: [OpeningCanceledEventWhereInput!]
}

enum ApplicationFormQuestionAnswerOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  application_ASC
  application_DESC
  question_ASC
  question_DESC
  answer_ASC
  answer_DESC
}

type ApplicationFormQuestionAnswer implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  application: WorkingGroupApplication!
  applicationId: String!
  question: ApplicationFormQuestion!
  questionId: String!

  # Applicant's answer
  answer: String!
}

interface BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
}

type WorkingGroupApplication implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # ApplicationId in specific working group module
  runtimeId: Int!
  opening: WorkingGroupOpening!
  openingId: String!
  applicant: Membership!
  applicantId: String!

  # Application stake
  stake: BigInt!

  # Applicant's initial role account
  roleAccount: String!

  # Applicant's initial reward account
  rewardAccount: String!

  # Applicant's initial staking account
  stakingAccount: String!
  answers: [ApplicationFormQuestionAnswer!]!

  # Current application status
  status: WorkingGroupApplicationStatus!
  createdInEvent: AppliedOnOpeningEvent!
  applicationwithdrawneventapplication: [ApplicationWithdrawnEvent!]
  workerapplication: [Worker!]
}

type WorkingGroupOpening implements BaseGraphQLObject {
  id: ID!

  # Time of opening creation
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # OpeningId in specific working group module
  runtimeId: Int!
  group: WorkingGroup!
  groupId: String!
  applications: [WorkingGroupApplication!]!

  # Type of the opening (Leader/Regular)
  type: WorkingGroupOpeningType!

  # Current opening status
  status: WorkingGroupOpeningStatus!
  metadata: WorkingGroupOpeningMetadata!
  metadataId: String!

  # Min. application/role stake amount
  stakeAmount: BigInt!

  # Role stake unstaking period in blocks
  unstakingPeriod: Int!

  # Initial workers' reward per block
  rewardPerBlock: BigInt!
  createdInEvent: OpeningAddedEvent!
  appliedonopeningeventopening: [AppliedOnOpeningEvent!]
  openingcanceledeventopening: [OpeningCanceledEvent!]
  openingfilledeventopening: [OpeningFilledEvent!]
}

type WorkingGroup implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Working group name
  name: String!
  metadata: WorkingGroupMetadata
  metadataId: String
  leader: Worker
  leaderId: String
  workers: [Worker!]!
  openings: [WorkingGroupOpening!]!

  # Current working group budget (JOY)
  budget: BigInt!
  applicationwithdrawneventgroup: [ApplicationWithdrawnEvent!]
  appliedonopeningeventgroup: [AppliedOnOpeningEvent!]
  budgetseteventgroup: [BudgetSetEvent!]
  budgetspendingeventgroup: [BudgetSpendingEvent!]
  leaderseteventgroup: [LeaderSetEvent!]
  leaderunseteventgroup: [LeaderUnsetEvent!]
  newmissedrewardlevelreachedeventgroup: [NewMissedRewardLevelReachedEvent!]
  openingaddedeventgroup: [OpeningAddedEvent!]
  openingcanceledeventgroup: [OpeningCanceledEvent!]
  openingfilledeventgroup: [OpeningFilledEvent!]
  rewardpaideventgroup: [RewardPaidEvent!]
  stakedecreasedeventgroup: [StakeDecreasedEvent!]
  stakeincreasedeventgroup: [StakeIncreasedEvent!]
  stakeslashedeventgroup: [StakeSlashedEvent!]
  statustextchangedeventgroup: [StatusTextChangedEvent!]
  terminatedleadereventgroup: [TerminatedLeaderEvent!]
  terminatedworkereventgroup: [TerminatedWorkerEvent!]
  upcomingworkinggroupopeninggroup: [UpcomingWorkingGroupOpening!]
  workerexitedeventgroup: [WorkerExitedEvent!]
  workerrewardaccountupdatedeventgroup: [WorkerRewardAccountUpdatedEvent!]
  workerrewardamountupdatedeventgroup: [WorkerRewardAmountUpdatedEvent!]
  workerroleaccountupdatedeventgroup: [WorkerRoleAccountUpdatedEvent!]
  workerstartedleavingeventgroup: [WorkerStartedLeavingEvent!]
  workinggroupmetadatagroup: [WorkingGroupMetadata!]
}

type WorkingGroupMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Working group status
  status: String

  # Working group status message
  statusMessage: String

  # Working group about text
  about: String

  # Working group description text
  description: String
  setInEvent: StatusTextChangedEvent!
  setInEventId: String!
  group: WorkingGroup!
  groupId: String!
  workinggroupmetadata: [WorkingGroup!]
}

type StatusTextChangedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!

  # Original action metadata as hex string
  metadata: String

  # Event result depeding on the metadata action type
  result: WorkingGroupMetadataActionResult!
  upcomingworkinggroupopeningcreatedInEvent: [UpcomingWorkingGroupOpening!]
  workinggroupmetadatasetInEvent: [WorkingGroupMetadata!]
}

interface Event {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
}

enum EventTypeOptions {
  ApplicationWithdrawnEvent
  AppliedOnOpeningEvent
  BudgetSetEvent
  BudgetSpendingEvent
  InitialInvitationBalanceUpdatedEvent
  InitialInvitationCountUpdatedEvent
  InvitesTransferredEvent
  LeaderInvitationQuotaUpdatedEvent
  LeaderSetEvent
  LeaderUnsetEvent
  MemberAccountsUpdatedEvent
  MemberInvitedEvent
  MemberProfileUpdatedEvent
  MemberVerificationStatusUpdatedEvent
  MembershipBoughtEvent
  MembershipPriceUpdatedEvent
  NewMissedRewardLevelReachedEvent
  OpeningAddedEvent
  OpeningCanceledEvent
  OpeningFilledEvent
  ProposalCancelledEvent
  ProposalCreatedEvent
  ProposalDecisionMadeEvent
  ProposalDiscussionPostCreatedEvent
  ProposalDiscussionPostDeletedEvent
  ProposalDiscussionPostUpdatedEvent
  ProposalDiscussionThreadModeChangedEvent
  ProposalExecutedEvent
  ProposalStatusUpdatedEvent
  ProposalVotedEvent
  ReferralCutUpdatedEvent
  RewardPaidEvent
  StakeDecreasedEvent
  StakeIncreasedEvent
  StakeSlashedEvent
  StakingAccountAddedEvent
  StakingAccountConfirmedEvent
  StakingAccountRemovedEvent
  StatusTextChangedEvent
  TerminatedLeaderEvent
  TerminatedWorkerEvent
  WorkerExitedEvent
  WorkerRewardAccountUpdatedEvent
  WorkerRewardAmountUpdatedEvent
  WorkerRoleAccountUpdatedEvent
  WorkerStartedLeavingEvent
}

union WorkingGroupMetadataActionResult =
  UpcomingOpeningAdded
  | UpcomingOpeningRemoved
  | WorkingGroupMetadataSet
  | InvalidActionMetadata

type UpcomingOpeningAdded {
  upcomingOpeningId: String!
}

type UpcomingOpeningRemoved {
  upcomingOpeningId: String!
}

type WorkingGroupMetadataSet {
  # The new metadata snapshot resulting from the update
  metadata: WorkingGroupMetadata
}

type InvalidActionMetadata {
  # Reason why the action metadata was considered invalid
  reason: String!
}

type UpcomingWorkingGroupOpening implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  createdInEvent: StatusTextChangedEvent!
  createdInEventId: String!
  group: WorkingGroup!
  groupId: String!

  # Expected opening start time
  expectedStart: DateTime

  # Expected min. application/role stake amount
  stakeAmount: BigInt

  # Expected reward per block
  rewardPerBlock: BigInt
  metadata: WorkingGroupOpeningMetadata!
  metadataId: String!
}

type WorkingGroupOpeningMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Whether the originally provided metadata was valid
  originallyValid: Boolean!

  # Opening short description
  shortDescription: String

  # Opening description (md-formatted)
  description: String

  # Expected max. number of applicants that will be hired
  hiringLimit: Int

  # Expected time when the opening will close
  expectedEnding: DateTime

  # Md-formatted text explaining the application process
  applicationDetails: String
  applicationFormQuestions: [ApplicationFormQuestion!]!
  upcomingworkinggroupopeningmetadata: [UpcomingWorkingGroupOpening!]
  workinggroupopeningmetadata: [WorkingGroupOpening!]
}

type ApplicationFormQuestion implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  openingMetadata: WorkingGroupOpeningMetadata!
  openingMetadataId: String!

  # The question itself
  question: String

  # Type of the question (UI answer input type)
  type: ApplicationFormQuestionType!

  # Index of the question
  index: Int!
  applicationformquestionanswerquestion: [ApplicationFormQuestionAnswer!]
}

type Worker implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # WorkerId in specific working group module
  runtimeId: Int!
  group: WorkingGroup!
  groupId: String!
  membership: Membership!
  membershipId: String!

  # Worker's role account
  roleAccount: String!

  # Worker's reward account
  rewardAccount: String!

  # Worker's staking account
  stakeAccount: String!

  # Current worker status
  status: WorkerStatus!

  # Whether the worker is also the working group lead
  isLead: Boolean!

  # Current role stake (in JOY)
  stake: BigInt!

  # Current reward per block
  rewardPerBlock: BigInt!

  # The reward amount the worker is currently missing (due to empty working group budget)
  missingRewardAmount: BigInt
  payouts: [RewardPaidEvent!]!
  slashes: [StakeSlashedEvent!]!
  entry: OpeningFilledEvent!
  entryId: String!
  application: WorkingGroupApplication!
  applicationId: String!

  # Worker's storage data
  storage: String
  managedForumCategories: [ForumCategory!]!
  dataObjects: [DataObject!]!
  categoryarchivalstatusupdatedeventactor: [CategoryArchivalStatusUpdatedEvent!]
  categorydeletedeventactor: [CategoryDeletedEvent!]
  categorymembershipofmoderatorupdatedeventmoderator: [CategoryMembershipOfModeratorUpdatedEvent!]
  categorystickythreadupdateeventactor: [CategoryStickyThreadUpdateEvent!]
  leaderseteventworker: [LeaderSetEvent!]
  leaderunseteventleader: [LeaderUnsetEvent!]
  memberverificationstatusupdatedeventworker: [MemberVerificationStatusUpdatedEvent!]
  newmissedrewardlevelreachedeventworker: [NewMissedRewardLevelReachedEvent!]
  postmoderatedeventactor: [PostModeratedEvent!]
  stakedecreasedeventworker: [StakeDecreasedEvent!]
  stakeincreasedeventworker: [StakeIncreasedEvent!]
  terminatedleadereventworker: [TerminatedLeaderEvent!]
  terminatedworkereventworker: [TerminatedWorkerEvent!]
  threadmoderatedeventactor: [ThreadModeratedEvent!]
  threadmovedeventactor: [ThreadMovedEvent!]
  workerexitedeventworker: [WorkerExitedEvent!]
  workerrewardaccountupdatedeventworker: [WorkerRewardAccountUpdatedEvent!]
  workerrewardamountupdatedeventworker: [WorkerRewardAmountUpdatedEvent!]
  workerroleaccountupdatedeventworker: [WorkerRoleAccountUpdatedEvent!]
  workerstartedleavingeventworker: [WorkerStartedLeavingEvent!]
  workinggroupleader: [WorkingGroup!]
}

# Stored information about a registered user
type Membership implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # The unique handle chosen by member
  handle: String!
  metadata: MemberMetadata!
  metadataId: String!

  # Member's controller account id
  controllerAccount: String!

  # Member's root account id
  rootAccount: String!

  # How the member was registered
  entry: MembershipEntryMethod!

  # Whether member has been verified by membership working group.
  isVerified: Boolean!

  # Staking accounts bounded to membership.
  boundAccounts: [String!]!

  # Current count of invites left to send.
  inviteCount: Int!
  invitees: [Membership!]!
  invitedBy: Membership
  invitedById: String
  referredMembers: [Membership!]!
  referredBy: Membership
  referredById: String

  # Whether member is founding member.
  isFoundingMember: Boolean!
  roles: [Worker!]!
  whitelistedIn: [ProposalDiscussionWhitelist!]!
  channels: [Channel!]!
  forumpostauthor: [ForumPost!]
  forumpostreactionmember: [ForumPostReaction!]
  forumthreadauthor: [ForumThread!]
  invitestransferredeventsourceMember: [InvitesTransferredEvent!]
  invitestransferredeventtargetMember: [InvitesTransferredEvent!]
  memberaccountsupdatedeventmember: [MemberAccountsUpdatedEvent!]
  memberinvitedeventinvitingMember: [MemberInvitedEvent!]
  memberinvitedeventnewMember: [MemberInvitedEvent!]
  memberprofileupdatedeventmember: [MemberProfileUpdatedEvent!]
  memberverificationstatusupdatedeventmember: [MemberVerificationStatusUpdatedEvent!]
  membershipboughteventnewMember: [MembershipBoughtEvent!]
  membershipboughteventreferrer: [MembershipBoughtEvent!]
  postdeletedeventactor: [PostDeletedEvent!]
  postreactedeventreactingMember: [PostReactedEvent!]
  proposalcreator: [Proposal!]
  proposaldiscussionpostauthor: [ProposalDiscussionPost!]
  proposaldiscussionpostdeletedeventactor: [ProposalDiscussionPostDeletedEvent!]
  proposaldiscussionthreadmodechangedeventactor: [ProposalDiscussionThreadModeChangedEvent!]
  proposalvotedeventvoter: [ProposalVotedEvent!]
  stakingaccountaddedeventmember: [StakingAccountAddedEvent!]
  stakingaccountconfirmedeventmember: [StakingAccountConfirmedEvent!]
  stakingaccountremovedeventmember: [StakingAccountRemovedEvent!]
  voteonpolleventvotingMember: [VoteOnPollEvent!]
  workinggroupapplicationapplicant: [WorkingGroupApplication!]
}

type MemberMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Member's name
  name: String
  avatar: DataObject
  avatarId: String

  # Short text chosen by member to share information about themselves
  about: String
  memberinvitedeventmetadata: [MemberInvitedEvent!]
  memberprofileupdatedeventnewMetadata: [MemberProfileUpdatedEvent!]
  membershipmetadata: [Membership!]
  membershipboughteventmetadata: [MembershipBoughtEvent!]
}

# Manages content ids, type and storage provider decision about it
type DataObject implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Content owner
  owner: DataObjectOwner!

  # Content added at
  createdInBlock: Int!

  # Content type id
  typeId: Int!

  # Content size in bytes
  size: BigInt!
  liaison: Worker
  liaisonId: String

  # Storage provider as liaison judgment
  liaisonJudgement: LiaisonJudgement!

  # IPFS content id
  ipfsContentId: String!

  # Joystream runtime content
  joystreamContentId: String!
  membermetadataavatar: [MemberMetadata!]
}

union DataObjectOwner =
  DataObjectOwnerMember
  | DataObjectOwnerChannel
  | DataObjectOwnerDao
  | DataObjectOwnerCouncil
  | DataObjectOwnerWorkingGroup

type DataObjectOwnerMember {
  # Related member
  member: Membership

  # Variant needs to have at least one property. This value is not used.
  dummy: Int
}

type DataObjectOwnerChannel {
  # Related channel
  channel: Channel

  # Variant needs to have at least one property. This value is not used.
  dummy: Int
}

type Channel implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
  category: ChannelCategory
  categoryId: String

  # Reward account where revenue is sent if set.
  rewardAccount: String

  # The title of the Channel
  title: String

  # The description of a Channel
  description: String

  # Channel's cover (background) photo asset. Recommended ratio: 16:9.
  coverPhoto: Asset

  # Channel's avatar photo asset.
  avatarPhoto: Asset

  # Flag signaling whether a channel is public.
  isPublic: Boolean

  # Flag signaling whether a channel is censored.
  isCensored: Boolean!
  language: Language
  languageId: String
  videos: [Video!]!
  createdInBlock: Int!
}

type CuratorGroup implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Curators belonging to this group
  curatorIds: [Int!]!

  # Is group active or not
  isActive: Boolean!
  channels: [Channel!]!
}

# Category of media channel
type ChannelCategory implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # The name of the category
  name: String
  channels: [Channel!]!
  createdInBlock: Int!
}

union Asset = AssetExternal | AssetJoystreamStorage | AssetNone

type AssetExternal {
  # JSON array of the urls
  urls: String!
}

type AssetJoystreamStorage {
  # Related DataObject entity
  dataObject: DataObject
}

type AssetNone {
  phantom: Int
}

type Language implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Language identifier ISO 639-1
  iso: String!
  createdInBlock: Int!
  channellanguage: [Channel!]
  videolanguage: [Video!]
}

type Video implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  channel: Channel!
  channelId: String!
  category: VideoCategory
  categoryId: String

  # The title of the video
  title: String

  # The description of the Video
  description: String

  # Video duration in seconds
  duration: Int

  # Video thumbnail asset (recommended ratio: 16:9)
  thumbnailPhoto: Asset
  language: Language
  languageId: String

  # Whether or not Video contains marketing
  hasMarketing: Boolean

  # If the Video was published on other platform before beeing published on Joystream - the original publication date
  publishedBeforeJoystream: DateTime

  # Whether the Video is supposed to be publically displayed
  isPublic: Boolean

  # Flag signaling whether a video is censored.
  isCensored: Boolean!

  # Whether the Video contains explicit material.
  isExplicit: Boolean
  license: License
  licenseId: String

  # Video media asset
  media: Asset
  mediaMetadata: VideoMediaMetadata
  mediaMetadataId: String
  createdInBlock: Int!

  # Is video featured or not
  isFeatured: Boolean!
}

type VideoCategory implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # The name of the category
  name: String
  videos: [Video!]!
  createdInBlock: Int!
}

type License implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # License code defined by Joystream
  code: Int

  # Attribution (if required by the license)
  attribution: String

  # Custom license content
  customText: String
  videolicense: [Video!]
}

type VideoMediaMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  encoding: VideoMediaEncoding
  encodingId: String

  # Video media width in pixels
  pixelWidth: Int

  # Video media height in pixels
  pixelHeight: Int

  # Video media size in bytes
  size: BigInt
  video: Video
  createdInBlock: Int!
}

type VideoMediaEncoding implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Encoding of the video media object
  codecName: String

  # Media container format
  container: String

  # Content MIME type
  mimeMediaType: String
  videomediametadataencoding: [VideoMediaMetadata!]
}

type DataObjectOwnerDao {
  # DAO identifier
  dao: Int!
}

type DataObjectOwnerCouncil {
  # Variant needs to have at least one property. This value is not used.
  dummy: Int
}

type DataObjectOwnerWorkingGroup {
  # Working group
  workingGroup: WorkingGroup
}

type MemberInvitedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  invitingMember: Membership!
  invitingMemberId: String!
  newMember: Membership!
  newMemberId: String!

  # New member root account in SS58 encoding.
  rootAccount: String!

  # New member controller in SS58 encoding.
  controllerAccount: String!

  # New member handle.
  handle: String!
  metadata: MemberMetadata!
  metadataId: String!
}

type MemberProfileUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  member: Membership!
  memberId: String!

  # New member handle. Null means no new value was provided.
  newHandle: String
  newMetadata: MemberMetadata!
  newMetadataId: String!
}

type MembershipBoughtEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  newMember: Membership!
  newMemberId: String!

  # New member root account in SS58 encoding.
  rootAccount: String!

  # New member controller in SS58 encoding.
  controllerAccount: String!

  # New member handle.
  handle: String!
  metadata: MemberMetadata!
  metadataId: String!
  referrer: Membership
  referrerId: String
}

union MembershipEntryMethod =
  MembershipEntryPaid
  | MembershipEntryInvited
  | MembershipEntryGenesis

type MembershipEntryPaid {
  # The event the membership was bought in
  membershipBoughtEvent: MembershipBoughtEvent
}

type MembershipEntryInvited {
  # The event the member was invited in
  memberInvitedEvent: MemberInvitedEvent
}

type MembershipEntryGenesis {
  phantom: Int
}

type ProposalDiscussionWhitelist implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  phantom: Int
  members: [Membership!]!
}

type ForumPost implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  author: Membership!
  authorId: String!
  thread: ForumThread!
  threadId: String!

  # Content of the post (md-formatted)
  text: String!
  repliesTo: ForumPost
  repliesToId: String

  # Current post status
  status: PostStatus!

  # The origin of the post (either thread creation event or regular PostAdded event)
  origin: PostOrigin!
  edits: [PostTextUpdatedEvent!]!
  reactions: [ForumPostReaction!]!
  deletedInEvent: PostDeletedEvent
  deletedInEventId: String
  forumpostrepliesTo: [ForumPost!]
  forumthreadinitialPost: [ForumThread!]
  postaddedeventpost: [PostAddedEvent!]
  postmoderatedeventpost: [PostModeratedEvent!]
  postreactedeventpost: [PostReactedEvent!]
}

type ForumThread implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  author: Membership!
  authorId: String!
  category: ForumCategory!
  categoryId: String!

  # Thread title
  title: String!
  posts: [ForumPost!]!
  initialPost: ForumPost
  initialPostId: String

  # Number of non-deleted posts in the thread
  visiblePostsCount: Int!
  poll: ForumPoll

  # Whether the thread is sticky in the category
  isSticky: Boolean!
  createdInEvent: ThreadCreatedEvent!

  # Current thread status
  status: ThreadStatus!
  metadataUpdates: [ThreadMetadataUpdatedEvent!]!
  madeStickyInEvents: [CategoryStickyThreadUpdateEvent!]!
  movedInEvents: [ThreadMovedEvent!]!
  tags: [ForumThreadTag!]!
  threaddeletedeventthread: [ThreadDeletedEvent!]
  threadmoderatedeventthread: [ThreadModeratedEvent!]
}

type ForumCategory implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  parent: ForumCategory
  parentId: String

  # Category title
  title: String!

  # Category description
  description: String!
  threads: [ForumThread!]!
  moderators: [Worker!]!
  createdInEvent: CategoryCreatedEvent!

  # Current category status
  status: CategoryStatus!
  categoryarchivalstatusupdatedeventcategory: [CategoryArchivalStatusUpdatedEvent!]
  categorydeletedeventcategory: [CategoryDeletedEvent!]
  categorymembershipofmoderatorupdatedeventcategory: [CategoryMembershipOfModeratorUpdatedEvent!]
  categorystickythreadupdateeventcategory: [CategoryStickyThreadUpdateEvent!]
  forumcategoryparent: [ForumCategory!]
  threadmovedeventoldCategory: [ThreadMovedEvent!]
  threadmovedeventnewCategory: [ThreadMovedEvent!]
}

type CategoryCreatedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  category: ForumCategory!
  categoryId: String!
}

union CategoryStatus =
  CategoryStatusActive
  | CategoryStatusArchived
  | CategoryStatusRemoved

type CategoryStatusActive {
  phantom: Int
}

type CategoryStatusArchived {
  # Event the category was archived in
  categoryArchivalStatusUpdatedEvent: CategoryArchivalStatusUpdatedEvent
}

type CategoryArchivalStatusUpdatedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  category: ForumCategory!
  categoryId: String!

  # The new archival status of the category (true = archived)
  newArchivalStatus: Boolean!
  actor: Worker!
  actorId: String!
}

type CategoryStatusRemoved {
  # Event the category was deleted in
  categoryDeletedEvent: CategoryDeletedEvent
}

type CategoryDeletedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  category: ForumCategory!
  categoryId: String!
  actor: Worker!
  actorId: String!
}

type CategoryMembershipOfModeratorUpdatedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  moderator: Worker!
  moderatorId: String!
  category: ForumCategory!
  categoryId: String!

  # The flag indicating whether the permissions to moderate the category are granted or revoked
  newCanModerateValue: Boolean!
}

type CategoryStickyThreadUpdateEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  category: ForumCategory!
  categoryId: String!
  newStickyThreads: [ForumThread!]!
  actor: Worker!
  actorId: String!
}

type ThreadMovedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  thread: ForumThread!
  threadId: String!
  oldCategory: ForumCategory!
  oldCategoryId: String!
  newCategory: ForumCategory!
  newCategoryId: String!
  actor: Worker!
  actorId: String!
}

type ForumPoll implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  thread: ForumThread!
  threadId: String!

  # Poll description
  description: String!

  # The time at which the poll ends
  endTime: DateTime!
  pollAlternatives: [ForumPollAlternative!]!
}

type ForumPollAlternative implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Index uniquely identifying the alternative in given poll
  index: Int!
  poll: ForumPoll!
  pollId: String!

  # The alternative text
  text: String!
  votes: [VoteOnPollEvent!]!
}

type VoteOnPollEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  pollAlternative: ForumPollAlternative!
  pollAlternativeId: String!
  votingMember: Membership!
  votingMemberId: String!
}

type ThreadCreatedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  thread: ForumThread!
  threadId: String!

  # Thread's original title
  title: String!

  # Thread's original text
  text: String!
}

union ThreadStatus =
  ThreadStatusActive
  | ThreadStatusLocked
  | ThreadStatusModerated
  | ThreadStatusRemoved

type ThreadStatusActive {
  phantom: Int
}

type ThreadStatusLocked {
  # Event the thread was deleted (locked) in
  threadDeletedEvent: ThreadDeletedEvent
}

type ThreadDeletedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  thread: ForumThread!
  threadId: String!
}

type ThreadStatusModerated {
  # Event the thread was moderated in
  threadModeratedEvent: ThreadModeratedEvent
}

type ThreadModeratedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  thread: ForumThread!
  threadId: String!

  # Rationale behind the moderation
  rationale: String!
  actor: Worker!
  actorId: String!
}

type ThreadStatusRemoved {
  # Event the thread was removed in
  threadDeletedEvent: ThreadDeletedEvent
}

type ThreadMetadataUpdatedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  thread: ForumThread!
  threadId: String!

  # New title of the thread
  newTitle: String
}

type ForumThreadTag implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  threads: [ForumThread!]!

  # Number of non-removed threads currently assigned to the tag
  visibleThreadsCount: Int!
}

union PostStatus =
  PostStatusActive
  | PostStatusLocked
  | PostStatusModerated
  | PostStatusRemoved

type PostStatusActive {
  phantom: Int
}

type PostStatusLocked {
  # Post deleted event in case the post became locked through runtime removal
  postDeletedEvent: PostDeletedEvent
}

type PostDeletedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  posts: [ForumPost!]!
  actor: Membership!
  actorId: String!

  # Posts deletion rationale
  rationale: String!
}

type PostStatusModerated {
  # Event the post was moderated in
  postModeratedEvent: PostModeratedEvent
}

type PostModeratedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  post: ForumPost!
  postId: String!

  # The rationale behind the moderation
  rationale: String!
  actor: Worker!
  actorId: String!
}

type PostStatusRemoved {
  # Event the post was removed in
  postDeletedEvent: PostDeletedEvent
}

union PostOrigin = PostOriginThreadInitial | PostOriginThreadReply

type PostOriginThreadInitial {
  # Thread creation event
  threadCreatedEvent: ThreadCreatedEvent
}

type PostOriginThreadReply {
  # Related PostAdded event
  postAddedEvent: PostAddedEvent
}

type PostAddedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  post: ForumPost!
  postId: String!

  # Whether the added post is editable
  isEditable: Boolean

  # Post's original text
  text: String!
}

type PostTextUpdatedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  post: ForumPost!
  postId: String!

  # New post text
  newText: String!
}

type ForumPostReaction implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  member: Membership!
  memberId: String!
  post: ForumPost!
  postId: String!

  # The reaction
  reaction: PostReaction!
}

type PostReactedEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  post: ForumPost!
  postId: String!

  # The reaction result - new valid reaction, cancelation of previous reaction or invalid reaction (which also cancels the previous one)
  reactionResult: PostReactionResult!
  reactingMember: Membership!
  reactingMemberId: String!
}

union PostReactionResult =
  PostReactionResultCancel
  | PostReactionResultValid
  | PostReactionResultInvalid

type PostReactionResultCancel {
  phantom: Int
}

type PostReactionResultValid {
  reaction: PostReaction!
  reactionId: Int!
}

type PostReactionResultInvalid {
  reactionId: Int!
}

type InvitesTransferredEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  sourceMember: Membership!
  sourceMemberId: String!
  targetMember: Membership!
  targetMemberId: String!

  # Number of invites transferred.
  numberOfInvites: Int!
}

type MemberAccountsUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  member: Membership!
  memberId: String!

  # New member root account in SS58 encoding. Null means no new value was provided.
  newRootAccount: String

  # New member controller in SS58 encoding. Null means no new value was provided.
  newControllerAccount: String
}

type MemberVerificationStatusUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  member: Membership!
  memberId: String!
  worker: Worker!
  workerId: String!

  # New status.
  isVerified: Boolean!
}

type Proposal implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Proposal title
  title: String!

  # Proposal description
  description: String!

  # Proposal details depending on proposal type
  details: ProposalDetails!

  # Staking account with proposal stake (in case a stake is required)
  stakingAccount: String
  creator: Membership!
  creatorId: String!
  createdInEvent: ProposalCreatedEvent!

  # Exact block number the proposal is supposed to be executed at (if specified)
  exactExecutionBlock: Int
  discussionThread: ProposalDiscussionThread!

  # How many prior councils have already approved the proposal (starts with 0)
  councilApprovals: Int!
  proposalStatusUpdates: [ProposalStatusUpdatedEvent!]!
  votes: [ProposalVotedEvent!]!

  # Current proposal status
  status: ProposalStatus!

  # If true then the proposal status is final and will not change form this point
  isFinalized: Boolean

  # Number of the block the current status was set at
  statusSetAtBlock: Int!

  # Time the current status was set at (based on block timestamp)
  statusSetAtTime: DateTime!
  proposalcancelledeventproposal: [ProposalCancelledEvent!]
  proposaldecisionmadeeventproposal: [ProposalDecisionMadeEvent!]
  proposalexecutedeventproposal: [ProposalExecutedEvent!]
}

union ProposalDetails =
  SignalProposalDetails
  | RuntimeUpgradeProposalDetails
  | FundingRequestProposalDetails
  | SetMaxValidatorCountProposalDetails
  | CreateWorkingGroupLeadOpeningProposalDetails
  | FillWorkingGroupLeadOpeningProposalDetails
  | UpdateWorkingGroupBudgetProposalDetails
  | DecreaseWorkingGroupLeadStakeProposalDetails
  | SlashWorkingGroupLeadProposalDetails
  | SetWorkingGroupLeadRewardProposalDetails
  | TerminateWorkingGroupLeadProposalDetails
  | AmendConstitutionProposalDetails
  | CancelWorkingGroupLeadOpeningProposalDetails
  | SetMembershipPriceProposalDetails
  | SetCouncilBudgetIncrementProposalDetails
  | SetCouncilorRewardProposalDetails
  | SetInitialInvitationBalanceProposalDetails
  | SetInitialInvitationCountProposalDetails
  | SetMembershipLeadInvitationQuotaProposalDetails
  | SetReferralCutProposalDetails
  | CreateBlogPostProposalDetails
  | EditBlogPostProposalDetails
  | LockBlogPostProposalDetails
  | UnlockBlogPostProposalDetails
  | VetoProposalDetails

type SignalProposalDetails {
  # Signal proposal content
  text: String!
}

type RuntimeUpgradeProposalDetails {
  # Runtime upgrade WASM bytecode
  newRuntimeBytecode: RuntimeWasmBytecode
}

type RuntimeWasmBytecode implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # The bytecode itself
  bytecode: Bytes!
}

# GraphQL representation of Bytes
scalar Bytes

type FundingRequestProposalDetails {
  # Related list of funding request destinations
  destinationsList: FundingRequestDestinationsList
}

type FundingRequestDestinationsList implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  phantom: Int
  destinations: [FundingRequestDestination!]!
}

type FundingRequestDestination implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # Amount of funds requested
  amount: BigInt!

  # Destination account
  account: String!
  list: FundingRequestDestinationsList!
  listId: String!
}

type SetMaxValidatorCountProposalDetails {
  # The new (propsed) max. number of active validators
  newMaxValidatorCount: Int!
}

type CreateWorkingGroupLeadOpeningProposalDetails {
  # The opening metadata
  metadata: WorkingGroupOpeningMetadata

  # Min. application / role stake amount
  stakeAmount: Float!

  # Role stake unstaking period in blocks
  unstakingPeriod: Int!

  # Initial workers' reward per block
  rewardPerBlock: Float!

  # Related working group
  group: WorkingGroup
}

type FillWorkingGroupLeadOpeningProposalDetails {
  # Lead opening to to be filled
  opening: WorkingGroupOpening

  # Selected successful application
  application: WorkingGroupApplication
}

type UpdateWorkingGroupBudgetProposalDetails {
  # Amount to increase / decrease the working group budget by (will be decudted from / appended to council budget accordingly)
  amount: Float!

  # Related working group
  group: WorkingGroup
}

type DecreaseWorkingGroupLeadStakeProposalDetails {
  # The lead that should be affected
  lead: Worker

  # Amount to decrease the stake by
  amount: Float!
}

type SlashWorkingGroupLeadProposalDetails {
  # The lead that should be affected
  lead: Worker

  # Amount to slash the stake by
  amount: Float!
}

type SetWorkingGroupLeadRewardProposalDetails {
  # The lead that should be affected
  lead: Worker

  # Lead's new (proposed) reward per block
  newRewardPerBlock: Float!
}

type TerminateWorkingGroupLeadProposalDetails {
  # Lead that's supposed to be terminated
  lead: Worker

  # Optionally - the amount to slash the lead's stake by
  slashingAmount: Float
}

type AmendConstitutionProposalDetails {
  # New (proposed) constitution text (md-formatted)
  text: String!
}

type CancelWorkingGroupLeadOpeningProposalDetails {
  # Opening to be cancelled
  opening: WorkingGroupOpening
}

type SetMembershipPriceProposalDetails {
  # New (proposed) membership price
  newPrice: Float!
}

type SetCouncilBudgetIncrementProposalDetails {
  # New (proposed) amount the council budget should be increased by per each budget period
  newAmount: Float!
}

type SetCouncilorRewardProposalDetails {
  # New (proposed) council members' reward per block
  newRewardPerBlock: Float!
}

type SetInitialInvitationBalanceProposalDetails {
  # The new (proposed) initial balance credited to controller account of an invitee (locked for transaction fee payments only)
  newInitialInvitationBalance: Float!
}

type SetInitialInvitationCountProposalDetails {
  # The new (proposed) initial invitations count for paid memberships
  newInitialInvitationsCount: Int!
}

type SetMembershipLeadInvitationQuotaProposalDetails {
  # The new (proposed) membership working group lead invitation quota
  newLeadInvitationQuota: Int!
}

type SetReferralCutProposalDetails {
  # The new (proposed) percentage of tokens diverted to referrer (from referred member's membership price).
  newReferralCut: Int!
}

type CreateBlogPostProposalDetails {
  # Blog post title
  title: String!

  # Blog post content (md-formatted)
  body: String!
}

type EditBlogPostProposalDetails {
  # The related blog post
  blogPost: String!

  # The new blog post title (if should be updated)
  newTitle: String

  # The new blog post body (if should be updated)
  newBody: String
}

type LockBlogPostProposalDetails {
  # The blog post that should be locked
  blogPost: String!
}

type UnlockBlogPostProposalDetails {
  # The blog post that should be unlocked
  blogPost: String!
}

type VetoProposalDetails {
  # Proposal to be vetoed
  proposal: Proposal
}

type ProposalCreatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  proposal: Proposal!
  proposalId: String!
}

type ProposalDiscussionThread implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  proposal: Proposal!
  proposalId: String!
  posts: [ProposalDiscussionPost!]!

  # Current thread mode
  mode: ProposalDiscussionThreadMode!
  modeChanges: [ProposalDiscussionThreadModeChangedEvent!]!
}

type ProposalDiscussionPost implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  discussionThread: ProposalDiscussionThread!
  discussionThreadId: String!
  author: Membership!
  authorId: String!

  # Current post status
  status: ProposalDiscussionPostStatus!

  # Post's md-formatted text
  text: String!
  repliesTo: ProposalDiscussionPost
  repliesToId: String
  updates: [ProposalDiscussionPostUpdatedEvent!]!
  createdInEvent: ProposalDiscussionPostCreatedEvent!
  proposaldiscussionpostrepliesTo: [ProposalDiscussionPost!]
  proposaldiscussionpostdeletedeventpost: [ProposalDiscussionPostDeletedEvent!]
}

union ProposalDiscussionPostStatus =
  ProposalDiscussionPostStatusActive
  | ProposalDiscussionPostStatusLocked
  | ProposalDiscussionPostStatusRemoved

type ProposalDiscussionPostStatusActive {
  phantom: Int
}

type ProposalDiscussionPostStatusLocked {
  # ProposalDiscussionPostDeletedEvent in case the post became locked through runtime removal
  deletedInEvent: ProposalDiscussionPostDeletedEvent
}

type ProposalDiscussionPostDeletedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  post: ProposalDiscussionPost!
  postId: String!
  actor: Membership!
  actorId: String!
}

type ProposalDiscussionPostStatusRemoved {
  # The event the post was removed in
  deletedInEvent: ProposalDiscussionPostDeletedEvent
}

type ProposalDiscussionPostUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  post: ProposalDiscussionPost!
  postId: String!

  # New post text
  text: String!
}

type ProposalDiscussionPostCreatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  post: ProposalDiscussionPost!
  postId: String!

  # Initial post text
  text: String!
}

union ProposalDiscussionThreadMode =
  ProposalDiscussionThreadModeOpen
  | ProposalDiscussionThreadModeClosed

type ProposalDiscussionThreadModeOpen {
  phantom: Int
}

type ProposalDiscussionThreadModeClosed {
  # Whitelist containing members allowed to participate in the discussion
  whitelist: ProposalDiscussionWhitelist
}

type ProposalDiscussionThreadModeChangedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  thread: ProposalDiscussionThread!
  threadId: String!

  # The new thread mode
  newMode: ProposalDiscussionThreadMode!
  actor: Membership!
  actorId: String!
}

type ProposalStatusUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  proposal: Proposal!
  proposalId: String!

  # The new proposal intermediate status (Deciding/Gracing/Dormant)
  newStatus: ProposalIntermediateStatus!
}

union ProposalIntermediateStatus =
  ProposalStatusDeciding
  | ProposalStatusGracing
  | ProposalStatusDormant

type ProposalStatusDeciding {
  # Related ProposalStatusUpdatedEvent
  proposalStatusUpdatedEvent: ProposalStatusUpdatedEvent
}

type ProposalStatusGracing {
  # Related ProposalStatusUpdatedEvent
  proposalStatusUpdatedEvent: ProposalStatusUpdatedEvent
}

type ProposalStatusDormant {
  # Related ProposalStatusUpdatedEvent
  proposalStatusUpdatedEvent: ProposalStatusUpdatedEvent
}

type ProposalVotedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  voter: Membership!
  voterId: String!

  # The kind of the vote that was casted
  voteKind: ProposalVoteKind!
  proposal: Proposal!
  proposalId: String!

  # The rationale behind the vote
  rationale: String!

  # The voting round - number representing which Deciding period the vote was casted in (starting with 1), useful when the proposal must be approved during multiple council terms (constitution > 1)
  votingRound: Int!
}

union ProposalStatus =
  ProposalStatusDeciding
  | ProposalStatusGracing
  | ProposalStatusDormant
  | ProposalStatusVetoed
  | ProposalStatusExecuted
  | ProposalStatusExecutionFailed
  | ProposalStatusSlashed
  | ProposalStatusRejected
  | ProposalStatusExpired
  | ProposalStatusCancelled
  | ProposalStatusCanceledByRuntime

type ProposalStatusVetoed {
  # Related ProposalDecisionMadeEvent event
  proposalDecisionMadeEvent: ProposalDecisionMadeEvent
}

type ProposalDecisionMadeEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  proposal: Proposal!
  proposalId: String!

  # The voting decision status
  decisionStatus: ProposalDecisionStatus!
}

union ProposalDecisionStatus =
  ProposalStatusDormant
  | ProposalStatusGracing
  | ProposalStatusVetoed
  | ProposalStatusSlashed
  | ProposalStatusRejected
  | ProposalStatusExpired
  | ProposalStatusCancelled
  | ProposalStatusCanceledByRuntime

type ProposalStatusSlashed {
  # Related ProposalDecisionMadeEvent
  proposalDecisionMadeEvent: ProposalDecisionMadeEvent
}

type ProposalStatusRejected {
  # Related ProposalDecisionMadeEvent
  proposalDecisionMadeEvent: ProposalDecisionMadeEvent
}

type ProposalStatusExpired {
  # Related ProposalDecisionMadeEvent
  proposalDecisionMadeEvent: ProposalDecisionMadeEvent
}

type ProposalStatusCancelled {
  # The related ProposalCancelledEvent
  cancelledInEvent: ProposalCancelledEvent
}

type ProposalCancelledEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  proposal: Proposal!
  proposalId: String!
}

type ProposalStatusCanceledByRuntime {
  # Related ProposalDecisionMadeEvent
  proposalDecisionMadeEvent: ProposalDecisionMadeEvent
}

type ProposalStatusExecuted {
  # Related ProposalExecutedEvent
  proposalExecutedEvent: ProposalExecutedEvent
}

type ProposalExecutedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  proposal: Proposal!
  proposalId: String!

  # The execution status
  executionStatus: ProposalExecutionStatus!
}

union ProposalExecutionStatus =
  ProposalStatusExecuted
  | ProposalStatusExecutionFailed

type ProposalStatusExecutionFailed {
  # Related ProposalExecutedEvent
  proposalExecutedEvent: ProposalExecutedEvent

  # The runtime execution error message
  errorMessage: String!
}

type StakingAccountAddedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  member: Membership!
  memberId: String!

  # New staking account in SS58 encoding.
  account: String!
}

type StakingAccountConfirmedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  member: Membership!
  memberId: String!

  # New staking account in SS58 encoding.
  account: String!
}

type StakingAccountRemovedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  member: Membership!
  memberId: String!

  # New staking account in SS58 encoding.
  account: String!
}

union WorkerStatus =
  WorkerStatusActive
  | WorkerStatusLeaving
  | WorkerStatusLeft
  | WorkerStatusTerminated

type WorkerStatusActive {
  phantom: Int
}

type WorkerStatusLeaving {
  # Related event emitted on leaving initialization
  workerStartedLeavingEvent: WorkerStartedLeavingEvent
}

type WorkerStartedLeavingEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # Optional rationale
  rationale: String
}

type WorkerStatusLeft {
  # Related event emitted on leaving initialization
  workerStartedLeavingEvent: WorkerStartedLeavingEvent

  # Related event emitted once the worker has exited the role (after the unstaking period)
  workerExitedEvent: WorkerExitedEvent
}

type WorkerExitedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!
}

type WorkerStatusTerminated {
  # Related event emitted on worker termination
  terminatedWorkerEvent: TerminatedWorkerEvent
}

type TerminatedWorkerEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # Slash amount (if any)
  penalty: BigInt

  # Optional rationale
  rationale: String
}

type RewardPaidEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # The account that recieved the reward
  rewardAccount: String!

  # Amount recieved
  amount: BigInt!

  # Type of the payment (REGULAR/MISSED)
  paymentType: RewardPaymentType!
}

type StakeSlashedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # Balance that was requested to be slashed
  requestedAmount: BigInt!

  # Balance that was actually slashed
  slashedAmount: BigInt!

  # Optional rationale
  rationale: String
}

type OpeningFilledEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  opening: WorkingGroupOpening!
  openingId: String!
  workersHired: [Worker!]!
}

type LeaderSetEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker
  workerId: String
}

type LeaderUnsetEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  leader: Worker!
  leaderId: String!
}

type NewMissedRewardLevelReachedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # New missed reward amount
  newMissedRewardAmount: BigInt!
}

type StakeDecreasedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # The amount of JOY the stake was decreased by
  amount: BigInt!
}

type StakeIncreasedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # The amount of JOY the stake was increased by
  amount: BigInt!
}

type TerminatedLeaderEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # Slash amount (if any)
  penalty: BigInt

  # Optional rationale
  rationale: String
}

type WorkerRewardAccountUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # New reward account
  newRewardAccount: String!
}

type WorkerRewardAmountUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # New worker reward per block
  newRewardPerBlock: BigInt!
}

type WorkerRoleAccountUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # New role account
  newRoleAccount: String!
}

type ApplicationWithdrawnEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  application: WorkingGroupApplication!
  applicationId: String!
}

type AppliedOnOpeningEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  opening: WorkingGroupOpening!
  openingId: String!
  application: WorkingGroupApplication!
  applicationId: String!
}

type BudgetSetEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!

  # New working group budget
  newBudget: BigInt!
}

type BudgetSpendingEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!

  # Reciever account address
  reciever: String!

  # Amount beeing spent
  amount: BigInt!

  # Optional rationale
  rationale: String
}

type OpeningAddedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  opening: WorkingGroupOpening!
  openingId: String!
}

type OpeningCanceledEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
  group: WorkingGroup!
  groupId: String!
  opening: WorkingGroupOpening!
  openingId: String!
}

union WorkingGroupOpeningStatus =
  OpeningStatusOpen
  | OpeningStatusFilled
  | OpeningStatusCancelled

type OpeningStatusOpen {
  phantom: Int
}

type OpeningStatusFilled {
  # Related event emitted after filling the opening
  openingFilledEvent: OpeningFilledEvent
}

type OpeningStatusCancelled {
  # Related event emitted on opening cancellation
  openingCanceledEvent: OpeningCanceledEvent
}

union WorkingGroupApplicationStatus =
  ApplicationStatusPending
  | ApplicationStatusAccepted
  | ApplicationStatusRejected
  | ApplicationStatusWithdrawn
  | ApplicationStatusCancelled

type ApplicationStatusPending {
  phantom: Int
}

type ApplicationStatusAccepted {
  # Related OpeningFilled event
  openingFilledEvent: OpeningFilledEvent
}

type ApplicationStatusRejected {
  # Related OpeningFilled event
  openingFilledEvent: OpeningFilledEvent
}

type ApplicationStatusWithdrawn {
  # Related ApplicationWithdrawn event
  applicationWithdrawnEvent: ApplicationWithdrawnEvent
}

type ApplicationStatusCancelled {
  # Related OpeningCanceled event
  openingCanceledEvent: OpeningCanceledEvent
}

input ApplicationFormQuestionAnswerWhereUniqueInput {
  id: ID!
}

type ApplicationFormQuestionAnswerConnection {
  totalCount: Int!
  edges: [ApplicationFormQuestionAnswerEdge!]!
  pageInfo: PageInfo!
}

type ApplicationFormQuestionAnswerEdge {
  node: ApplicationFormQuestionAnswer!
  cursor: String!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

enum ApplicationFormQuestionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  openingMetadata_ASC
  openingMetadata_DESC
  question_ASC
  question_DESC
  type_ASC
  type_DESC
  index_ASC
  index_DESC
}

input ApplicationFormQuestionWhereUniqueInput {
  id: ID!
}

type ApplicationFormQuestionConnection {
  totalCount: Int!
  edges: [ApplicationFormQuestionEdge!]!
  pageInfo: PageInfo!
}

type ApplicationFormQuestionEdge {
  node: ApplicationFormQuestion!
  cursor: String!
}

enum ApplicationWithdrawnEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  application_ASC
  application_DESC
}

input ApplicationWithdrawnEventWhereUniqueInput {
  id: ID!
}

type ApplicationWithdrawnEventConnection {
  totalCount: Int!
  edges: [ApplicationWithdrawnEventEdge!]!
  pageInfo: PageInfo!
}

type ApplicationWithdrawnEventEdge {
  node: ApplicationWithdrawnEvent!
  cursor: String!
}

enum AppliedOnOpeningEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  opening_ASC
  opening_DESC
  application_ASC
  application_DESC
}

input AppliedOnOpeningEventWhereUniqueInput {
  id: ID!
}

type AppliedOnOpeningEventConnection {
  totalCount: Int!
  edges: [AppliedOnOpeningEventEdge!]!
  pageInfo: PageInfo!
}

type AppliedOnOpeningEventEdge {
  node: AppliedOnOpeningEvent!
  cursor: String!
}

enum BudgetSetEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  newBudget_ASC
  newBudget_DESC
}

input BudgetSetEventWhereUniqueInput {
  id: ID!
}

type BudgetSetEventConnection {
  totalCount: Int!
  edges: [BudgetSetEventEdge!]!
  pageInfo: PageInfo!
}

type BudgetSetEventEdge {
  node: BudgetSetEvent!
  cursor: String!
}

enum BudgetSpendingEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  reciever_ASC
  reciever_DESC
  amount_ASC
  amount_DESC
  rationale_ASC
  rationale_DESC
}

input BudgetSpendingEventWhereUniqueInput {
  id: ID!
}

type BudgetSpendingEventConnection {
  totalCount: Int!
  edges: [BudgetSpendingEventEdge!]!
  pageInfo: PageInfo!
}

type BudgetSpendingEventEdge {
  node: BudgetSpendingEvent!
  cursor: String!
}

enum CategoryArchivalStatusUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  category_ASC
  category_DESC
  newArchivalStatus_ASC
  newArchivalStatus_DESC
  actor_ASC
  actor_DESC
}

input CategoryArchivalStatusUpdatedEventWhereUniqueInput {
  id: ID!
}

type CategoryArchivalStatusUpdatedEventConnection {
  totalCount: Int!
  edges: [CategoryArchivalStatusUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type CategoryArchivalStatusUpdatedEventEdge {
  node: CategoryArchivalStatusUpdatedEvent!
  cursor: String!
}

enum CategoryCreatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  category_ASC
  category_DESC
}

input CategoryCreatedEventWhereUniqueInput {
  id: ID!
}

type CategoryCreatedEventConnection {
  totalCount: Int!
  edges: [CategoryCreatedEventEdge!]!
  pageInfo: PageInfo!
}

type CategoryCreatedEventEdge {
  node: CategoryCreatedEvent!
  cursor: String!
}

enum CategoryDeletedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  category_ASC
  category_DESC
  actor_ASC
  actor_DESC
}

input CategoryDeletedEventWhereUniqueInput {
  id: ID!
}

type CategoryDeletedEventConnection {
  totalCount: Int!
  edges: [CategoryDeletedEventEdge!]!
  pageInfo: PageInfo!
}

type CategoryDeletedEventEdge {
  node: CategoryDeletedEvent!
  cursor: String!
}

enum CategoryMembershipOfModeratorUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  moderator_ASC
  moderator_DESC
  category_ASC
  category_DESC
  newCanModerateValue_ASC
  newCanModerateValue_DESC
}

input CategoryMembershipOfModeratorUpdatedEventWhereUniqueInput {
  id: ID!
}

type CategoryMembershipOfModeratorUpdatedEventConnection {
  totalCount: Int!
  edges: [CategoryMembershipOfModeratorUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type CategoryMembershipOfModeratorUpdatedEventEdge {
  node: CategoryMembershipOfModeratorUpdatedEvent!
  cursor: String!
}

enum CategoryStickyThreadUpdateEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  category_ASC
  category_DESC
  actor_ASC
  actor_DESC
}

input CategoryStickyThreadUpdateEventWhereUniqueInput {
  id: ID!
}

type CategoryStickyThreadUpdateEventConnection {
  totalCount: Int!
  edges: [CategoryStickyThreadUpdateEventEdge!]!
  pageInfo: PageInfo!
}

type CategoryStickyThreadUpdateEventEdge {
  node: CategoryStickyThreadUpdateEvent!
  cursor: String!
}

enum ChannelCategoryOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  name_ASC
  name_DESC
  createdInBlock_ASC
  createdInBlock_DESC
}

input ChannelCategoryWhereUniqueInput {
  id: ID!
}

type ChannelCategoryConnection {
  totalCount: Int!
  edges: [ChannelCategoryEdge!]!
  pageInfo: PageInfo!
}

type ChannelCategoryEdge {
  node: ChannelCategory!
  cursor: String!
}

enum ChannelOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
  category_ASC
  category_DESC
  rewardAccount_ASC
  rewardAccount_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  isPublic_ASC
  isPublic_DESC
  isCensored_ASC
  isCensored_DESC
  language_ASC
  language_DESC
  createdInBlock_ASC
  createdInBlock_DESC
}

input ChannelWhereUniqueInput {
  id: ID!
}

type ChannelConnection {
  totalCount: Int!
  edges: [ChannelEdge!]!
  pageInfo: PageInfo!
}

type ChannelEdge {
  node: Channel!
  cursor: String!
}

enum CuratorGroupOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  isActive_ASC
  isActive_DESC
}

input CuratorGroupWhereUniqueInput {
  id: ID!
}

type CuratorGroupConnection {
  totalCount: Int!
  edges: [CuratorGroupEdge!]!
  pageInfo: PageInfo!
}

type CuratorGroupEdge {
  node: CuratorGroup!
  cursor: String!
}

enum DataObjectOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  createdInBlock_ASC
  createdInBlock_DESC
  typeId_ASC
  typeId_DESC
  size_ASC
  size_DESC
  liaison_ASC
  liaison_DESC
  liaisonJudgement_ASC
  liaisonJudgement_DESC
  ipfsContentId_ASC
  ipfsContentId_DESC
  joystreamContentId_ASC
  joystreamContentId_DESC
}

input DataObjectWhereUniqueInput {
  id: ID!
}

type DataObjectConnection {
  totalCount: Int!
  edges: [DataObjectEdge!]!
  pageInfo: PageInfo!
}

type DataObjectEdge {
  node: DataObject!
  cursor: String!
}

input EventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  type_eq: EventTypeOptions
  type_in: [EventTypeOptions!]
  AND: [EventWhereInput!]
  OR: [EventWhereInput!]
}

enum EventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  type_ASC
  type_DESC
}

enum ForumCategoryOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  parent_ASC
  parent_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
}

input ForumCategoryWhereUniqueInput {
  id: ID!
}

type ForumCategoryConnection {
  totalCount: Int!
  edges: [ForumCategoryEdge!]!
  pageInfo: PageInfo!
}

type ForumCategoryEdge {
  node: ForumCategory!
  cursor: String!
}

enum ForumPollAlternativeOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  index_ASC
  index_DESC
  poll_ASC
  poll_DESC
  text_ASC
  text_DESC
}

input ForumPollAlternativeWhereUniqueInput {
  id: ID!
}

type ForumPollAlternativeConnection {
  totalCount: Int!
  edges: [ForumPollAlternativeEdge!]!
  pageInfo: PageInfo!
}

type ForumPollAlternativeEdge {
  node: ForumPollAlternative!
  cursor: String!
}

enum ForumPollOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  thread_ASC
  thread_DESC
  description_ASC
  description_DESC
  endTime_ASC
  endTime_DESC
}

input ForumPollWhereUniqueInput {
  id: ID!
}

type ForumPollConnection {
  totalCount: Int!
  edges: [ForumPollEdge!]!
  pageInfo: PageInfo!
}

type ForumPollEdge {
  node: ForumPoll!
  cursor: String!
}

enum ForumPostReactionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  member_ASC
  member_DESC
  post_ASC
  post_DESC
  reaction_ASC
  reaction_DESC
}

input ForumPostReactionWhereUniqueInput {
  id: ID!
}

type ForumPostReactionConnection {
  totalCount: Int!
  edges: [ForumPostReactionEdge!]!
  pageInfo: PageInfo!
}

type ForumPostReactionEdge {
  node: ForumPostReaction!
  cursor: String!
}

enum ForumPostOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  author_ASC
  author_DESC
  thread_ASC
  thread_DESC
  text_ASC
  text_DESC
  repliesTo_ASC
  repliesTo_DESC
  deletedInEvent_ASC
  deletedInEvent_DESC
}

input ForumPostWhereUniqueInput {
  id: ID!
}

type ForumPostConnection {
  totalCount: Int!
  edges: [ForumPostEdge!]!
  pageInfo: PageInfo!
}

type ForumPostEdge {
  node: ForumPost!
  cursor: String!
}

enum ForumThreadTagOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  visibleThreadsCount_ASC
  visibleThreadsCount_DESC
}

input ForumThreadTagWhereUniqueInput {
  id: ID!
}

type ForumThreadTagConnection {
  totalCount: Int!
  edges: [ForumThreadTagEdge!]!
  pageInfo: PageInfo!
}

type ForumThreadTagEdge {
  node: ForumThreadTag!
  cursor: String!
}

enum ForumThreadOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  author_ASC
  author_DESC
  category_ASC
  category_DESC
  title_ASC
  title_DESC
  initialPost_ASC
  initialPost_DESC
  visiblePostsCount_ASC
  visiblePostsCount_DESC
  isSticky_ASC
  isSticky_DESC
}

input ForumThreadWhereUniqueInput {
  id: ID!
}

type ForumThreadConnection {
  totalCount: Int!
  edges: [ForumThreadEdge!]!
  pageInfo: PageInfo!
}

type ForumThreadEdge {
  node: ForumThread!
  cursor: String!
}

input FundingRequestDestinationWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  account_eq: String
  account_contains: String
  account_startsWith: String
  account_endsWith: String
  account_in: [String!]
  list: FundingRequestDestinationsListWhereInput
  AND: [FundingRequestDestinationWhereInput!]
  OR: [FundingRequestDestinationWhereInput!]
}

input FundingRequestDestinationsListWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  phantom_eq: Int
  phantom_gt: Int
  phantom_gte: Int
  phantom_lt: Int
  phantom_lte: Int
  phantom_in: [Int!]
  destinations_none: FundingRequestDestinationWhereInput
  destinations_some: FundingRequestDestinationWhereInput
  destinations_every: FundingRequestDestinationWhereInput
  AND: [FundingRequestDestinationsListWhereInput!]
  OR: [FundingRequestDestinationsListWhereInput!]
}

enum FundingRequestDestinationOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  amount_ASC
  amount_DESC
  account_ASC
  account_DESC
  list_ASC
  list_DESC
}

input FundingRequestDestinationWhereUniqueInput {
  id: ID!
}

type FundingRequestDestinationConnection {
  totalCount: Int!
  edges: [FundingRequestDestinationEdge!]!
  pageInfo: PageInfo!
}

type FundingRequestDestinationEdge {
  node: FundingRequestDestination!
  cursor: String!
}

enum FundingRequestDestinationsListOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  phantom_ASC
  phantom_DESC
}

input FundingRequestDestinationsListWhereUniqueInput {
  id: ID!
}

type FundingRequestDestinationsListConnection {
  totalCount: Int!
  edges: [FundingRequestDestinationsListEdge!]!
  pageInfo: PageInfo!
}

type FundingRequestDestinationsListEdge {
  node: FundingRequestDestinationsList!
  cursor: String!
}

input InitialInvitationBalanceUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newInitialBalance_eq: BigInt
  newInitialBalance_gt: BigInt
  newInitialBalance_gte: BigInt
  newInitialBalance_lt: BigInt
  newInitialBalance_lte: BigInt
  newInitialBalance_in: [BigInt!]
  AND: [InitialInvitationBalanceUpdatedEventWhereInput!]
  OR: [InitialInvitationBalanceUpdatedEventWhereInput!]
}

enum InitialInvitationBalanceUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  newInitialBalance_ASC
  newInitialBalance_DESC
}

type InitialInvitationBalanceUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # New initial invitation balance.
  newInitialBalance: BigInt!
}

input InitialInvitationBalanceUpdatedEventWhereUniqueInput {
  id: ID!
}

type InitialInvitationBalanceUpdatedEventConnection {
  totalCount: Int!
  edges: [InitialInvitationBalanceUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type InitialInvitationBalanceUpdatedEventEdge {
  node: InitialInvitationBalanceUpdatedEvent!
  cursor: String!
}

input InitialInvitationCountUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newInitialInvitationCount_eq: Int
  newInitialInvitationCount_gt: Int
  newInitialInvitationCount_gte: Int
  newInitialInvitationCount_lt: Int
  newInitialInvitationCount_lte: Int
  newInitialInvitationCount_in: [Int!]
  AND: [InitialInvitationCountUpdatedEventWhereInput!]
  OR: [InitialInvitationCountUpdatedEventWhereInput!]
}

enum InitialInvitationCountUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  newInitialInvitationCount_ASC
  newInitialInvitationCount_DESC
}

type InitialInvitationCountUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # New initial invitation count for members.
  newInitialInvitationCount: Int!
}

input InitialInvitationCountUpdatedEventWhereUniqueInput {
  id: ID!
}

type InitialInvitationCountUpdatedEventConnection {
  totalCount: Int!
  edges: [InitialInvitationCountUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type InitialInvitationCountUpdatedEventEdge {
  node: InitialInvitationCountUpdatedEvent!
  cursor: String!
}

enum InvitesTransferredEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  sourceMember_ASC
  sourceMember_DESC
  targetMember_ASC
  targetMember_DESC
  numberOfInvites_ASC
  numberOfInvites_DESC
}

input InvitesTransferredEventWhereUniqueInput {
  id: ID!
}

type InvitesTransferredEventConnection {
  totalCount: Int!
  edges: [InvitesTransferredEventEdge!]!
  pageInfo: PageInfo!
}

type InvitesTransferredEventEdge {
  node: InvitesTransferredEvent!
  cursor: String!
}

enum LanguageOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  iso_ASC
  iso_DESC
  createdInBlock_ASC
  createdInBlock_DESC
}

input LanguageWhereUniqueInput {
  id: ID!
}

type LanguageConnection {
  totalCount: Int!
  edges: [LanguageEdge!]!
  pageInfo: PageInfo!
}

type LanguageEdge {
  node: Language!
  cursor: String!
}

input LeaderInvitationQuotaUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newInvitationQuota_eq: Int
  newInvitationQuota_gt: Int
  newInvitationQuota_gte: Int
  newInvitationQuota_lt: Int
  newInvitationQuota_lte: Int
  newInvitationQuota_in: [Int!]
  AND: [LeaderInvitationQuotaUpdatedEventWhereInput!]
  OR: [LeaderInvitationQuotaUpdatedEventWhereInput!]
}

enum LeaderInvitationQuotaUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  newInvitationQuota_ASC
  newInvitationQuota_DESC
}

type LeaderInvitationQuotaUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # New quota.
  newInvitationQuota: Int!
}

input LeaderInvitationQuotaUpdatedEventWhereUniqueInput {
  id: ID!
}

type LeaderInvitationQuotaUpdatedEventConnection {
  totalCount: Int!
  edges: [LeaderInvitationQuotaUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type LeaderInvitationQuotaUpdatedEventEdge {
  node: LeaderInvitationQuotaUpdatedEvent!
  cursor: String!
}

enum LeaderSetEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
}

input LeaderSetEventWhereUniqueInput {
  id: ID!
}

type LeaderSetEventConnection {
  totalCount: Int!
  edges: [LeaderSetEventEdge!]!
  pageInfo: PageInfo!
}

type LeaderSetEventEdge {
  node: LeaderSetEvent!
  cursor: String!
}

enum LeaderUnsetEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  leader_ASC
  leader_DESC
}

input LeaderUnsetEventWhereUniqueInput {
  id: ID!
}

type LeaderUnsetEventConnection {
  totalCount: Int!
  edges: [LeaderUnsetEventEdge!]!
  pageInfo: PageInfo!
}

type LeaderUnsetEventEdge {
  node: LeaderUnsetEvent!
  cursor: String!
}

enum LicenseOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  code_ASC
  code_DESC
  attribution_ASC
  attribution_DESC
  customText_ASC
  customText_DESC
}

input LicenseWhereUniqueInput {
  id: ID!
}

type LicenseConnection {
  totalCount: Int!
  edges: [LicenseEdge!]!
  pageInfo: PageInfo!
}

type LicenseEdge {
  node: License!
  cursor: String!
}

enum MemberAccountsUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  newRootAccount_ASC
  newRootAccount_DESC
  newControllerAccount_ASC
  newControllerAccount_DESC
}

input MemberAccountsUpdatedEventWhereUniqueInput {
  id: ID!
}

type MemberAccountsUpdatedEventConnection {
  totalCount: Int!
  edges: [MemberAccountsUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type MemberAccountsUpdatedEventEdge {
  node: MemberAccountsUpdatedEvent!
  cursor: String!
}

enum MemberInvitedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  invitingMember_ASC
  invitingMember_DESC
  newMember_ASC
  newMember_DESC
  rootAccount_ASC
  rootAccount_DESC
  controllerAccount_ASC
  controllerAccount_DESC
  handle_ASC
  handle_DESC
  metadata_ASC
  metadata_DESC
}

input MemberInvitedEventWhereUniqueInput {
  id: ID!
}

type MemberInvitedEventConnection {
  totalCount: Int!
  edges: [MemberInvitedEventEdge!]!
  pageInfo: PageInfo!
}

type MemberInvitedEventEdge {
  node: MemberInvitedEvent!
  cursor: String!
}

enum MemberMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  name_ASC
  name_DESC
  avatar_ASC
  avatar_DESC
  about_ASC
  about_DESC
}

input MemberMetadataWhereUniqueInput {
  id: ID!
}

type MemberMetadataConnection {
  totalCount: Int!
  edges: [MemberMetadataEdge!]!
  pageInfo: PageInfo!
}

type MemberMetadataEdge {
  node: MemberMetadata!
  cursor: String!
}

enum MemberProfileUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  newHandle_ASC
  newHandle_DESC
  newMetadata_ASC
  newMetadata_DESC
}

input MemberProfileUpdatedEventWhereUniqueInput {
  id: ID!
}

type MemberProfileUpdatedEventConnection {
  totalCount: Int!
  edges: [MemberProfileUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type MemberProfileUpdatedEventEdge {
  node: MemberProfileUpdatedEvent!
  cursor: String!
}

enum MemberVerificationStatusUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  worker_ASC
  worker_DESC
  isVerified_ASC
  isVerified_DESC
}

input MemberVerificationStatusUpdatedEventWhereUniqueInput {
  id: ID!
}

type MemberVerificationStatusUpdatedEventConnection {
  totalCount: Int!
  edges: [MemberVerificationStatusUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type MemberVerificationStatusUpdatedEventEdge {
  node: MemberVerificationStatusUpdatedEvent!
  cursor: String!
}

enum MembershipBoughtEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  newMember_ASC
  newMember_DESC
  rootAccount_ASC
  rootAccount_DESC
  controllerAccount_ASC
  controllerAccount_DESC
  handle_ASC
  handle_DESC
  metadata_ASC
  metadata_DESC
  referrer_ASC
  referrer_DESC
}

input MembershipBoughtEventWhereUniqueInput {
  id: ID!
}

type MembershipBoughtEventConnection {
  totalCount: Int!
  edges: [MembershipBoughtEventEdge!]!
  pageInfo: PageInfo!
}

type MembershipBoughtEventEdge {
  node: MembershipBoughtEvent!
  cursor: String!
}

input MembershipPriceUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newPrice_eq: BigInt
  newPrice_gt: BigInt
  newPrice_gte: BigInt
  newPrice_lt: BigInt
  newPrice_lte: BigInt
  newPrice_in: [BigInt!]
  AND: [MembershipPriceUpdatedEventWhereInput!]
  OR: [MembershipPriceUpdatedEventWhereInput!]
}

enum MembershipPriceUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  newPrice_ASC
  newPrice_DESC
}

type MembershipPriceUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # The new membership price.
  newPrice: BigInt!
}

input MembershipPriceUpdatedEventWhereUniqueInput {
  id: ID!
}

type MembershipPriceUpdatedEventConnection {
  totalCount: Int!
  edges: [MembershipPriceUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type MembershipPriceUpdatedEventEdge {
  node: MembershipPriceUpdatedEvent!
  cursor: String!
}

input MembershipSystemSnapshotWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  snapshotBlock_eq: Int
  snapshotBlock_gt: Int
  snapshotBlock_gte: Int
  snapshotBlock_lt: Int
  snapshotBlock_lte: Int
  snapshotBlock_in: [Int!]
  defaultInviteCount_eq: Int
  defaultInviteCount_gt: Int
  defaultInviteCount_gte: Int
  defaultInviteCount_lt: Int
  defaultInviteCount_lte: Int
  defaultInviteCount_in: [Int!]
  membershipPrice_eq: BigInt
  membershipPrice_gt: BigInt
  membershipPrice_gte: BigInt
  membershipPrice_lt: BigInt
  membershipPrice_lte: BigInt
  membershipPrice_in: [BigInt!]
  referralCut_eq: Int
  referralCut_gt: Int
  referralCut_gte: Int
  referralCut_lt: Int
  referralCut_lte: Int
  referralCut_in: [Int!]
  invitedInitialBalance_eq: BigInt
  invitedInitialBalance_gt: BigInt
  invitedInitialBalance_gte: BigInt
  invitedInitialBalance_lt: BigInt
  invitedInitialBalance_lte: BigInt
  invitedInitialBalance_in: [BigInt!]
  AND: [MembershipSystemSnapshotWhereInput!]
  OR: [MembershipSystemSnapshotWhereInput!]
}

enum MembershipSystemSnapshotOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  snapshotBlock_ASC
  snapshotBlock_DESC
  defaultInviteCount_ASC
  defaultInviteCount_DESC
  membershipPrice_ASC
  membershipPrice_DESC
  referralCut_ASC
  referralCut_DESC
  invitedInitialBalance_ASC
  invitedInitialBalance_DESC
}

type MembershipSystemSnapshot implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # The snapshot block number
  snapshotBlock: Int!

  # Initial invitation count of a new member.
  defaultInviteCount: Int!

  # Current price to buy a membership.
  membershipPrice: BigInt!

  # Percentage of tokens diverted to invitor.
  referralCut: Int!

  # The initial, locked, balance credited to controller account of invitee.
  invitedInitialBalance: BigInt!
}

input MembershipSystemSnapshotWhereUniqueInput {
  id: ID!
}

type MembershipSystemSnapshotConnection {
  totalCount: Int!
  edges: [MembershipSystemSnapshotEdge!]!
  pageInfo: PageInfo!
}

type MembershipSystemSnapshotEdge {
  node: MembershipSystemSnapshot!
  cursor: String!
}

enum MembershipOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  handle_ASC
  handle_DESC
  metadata_ASC
  metadata_DESC
  controllerAccount_ASC
  controllerAccount_DESC
  rootAccount_ASC
  rootAccount_DESC
  isVerified_ASC
  isVerified_DESC
  inviteCount_ASC
  inviteCount_DESC
  invitedBy_ASC
  invitedBy_DESC
  referredBy_ASC
  referredBy_DESC
  isFoundingMember_ASC
  isFoundingMember_DESC
}

input MembershipWhereUniqueInput {
  id: ID
  handle: String
}

type MembershipConnection {
  totalCount: Int!
  edges: [MembershipEdge!]!
  pageInfo: PageInfo!
}

type MembershipEdge {
  node: Membership!
  cursor: String!
}

enum NewMissedRewardLevelReachedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  newMissedRewardAmount_ASC
  newMissedRewardAmount_DESC
}

input NewMissedRewardLevelReachedEventWhereUniqueInput {
  id: ID!
}

type NewMissedRewardLevelReachedEventConnection {
  totalCount: Int!
  edges: [NewMissedRewardLevelReachedEventEdge!]!
  pageInfo: PageInfo!
}

type NewMissedRewardLevelReachedEventEdge {
  node: NewMissedRewardLevelReachedEvent!
  cursor: String!
}

enum OpeningAddedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  opening_ASC
  opening_DESC
}

input OpeningAddedEventWhereUniqueInput {
  id: ID!
}

type OpeningAddedEventConnection {
  totalCount: Int!
  edges: [OpeningAddedEventEdge!]!
  pageInfo: PageInfo!
}

type OpeningAddedEventEdge {
  node: OpeningAddedEvent!
  cursor: String!
}

enum OpeningCanceledEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  opening_ASC
  opening_DESC
}

input OpeningCanceledEventWhereUniqueInput {
  id: ID!
}

type OpeningCanceledEventConnection {
  totalCount: Int!
  edges: [OpeningCanceledEventEdge!]!
  pageInfo: PageInfo!
}

type OpeningCanceledEventEdge {
  node: OpeningCanceledEvent!
  cursor: String!
}

enum OpeningFilledEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  opening_ASC
  opening_DESC
}

input OpeningFilledEventWhereUniqueInput {
  id: ID!
}

type OpeningFilledEventConnection {
  totalCount: Int!
  edges: [OpeningFilledEventEdge!]!
  pageInfo: PageInfo!
}

type OpeningFilledEventEdge {
  node: OpeningFilledEvent!
  cursor: String!
}

enum PostAddedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  isEditable_ASC
  isEditable_DESC
  text_ASC
  text_DESC
}

input PostAddedEventWhereUniqueInput {
  id: ID!
}

type PostAddedEventConnection {
  totalCount: Int!
  edges: [PostAddedEventEdge!]!
  pageInfo: PageInfo!
}

type PostAddedEventEdge {
  node: PostAddedEvent!
  cursor: String!
}

enum PostDeletedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  actor_ASC
  actor_DESC
  rationale_ASC
  rationale_DESC
}

input PostDeletedEventWhereUniqueInput {
  id: ID!
}

type PostDeletedEventConnection {
  totalCount: Int!
  edges: [PostDeletedEventEdge!]!
  pageInfo: PageInfo!
}

type PostDeletedEventEdge {
  node: PostDeletedEvent!
  cursor: String!
}

enum PostModeratedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  rationale_ASC
  rationale_DESC
  actor_ASC
  actor_DESC
}

input PostModeratedEventWhereUniqueInput {
  id: ID!
}

type PostModeratedEventConnection {
  totalCount: Int!
  edges: [PostModeratedEventEdge!]!
  pageInfo: PageInfo!
}

type PostModeratedEventEdge {
  node: PostModeratedEvent!
  cursor: String!
}

enum PostReactedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  reactingMember_ASC
  reactingMember_DESC
}

input PostReactedEventWhereUniqueInput {
  id: ID!
}

type PostReactedEventConnection {
  totalCount: Int!
  edges: [PostReactedEventEdge!]!
  pageInfo: PageInfo!
}

type PostReactedEventEdge {
  node: PostReactedEvent!
  cursor: String!
}

enum PostTextUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  newText_ASC
  newText_DESC
}

input PostTextUpdatedEventWhereUniqueInput {
  id: ID!
}

type PostTextUpdatedEventConnection {
  totalCount: Int!
  edges: [PostTextUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type PostTextUpdatedEventEdge {
  node: PostTextUpdatedEvent!
  cursor: String!
}

enum ProposalCancelledEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  proposal_ASC
  proposal_DESC
}

input ProposalCancelledEventWhereUniqueInput {
  id: ID!
}

type ProposalCancelledEventConnection {
  totalCount: Int!
  edges: [ProposalCancelledEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalCancelledEventEdge {
  node: ProposalCancelledEvent!
  cursor: String!
}

enum ProposalCreatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  proposal_ASC
  proposal_DESC
}

input ProposalCreatedEventWhereUniqueInput {
  id: ID!
}

type ProposalCreatedEventConnection {
  totalCount: Int!
  edges: [ProposalCreatedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalCreatedEventEdge {
  node: ProposalCreatedEvent!
  cursor: String!
}

enum ProposalDecisionMadeEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  proposal_ASC
  proposal_DESC
}

input ProposalDecisionMadeEventWhereUniqueInput {
  id: ID!
}

type ProposalDecisionMadeEventConnection {
  totalCount: Int!
  edges: [ProposalDecisionMadeEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalDecisionMadeEventEdge {
  node: ProposalDecisionMadeEvent!
  cursor: String!
}

enum ProposalDiscussionPostCreatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  text_ASC
  text_DESC
}

input ProposalDiscussionPostCreatedEventWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionPostCreatedEventConnection {
  totalCount: Int!
  edges: [ProposalDiscussionPostCreatedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionPostCreatedEventEdge {
  node: ProposalDiscussionPostCreatedEvent!
  cursor: String!
}

enum ProposalDiscussionPostDeletedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  actor_ASC
  actor_DESC
}

input ProposalDiscussionPostDeletedEventWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionPostDeletedEventConnection {
  totalCount: Int!
  edges: [ProposalDiscussionPostDeletedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionPostDeletedEventEdge {
  node: ProposalDiscussionPostDeletedEvent!
  cursor: String!
}

enum ProposalDiscussionPostUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  text_ASC
  text_DESC
}

input ProposalDiscussionPostUpdatedEventWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionPostUpdatedEventConnection {
  totalCount: Int!
  edges: [ProposalDiscussionPostUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionPostUpdatedEventEdge {
  node: ProposalDiscussionPostUpdatedEvent!
  cursor: String!
}

enum ProposalDiscussionPostOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  discussionThread_ASC
  discussionThread_DESC
  author_ASC
  author_DESC
  text_ASC
  text_DESC
  repliesTo_ASC
  repliesTo_DESC
}

input ProposalDiscussionPostWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionPostConnection {
  totalCount: Int!
  edges: [ProposalDiscussionPostEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionPostEdge {
  node: ProposalDiscussionPost!
  cursor: String!
}

enum ProposalDiscussionThreadModeChangedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  thread_ASC
  thread_DESC
  actor_ASC
  actor_DESC
}

input ProposalDiscussionThreadModeChangedEventWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionThreadModeChangedEventConnection {
  totalCount: Int!
  edges: [ProposalDiscussionThreadModeChangedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionThreadModeChangedEventEdge {
  node: ProposalDiscussionThreadModeChangedEvent!
  cursor: String!
}

enum ProposalDiscussionThreadOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  proposal_ASC
  proposal_DESC
}

input ProposalDiscussionThreadWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionThreadConnection {
  totalCount: Int!
  edges: [ProposalDiscussionThreadEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionThreadEdge {
  node: ProposalDiscussionThread!
  cursor: String!
}

enum ProposalDiscussionWhitelistOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  phantom_ASC
  phantom_DESC
}

input ProposalDiscussionWhitelistWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionWhitelistConnection {
  totalCount: Int!
  edges: [ProposalDiscussionWhitelistEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionWhitelistEdge {
  node: ProposalDiscussionWhitelist!
  cursor: String!
}

enum ProposalExecutedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  proposal_ASC
  proposal_DESC
}

input ProposalExecutedEventWhereUniqueInput {
  id: ID!
}

type ProposalExecutedEventConnection {
  totalCount: Int!
  edges: [ProposalExecutedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalExecutedEventEdge {
  node: ProposalExecutedEvent!
  cursor: String!
}

enum ProposalStatusUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  proposal_ASC
  proposal_DESC
}

input ProposalStatusUpdatedEventWhereUniqueInput {
  id: ID!
}

type ProposalStatusUpdatedEventConnection {
  totalCount: Int!
  edges: [ProposalStatusUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalStatusUpdatedEventEdge {
  node: ProposalStatusUpdatedEvent!
  cursor: String!
}

enum ProposalVotedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  voter_ASC
  voter_DESC
  voteKind_ASC
  voteKind_DESC
  proposal_ASC
  proposal_DESC
  rationale_ASC
  rationale_DESC
  votingRound_ASC
  votingRound_DESC
}

input ProposalVotedEventWhereUniqueInput {
  id: ID!
}

type ProposalVotedEventConnection {
  totalCount: Int!
  edges: [ProposalVotedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalVotedEventEdge {
  node: ProposalVotedEvent!
  cursor: String!
}

enum ProposalOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  stakingAccount_ASC
  stakingAccount_DESC
  creator_ASC
  creator_DESC
  exactExecutionBlock_ASC
  exactExecutionBlock_DESC
  councilApprovals_ASC
  councilApprovals_DESC
  isFinalized_ASC
  isFinalized_DESC
  statusSetAtBlock_ASC
  statusSetAtBlock_DESC
  statusSetAtTime_ASC
  statusSetAtTime_DESC
}

input ProposalWhereUniqueInput {
  id: ID!
}

type ProposalConnection {
  totalCount: Int!
  edges: [ProposalEdge!]!
  pageInfo: PageInfo!
}

type ProposalEdge {
  node: Proposal!
  cursor: String!
}

type ChannelCategoriesByNameFTSOutput {
  item: ChannelCategoriesByNameSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union ChannelCategoriesByNameSearchResult = ChannelCategory

type MembersByHandleFTSOutput {
  item: MembersByHandleSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union MembersByHandleSearchResult = Membership

type PostsByTextFTSOutput {
  item: PostsByTextSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union PostsByTextSearchResult = ForumPost

type ProposalsByDescriptionFTSOutput {
  item: ProposalsByDescriptionSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union ProposalsByDescriptionSearchResult = Proposal

type ProposalsByTitleFTSOutput {
  item: ProposalsByTitleSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union ProposalsByTitleSearchResult = Proposal

type SearchFTSOutput {
  item: SearchSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union SearchSearchResult = Channel | Video

type ThreadsByTitleFTSOutput {
  item: ThreadsByTitleSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union ThreadsByTitleSearchResult = ForumThread

type VideoCategoriesByNameFTSOutput {
  item: VideoCategoriesByNameSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union VideoCategoriesByNameSearchResult = VideoCategory

input ReferralCutUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newValue_eq: Int
  newValue_gt: Int
  newValue_gte: Int
  newValue_lt: Int
  newValue_lte: Int
  newValue_in: [Int!]
  AND: [ReferralCutUpdatedEventWhereInput!]
  OR: [ReferralCutUpdatedEventWhereInput!]
}

enum ReferralCutUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  newValue_ASC
  newValue_DESC
}

type ReferralCutUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!

  # New cut value.
  newValue: Int!
}

input ReferralCutUpdatedEventWhereUniqueInput {
  id: ID!
}

type ReferralCutUpdatedEventConnection {
  totalCount: Int!
  edges: [ReferralCutUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type ReferralCutUpdatedEventEdge {
  node: ReferralCutUpdatedEvent!
  cursor: String!
}

enum RewardPaidEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  rewardAccount_ASC
  rewardAccount_DESC
  amount_ASC
  amount_DESC
  paymentType_ASC
  paymentType_DESC
}

input RewardPaidEventWhereUniqueInput {
  id: ID!
}

type RewardPaidEventConnection {
  totalCount: Int!
  edges: [RewardPaidEventEdge!]!
  pageInfo: PageInfo!
}

type RewardPaidEventEdge {
  node: RewardPaidEvent!
  cursor: String!
}

input RuntimeWasmBytecodeWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  bytecode_eq: Bytes
  bytecode_in: [Bytes!]
  AND: [RuntimeWasmBytecodeWhereInput!]
  OR: [RuntimeWasmBytecodeWhereInput!]
}

enum RuntimeWasmBytecodeOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  bytecode_ASC
  bytecode_DESC
}

input RuntimeWasmBytecodeWhereUniqueInput {
  id: ID!
}

type RuntimeWasmBytecodeConnection {
  totalCount: Int!
  edges: [RuntimeWasmBytecodeEdge!]!
  pageInfo: PageInfo!
}

type RuntimeWasmBytecodeEdge {
  node: RuntimeWasmBytecode!
  cursor: String!
}

enum StakeDecreasedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  amount_ASC
  amount_DESC
}

input StakeDecreasedEventWhereUniqueInput {
  id: ID!
}

type StakeDecreasedEventConnection {
  totalCount: Int!
  edges: [StakeDecreasedEventEdge!]!
  pageInfo: PageInfo!
}

type StakeDecreasedEventEdge {
  node: StakeDecreasedEvent!
  cursor: String!
}

enum StakeIncreasedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  amount_ASC
  amount_DESC
}

input StakeIncreasedEventWhereUniqueInput {
  id: ID!
}

type StakeIncreasedEventConnection {
  totalCount: Int!
  edges: [StakeIncreasedEventEdge!]!
  pageInfo: PageInfo!
}

type StakeIncreasedEventEdge {
  node: StakeIncreasedEvent!
  cursor: String!
}

enum StakeSlashedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  requestedAmount_ASC
  requestedAmount_DESC
  slashedAmount_ASC
  slashedAmount_DESC
  rationale_ASC
  rationale_DESC
}

input StakeSlashedEventWhereUniqueInput {
  id: ID!
}

type StakeSlashedEventConnection {
  totalCount: Int!
  edges: [StakeSlashedEventEdge!]!
  pageInfo: PageInfo!
}

type StakeSlashedEventEdge {
  node: StakeSlashedEvent!
  cursor: String!
}

enum StakingAccountAddedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  account_ASC
  account_DESC
}

input StakingAccountAddedEventWhereUniqueInput {
  id: ID!
}

type StakingAccountAddedEventConnection {
  totalCount: Int!
  edges: [StakingAccountAddedEventEdge!]!
  pageInfo: PageInfo!
}

type StakingAccountAddedEventEdge {
  node: StakingAccountAddedEvent!
  cursor: String!
}

enum StakingAccountConfirmedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  account_ASC
  account_DESC
}

input StakingAccountConfirmedEventWhereUniqueInput {
  id: ID!
}

type StakingAccountConfirmedEventConnection {
  totalCount: Int!
  edges: [StakingAccountConfirmedEventEdge!]!
  pageInfo: PageInfo!
}

type StakingAccountConfirmedEventEdge {
  node: StakingAccountConfirmedEvent!
  cursor: String!
}

enum StakingAccountRemovedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  account_ASC
  account_DESC
}

input StakingAccountRemovedEventWhereUniqueInput {
  id: ID!
}

type StakingAccountRemovedEventConnection {
  totalCount: Int!
  edges: [StakingAccountRemovedEventEdge!]!
  pageInfo: PageInfo!
}

type StakingAccountRemovedEventEdge {
  node: StakingAccountRemovedEvent!
  cursor: String!
}

enum StatusTextChangedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  metadata_ASC
  metadata_DESC
}

input StatusTextChangedEventWhereUniqueInput {
  id: ID!
}

type StatusTextChangedEventConnection {
  totalCount: Int!
  edges: [StatusTextChangedEventEdge!]!
  pageInfo: PageInfo!
}

type StatusTextChangedEventEdge {
  node: StatusTextChangedEvent!
  cursor: String!
}

enum TerminatedLeaderEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  penalty_ASC
  penalty_DESC
  rationale_ASC
  rationale_DESC
}

input TerminatedLeaderEventWhereUniqueInput {
  id: ID!
}

type TerminatedLeaderEventConnection {
  totalCount: Int!
  edges: [TerminatedLeaderEventEdge!]!
  pageInfo: PageInfo!
}

type TerminatedLeaderEventEdge {
  node: TerminatedLeaderEvent!
  cursor: String!
}

enum TerminatedWorkerEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  penalty_ASC
  penalty_DESC
  rationale_ASC
  rationale_DESC
}

input TerminatedWorkerEventWhereUniqueInput {
  id: ID!
}

type TerminatedWorkerEventConnection {
  totalCount: Int!
  edges: [TerminatedWorkerEventEdge!]!
  pageInfo: PageInfo!
}

type TerminatedWorkerEventEdge {
  node: TerminatedWorkerEvent!
  cursor: String!
}

enum ThreadCreatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  thread_ASC
  thread_DESC
  title_ASC
  title_DESC
  text_ASC
  text_DESC
}

input ThreadCreatedEventWhereUniqueInput {
  id: ID!
}

type ThreadCreatedEventConnection {
  totalCount: Int!
  edges: [ThreadCreatedEventEdge!]!
  pageInfo: PageInfo!
}

type ThreadCreatedEventEdge {
  node: ThreadCreatedEvent!
  cursor: String!
}

enum ThreadDeletedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  thread_ASC
  thread_DESC
}

input ThreadDeletedEventWhereUniqueInput {
  id: ID!
}

type ThreadDeletedEventConnection {
  totalCount: Int!
  edges: [ThreadDeletedEventEdge!]!
  pageInfo: PageInfo!
}

type ThreadDeletedEventEdge {
  node: ThreadDeletedEvent!
  cursor: String!
}

enum ThreadMetadataUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  thread_ASC
  thread_DESC
  newTitle_ASC
  newTitle_DESC
}

input ThreadMetadataUpdatedEventWhereUniqueInput {
  id: ID!
}

type ThreadMetadataUpdatedEventConnection {
  totalCount: Int!
  edges: [ThreadMetadataUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type ThreadMetadataUpdatedEventEdge {
  node: ThreadMetadataUpdatedEvent!
  cursor: String!
}

enum ThreadModeratedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  thread_ASC
  thread_DESC
  rationale_ASC
  rationale_DESC
  actor_ASC
  actor_DESC
}

input ThreadModeratedEventWhereUniqueInput {
  id: ID!
}

type ThreadModeratedEventConnection {
  totalCount: Int!
  edges: [ThreadModeratedEventEdge!]!
  pageInfo: PageInfo!
}

type ThreadModeratedEventEdge {
  node: ThreadModeratedEvent!
  cursor: String!
}

enum ThreadMovedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  thread_ASC
  thread_DESC
  oldCategory_ASC
  oldCategory_DESC
  newCategory_ASC
  newCategory_DESC
  actor_ASC
  actor_DESC
}

input ThreadMovedEventWhereUniqueInput {
  id: ID!
}

type ThreadMovedEventConnection {
  totalCount: Int!
  edges: [ThreadMovedEventEdge!]!
  pageInfo: PageInfo!
}

type ThreadMovedEventEdge {
  node: ThreadMovedEvent!
  cursor: String!
}

enum UpcomingWorkingGroupOpeningOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  createdInEvent_ASC
  createdInEvent_DESC
  group_ASC
  group_DESC
  expectedStart_ASC
  expectedStart_DESC
  stakeAmount_ASC
  stakeAmount_DESC
  rewardPerBlock_ASC
  rewardPerBlock_DESC
  metadata_ASC
  metadata_DESC
}

input UpcomingWorkingGroupOpeningWhereUniqueInput {
  id: ID!
}

type UpcomingWorkingGroupOpeningConnection {
  totalCount: Int!
  edges: [UpcomingWorkingGroupOpeningEdge!]!
  pageInfo: PageInfo!
}

type UpcomingWorkingGroupOpeningEdge {
  node: UpcomingWorkingGroupOpening!
  cursor: String!
}

enum VideoCategoryOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  name_ASC
  name_DESC
  createdInBlock_ASC
  createdInBlock_DESC
}

input VideoCategoryWhereUniqueInput {
  id: ID!
}

type VideoCategoryConnection {
  totalCount: Int!
  edges: [VideoCategoryEdge!]!
  pageInfo: PageInfo!
}

type VideoCategoryEdge {
  node: VideoCategory!
  cursor: String!
}

enum VideoMediaEncodingOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  codecName_ASC
  codecName_DESC
  container_ASC
  container_DESC
  mimeMediaType_ASC
  mimeMediaType_DESC
}

input VideoMediaEncodingWhereUniqueInput {
  id: ID!
}

type VideoMediaEncodingConnection {
  totalCount: Int!
  edges: [VideoMediaEncodingEdge!]!
  pageInfo: PageInfo!
}

type VideoMediaEncodingEdge {
  node: VideoMediaEncoding!
  cursor: String!
}

enum VideoMediaMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  encoding_ASC
  encoding_DESC
  pixelWidth_ASC
  pixelWidth_DESC
  pixelHeight_ASC
  pixelHeight_DESC
  size_ASC
  size_DESC
  createdInBlock_ASC
  createdInBlock_DESC
}

input VideoMediaMetadataWhereUniqueInput {
  id: ID!
}

type VideoMediaMetadataConnection {
  totalCount: Int!
  edges: [VideoMediaMetadataEdge!]!
  pageInfo: PageInfo!
}

type VideoMediaMetadataEdge {
  node: VideoMediaMetadata!
  cursor: String!
}

enum VideoOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  channel_ASC
  channel_DESC
  category_ASC
  category_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  duration_ASC
  duration_DESC
  language_ASC
  language_DESC
  hasMarketing_ASC
  hasMarketing_DESC
  publishedBeforeJoystream_ASC
  publishedBeforeJoystream_DESC
  isPublic_ASC
  isPublic_DESC
  isCensored_ASC
  isCensored_DESC
  isExplicit_ASC
  isExplicit_DESC
  license_ASC
  license_DESC
  mediaMetadata_ASC
  mediaMetadata_DESC
  createdInBlock_ASC
  createdInBlock_DESC
  isFeatured_ASC
  isFeatured_DESC
}

input VideoWhereUniqueInput {
  id: ID!
}

type VideoConnection {
  totalCount: Int!
  edges: [VideoEdge!]!
  pageInfo: PageInfo!
}

type VideoEdge {
  node: Video!
  cursor: String!
}

enum VoteOnPollEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  pollAlternative_ASC
  pollAlternative_DESC
  votingMember_ASC
  votingMember_DESC
}

input VoteOnPollEventWhereUniqueInput {
  id: ID!
}

type VoteOnPollEventConnection {
  totalCount: Int!
  edges: [VoteOnPollEventEdge!]!
  pageInfo: PageInfo!
}

type VoteOnPollEventEdge {
  node: VoteOnPollEvent!
  cursor: String!
}

enum WorkerExitedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
}

input WorkerExitedEventWhereUniqueInput {
  id: ID!
}

type WorkerExitedEventConnection {
  totalCount: Int!
  edges: [WorkerExitedEventEdge!]!
  pageInfo: PageInfo!
}

type WorkerExitedEventEdge {
  node: WorkerExitedEvent!
  cursor: String!
}

enum WorkerRewardAccountUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  newRewardAccount_ASC
  newRewardAccount_DESC
}

input WorkerRewardAccountUpdatedEventWhereUniqueInput {
  id: ID!
}

type WorkerRewardAccountUpdatedEventConnection {
  totalCount: Int!
  edges: [WorkerRewardAccountUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type WorkerRewardAccountUpdatedEventEdge {
  node: WorkerRewardAccountUpdatedEvent!
  cursor: String!
}

enum WorkerRewardAmountUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  newRewardPerBlock_ASC
  newRewardPerBlock_DESC
}

input WorkerRewardAmountUpdatedEventWhereUniqueInput {
  id: ID!
}

type WorkerRewardAmountUpdatedEventConnection {
  totalCount: Int!
  edges: [WorkerRewardAmountUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type WorkerRewardAmountUpdatedEventEdge {
  node: WorkerRewardAmountUpdatedEvent!
  cursor: String!
}

enum WorkerRoleAccountUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  newRoleAccount_ASC
  newRoleAccount_DESC
}

input WorkerRoleAccountUpdatedEventWhereUniqueInput {
  id: ID!
}

type WorkerRoleAccountUpdatedEventConnection {
  totalCount: Int!
  edges: [WorkerRoleAccountUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type WorkerRoleAccountUpdatedEventEdge {
  node: WorkerRoleAccountUpdatedEvent!
  cursor: String!
}

enum WorkerStartedLeavingEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  rationale_ASC
  rationale_DESC
}

input WorkerStartedLeavingEventWhereUniqueInput {
  id: ID!
}

type WorkerStartedLeavingEventConnection {
  totalCount: Int!
  edges: [WorkerStartedLeavingEventEdge!]!
  pageInfo: PageInfo!
}

type WorkerStartedLeavingEventEdge {
  node: WorkerStartedLeavingEvent!
  cursor: String!
}

enum WorkerOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  runtimeId_ASC
  runtimeId_DESC
  group_ASC
  group_DESC
  membership_ASC
  membership_DESC
  roleAccount_ASC
  roleAccount_DESC
  rewardAccount_ASC
  rewardAccount_DESC
  stakeAccount_ASC
  stakeAccount_DESC
  isLead_ASC
  isLead_DESC
  stake_ASC
  stake_DESC
  rewardPerBlock_ASC
  rewardPerBlock_DESC
  missingRewardAmount_ASC
  missingRewardAmount_DESC
  entry_ASC
  entry_DESC
  application_ASC
  application_DESC
  storage_ASC
  storage_DESC
}

input WorkerWhereUniqueInput {
  id: ID!
}

type WorkerConnection {
  totalCount: Int!
  edges: [WorkerEdge!]!
  pageInfo: PageInfo!
}

type WorkerEdge {
  node: Worker!
  cursor: String!
}

enum WorkingGroupApplicationOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  runtimeId_ASC
  runtimeId_DESC
  opening_ASC
  opening_DESC
  applicant_ASC
  applicant_DESC
  stake_ASC
  stake_DESC
  roleAccount_ASC
  roleAccount_DESC
  rewardAccount_ASC
  rewardAccount_DESC
  stakingAccount_ASC
  stakingAccount_DESC
}

input WorkingGroupApplicationWhereUniqueInput {
  id: ID!
}

type WorkingGroupApplicationConnection {
  totalCount: Int!
  edges: [WorkingGroupApplicationEdge!]!
  pageInfo: PageInfo!
}

type WorkingGroupApplicationEdge {
  node: WorkingGroupApplication!
  cursor: String!
}

enum WorkingGroupMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  status_ASC
  status_DESC
  statusMessage_ASC
  statusMessage_DESC
  about_ASC
  about_DESC
  description_ASC
  description_DESC
  setInEvent_ASC
  setInEvent_DESC
  group_ASC
  group_DESC
}

input WorkingGroupMetadataWhereUniqueInput {
  id: ID!
}

type WorkingGroupMetadataConnection {
  totalCount: Int!
  edges: [WorkingGroupMetadataEdge!]!
  pageInfo: PageInfo!
}

type WorkingGroupMetadataEdge {
  node: WorkingGroupMetadata!
  cursor: String!
}

enum WorkingGroupOpeningMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  originallyValid_ASC
  originallyValid_DESC
  shortDescription_ASC
  shortDescription_DESC
  description_ASC
  description_DESC
  hiringLimit_ASC
  hiringLimit_DESC
  expectedEnding_ASC
  expectedEnding_DESC
  applicationDetails_ASC
  applicationDetails_DESC
}

input WorkingGroupOpeningMetadataWhereUniqueInput {
  id: ID!
}

type WorkingGroupOpeningMetadataConnection {
  totalCount: Int!
  edges: [WorkingGroupOpeningMetadataEdge!]!
  pageInfo: PageInfo!
}

type WorkingGroupOpeningMetadataEdge {
  node: WorkingGroupOpeningMetadata!
  cursor: String!
}

enum WorkingGroupOpeningOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  runtimeId_ASC
  runtimeId_DESC
  group_ASC
  group_DESC
  type_ASC
  type_DESC
  metadata_ASC
  metadata_DESC
  stakeAmount_ASC
  stakeAmount_DESC
  unstakingPeriod_ASC
  unstakingPeriod_DESC
  rewardPerBlock_ASC
  rewardPerBlock_DESC
}

input WorkingGroupOpeningWhereUniqueInput {
  id: ID!
}

type WorkingGroupOpeningConnection {
  totalCount: Int!
  edges: [WorkingGroupOpeningEdge!]!
  pageInfo: PageInfo!
}

type WorkingGroupOpeningEdge {
  node: WorkingGroupOpening!
  cursor: String!
}

enum WorkingGroupOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  name_ASC
  name_DESC
  metadata_ASC
  metadata_DESC
  leader_ASC
  leader_DESC
  budget_ASC
  budget_DESC
}

input WorkingGroupWhereUniqueInput {
  id: ID
  name: String
}

type WorkingGroupConnection {
  totalCount: Int!
  edges: [WorkingGroupEdge!]!
  pageInfo: PageInfo!
}

type WorkingGroupEdge {
  node: WorkingGroup!
  cursor: String!
}

type Subscription {
  stateSubscription: ProcessorState!
}

type ProcessorState {
  lastCompleteBlock: Float!
  lastProcessedEvent: String!
  indexerHead: Float!
  chainHead: Float!
}

type StandardDeleteResponse {
  id: ID!
}

type BaseModel implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
}

type BaseModelUUID implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: String!
  updatedAt: DateTime
  updatedById: String
  deletedAt: DateTime
  deletedById: String
  version: Int!
}

interface DeleteResponse {
  id: ID!
}

input BaseWhereInput {
  id_eq: String
  id_in: [String!]
  createdAt_eq: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdById_eq: String
  updatedAt_eq: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedById_eq: String
  deletedAt_all: Boolean
  deletedAt_eq: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedById_eq: String
}

input ApplicationFormQuestionCreateInput {
  openingMetadata: ID!
  question: String
  type: ApplicationFormQuestionType!
  index: Float!
}

input ApplicationFormQuestionUpdateInput {
  openingMetadata: ID
  question: String
  type: ApplicationFormQuestionType
  index: Float
}

input EventWhereUniqueInput {
  id: ID!
}

input EventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  type: EventTypeOptions
}

input EventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  type: EventTypeOptions
}

input OpeningAddedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  opening: ID!
}

input OpeningAddedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  opening: ID
}

input AppliedOnOpeningEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  opening: ID!
  application: ID!
}

input AppliedOnOpeningEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  opening: ID
  application: ID
}

input OpeningCanceledEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  opening: ID!
}

input OpeningCanceledEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  opening: ID
}

input WorkingGroupOpeningCreateInput {
  createdAt: DateTime!
  runtimeId: Float!
  group: ID!
  type: WorkingGroupOpeningType!
  status: JSONObject!
  metadata: ID!
  stakeAmount: String!
  unstakingPeriod: Float!
  rewardPerBlock: String!
}

input WorkingGroupOpeningUpdateInput {
  createdAt: DateTime
  runtimeId: Float
  group: ID
  type: WorkingGroupOpeningType
  status: JSONObject
  metadata: ID
  stakeAmount: String
  unstakingPeriod: Float
  rewardPerBlock: String
}

input WorkingGroupOpeningMetadataCreateInput {
  originallyValid: Boolean!
  shortDescription: String
  description: String
  hiringLimit: Float
  expectedEnding: DateTime
  applicationDetails: String
}

input WorkingGroupOpeningMetadataUpdateInput {
  originallyValid: Boolean
  shortDescription: String
  description: String
  hiringLimit: Float
  expectedEnding: DateTime
  applicationDetails: String
}

input UpcomingWorkingGroupOpeningCreateInput {
  createdInEvent: ID!
  group: ID!
  expectedStart: DateTime
  stakeAmount: String
  rewardPerBlock: String
  metadata: ID!
}

input UpcomingWorkingGroupOpeningUpdateInput {
  createdInEvent: ID
  group: ID
  expectedStart: DateTime
  stakeAmount: String
  rewardPerBlock: String
  metadata: ID
}

input StatusTextChangedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  metadata: String
  result: JSONObject!
}

input StatusTextChangedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  metadata: String
  result: JSONObject
}

input WorkingGroupMetadataCreateInput {
  status: String
  statusMessage: String
  about: String
  description: String
  setInEvent: ID!
  group: ID!
}

input WorkingGroupMetadataUpdateInput {
  status: String
  statusMessage: String
  about: String
  description: String
  setInEvent: ID
  group: ID
}

input DataObjectCreateInput {
  owner: JSONObject!
  createdInBlock: Float!
  typeId: Float!
  size: String!
  liaison: ID
  liaisonJudgement: LiaisonJudgement!
  ipfsContentId: String!
  joystreamContentId: String!
}

input DataObjectUpdateInput {
  owner: JSONObject
  createdInBlock: Float
  typeId: Float
  size: String
  liaison: ID
  liaisonJudgement: LiaisonJudgement
  ipfsContentId: String
  joystreamContentId: String
}

input MemberInvitedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  invitingMember: ID!
  newMember: ID!
  rootAccount: String!
  controllerAccount: String!
  handle: String!
  metadata: ID!
}

input MemberInvitedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  invitingMember: ID
  newMember: ID
  rootAccount: String
  controllerAccount: String
  handle: String
  metadata: ID
}

input MemberProfileUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  newHandle: String
  newMetadata: ID!
}

input MemberProfileUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  newHandle: String
  newMetadata: ID
}

input MembershipBoughtEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  newMember: ID!
  rootAccount: String!
  controllerAccount: String!
  handle: String!
  metadata: ID!
  referrer: ID
}

input MembershipBoughtEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  newMember: ID
  rootAccount: String
  controllerAccount: String
  handle: String
  metadata: ID
  referrer: ID
}

input MemberMetadataCreateInput {
  name: String
  avatar: ID
  about: String
}

input MemberMetadataUpdateInput {
  name: String
  avatar: ID
  about: String
}

input ProposalDiscussionWhitelistCreateInput {
  phantom: Float
}

input ProposalDiscussionWhitelistUpdateInput {
  phantom: Float
}

input CuratorGroupCreateInput {
  curatorIds: [Int!]!
  isActive: Boolean!
}

input CuratorGroupUpdateInput {
  curatorIds: [Int!]
  isActive: Boolean
}

input ChannelCategoryCreateInput {
  name: String
  createdInBlock: Float!
}

input ChannelCategoryUpdateInput {
  name: String
  createdInBlock: Float
}

input VideoCategoryCreateInput {
  name: String
  createdInBlock: Float!
}

input VideoCategoryUpdateInput {
  name: String
  createdInBlock: Float
}

input LicenseCreateInput {
  code: Float
  attribution: String
  customText: String
}

input LicenseUpdateInput {
  code: Float
  attribution: String
  customText: String
}

input VideoMediaEncodingCreateInput {
  codecName: String
  container: String
  mimeMediaType: String
}

input VideoMediaEncodingUpdateInput {
  codecName: String
  container: String
  mimeMediaType: String
}

input VideoMediaMetadataCreateInput {
  encoding: ID
  pixelWidth: Float
  pixelHeight: Float
  size: String
  createdInBlock: Float!
}

input VideoMediaMetadataUpdateInput {
  encoding: ID
  pixelWidth: Float
  pixelHeight: Float
  size: String
  createdInBlock: Float
}

input VideoCreateInput {
  channel: ID!
  category: ID
  title: String
  description: String
  duration: Float
  thumbnailPhoto: JSONObject!
  language: ID
  hasMarketing: Boolean
  publishedBeforeJoystream: DateTime
  isPublic: Boolean
  isCensored: Boolean!
  isExplicit: Boolean
  license: ID
  media: JSONObject!
  mediaMetadata: ID
  createdInBlock: Float!
  isFeatured: Boolean!
}

input VideoUpdateInput {
  channel: ID
  category: ID
  title: String
  description: String
  duration: Float
  thumbnailPhoto: JSONObject
  language: ID
  hasMarketing: Boolean
  publishedBeforeJoystream: DateTime
  isPublic: Boolean
  isCensored: Boolean
  isExplicit: Boolean
  license: ID
  media: JSONObject
  mediaMetadata: ID
  createdInBlock: Float
  isFeatured: Boolean
}

input LanguageCreateInput {
  iso: String!
  createdInBlock: Float!
}

input LanguageUpdateInput {
  iso: String
  createdInBlock: Float
}

input ChannelCreateInput {
  ownerMember: ID
  ownerCuratorGroup: ID
  category: ID
  rewardAccount: String
  title: String
  description: String
  coverPhoto: JSONObject!
  avatarPhoto: JSONObject!
  isPublic: Boolean
  isCensored: Boolean!
  language: ID
  createdInBlock: Float!
}

input ChannelUpdateInput {
  ownerMember: ID
  ownerCuratorGroup: ID
  category: ID
  rewardAccount: String
  title: String
  description: String
  coverPhoto: JSONObject
  avatarPhoto: JSONObject
  isPublic: Boolean
  isCensored: Boolean
  language: ID
  createdInBlock: Float
}

input CategoryCreatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  category: ID!
}

input CategoryCreatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  category: ID
}

input CategoryArchivalStatusUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  category: ID!
  newArchivalStatus: Boolean!
  actor: ID!
}

input CategoryArchivalStatusUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  category: ID
  newArchivalStatus: Boolean
  actor: ID
}

input CategoryDeletedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  category: ID!
  actor: ID!
}

input CategoryDeletedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  category: ID
  actor: ID
}

input CategoryMembershipOfModeratorUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  moderator: ID!
  category: ID!
  newCanModerateValue: Boolean!
}

input CategoryMembershipOfModeratorUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  moderator: ID
  category: ID
  newCanModerateValue: Boolean
}

input CategoryStickyThreadUpdateEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  category: ID!
  actor: ID!
}

input CategoryStickyThreadUpdateEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  category: ID
  actor: ID
}

input ThreadMovedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  thread: ID!
  oldCategory: ID!
  newCategory: ID!
  actor: ID!
}

input ThreadMovedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  thread: ID
  oldCategory: ID
  newCategory: ID
  actor: ID
}

input ForumCategoryCreateInput {
  parent: ID
  title: String!
  description: String!
  status: JSONObject!
}

input ForumCategoryUpdateInput {
  parent: ID
  title: String
  description: String
  status: JSONObject
}

input VoteOnPollEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  pollAlternative: ID!
  votingMember: ID!
}

input VoteOnPollEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  pollAlternative: ID
  votingMember: ID
}

input ForumPollAlternativeCreateInput {
  index: Float!
  poll: ID!
  text: String!
}

input ForumPollAlternativeUpdateInput {
  index: Float
  poll: ID
  text: String
}

input ForumPollCreateInput {
  thread: ID!
  description: String!
  endTime: DateTime!
}

input ForumPollUpdateInput {
  thread: ID
  description: String
  endTime: DateTime
}

input ThreadCreatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  thread: ID!
  title: String!
  text: String!
}

input ThreadCreatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  thread: ID
  title: String
  text: String
}

input ThreadMetadataUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  thread: ID!
  newTitle: String
}

input ThreadMetadataUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  thread: ID
  newTitle: String
}

input ForumThreadTagCreateInput {
  visibleThreadsCount: Float!
}

input ForumThreadTagUpdateInput {
  visibleThreadsCount: Float
}

input ThreadDeletedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  thread: ID!
}

input ThreadDeletedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  thread: ID
}

input ThreadModeratedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  thread: ID!
  rationale: String!
  actor: ID!
}

input ThreadModeratedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  thread: ID
  rationale: String
  actor: ID
}

input ForumThreadCreateInput {
  author: ID!
  category: ID!
  title: String!
  initialPost: ID
  visiblePostsCount: Float!
  isSticky: Boolean!
  status: JSONObject!
}

input ForumThreadUpdateInput {
  author: ID
  category: ID
  title: String
  initialPost: ID
  visiblePostsCount: Float
  isSticky: Boolean
  status: JSONObject
}

input PostTextUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  newText: String!
}

input PostTextUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  newText: String
}

input ForumPostReactionCreateInput {
  member: ID!
  post: ID!
  reaction: PostReaction!
}

input ForumPostReactionUpdateInput {
  member: ID
  post: ID
  reaction: PostReaction
}

input PostDeletedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  actor: ID!
  rationale: String!
}

input PostDeletedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  actor: ID
  rationale: String
}

input PostAddedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  isEditable: Boolean
  text: String!
}

input PostAddedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  isEditable: Boolean
  text: String
}

input PostModeratedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  rationale: String!
  actor: ID!
}

input PostModeratedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  rationale: String
  actor: ID
}

input PostReactedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  reactionResult: JSONObject!
  reactingMember: ID!
}

input PostReactedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  reactionResult: JSONObject
  reactingMember: ID
}

input ForumPostCreateInput {
  author: ID!
  thread: ID!
  text: String!
  repliesTo: ID
  status: JSONObject!
  origin: JSONObject!
  deletedInEvent: ID
}

input ForumPostUpdateInput {
  author: ID
  thread: ID
  text: String
  repliesTo: ID
  status: JSONObject
  origin: JSONObject
  deletedInEvent: ID
}

input InvitesTransferredEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  sourceMember: ID!
  targetMember: ID!
  numberOfInvites: Float!
}

input InvitesTransferredEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  sourceMember: ID
  targetMember: ID
  numberOfInvites: Float
}

input MemberAccountsUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  newRootAccount: String
  newControllerAccount: String
}

input MemberAccountsUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  newRootAccount: String
  newControllerAccount: String
}

input MemberVerificationStatusUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  worker: ID!
  isVerified: Boolean!
}

input MemberVerificationStatusUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  worker: ID
  isVerified: Boolean
}

input ProposalCreatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  proposal: ID!
}

input ProposalCreatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  proposal: ID
}

input ProposalDiscussionPostUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  text: String!
}

input ProposalDiscussionPostUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  text: String
}

input ProposalDiscussionPostCreatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  text: String!
}

input ProposalDiscussionPostCreatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  text: String
}

input ProposalDiscussionPostDeletedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  actor: ID!
}

input ProposalDiscussionPostDeletedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  actor: ID
}

input ProposalDiscussionPostCreateInput {
  discussionThread: ID!
  author: ID!
  status: JSONObject!
  text: String!
  repliesTo: ID
}

input ProposalDiscussionPostUpdateInput {
  discussionThread: ID
  author: ID
  status: JSONObject
  text: String
  repliesTo: ID
}

input ProposalDiscussionThreadModeChangedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  thread: ID!
  newMode: JSONObject!
  actor: ID!
}

input ProposalDiscussionThreadModeChangedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  thread: ID
  newMode: JSONObject
  actor: ID
}

input ProposalDiscussionThreadCreateInput {
  proposal: ID!
  mode: JSONObject!
}

input ProposalDiscussionThreadUpdateInput {
  proposal: ID
  mode: JSONObject
}

input ProposalStatusUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  proposal: ID!
  newStatus: JSONObject!
}

input ProposalStatusUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  proposal: ID
  newStatus: JSONObject
}

input ProposalVotedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  voter: ID!
  voteKind: ProposalVoteKind!
  proposal: ID!
  rationale: String!
  votingRound: Float!
}

input ProposalVotedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  voter: ID
  voteKind: ProposalVoteKind
  proposal: ID
  rationale: String
  votingRound: Float
}

input ProposalCancelledEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  proposal: ID!
}

input ProposalCancelledEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  proposal: ID
}

input ProposalDecisionMadeEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  proposal: ID!
  decisionStatus: JSONObject!
}

input ProposalDecisionMadeEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  proposal: ID
  decisionStatus: JSONObject
}

input ProposalExecutedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  proposal: ID!
  executionStatus: JSONObject!
}

input ProposalExecutedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  proposal: ID
  executionStatus: JSONObject
}

input ProposalCreateInput {
  title: String!
  description: String!
  details: JSONObject!
  stakingAccount: String
  creator: ID!
  exactExecutionBlock: Float
  councilApprovals: Float!
  status: JSONObject!
  isFinalized: Boolean
  statusSetAtBlock: Float!
  statusSetAtTime: DateTime!
}

input ProposalUpdateInput {
  title: String
  description: String
  details: JSONObject
  stakingAccount: String
  creator: ID
  exactExecutionBlock: Float
  councilApprovals: Float
  status: JSONObject
  isFinalized: Boolean
  statusSetAtBlock: Float
  statusSetAtTime: DateTime
}

input StakingAccountAddedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  account: String!
}

input StakingAccountAddedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  account: String
}

input StakingAccountConfirmedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  account: String!
}

input StakingAccountConfirmedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  account: String
}

input StakingAccountRemovedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  account: String!
}

input StakingAccountRemovedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  account: String
}

input MembershipCreateInput {
  handle: String!
  metadata: ID!
  controllerAccount: String!
  rootAccount: String!
  entry: JSONObject!
  isVerified: Boolean!
  boundAccounts: [String!]!
  inviteCount: Float!
  invitedBy: ID
  referredBy: ID
  isFoundingMember: Boolean!
}

input MembershipUpdateInput {
  handle: String
  metadata: ID
  controllerAccount: String
  rootAccount: String
  entry: JSONObject
  isVerified: Boolean
  boundAccounts: [String!]
  inviteCount: Float
  invitedBy: ID
  referredBy: ID
  isFoundingMember: Boolean
}

input RewardPaidEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  rewardAccount: String!
  amount: String!
  paymentType: RewardPaymentType!
}

input RewardPaidEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  rewardAccount: String
  amount: String
  paymentType: RewardPaymentType
}

input StakeSlashedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  requestedAmount: String!
  slashedAmount: String!
  rationale: String
}

input StakeSlashedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  requestedAmount: String
  slashedAmount: String
  rationale: String
}

input LeaderSetEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID
}

input LeaderSetEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
}

input LeaderUnsetEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  leader: ID!
}

input LeaderUnsetEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  leader: ID
}

input NewMissedRewardLevelReachedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  newMissedRewardAmount: String!
}

input NewMissedRewardLevelReachedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  newMissedRewardAmount: String
}

input StakeDecreasedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  amount: String!
}

input StakeDecreasedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  amount: String
}

input StakeIncreasedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  amount: String!
}

input StakeIncreasedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  amount: String
}

input TerminatedLeaderEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  penalty: String
  rationale: String
}

input TerminatedLeaderEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  penalty: String
  rationale: String
}

input TerminatedWorkerEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  penalty: String
  rationale: String
}

input TerminatedWorkerEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  penalty: String
  rationale: String
}

input WorkerExitedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
}

input WorkerExitedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
}

input WorkerRewardAccountUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  newRewardAccount: String!
}

input WorkerRewardAccountUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  newRewardAccount: String
}

input WorkerRewardAmountUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  newRewardPerBlock: String!
}

input WorkerRewardAmountUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  newRewardPerBlock: String
}

input WorkerRoleAccountUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  newRoleAccount: String!
}

input WorkerRoleAccountUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  newRoleAccount: String
}

input WorkerStartedLeavingEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  rationale: String
}

input WorkerStartedLeavingEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  rationale: String
}

input WorkerCreateInput {
  runtimeId: Float!
  group: ID!
  membership: ID!
  roleAccount: String!
  rewardAccount: String!
  stakeAccount: String!
  status: JSONObject!
  isLead: Boolean!
  stake: String!
  rewardPerBlock: String!
  missingRewardAmount: String
  entry: ID!
  application: ID!
  storage: String
}

input WorkerUpdateInput {
  runtimeId: Float
  group: ID
  membership: ID
  roleAccount: String
  rewardAccount: String
  stakeAccount: String
  status: JSONObject
  isLead: Boolean
  stake: String
  rewardPerBlock: String
  missingRewardAmount: String
  entry: ID
  application: ID
  storage: String
}

input ApplicationWithdrawnEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  application: ID!
}

input ApplicationWithdrawnEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  application: ID
}

input BudgetSetEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  newBudget: String!
}

input BudgetSetEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  newBudget: String
}

input BudgetSpendingEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  reciever: String!
  amount: String!
  rationale: String
}

input BudgetSpendingEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  reciever: String
  amount: String
  rationale: String
}

input WorkingGroupCreateInput {
  name: String!
  metadata: ID
  leader: ID
  budget: String!
}

input WorkingGroupUpdateInput {
  name: String
  metadata: ID
  leader: ID
  budget: String
}

input OpeningFilledEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  opening: ID!
}

input OpeningFilledEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  opening: ID
}

input FundingRequestDestinationCreateInput {
  amount: String!
  account: String!
  list: ID!
}

input FundingRequestDestinationUpdateInput {
  amount: String
  account: String
  list: ID
}

input FundingRequestDestinationsListCreateInput {
  phantom: Float
}

input FundingRequestDestinationsListUpdateInput {
  phantom: Float
}

input RuntimeWasmBytecodeCreateInput {
  bytecode: String!
}

input RuntimeWasmBytecodeUpdateInput {
  bytecode: String
}

input PostReactionResultValidWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  reaction_eq: PostReaction
  reaction_in: [PostReaction!]
  AND: [PostReactionResultValidWhereInput!]
  OR: [PostReactionResultValidWhereInput!]
}

input PostReactionResultValidWhereUniqueInput {
  id: ID!
}

input PostReactionResultValidCreateInput {
  reaction: PostReaction!
}

input PostReactionResultValidUpdateInput {
  reaction: PostReaction
}

input WorkingGroupApplicationCreateInput {
  runtimeId: Float!
  opening: ID!
  applicant: ID!
  stake: String!
  roleAccount: String!
  rewardAccount: String!
  stakingAccount: String!
  status: JSONObject!
}

input WorkingGroupApplicationUpdateInput {
  runtimeId: Float
  opening: ID
  applicant: ID
  stake: String
  roleAccount: String
  rewardAccount: String
  stakingAccount: String
  status: JSONObject
}

input ApplicationFormQuestionAnswerCreateInput {
  application: ID!
  question: ID!
  answer: String!
}

input ApplicationFormQuestionAnswerUpdateInput {
  application: ID
  question: ID
  answer: String
}

input InitialInvitationBalanceUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  newInitialBalance: String!
}

input InitialInvitationBalanceUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  newInitialBalance: String
}

input InitialInvitationCountUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  newInitialInvitationCount: Float!
}

input InitialInvitationCountUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  newInitialInvitationCount: Float
}

input LeaderInvitationQuotaUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  newInvitationQuota: Float!
}

input LeaderInvitationQuotaUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  newInvitationQuota: Float
}

input MembershipPriceUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  newPrice: String!
}

input MembershipPriceUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  newPrice: String
}

input MembershipSystemSnapshotCreateInput {
  snapshotBlock: Float!
  defaultInviteCount: Float!
  membershipPrice: String!
  referralCut: Float!
  invitedInitialBalance: String!
}

input MembershipSystemSnapshotUpdateInput {
  snapshotBlock: Float
  defaultInviteCount: Float
  membershipPrice: String
  referralCut: Float
  invitedInitialBalance: String
}

input ReferralCutUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  newValue: Float!
}

input ReferralCutUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  newValue: Float
}
