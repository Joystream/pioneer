fragment NewCouncilElectedEventFields on NewCouncilElectedEvent {
  id
  createdAt
  electedCouncil {
    councilMembers {
      id
    }
  }
}

fragment CandidacyWithdrawEventFields on CandidacyWithdrawEvent {
  id
  createdAt
  candidate {
    member {
      handle
    }
  }
}

fragment AnnouncingPeriodStartedEventFields on AnnouncingPeriodStartedEvent {
  id
  createdAt
}

fragment VotingPeriodStartedEventFields on VotingPeriodStartedEvent {
  id
  createdAt
}

fragment CouncilorRewardUpdatedEventFields on CouncilorRewardUpdatedEvent {
  id
  createdAt
  rewardAmount
}

fragment NewCandidateEventFields on NewCandidateEvent {
  id
  createdAt
  inBlock
  network
  candidate {
    member {
      id
      handle
    }
    electionRoundId
    electionRound {
      referendumStageVoting {
        createdAt
      }
    }
  }
}

fragment NotEnoughCandidatesEventFields on NotEnoughCandidatesEvent {
  id
  createdAt
}

fragment RevealingStageStartedEventFields on RevealingStageStartedEvent {
  id
  createdAt
}

query GetCouncilEvents {
  events(
    where: {
      type_in: [
        NewCouncilElectedEvent
        CandidacyWithdrawEvent
        AnnouncingPeriodStartedEvent
        VotingPeriodStartedEvent
        CouncilorRewardUpdatedEvent
        NewCandidateEvent
        NotEnoughCandidatesEvent
        RevealingStageStartedEvent
      ]
    }
    orderBy: [createdAt_DESC]
  ) {
    ... on NewCouncilElectedEvent {
      ...NewCouncilElectedEventFields
    }
    ... on CandidacyWithdrawEvent {
      ...CandidacyWithdrawEventFields
    }
    ... on AnnouncingPeriodStartedEvent {
      ...AnnouncingPeriodStartedEventFields
    }
    ... on VotingPeriodStartedEvent {
      ...VotingPeriodStartedEventFields
    }
    ... on CouncilorRewardUpdatedEvent {
      ...CouncilorRewardUpdatedEventFields
    }
    ... on NewCandidateEvent {
      ...NewCandidateEventFields
    }
    ... on NotEnoughCandidatesEvent {
      ...NotEnoughCandidatesEventFields
    }
    ... on RevealingStageStartedEvent {
      ...RevealingStageStartedEventFields
    }
  }
}

query GetNewCandidateEvents($lockAccount: String) {
  newCandidateEvents(where: { stakingAccount_eq: $lockAccount }, orderBy: [createdAt_DESC], limit: 1) {
    ...NewCandidateEventFields
  }
}
