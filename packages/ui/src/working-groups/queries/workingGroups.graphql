fragment WorkingGroupMetdataFields on WorkingGroupMetadata {
  about
  description
  status
  statusMessage
}

fragment WorkerFields on Worker {
  membership {
    ...MemberFields
  }
  group {
    id
  }
  status {
    __typename
  }
}

fragment WorkingGroupFields on WorkingGroup {
  id
  name
  budget
  metadata {
    ...WorkingGroupMetdataFields
  }
  workers {
    ...WorkerFields
  }
  leader {
    membership {
      id
    }
  }
}

query getWorkingGroups {
  workingGroups {
    ...WorkingGroupFields,
  }
}

query getWorkers ($groupId_eq: ID) {
  workers(where: {groupId_eq: $groupId_eq}) {
    ...WorkerFields
  }
}

fragment WorkingGroupOpeningMetadataFields on WorkingGroupOpeningMetadata {
  applicationDetails
  shortDescription
  description
  hiringLimit
  expectedEnding
}

fragment WorkingGroupOpeningFields on WorkingGroupOpening {
  id
  type
  stakeAmount
  rewardPerBlock
  createdAt
  metadata {
    ... WorkingGroupOpeningMetadataFields
  }
  applications {
    id
    status {
      __typename
    }
  }
  status {
    __typename
  }
}

query getWorkingGroupOpenings($groupId_eq: ID) {
  workingGroupOpenings(where: { groupId_eq: $groupId_eq }) {
    ... WorkingGroupOpeningFields
  }
}

query getWorkingGroupOpening($id: ID!) {
  workingGroupOpeningByUniqueInput(where: { id: $id }) {
    ... WorkingGroupOpeningFields
  }
}

fragment ApplicationQuestionFields on ApplicationFormQuestion {
  index
  type
  question
}

query GetWorkingGroupOpeningQuestions($id: ID!) {
  workingGroupOpeningByUniqueInput(where: {id: $id}) {
    metadata {
      applicationFormQuestions {
        ...ApplicationQuestionFields
      }
    }
  }
}

query GetWorkingGroup($id: ID!) {
  workingGroupByUniqueInput(where: { id: $id }) {
    ... WorkingGroupFields
  }
}

fragment WorkingGroupApplicationFields on WorkingGroupApplication {
  id
  opening {
    group {
      name
    }
    type
    rewardPerBlock
  }
  applicant {
    ...MemberFields
  }
  status {
    __typename
  }
  stakingAccount
  createdAt
  createdAtBlock {
    ...BlockFields
  }
}

query GetWorkingGroupApplications($applicantId_in: [ID!]) {
  workingGroupApplications(where: { applicantId_in: $applicantId_in }) {
    ...WorkingGroupApplicationFields
  }
}

fragment ApplicationFormQuestionAnswerFields on ApplicationFormQuestionAnswer {
  question {
    ... ApplicationQuestionFields
  }
  answer
}

query GetApplicationFormQuestionAnswer($applicationId_eq: ID) {
  applicationFormQuestionAnswers(where: { applicationId_eq: $applicationId_eq }) {
    ...ApplicationFormQuestionAnswerFields
  }
}
