fragment WorkingGroupMetdataFields on WorkingGroupMetadata {
  about
  description
  status
  statusMessage
}

fragment WorkerFields on Worker {
  id
  runtimeId
  membership {
    ...MemberFields
  }
  group {
    id,
    name
  }
  status {
    __typename
  }
  applicationId
  isLead
  rewardPerBlock
  missingRewardAmount
  stake
}

fragment WorkerDetailedFields on Worker {
  ...WorkerFields
  roleAccount
  rewardAccount
  stakeAccount
  #  hiredAtBlock {
  #    ...BlockFields
  #  }
  application {
    id
    openingId
    opening {
      stakeAmount
    }
  }
}

fragment WorkingGroupFields on WorkingGroup {
  id
  name
  budget
  metadata {
    ...WorkingGroupMetdataFields
  }
  workers {
    stake
  }
  leader {
    membership {
      id
    }
  }
}

fragment BudgetSpendingEventFields on BudgetSpendingEvent {
  id,
  groupId,
  reciever,
  amount,
  rationale
}

query getBudgetSpending ($where: BudgetSpendingEventWhereInput) {
  budgetSpendingEvents(where: $where) {
    ...BudgetSpendingEventFields
  }
}

fragment RewardPaidEventFields on RewardPaidEvent {
  id
  amount
  rewardAccount
  createdAt
}

query getWorkingGroups {
  workingGroups {
    ...WorkingGroupFields,
  }
}

query getWorkers ($where: WorkerWhereInput, $offset: Int, $limit: Int) {
  workers(where: $where, offset: $offset, limit: $limit) {
    ...WorkerFields
  }
}

query getWorkersCount ($where: WorkerWhereInput) {
  workersConnection(where: $where) {
    totalCount
  }
}

query getDetailedWorkers ($where: WorkerWhereInput) {
  workers(where: $where) {
    ...WorkerDetailedFields
  }
}

query getWorker ($where: WorkerWhereUniqueInput!) {
  workerByUniqueInput(where: $where) {
    ...WorkerDetailedFields
  }
}

query getGroupDebt ($where: WorkerWhereInput!) {
  workers(where: $where) {
    missingRewardAmount
  }
}

query getRewards ($where: RewardPaidEventWhereInput) {
  rewardPaidEvents(where: $where) {
    ...RewardPaidEventFields
  }
}

fragment WorkingGroupOpeningMetadataFields on WorkingGroupOpeningMetadata {
  applicationDetails
  shortDescription
  description
  hiringLimit
  expectedEnding
}

fragment WorkingGroupOpeningFields on WorkingGroupOpening {
  id
  runtimeId
  groupId
  group {
    name
    budget
    leaderId
  }
  type
  stakeAmount
  rewardPerBlock
  #  createdAtBlock {
  #    ...BlockFields
  #  }
  metadata {
    ... WorkingGroupOpeningMetadataFields
  }
  status {
    __typename
  }
  unstakingPeriod
  applications {
    id
  }
}

fragment WorkingGroupOpeningDetailedFields on WorkingGroupOpening {
  ... WorkingGroupOpeningFields
  applications {
    id
    status {
      __typename
    }
    applicant {
      ... MemberFields
    }
    status {
      __typename
    }
  }
}

query countWorkingGroupOpenings($where: WorkingGroupOpeningWhereInput) {
  workingGroupOpeningsConnection(where: $where) {
    totalCount
  }
}

query countWorkingGroupWorkers($groupId_eq: ID, $status_json: JSONObject) {
  workersConnection(where: { group_eq: $groupId_eq, status_json: $status_json }) {
    totalCount
  }
}

query getWorkingGroupOpenings($where: WorkingGroupOpeningWhereInput, $limit: Int, $offset: Int) {
  workingGroupOpenings(where: $where, limit: $limit, offset: $offset) {
    ... WorkingGroupOpeningFields
  }
}

query getWorkingGroupOpening($where: WorkingGroupOpeningWhereUniqueInput!) {
  workingGroupOpeningByUniqueInput(where: $where) {
    ... WorkingGroupOpeningDetailedFields
  }
}

fragment ApplicationQuestionFields on ApplicationFormQuestion {
  index
  type
  question
}

query GetWorkingGroupOpeningQuestions($id: ID!) {
  workingGroupOpeningByUniqueInput(where: {id: $id}) {
    metadata {
      applicationFormQuestions {
        ... ApplicationQuestionFields
      }
    }
  }
}

query GetWorkingGroup($where: WorkingGroupWhereUniqueInput!) {
  workingGroupByUniqueInput(where: $where) {
    ... WorkingGroupFields
  }
}

fragment WorkingGroupApplicationFields on WorkingGroupApplication {
  id
  opening {
    id
    group {
      name
    }
    type
    rewardPerBlock
  }
  applicant {
    ...MemberFields
  }
  status {
    __typename
  }
  stakingAccount
  #  createdAtBlock {
  #    ...BlockFields
  #  }
}

query GetWorkingGroupApplications($applicantId_in: [ID!]) {
  workingGroupApplications(where: { applicant_in: $applicantId_in }) {
    ...WorkingGroupApplicationFields
  }
}

query GetWorkingGroupApplication($where: WorkingGroupApplicationWhereUniqueInput!) {
  workingGroupApplicationByUniqueInput(where: $where){
    ...WorkingGroupApplicationFields
  }
}

fragment ApplicationFormQuestionAnswerFields on ApplicationFormQuestionAnswer {
  question {
    ... ApplicationQuestionFields
  }
  answer
}

query GetApplicationFormQuestionAnswer($applicationId_eq: ID) {
  applicationFormQuestionAnswers(where: { application_eq: $applicationId_eq }) {
    ...ApplicationFormQuestionAnswerFields
  }
}

fragment UpcomingWorkingGroupOpeningFields on UpcomingWorkingGroupOpening {
  id
  groupId
  group {
    name
    budget
    leaderId
  }
  expectedStart
  stakeAmount
  rewardPerBlock
  #  createdAtBlock {
  #    ...BlockFields
  #  }
  metadata {
    ... WorkingGroupOpeningMetadataFields
  }
}

query GetUpcomingWorkingGroupOpening($where: UpcomingWorkingGroupOpeningWhereUniqueInput!) {
  upcomingWorkingGroupOpeningByUniqueInput(where: $where) {
    ...UpcomingWorkingGroupOpeningFields
  }
}

query GetUpcomingWorkingGroupOpenings($where: UpcomingWorkingGroupOpeningWhereInput, $limit: Int, $offset: Int) {
  upcomingWorkingGroupOpenings(where: $where, limit: $limit, offset: $offset) {
    ...UpcomingWorkingGroupOpeningFields
  }
}
