#
# Database
#

POSTGRES_DB: "pioneer"
POSTGRES_USER: "pioneer"
POSTGRES_PASSWORD: "pioneer"

# Use a non standard port to not interfere with the local Joystream mono-repo `db` service.
DB_PORT: 5433

# URL Prisma uses to connect to the database (this value is not used when runing the api from the docker compose file).
DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:${DB_PORT}/${POSTGRES_DB}"

#
# Joystream environment
#

# Query node to fetch from:
# - http://localhost:8081/graphql to connect to a query node running locally.
# - http://graphql-server:8081/graphql to connect to the Joystream mono-repo docker service from its network.
# - https://query.joystream.org/graphql to connect to the Joystream's mainnet query node.
QUERY_NODE_ENDPOINT: "https://query.joystream.org/graphql"

# Pioneer instance to link to in the notification (Use "http://localhost:8080" for the local instance).
PIONEER_URL: "https://pioneerapp.xyz"

# Block to start fetching the events from.
STARTING_BLOCK: 1

#
# General
#

# Port to run the api on.
PORT: 3000

# The key used to to sign JSON Web Token with.
APP_SECRET_KEY: "SECRET_1234"

# Log level.
APP_LOG_LEVEL: "verbose"

NODE_ENV: "development"

#
# Email
#

# EMAIL_SENDER: "test@example.com"

# Only one of the api provider should be defined
# SENDGRID_API_KEY: "SG.1234567890qwerty"

# MAILGUN_API_KEY: "qwerty12345"
# MAILGUN_DOMAIN: "example.com"
# MAILGUN_API_URL: "https://api.eu.mailgun.net" # this is needed for EU domains

#
# For development only:
#

# Create default members (their tokens will be displayed when the server start).
INITIAL_MEMBERSHIPS: '[{ "id": 1, "name": "Alice", "email": "alice@example.com" }, { "id": 2, "name": "Bob", "email": "bob@example.com" }]'
